### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Tillhandahåller åtkomst till sessionstillstånd värden samt session inställningar och metoder för hantering av livslängd."
  remarks: "ASP.NET innehåller sessionstillstånd hantering så att du kan lagra information som associeras med en unik webbläsarsession över flera förfrågningar. Du kan lagra en samling med värden som refereras av ett nyckelnamn eller av numeriska indexet. Sessionen värden och funktioner är tillgängliga med hjälp av klassen HttpSessionState, som är tillgänglig via den <xref:System.Web.HttpContext.Session%2A>egenskapen för aktuellt <xref:System.Web.HttpContext>, eller på <xref:System.Web.UI.Page.Session%2A>egenskapen i <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       Sessionsdata är associerad med en viss webbläsare-session med en unik identifierare. Som standard lagras den här identifieraren i en icke-ut sessions-cookie i webbläsaren, men du kan också konfigurera programmet att lagra sessions-ID i URL: en genom att ange den `cookieless` attributet `true` eller <xref:System.Web.HttpCookieMode>i elementet i tillämpningsprogrammets konfiguration.</xref:System.Web.HttpCookieMode> Du kan ha ASP.NET avgöra om cookies stöds av webbläsaren genom att ange ett värde för <xref:System.Web.HttpCookieMode>för den `cookieless` attribut.</xref:System.Web.HttpCookieMode> Du kan också ha ASP.NET om cookies är aktiverade för webbläsaren genom att ange ett värde för <xref:System.Web.HttpCookieMode>för den `cookieless` attribut.</xref:System.Web.HttpCookieMode> Om cookies stöds när <xref:System.Web.HttpCookieMode>har angetts eller aktiverad när <xref:System.Web.HttpCookieMode>anges, och sedan sessionen identifierare kommer att lagras i en cookie, annars sessions-ID kommer att lagras i URL: en.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       Sessionerna startas under den första begäranden och session värden finns kvar så länge som en ny begäran görs av webbläsaren före antalet minuter som anges i <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>egenskapen förutsättningsreglerna</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> När en ny session börjar, sessionen <xref:System.Web.SessionState.SessionStateModule.Start>händelsen utlöses.</xref:System.Web.SessionState.SessionStateModule.Start> Du kan använda den här händelsen för att utföra några ytterligare arbete i början av en sessionen, till exempel inställningsvärden standard session. När en session timeout den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden anropas eller ASP.NET-programmet stängs av sessionen <xref:System.Web.SessionState.SessionStateModule.End>händelsen utlöses.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Du kan använda den här händelsen för att rensa alla nödvändiga. Den <xref:System.Web.SessionState.SessionStateModule.End>händelsen aktiveras endast när sessionstillståndet `mode` är inställd på <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       För att förbättra prestanda sessioner som använder cookies inte allokerar lagring av sessionen tills data lagras i den <xref:System.Web.UI.Page.Session%2A>objekt.</xref:System.Web.UI.Page.Session%2A> Mer information finns i <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>egenskap.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Sessionstillstånd sparas inte över gränser för ASP.NET-program. Om en webbläsare navigerar till ett annat program, är sessionsinformation inte tillgänglig för det nya programmet.       Sessionen värdena lagras i minnet på webbservern, som standard. Du kan också lagra session värden i en SQL Server-databas, en tillståndsserver för ASP.NET eller en anpassad server. På så sätt kan du bevara session värden i de fall där ASP.NET eller IIS-process eller ASP.NET-programmet startas om och tillgängliggöra session värden på alla servrar i en webbservergrupp. Det här beteendet konfigureras genom att ange den `mode` attribut till en giltig <xref:System.Web.SessionState.SessionStateMode>värdet i elementet i tillämpningsprogrammets konfiguration.</xref:System.Web.SessionState.SessionStateMode> Mer information finns i [sessionstillstånd lägen](~/add/includes/ajax-current-ext-md.md).       Alternativen för att sessionstillstånd är programtillstånd (se egenskapen <xref:System.Web.HttpApplication.Application%2A>) och ASP.NET-cache (se namnområdet <xref:System.Web.Caching>) som lagrar variabler som kan användas av alla användare av en ASP.NET-programmet, ASP.NET-profilen (se namnområdet <xref:System.Web.Profile>) som kvarstår användaren värden i ett datalager utan ut dem med hjälp av en timeout; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, som finns kvar kontrollvärden i <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A>egenskapen fälten och på ett HTML-formulär som är tillgängliga från en HTTP `POST` med hjälp av den <xref:System.Web.HttpRequest.Form%2A>samling.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> Mer information om skillnaderna mellan sessionstillstånd och andra alternativ för hantering av tillstånd, se [ASP.NET tillstånd Management rekommendationer](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Avbryter den aktuella sessionen."
  remarks: "När anropas metoden avbryta den aktuella sessionen är inte längre giltig och kan starta en ny session. Avbryt orsaker i <xref:System.Web.SessionState.SessionStateModule.End>-händelse.</xref:System.Web.SessionState.SessionStateModule.End> En ny <xref:System.Web.SessionState.SessionStateModule.Start>händelse som aktiveras vid nästa förfrågan.</xref:System.Web.SessionState.SessionStateModule.Start>       Sessionen identifierare för övergivna eller har upphört att gälla sessioner återvinns som standard. Det vill säga om en begäran görs med sessions-ID för en session har upphört att gälla eller övergivna, startas en ny session med samma sessions-ID. Du kan inaktivera det genom att ange `regenerateExpiredSessionId` attribut för konfigurationselementet till `true`. Mer information finns i [Session identifierare](~/add/includes/ajax-current-ext-md.md).       Den <xref:System.Web.SessionState.SessionStateModule.End>-händelsen stöds endast när <xref:System.Web.SessionState.HttpSessionState.Mode%2A>egenskapen <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Lägger till ett nytt objekt i samlingen sessionstillstånd."
  remarks: "Om den `name` parametern refererar till en befintlig session tillstånd artikel, det befintliga objektet är över med de angivna `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på objektet du vill lägga till i samlingen sessionstillstånd."
    - id: value
      type: System.Object
      description: "Värdet för objektet du vill lägga till i samlingen sessionstillstånd."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tar bort alla nycklar och värden från samlingen sessionstillstånd."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar eller anger teckenuppsättningen ID för den aktuella sessionen."
  remarks: "En teckenuppsättning (teckentabell) används för att tolka teckendata som multibyte-, fastställer teckenvärde och därför sorteringsordning. Teckentabellen inställningar gäller endast för multibyte teckendata inte till Unicode-teckendata.       Detta <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>egenskapen ger kompatibilitet med tidigare versioner av ASP endast.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Om du inte behöver underhålla bakåtkompatibilitet med ASP-sidor använder den <xref:System.Web.HttpResponse.ContentEncoding%2A>egenskapen i stället.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "Teckenuppsättningen identifieraren för den aktuella sessionen."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar en referens till det aktuella objektet sessionstillstånd."
  remarks: "Egenskapen innehållet tillhandahålls för kompatibilitet med tidigare versioner av ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Aktuellt <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett värde som anger om programmet är konfigurerat för sessioner utan cookies."
  remarks: "När <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>är `true`, CookieMode-egenskap returnerar <xref:System.Web.HttpCookieMode>; annars egenskapen CookieMode returnerar <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "En av de <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> värden som anger om programmet är konfigurerat för sessioner utan cookies. Standardvärdet är <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Kopierar insamling av sessionstillstånd värden till en endimensionell matris som börjar med det angivna indexet i matrisen."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den <xref:System.Array>som tar emot session-värden.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i `array` från vilka kopiera startar."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar antalet objekt i samlingen sessionstillstånd."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antal objekt i samlingen."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returnerar en uppräknare som kan användas för att läsa alla sessionstillstånd variabelnamn i den aktuella sessionen."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>som kan gå igenom variabelnamn i samlingen sessionstillstånd.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett värde som anger om Sessionens ID är inbäddad i URL: en eller i en HTTP-cookie."
  remarks: "ASP.NET identifierar unikt sessioner med varje webbläsare. Som standard lagras den unika identifieraren för en session i en icke-ut sessions-cookie i webbläsaren. Du kan ange att sessions-ID: n inte lagras i en cookie genom att ange den `cookieless` attributet `true` i konfigurationselementet.      > [!NOTE] > För att förbättra säkerheten för ditt program, ditt program ska tillåta användare att logga ut, då ska den anropa den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Detta minskar risken för en oönskad källa som använder den unika identifieraren i URL: en för att hämta privata data som lagras i en session för en användare.       ASP.NET upprätthåller sessions-tillstånd genom att automatiskt infoga ett unikt sessions-ID i sidans URL. Till exempel följande URL-adress har ändrats av ASP.NET att inkludera unikt sessions-ID lit3py55t21z5v55vlm25s55: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET ändrar länkar i alla sidor som begärs genom att bädda in ett session-ID-värde i länkar precis innan varje sida skickas till webbläsaren. Sessionstillstånd bevaras så länge användaren följa sökvägen för länkar som platsen erbjuder. Men om användaragenten som skriver en URL, går sessionstillstånd instans förlorade.       Sessions-ID är inbäddad i URL: en efter snedstreck efter namnet på programmet och före eventuella återstående identifierare för filen eller den virtuella katalogen. Detta gör att ASP.NET ska matcha namnet på programmet innan som involverar den <xref:System.Web.SessionState.SessionStateModule>i begäran.</xref:System.Web.SessionState.SessionStateModule>       Som standard har session-identifierare som används i sessioner utan cookies återvunnits. Det vill säga om en begäran gjordes med ett sessions-ID som har upphört att gälla, startas en ny session sessions-ID som angetts i begäran. Detta kan leda till oönskade delning av sessionsdata när en länk som innehåller ett sessions-ID delas med flera webbläsare kanske via en sökmotor eller andra program. Du kan minska risken för sessionsdata som delas av flera klienter genom att inaktivera återanvändning av session-ID: n. Det gör du genom att ange den `regenerateExpiredSessionId` attribut för konfigurationselementet till `true`. Detta leder till ett nytt sessions-ID som genereras när en sessions-begäran med ett utgångna sessions-ID. Observera att om begäran med utgångna sessions-ID använder HTTP `POST` metod och sedan anslagna data går förlorade när `regenerateExpiredSessionId` är `true`, som utför en omdirigering för att säkerställa att webbläsaren har nya sessions-ID i URL: en för ASP.NET.      > [!NOTE] > När du den `regenerateExpiredSessionId` attributet `true` minskar risken för oönskad delning av sessionsdata den skyddar inte mot en oönskad källa får tillgång till en annan användares session genom att hämta den <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värdet och inkludera den i begäranden till servern.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Om du lagrar privat eller känslig information i sessionens tillstånd, rekommenderas att du använder SSL för att kryptera all kommunikation mellan webbläsaren och servern som omfattar <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sessionen är inbäddad i URL-Adressen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett värde som anger om sessionen har skapats med den aktuella begäranden."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sessionen har skapats med den aktuella begäranden. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett värde som anger om sessionen är skrivskyddad."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sessionen är skrivskyddade. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett värde som anger om åtkomst till insamling av sessionstillstånd värden synkroniseras (trådsäkra)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om åtkomst till samlingen är synkroniserade (trådsäkra); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar eller anger ett värde för session efter numeriskt index."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det numeriska indexet för session värde."
    return:
      type: System.Object
      description: "Värdet för sessionstillstånd lagras med det angivna indexet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om objektet inte finns."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar eller anger ett värde för session efter namn."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "Nyckelnamnet av session-värde."
    return:
      type: System.Object
      description: "Sessionstillstånd värdet med det angivna namnet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om objektet inte finns."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar en samling med nycklar för alla värden som lagras i samlingen sessionstillstånd."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "Den <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>som innehåller alla sessionsnycklar.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar eller anger den LCID (locale identifieraren) för den aktuella sessionen."
  remarks: "Egenskapen LCID tillhandahålls för kompatibilitet med tidigare versioner av ASP endast. Om du inte behöver underhålla bakåtkompatibilitet med ASP-sidor använder den <xref:System.Globalization.CultureInfo.LCID%2A>egenskapen i stället.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET lagrar inte språkvariant-ID i sessionens tillstånd. LCID egenskapen användningar av <xref:System.Globalization.CultureInfo.LCID%2A>egenskapen för att hämta och ange identifieraren.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Globalization.CultureInfo>-instans som anger kultur för den aktuella sessionen.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar aktuellt läge för sessionstillstånd."
  remarks: "Information om hur du konfigurerar servern för <xref:System.Web.SessionState.SessionStateMode>eller <xref:System.Web.SessionState.SessionStateMode>lagring av sessionstillstånd, se [översikt över sessionstillståndet ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "En av de <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> värden."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tar bort ett objekt från samlingen sessionstillstånd."
  remarks: "Om samlingen sessionstillstånd inte innehåller ett element med det angivna `name`, samlingen förblir oförändrad. Inget undantag genereras."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på objektet du vill ta bort från samlingen sessionstillstånd."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tar bort alla nycklar och värden från samlingen sessionstillstånd."
  remarks: "RemoveAll utför samma funktion som <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tar bort ett objekt vid ett specificerat index från samlingen sessionstillstånd."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indexet för objektet du vill ta bort från samlingen sessionstillstånd."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar den unika identifieraren för sessionen."
  remarks: "Egenskapen SessionID används för att unikt identifiera en webbläsare med sessionsdata på servern. Sessions-ID-värdet är slumpmässigt genereras av ASP.NET och lagras i en icke-ut sessions-cookie i webbläsaren. Sessions-ID-värdet skickas i en cookie med varje begäran till ASP.NET-programmet.       Om du vill inaktivera användningen av cookies i ASP.NET-program och fortfarande göra använder sessionstillstånd kan du konfigurera ditt program för att lagra sessions-ID i URL: en i stället för en cookie genom att ange den `cookieless` attribut för konfigurationselementet till `true`, eller <xref:System.Web.HttpCookieMode>, i Web.config-filen för tillämpningsprogrammet.</xref:System.Web.HttpCookieMode> Du kan ha ASP.NET avgöra om cookies stöds av webbläsaren genom att ange ett värde för <xref:System.Web.HttpCookieMode>för den `cookieless` attribut.</xref:System.Web.HttpCookieMode> Du kan också ha ASP.NET om cookies är aktiverade för webbläsaren genom att ange ett värde för <xref:System.Web.HttpCookieMode>för den `cookieless` attribut.</xref:System.Web.HttpCookieMode> Om cookies stöds när <xref:System.Web.HttpCookieMode>har angetts eller aktiverad när <xref:System.Web.HttpCookieMode>anges, och sedan sessionen identifierare kommer att lagras i en cookie, annars sessions-ID kommer att lagras i URL: en.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Mer information finns i <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>egenskap.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       SessionID skickas i klartext, antingen i en cookie eller URL-adressen mellan servern och webbläsaren. Därför kan en oönskad källa få åtkomst till en annan användares session genom att hämta värdet för sessions-ID och inkludera den i begäranden till servern. Om du lagrar privat eller känslig information i sessionstillstånd, rekommenderas att du använder SSL för att kryptera all kommunikation mellan webbläsaren och servern som innehåller sessions-ID.       När du använder cookie-baserad sessionstillståndet ASP.NET inte allokera lagringsutrymme för sessionsdata förrän den <xref:System.Web.UI.Page.Session%2A>objektet används.</xref:System.Web.UI.Page.Session%2A> Därmed skapas ett nytt sessions-ID för varje begäran förrän session-objektet används. Om ditt program kräver en statisk sessions-ID för hela sessionen, kan du antingen implementera den `Session_Start` metod i filen Global.asax för programmets och lagra data i den <xref:System.Web.UI.Page.Session%2A>objekt för att åtgärda sessions-ID eller du kan använda kod i en annan del av ditt program att uttryckligen lagra data i den <xref:System.Web.UI.Page.Session%2A>objekt.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Om programmet använder sessions-tillstånd, sessions-ID genereras på första sidan Visa och underhålls för hela sessionen."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "Unikt sessions-ID."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar en samling objekt som deklareras av <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> taggar i ASP.NET-programmet filen Global.asax."
  remarks: "Om ett objekt på en sida inte har stöd för serialisering och <xref:System.Web.SessionState.HttpSessionState.Mode%2A>är out-of-process (<xref:System.Web.SessionState.SessionStateMode> eller <xref:System.Web.SessionState.SessionStateMode>), objektet skapas inte och kommer inte att lägga till den här samlingen.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Egenskapen StaticObjects tillhandahålls för kompatibilitet med tidigare versioner av ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "En <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> som innehåller objekt som deklarerats i filen Global.asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till insamling av värden för sessionstillstånd."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till samlingen."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Hämtar och anger hur lång tid, i minuter, mellan begäranden innan sessionstillståndsprovider avslutar sessionen."
  remarks: "Timeout-egenskapen kan anges i Web.config-filen för ett program som använder den `timeout` attribut till konfigurationselementet eller du kan ange Timeout egenskapsvärdet direkt med programkod.       Egenskapen Timeout kan inte anges till ett värde större än 525,600 minuter (1 år). Standardvärdet är 20 minuter."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Tidsgränsen, i minuter."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
