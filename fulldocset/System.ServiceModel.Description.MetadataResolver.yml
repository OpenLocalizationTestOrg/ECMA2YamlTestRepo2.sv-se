### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Hämtar och importerar metadata som <xref:System.ServiceModel.Description.ServiceEndpoint>objekt.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Använd klassen MetadataResolver snabbt importera slutpunkter för en tjänst från metadata. Den här klassen laddar ned och konverterar metadata i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt.</xref:System.ServiceModel.Description.ServiceEndpoint> Hämtar metadata och bearbeta den informationen som <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>finns i <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt med hjälp av den angivna adressen och asynkrona tillstånd och delegera.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på som <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata och standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt eller motringning är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet med hjälp av den angivna adressen och asynkrona tillstånd och delegera.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på som <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata och standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning.       Den här metoden kräver att du anger en kontrakttyp. Du kan ange kontraktet genom att deklarera gränssnittet i klientkoden eller med hjälp av en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten som genererats av Svcutil.exe. Om gränssnittet ändras (lägga till en ny operation, till exempel) måste du uppdatera gränssnittet i klientkoden eller skapa en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Om du inte vill genereras ett undantag. Du har till exempel en tjänst som implementerar ett tjänstekontrakt som kallas ICalculator som definierar Add (), Sub(), Mult() och Div(). Du skapar ett klientprogram och generera [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Du sedan lägga till en metod ICalculator kallas Echo(). Om du sedan skriva ett program som anropar <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>utan att skapa en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten få följande undantag.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontraktet som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt eller motringning är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt, med hjälp av den angivna adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, asynkron tillstånd och delegaten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> används för att hämta metadata."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt, klient eller återanrop <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt, med hjälp av den angivna adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> värde, asynkron tillstånd och delegera.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt eller motringning är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet med hjälp av den angivna adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, asynkron tillstånd och delegaten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontraktet som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt eller motringning är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Startar ett asynkront anrop som matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt, med hjälp av den angivna adressen <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, asynkron tillstånd och delegaten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> används för att hämta metadata."
    - id: callback
      type: System.AsyncCallback
      description: "Asynkront motanrop delegaten anropas när anropet har slutförts."
    - id: asyncState
      type: System.Object
      description: "Det tillstånd som associeras med asynkront anrop."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till åtgärden asynkron Lös.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress, kontrakt eller motringning är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Slutför ett asynkront anrop för att lösa metadata för en samling slutpunkter."
  remarks: "Slutar ett asynkront anrop till en av de <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>metoder.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>objekt som tagits emot från ett anrop till den <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>metoden.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för slutpunkter som ingår i metadata.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt med hjälp av den angivna adressen.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på som <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata och standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Samlingen adress eller kontrakt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Hämtar och matchar en Metadataadressen för en samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet på den angivna adressen.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Använd metoden Lös om du vill ange kontraktet och metadata-adress som ska användas vid nedladdning och lösa metadata.       Standardinställningarna på som <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata och standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning.       Den här metoden kräver att du anger en kontrakttyp. Du kan ange kontraktet genom att deklarera gränssnittet i klientkoden eller med hjälp av en [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten som genererats av Svcutil.exe. Om gränssnittet ändras (lägga till en ny operation, till exempel) måste du uppdatera gränssnittet i klientkoden eller skapa en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Om du inte vill genereras ett undantag. Du har till exempel en tjänst som implementerar ett tjänstekontrakt som kallas ICalculator som definierar Add (), Sub(), Mult() och Div(). Du skapar ett klientprogram och generera [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten. Du sedan lägga till en metod ICalculator kallas Echo(). Om du sedan skriva ett program att matcha anrop utan att skapa en ny [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienten få följande undantag.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen eller kontraktet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt med hjälp av den angivna adressen och <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardvärdet <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>är <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Metadata-adress."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> används för att hämta metadata."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen kontrakt samling, eller klienten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt med hjälp av angivna adressen och överför.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Standardinställningarna på den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Samlingen adress eller kontrakt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet med hjälp av angivna adressen och överför.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Använd metoden Lös om du vill ange ett kontrakt och adress och mekanismen för nedladdning för att använda.       Standardinställningarna på den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>används för att hämta metadata.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontraktet som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adress eller kontraktet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Matchar en Metadataadressen till den <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för de angivna kontrakt med hjälp av den angivna adressen och överföringsläge överföringsklienten.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Att hämta metadata men inte att matcha informationen i <xref:System.ServiceModel.Description.ServiceEndpoint>objekt, använder den <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direkt.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Returneras en tom samling om inga slutpunkter har importerats eller om inga slutpunkter matchade kontraktet. Om en tom samling returneras, skrivs en varning spårning."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakt som du vill hämta och lösa metadata."
    - id: address
      type: System.Uri
      description: "Metadata-adress."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Läget för hämtning."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> används för att hämta metadata."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "En samling <xref:System.ServiceModel.Description.ServiceEndpoint>objekt för det angivna kontraktet.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adressen kontrakt samling, eller klienten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>är tom måste minst en medlem av <code>contracts</code> är null eller <code>contracts</code> innehåller fler än ett kontrakt med samma namn och namnområde."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
