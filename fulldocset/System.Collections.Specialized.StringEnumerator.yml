### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringEnumerator
  id: StringEnumerator
  children:
  - System.Collections.Specialized.StringEnumerator.Current
  - System.Collections.Specialized.StringEnumerator.MoveNext
  - System.Collections.Specialized.StringEnumerator.Reset
  langs:
  - csharp
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
  type: Class
  summary: "Stöder en enkel iteration via en <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare.  Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> AT detta position, anropar <xref:System.Collections.Specialized.StringEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>eller <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>kallas.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>Anger <xref:System.Collections.Specialized.StringEnumerator.Current%2A>till nästa element.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Om <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>passerar slutet på mängden uppräknaren är placerad efter det sista elementet i mängden och <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> När uppräknaren är på denna position efterföljande anrop till <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>också returnera `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Collections.Specialized.StringEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Ange <xref:System.Collections.Specialized.StringEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>följt av <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>och <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar."
  example:
  - "The following code example demonstrates several of the properties and methods of StringEnumerator.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/t-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/t-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_8_1.vb)]"
  syntax:
    content: public class StringEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Current
  id: Current
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar det aktuella elementet i mängden."
  remarks: "När du har skapat en uppräknare eller efter en <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>anropas, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>måste anropas för att gå vidare uppräknaren till det första elementet i mängden innan du läser värdet på Current; annars är odefinierad.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Aktuella också genererar ett undantag om senast anropet till <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>returnerade `false`, vilket anger slutet av samlingen.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Aktuella inte flytta positionen för uppräknaren och efterföljande anrop till aktuella returnera samma objekt förrän antingen <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>eller <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>kallas.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/p-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/p-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/p-system.collections.spe_8_1.vb)]"
  syntax:
    content: public string Current { get; }
    return:
      type: System.String
      description: "Det aktuella elementet i mängden."
  overload: System.Collections.Specialized.StringEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uppräknaren har placerats före det första elementet i mängden eller efter det sista elementet."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Avancerar uppräknaren till nästa element i samlingen."
  remarks: "När du har skapat en uppräknare eller efter en <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>är kallas, en Uppräknaren står före det första elementet i mängden och det första anropet till MoveNext flyttar uppräknaren över det första elementet i mängden.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Om MoveNext passerar slutet av samlingen uppräknaren efter det sista elementet i mängden och MoveNext returnerar `false`. När uppräknaren är på denna position, efterföljande anrop till MoveNext också returnera `false` tills <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>kallas.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel att lägga till, ändra eller ta bort element, uppräknaren inaktuella blir och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_12_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_12_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_12_1.vb)]"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om uppräknaren har avancerade till nästa element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om uppräknaren har passerat slutet av samlingen."
  overload: System.Collections.Specialized.StringEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats efter att uppräknaren skapades."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Reset
  id: Reset
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Anger uppräknaren till sin ursprungliga position är före det första elementet i mängden."
  remarks: "Återställ flyttar uppräknaren till början av samlingen innan det första elementet. Efter återställningen <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>måste anropas för att gå vidare till det första elementet i mängden innan du läser värdet för <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> uppräknaren</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_14_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_14_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_14_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Collections.Specialized.StringEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats efter att uppräknaren skapades."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Collections.Specialized.StringEnumerator.Current
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringEnumerator.Reset
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
- uid: System.Collections.Specialized.StringEnumerator.Current*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
- uid: System.Collections.Specialized.StringEnumerator.MoveNext*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: StringEnumerator.MoveNext
- uid: System.Collections.Specialized.StringEnumerator.Reset*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset
  nameWithType: StringEnumerator.Reset
