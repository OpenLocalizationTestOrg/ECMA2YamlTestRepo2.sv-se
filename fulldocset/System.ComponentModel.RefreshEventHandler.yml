### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.RefreshEventHandler
  id: RefreshEventHandler
  langs:
  - csharp
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
  type: Delegate
  summary: "Representerar den metod som hanterar den <xref href=&quot;System.ComponentModel.TypeDescriptor.Refreshed&quot;> </xref> händelse inträffar när en <xref:System.Type>eller komponenten har ändrats under designtillfället.</xref:System.Type>"
  remarks: 'När du skapar en RefreshEventHandler delegat kan identifiera den metod som hanterar händelsen. Lägga till en instans av delegaten händelsen om du vill associera händelsen med din händelsehanterare. Händelsehanteraren anropas när händelsen inträffar, om du tar bort delegaten. Mer information om händelsehanterare delegater finns [NIB: händelser och delegater](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "The following sample demonstrates how to use a RefreshEventHandler delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes. In the code, the `OnRefreshed` event handles the event and displays the component being changed.  \n  \n The code assumes that a `TextBox` control is already sited on the form.  \n  \n [!code-cpp[RefreshEventHandler#1](~/add/codesnippet/cpp/t-system.componentmodel._31_1.cpp)]\n [!code-vb[RefreshEventHandler#1](~/add/codesnippet/visualbasic/t-system.componentmodel._31_1.vb)]\n [!code-cs[RefreshEventHandler#1](~/add/codesnippet/csharp/t-system.componentmodel._31_1.cs)]"
  syntax:
    content: public delegate void RefreshEventHandler(RefreshEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
