### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataAdapter
  id: OleDbDataAdapter
  children:
  - System.Data.OleDb.OleDbDataAdapter.#ctor
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  - System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  - System.Data.OleDb.OleDbDataAdapter.InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OleDb.OleDbDataAdapter.RowUpdated
  - System.Data.OleDb.OleDbDataAdapter.RowUpdating
  - System.Data.OleDb.OleDbDataAdapter.SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  - System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
  type: Class
  summary: "Representerar en uppsättning kommandon data och en databasanslutning som används för att fylla i <xref href=&quot;System.Data.DataSet&quot;> </xref> och uppdatera datakällan."
  remarks: "Den internt OleDbDataAdapter fungerar som en brygga mellan en <xref:System.Data.DataSet>och datakällan för att hämta och spara data.</xref:System.Data.DataSet> Den internt OleDbDataAdapter innehåller den här bridge med <xref:System.Data.Common.DbDataAdapter.Fill%2A>att läsa in data från datakällan till den <xref:System.Data.DataSet>, och använder <xref:System.Data.Common.DbDataAdapter.Update%2A>att skicka ändringar som gjorts i den <xref:System.Data.DataSet>tillbaka till datakällan.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       När den internt OleDbDataAdapter fyller en <xref:System.Data.DataSet>, skapas lämpliga tabeller och kolumner för returnerade data om de inte redan finns.</xref:System.Data.DataSet> Dock primära nyckelinformationen ingår inte i implicit skapade schemat om inte <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskapen <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Du kanske också har den internt OleDbDataAdapter skapa schemat <xref:System.Data.DataSet>inklusive primära nyckelinformationen, innan du fyller den med hjälp av <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> -data</xref:System.Data.DataSet> Mer information finns i [att lägga till befintliga villkor till en datamängd](~/add/includes/ajax-current-ext-md.md).       Observera att vissa OLE DB-leverantörer, inklusive MSDataShape-providern inte returnerar bastabellen eller primära nyckelinformationen. Därför kan kan inte den internt OleDbDataAdapter korrekt ange <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen i alla skapade <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> I dessa fall måste du uttryckligen ange primärnycklar för tabeller i <xref:System.Data.DataSet>.</xref:System.Data.DataSet>       Den internt OleDbDataAdapter även den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, och <xref:System.Data.Common.DataAdapter.TableMappings%2A>Egenskaper för att underlätta inläsningen och uppdatering av data.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       När du skapar en instans av internt OleDbDataAdapter ange egenskaper till sina ursprungliga värden. En lista över dessa värden finns i internt OleDbDataAdapter-konstruktorn."
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, OleDbDataAdapter and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_7_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_7_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klass."
  remarks: "När du skapar en instans av <xref:System.Data.OleDb.OleDbDataAdapter>, följande egenskaper för läsning/skrivning är inställda på att följande ursprungliga värden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan ändra värdet för någon av dessa egenskaper via ett separat anrop till egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_28_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_28_1.cs)]"
  syntax:
    content: public OleDbDataAdapter ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  id: '#ctor(System.Data.OleDb.OleDbCommand)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klass med det angivna <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> som den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>egenskapen.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Den här implementeringen av den <xref:System.Data.OleDb.OleDbDataAdapter>konstruktorn anger den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>egenskapen till värdet som anges i den `selectCommand` parameter.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter>       När du skapar en instans av <xref:System.Data.OleDb.OleDbDataAdapter>, följande egenskaper för läsning/skrivning är inställda på att följande ursprungliga värden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan ändra värdet för någon av dessa egenskaper via ett separat anrop till egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_17_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_17_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> som en SELECT-instruktion eller lagrad procedur och har angetts som den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>egenskapen för den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klass med <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Den här implementeringen av den <xref:System.Data.OleDb.OleDbDataAdapter>öppnar och stänger en <xref:System.Data.OleDb.OleDbConnection>om den inte redan är öppen.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataAdapter> Detta kan vara användbart i ett program som måste anropa den <xref:System.Data.Common.DbDataAdapter.Fill%2A>metod för två eller fler <xref:System.Data.OleDb.OleDbDataAdapter>objekt.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Om den <xref:System.Data.OleDb.OleDbConnection>är redan öppen, måste du explicit anropa <xref:System.Data.OleDb.OleDbConnection.Close%2A>eller **avyttra** att stänga det.</xref:System.Data.OleDb.OleDbConnection.Close%2A> </xref:System.Data.OleDb.OleDbConnection>       När du skapar en instans av <xref:System.Data.OleDb.OleDbDataAdapter>, följande egenskaper för läsning/skrivning är inställda på att följande ursprungliga värden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan ändra värdet för någon av dessa egenskaper via ett separat anrop till egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/visualbasic/f3cd089b-2d52-49c5-b101-_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/add/codesnippet/csharp/f3cd089b-2d52-49c5-b101-_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "En sträng som är en SQL SELECT-instruktion eller lagrad procedur som ska användas av den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>egenskapen för den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OleDb.OleDbConnection
      description: "En <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> som representerar anslutningen."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> klass med <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
  remarks: "Den här överlagring för den <xref:System.Data.OleDb.OleDbDataAdapter>konstruktorn använder den `selectConnectionString` att ange den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>egenskapen.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter> Det dock inte att öppna anslutningen. Du måste ändå uttryckligen öppna anslutningen.       När du skapar en instans av <xref:System.Data.OleDb.OleDbDataAdapter>, följande egenskaper för läsning/skrivning är inställda på att följande ursprungliga värden.</xref:System.Data.OleDb.OleDbDataAdapter>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Du kan ändra värdet för någon av dessa egenskaper via ett separat anrop till egenskapen.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_4_1.vb)]\n [!code-cs[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_4_1.cs)]"
  syntax:
    content: public OleDbDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "En sträng som är en SQL SELECT-instruktion eller lagrad procedur som ska användas av den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>egenskapen för den <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "Anslutningssträngen."
  overload: System.Data.OleDb.OleDbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Som ska läggas till."
    - id: command
      type: System.Data.IDbCommand
      description: "Som ska läggas till."
    - id: statementType
      type: System.Data.StatementType
      description: "Som ska läggas till."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Som ska läggas till."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Som ska läggas till."
    - id: command
      type: System.Data.IDbCommand
      description: "Som ska läggas till."
    - id: statementType
      type: System.Data.StatementType
      description: "Som ska läggas till."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Som ska läggas till."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar eller anger en SQL-instruktion eller lagrad procedur för borttagning av poster från datauppsättningen."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, om den här egenskapen inte har angetts och primära nyckelinformationen finns i <xref:System.Data.DataSet>DeleteCommand kan skapas automatiskt om du anger <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>egenskapen och Använd <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Sedan genereras alla ytterligare kontroller som du inte anger av <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Den här generationen logiken kräver information om nyckelkolumn måste finnas i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Mer information finns i [genererar kommandon med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       När DeleteCommand har tilldelats till en tidigare skapad <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>inte klonas.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> DeleteCommand har en referens till den tidigare skapade <xref:System.Data.OleDb.OleDbCommand>objektet.</xref:System.Data.OleDb.OleDbCommand>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> används under <xref:System.Data.Common.DbDataAdapter.Update*>att ta bort poster i datakällan som motsvarar borttagna rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  id: Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lägger till eller uppdaterar rader i en <xref href=&quot;System.Data.DataTable&quot;> </xref> att anpassa dem i en ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> objekt med den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> och ADO-objekt."
  remarks: "Länken mellan objekt ADO (ActiveX Data) och ADO.NET är en enkel åtgärd i att du kan kopiera data från ADO till den <xref:System.Data.DataSet>, men alla uppdateringar data måste hanteras av ADO.NET.</xref:System.Data.DataSet>       Stäng inte den här överlagringen för metoden Fill indata `Recordset` Fill-åtgärden har slutförts.       När du arbetar med batch SQL-uttryck som kan returnera flera resultat, den här implementeringen av Fill och <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>för den OLE DB.NET Framework-dataprovidern hämtar schemainformation för endast det första resultatet.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Fill åtgärden lägger till rader till det angivna målet <xref:System.Data.DataTable>objekt i den <xref:System.Data.DataSet>, skapar den <xref:System.Data.DataTable>objekt om den inte redan finns.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> När du skapar en <xref:System.Data.DataTable>objekt Fill åtgärden normalt skapar endast namnet kolumnmetadata.</xref:System.Data.DataTable> Men om den <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskap är inställd på `AddWithKey`, skapas också lämpliga primära nycklar och begränsningar.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Du kan använda metoden Fill flera gånger i samma <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Om det finns en primärnyckel, slås inkommande rader samman med matchande rader som redan finns. Om det finns ingen primär nyckel, läggs inkommande rader till i <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Om det primära nyckelinformationen, alla dubblettrader stäms och visas endast en gång i <xref:System.Data.DataTable>som motsvarar <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Primära nyckelinformationen kan anges antingen via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, genom att ange den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen för den <xref:System.Data.DataTable>, eller genom att ange den <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskapen `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Om den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>returnerar resultatet av en yttre koppling av `DataAdapter` inte anger ett <xref:System.Data.DataTable.PrimaryKey%2A>värde för den resulterande <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Du måste uttryckligen definiera den primära nyckeln för att se till att dubblettrader matcha korrekt. Mer information finns i [definierar primärnycklar](~/add/includes/ajax-current-ext-md.md).       Ska fungera korrekt med .NET Framework Data Provider för OLE DB, `AddWithKey` kräver att den inbyggda OLE DB-providern erhåller nödvändiga primära nyckelinformationen genom att ange egenskapen DBPROP_UNIQUEROWS och sedan anger vilka kolumner som är primära nyckelkolumner genom att undersöka DBCOLUMN_KEYCOLUMN i den `IColumnsRowset`. Användaren kan också explicit ange Primärnyckelbegränsningar i varje <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Detta säkerställer att inkommande poster som matchar befintliga poster uppdateras i stället för läggas till.       Om den <xref:System.Data.OleDb.OleDbDataAdapter>möten duplicerade kolumner medan en <xref:System.Data.DataTable>, det genererar namn för efterföljande kolumner, hur du använder mönstret &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, och så vidare.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Tom kolumnnamn läggs till i <xref:System.Data.DataTable>, med en tom sträng för den första kolumnen, följt av &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, och så vidare för efterföljande tomma kolumner.</xref:System.Data.DataTable>       Värdena i ADO `Recordset` eller `Record` objekt konverteras till common language runtime-typer för lagring i <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!CAUTION] > Denna överlagring för metoden Fill anropar inte implicit `Close` på ADO-objekt när fill åtgärden har slutförts. Därför alltid anropa `Close` när du är klar med ADO `Recordset` eller `Record` objekt. Detta säkerställer att den underliggande anslutningen till en datakälla har getts ut inom rimlig tid och förhindrar även möjligt åtkomstfel på grund av ohanterade ADO-objekt som återställts genom skräpinsamling när befintliga referenser finns kvar.       När du anropar den `TableMappings.Add` metod i en `DataAdapter` och du uttryckligen mappa parametern source tabell till en tom sträng, datamängden har fyllts med källtabellen, men datamängden fylls i med ingenting. Till exempel i följande exempel `rDataSet` fylls med ingenting.      ```   rAdapter.TableMappings.Add(&quot;source table&quot;, &quot;&quot;);   rAdapter.Fill(rDataSet, &quot;source table&quot;);      ```Det här exemplet visar hur du kan hoppa över ett resultat när du hanterar flera resultat.       I följande exempel används en <xref:System.Data.OleDb.OleDbDataAdapter>vill fylla en <xref:System.Data.DataTable>med hjälp av en ADO `Recordset`.</xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter> Det här exemplet förutsätter att du har skapat en ADO `Recordset`.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable(&quot;Customers&quot;)        custTable.Columns.Add(&quot;CustomerID&quot;, Type.GetType(&quot;System.String&quot;))        custTable.Columns.Add(&quot;CompanyName&quot;, Type.GetType(&quot;System.String&quot;))        custDS.Tables.Add(custTable)        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable(&quot;Customers&quot;);        custTable.Columns.Add(&quot;CustomerID&quot;, typeof(String));        custTable.Columns.Add(&quot;CompanyName&quot;, typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT CustomerID, CompanyName FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> med poster och, om det behövs, schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Int32
      description: "Antalet rader har uppdaterats till den <xref href=&quot;System.Data.DataTable&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  id: Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lägger till eller uppdaterar rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref> att anpassa dem i en ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;> </xref> eller <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;> </xref> objekt med den angivna <xref href=&quot;System.Data.DataSet&quot;> </xref>, ADO-objekt och namn på datakälla."
  remarks: "Länken mellan objekt ADO (ActiveX Data) och ADO.NET är en enkel åtgärd i att du kan kopiera data från ADO till den <xref:System.Data.DataSet>, men alla uppdateringar data måste hanteras av ADO.NET.</xref:System.Data.DataSet>       Den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>metoden går igenom flera resultat genom att anropa den `NextRecordset` -metoden i den `Recordset`, stänger indata `Recordset` vid slutet av den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>åtgärden.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       Den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>åtgärden lägger till rader till det angivna målet <xref:System.Data.DataTable>objekt i den <xref:System.Data.DataSet>, skapar den <xref:System.Data.DataTable>objekt om den inte redan finns.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> När du skapar en <xref:System.Data.DataTable>objekt, den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>åtgärden normalt skapar endast namnet kolumnmetadata.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Men om den <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskap är inställd på `AddWithKey`, skapas också lämpliga primära nycklar och begränsningar.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>       Om det primära nyckelinformationen, alla dubblettrader stäms och visas endast en gång i <xref:System.Data.DataTable>som motsvarar <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Primära nyckelinformationen kan anges antingen via <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, genom att ange den <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen för den <xref:System.Data.DataTable>, eller genom att ange den <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>egenskapen `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Ska fungera korrekt med .NET Framework Data Provider för OLE DB, `AddWithKey` kräver inbyggda OLE DB-providern att hämta nödvändiga primära nyckelinformationen genom att ange egenskapen DBPROP_UNIQUEROWS och sedan avgöra vilka kolumner som är primär nyckelkolumner genom att undersöka DBCOLUMN_KEYCOLUMN i den **IColumnsRowset**. Användaren kan också explicit ange Primärnyckelbegränsningar i varje <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Detta garanterar att inkommande poster som matchar befintliga poster uppdateras i stället för läggas till.       Om den <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>returnerar resultatet av en yttre koppling av `DataAdapter` inte anger ett <xref:System.Data.DataTable.PrimaryKey%2A>värde för den resulterande <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Du måste uttryckligen definiera den primära nyckeln för att se till att dubblettrader matcha korrekt. Mer information finns i [definierar primärnycklar](~/add/includes/ajax-current-ext-md.md).       Om den `Recordset` är stängd innan den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>åtgärden, inga felresultat.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> Detta är nödvändigt för hantering av flera resultat, eftersom frågor som inte returnerar rader som anges av en stängd `Recordset`. Den <xref:System.Data.OleDb.OleDbDataAdapter>bara anropar `NextRecordset` på den stängda `Recordset` och fortsätter bearbetningen.</xref:System.Data.OleDb.OleDbDataAdapter>       Om ett fel inträffade vid ifyllning av datauppsättningen kvar rader läggs innan förekomsten av felet i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Resten av åtgärden avbröts.       Om den <xref:System.Data.Common.DbDataAdapter>dubbla kolumner påträffas medan en <xref:System.Data.DataTable>, det genererar namn för efterföljande kolumner, hur du använder mönstret &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, och så vidare.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Om inkommande data innehåller icke namngivna kolumner, placeras de i den <xref:System.Data.DataSet>enligt mönstret &quot;Kolumn1&quot;, &quot;Kolumn2&quot; och så vidare.</xref:System.Data.DataSet> När flera resultatmängder läggs till i <xref:System.Data.DataSet>varje resultatmängd är placerad i separata tabeller.</xref:System.Data.DataSet> Ytterligare resultatmängder är namngivna genom att integrerad värden till angivna tabellnamnet (till exempel &quot;Table&quot;, &quot;Tabell1&quot;, &quot;Tabell2&quot; och så vidare.). Program som använder kolumnnamn och tabellnamn bör se till att inte uppstår står i konflikt med dessa namngivning mönster.       Värdena i ADO `Recordset` eller `Record` objekt konverteras till common language runtime-typer för lagring i <xref:System.Data.DataSet>.</xref:System.Data.DataSet>      > [!NOTE] > Denna överlagring för den <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>implicit metodanrop `Close` på ADO-objekt när fill åtgärden har slutförts.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>       I följande exempel används en <xref:System.Data.OleDb.OleDbDataAdapter>vill fylla en <xref:System.Data.DataSet>med hjälp av en ADO `Recordset` som är en ADO `Record` objektet.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> Det här exemplet förutsätter att du har skapat en ADO `RecordSet` och `Record` objekt.      ```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        &quot;Use ADO objects from ADO library (msado15.dll) imported        &quot; as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1)        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, &quot;Customers&quot;)        adoConn.Close()   ```      ```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open(&quot;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;&quot;, &quot;&quot;, &quot;&quot;, -1);        adoRS.Open(&quot;SELECT * FROM Customers&quot;, adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, &quot;Customers&quot;);        adoConn.Close();   ```"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "En <xref href=&quot;System.Data.DataSet&quot;> </xref> med poster och, om det behövs, schema."
    - id: ADODBRecordSet
      type: System.Object
      description: "An ADO <xref uid=&quot;langword_csharp_Recordset&quot; name=&quot;Recordset&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Record&quot; name=&quot;Record&quot; href=&quot;&quot;></xref> object."
    - id: srcTable
      type: System.String
      description: "Källtabellen för tabellen mappningar."
    return:
      type: System.Int32
      description: "Antalet rader har lagts till eller uppdateras i den <xref href=&quot;System.Data.DataSet&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.OleDb.OleDbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Källtabellen är ogiltig."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar eller anger en SQL-instruktion eller lagrad procedur som används för att infoga nya poster i datakällan."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, om den här egenskapen inte har angetts och primära nyckelinformationen finns i <xref:System.Data.DataSet>objektet InsertCommand kan skapas automatiskt om du anger <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>egenskapen och Använd <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Sedan genereras alla ytterligare kontroller som du inte anger av <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Den här generationen logiken kräver information om nyckelkolumn måste finnas i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Mer information finns i [genererar kommandon med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       När InsertCommand har tilldelats till en tidigare skapad <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>inte klonas.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> Objektet InsertCommand har en referens till den tidigare skapade <xref:System.Data.OleDb.OleDbCommand>objektet.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Om körning av det här kommandot returnerar rader, dessa rader kan läggas till i <xref:System.Data.DataSet>beroende på hur du ställer in den <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>egenskapen för den <xref:System.Data.OleDb.OleDbCommand>objekt.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> används under <xref:System.Data.Common.DbDataAdapter.Update*>att infoga poster i datakällan som motsvarar nya rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inträffar under <xref:System.Data.Common.DbDataAdapter.Update*>när ett kommando körs mot datakällan.</xref:System.Data.Common.DbDataAdapter.Update*> Görs försök att uppdatera. Därför inträffar händelsen."
  remarks: "När du använder <xref:System.Data.Common.DbDataAdapter.Update%2A>, det finns två händelser per datarad uppdateras.</xref:System.Data.Common.DbDataAdapter.Update%2A> Ordningen för körningen är följande: 1.  Värdena i den <xref:System.Data.DataRow>flyttas till parametervärden.</xref:System.Data.DataRow>      2.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Kommandot körs.      4.  Om kommandot anges till `FirstReturnedRecord`, först returnerade resultatet är placerad i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Om det finns utdataparametrar, är de placerade i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>anropas.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and RowUpdated events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OleDb.OleDbRowUpdatedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inträffar under <xref:System.Data.Common.DbDataAdapter.Update*>innan kommandot körs mot datakällan.</xref:System.Data.Common.DbDataAdapter.Update*> Görs försök att uppdatera. Därför inträffar händelsen."
  remarks: "När du använder <xref:System.Data.Common.DbDataAdapter.Update%2A>, det finns två händelser per datarad uppdateras.</xref:System.Data.Common.DbDataAdapter.Update%2A> Ordningen för körningen är följande: 1.  Värdena i den <xref:System.Data.DataRow>flyttas till parametervärden.</xref:System.Data.DataRow>      2.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Kommandot körs.      4.  Om kommandot anges till `FirstReturnedRecord`, först returnerade resultatet är placerad i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Om det finns utdataparametrar, är de placerade i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>anropas.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows the RowUpdating and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OleDb.OleDbRowUpdatingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar eller anger en SQL-instruktion eller lagrad procedur som används för att välja poster i datakällan."
  remarks: "När SelectCommand är tilldelad till en tidigare skapad <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>inte klonas.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> SelectCommand upprätthåller en referens till den tidigare skapade <xref:System.Data.OleDb.OleDbCommand>objektet.</xref:System.Data.OleDb.OleDbCommand>       Om SelectCommand returnerar inga rader, inga tabeller har lagts till i <xref:System.Data.DataSet>, och inget undantag genereras.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the SelectCommand and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> som används under <xref:System.Data.Common.DbDataAdapter.Fill*>att välja poster från datakällan för placering i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbDataAdapter>instans omvandlas till ett <xref:System.Data.IDbDataAdapter>gränssnitt.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> används under en uppdatering för att ta bort poster i datakällan för borttagna rader i datauppsättningen."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbDataAdapter>instans omvandlas till ett <xref:System.Data.IDbDataAdapter>gränssnitt.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> som används under en uppdatering för att infoga poster från en datakälla för placering i datauppsättningen."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbDataAdapter>instans omvandlas till ett <xref:System.Data.IDbDataAdapter>gränssnitt.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> som används under en uppdatering för att välja poster från en datakälla för placering i datauppsättningen."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbDataAdapter>instans omvandlas till ett <xref:System.Data.IDbDataAdapter>gränssnitt.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "En <xref href=&quot;System.Data.IDbCommand&quot;> </xref> används under en uppdatering update poster i datakällan för modifierade rader i datauppsättningen."
  overload: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbDataAdapter>instans omvandlas till ett <xref:System.ICloneable>gränssnitt.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref:System.Object>som är en kopia av den här instansen.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar eller anger en SQL-instruktion eller lagrad procedur som används för att uppdatera poster i datakällan."
  remarks: "Under <xref:System.Data.Common.DbDataAdapter.Update%2A>, om den här egenskapen inte har angetts och primära nyckelinformationen finns i <xref:System.Data.DataSet>UpdateCommand kan skapas automatiskt om du anger <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>egenskapen och Använd <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Sedan genereras alla ytterligare kontroller som du inte anger av <xref:System.Data.OleDb.OleDbCommandBuilder>.</xref:System.Data.OleDb.OleDbCommandBuilder> Den här generationen logiken kräver information om nyckelkolumn måste finnas i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Mer information finns i [genererar kommandon med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       När UpdateCommand har tilldelats till en tidigare skapad <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbCommand>inte klonas.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand> UpdateCommand upprätthåller en referens till den tidigare skapade <xref:System.Data.OleDb.OleDbCommand>objektet.</xref:System.Data.OleDb.OleDbCommand>      > [!NOTE] > Om körning av det här kommandot returnerar rader, dessa rader kan slås samman med den <xref:System.Data.DataSet>beroende på hur du ställer in den <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A>egenskapen för den <xref:System.Data.OleDb.OleDbCommand>objekt.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> används under <xref:System.Data.Common.DbDataAdapter.Update*>att uppdatera poster i datakällan som motsvarar ändrade rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter()
  nameWithType: OleDbDataAdapter.OleDbDataAdapter()
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter()
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(OleDbCommand)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,OleDbConnection)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,OleDbConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter(String,String)
  nameWithType: OleDbDataAdapter.OleDbDataAdapter(String,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.OleDbDataAdapter(String,String)
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataTable,Object)
  nameWithType: OleDbDataAdapter.Fill(DataTable,Object)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataTable,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill(DataSet,Object,String)
  nameWithType: OleDbDataAdapter.Fill(DataSet,Object,String)
  fullName: System.Data.OleDb.OleDbDataAdapter.Fill(DataSet,Object,String)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdated
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OleDbDataAdapter.RowUpdated
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdated
- uid: System.Data.OleDb.OleDbRowUpdatedEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatedEventHandler
  nameWithType: OleDbRowUpdatedEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatedEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.RowUpdating
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OleDbDataAdapter.RowUpdating
  fullName: System.Data.OleDb.OleDbDataAdapter.RowUpdating
- uid: System.Data.OleDb.OleDbRowUpdatingEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbRowUpdatingEventHandler
  nameWithType: OleDbRowUpdatingEventHandler
  fullName: System.Data.OleDb.OleDbRowUpdatingEventHandler
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbDataAdapter.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
  fullName: System.Data.OleDb.OleDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.#ctor*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OleDbDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OleDb.OleDbDataAdapter.DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OleDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.Fill*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: Fill
  nameWithType: OleDbDataAdapter.Fill
- uid: System.Data.OleDb.OleDbDataAdapter.InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OleDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdated*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OleDbDataAdapter.OnRowUpdated
- uid: System.Data.OleDb.OleDbDataAdapter.OnRowUpdating*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OleDbDataAdapter.OnRowUpdating
- uid: System.Data.OleDb.OleDbDataAdapter.SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OleDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OleDbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbDataAdapter.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbDataAdapter.UpdateCommand*
  parent: System.Data.OleDb.OleDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OleDbDataAdapter.UpdateCommand
