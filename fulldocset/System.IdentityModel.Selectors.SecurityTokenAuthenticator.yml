### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  id: SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  type: Class
  summary: "Autentiserar en säkerhetstoken."
  remarks: "Klassen SecurityTokenAuthenticator och de klasser som härleds från den autentisera säkerhetstoken. Normalt skulle du bara hämtas en klass direkt från SecurityTokenAuthenticator när du skapar en anpassad säkerhetstoken. Om du vill åsidosätta standardfunktionaliteten för autentisering eller auktorisering för inbyggda säkerhetstoken som härleds från en av de klasser som härleds från SecurityTokenAuthenticator, till exempel <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>       När du härleda en klass från SecurityTokenAuthenticator åsidosätter följande två metoder: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>och <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>metoden avgör om den här Säkerhetstokenautentiseraren kan autentisera en specifik säkerhetstoken.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> Den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>metoden autentiserar säkerhetstoken och upprättar en uppsättning auktoriseringsprinciper för auktorisering.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> Auktoriseringsprinciper mappa anspråk i säkerhetstoken för att anspråk som krävs för programmet."
  syntax:
    content: public abstract class SecurityTokenAuthenticator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> klass."
  syntax:
    content: protected SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Hämtar ett värde som anger om den angivna säkerhetstoken kan valideras av den här Säkerhetstokenautentiseraren."
  remarks: "Metoden CanValidateToken kontrollerar om parametern token är `null` och anropar sedan den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>metod för att bestämma om det här Säkerhetstokenautentiseraren kan autentisera säkerhet tokentypen för `token`.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>"
  syntax:
    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>när token kan verifieras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Hämtar ett värde som anger om den angivna säkerhetstoken kan valideras av den här Säkerhetstokenautentiseraren när åsidosätts i en härledd klass."
  remarks: "CanValidateTokenCore-metoden anropas av den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>metod för att bestämma om det här Säkerhetstokenautentiseraren kan autentisera säkerhet tokentypen för `token`.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> Detta autentiserar inte säkerhetstoken; som utförs av den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>metoden.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När <code> token </code> kan vara validerad, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Autentiserar angivna säkerhetstoken och returnerar en mängd med auktoriseringsprinciper för säkerhetstoken."
  remarks: "ValidateToken metoden kontrollerar om den `token` parametern är `null`, anrop av <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>metod för att bestämma om det här Säkerhetstokenautentiseraren kan autentisera den här säkerhetstoken, och sedan om den kan anropas i <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>metod.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> som innehåller en uppsättning auktoriseringsprinciper gäller för det här programmet."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>token</code>inte kan autentiseras av den här Säkerhetstokenautentiseraren - eller - <code>token</code> inte har autentiserats."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "När åsidosätts i en härledd klass autentiserar angivna säkerhetstoken och returnerar en mängd med auktoriseringsprinciper för säkerhetstoken."
  remarks: "Åsidosätta metoden ValidateTokenCore för att autentisera en tokentyp specifika säkerhetsbehörigheter.       Följ dessa riktlinjer när metoden ValidateTokenCore åsidosätts: – när säkerhetstoken som skickades till den `token` parametern får inte vara verifieringen utlösa den <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>undantag.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -När det finns inga auktoriseringsprinciper gäller för det här programmet, returneras en tom <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>av typen <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       När `null` returneras av den här metoden [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] utlöser den <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>undantag.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       ValidateTokenCore-metoden anropas av den <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>metoden.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> som innehåller en uppsättning auktoriseringsprinciper gäller för det här programmet."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken
  nameWithType: SecurityTokenAuthenticator.CanValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenAuthenticator.ValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
