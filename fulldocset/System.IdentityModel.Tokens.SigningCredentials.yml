### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "Representerar de nyckel och krypteringsalgoritmer som används för att generera en digital signatur."
  remarks: "Använd klassen SigningCredentials för att ange signeringsnyckeln, signering nyckelidentifierare och säkerhetsalgoritmer som används av [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] att generera meddelandets digitala signatur för en <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion> Om du vill ange information om digital signatur, anger du <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>egenskapen för <xref:System.IdentityModel.Tokens.SamlAssertion>klassen.</xref:System.IdentityModel.Tokens.SamlAssertion> </xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> klass."
  remarks: "Använd den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen för att ange den `signatureAlgorithm` och `digestAlgorithm` parametrar.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> Den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen innehåller en uppsättning statiska, konstant strängar som representerar kryptografiska algoritmer.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> Medlemmar som har en `Signature` suffix kan användas för att ange den `signatureAlgoritm` parametern och de medlemmar som har en `Digest` suffix kan användas för att ange den `digestAlgorithm` parameter."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som innehåller den kryptografiska nyckel som används för att generera meddelandets digitala signatur."
    - id: signatureAlgorithm
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att generera meddelandets digitala signatur."
    - id: digestAlgorithm
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att beräkna kondensat för del av SOAP-meddelandet som ska signeras digitalt."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> klass."
  remarks: "Använd den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen för att ange den `signatureAlgorithm` och `digestAlgorithm` parametrar.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> Den <xref:System.IdentityModel.Tokens.SecurityAlgorithms>klassen innehåller en uppsättning statiska konstant strängar som representerar kryptografiska algoritmer.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> Medlemmar som har en `Signature` suffix kan användas för att ange den `signatureAlgoritm` parametern och de medlemmar som har en `Digest` suffix kan användas för att ange den `digestAlgorithm` parameter."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som innehåller den kryptografiska nyckel som används för att generera meddelandets digitala signatur."
    - id: signatureAlgorithm
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att generera meddelandets digitala signatur."
    - id: digestAlgorithm
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att beräkna kondensat för del av SOAP-meddelandet som ska signeras digitalt."
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som anger den identifierare som representerar den nyckel som används för att skapa en digital signatur."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar den krypteringsalgoritm som används för att beräkna kondensat för del av SOAP-meddelandet som ska signeras digitalt."
  remarks: "Om du vill ange egenskapen DigestAlgorithm måste använda en av konstruktorer som tar en `digestAlgorithm` parameter."
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att beräkna kondensat för del av SOAP-meddelandet som ska signeras digitalt."
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar den krypteringsalgoritm som används för att generera meddelandets digitala signatur."
  remarks: "Om du vill ange egenskapen SignatureAlgorithm måste använda en av konstruktorer som tar en `signatureAlgorithm` parameter."
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "En URI som representerar den krypteringsalgoritm som används för att generera meddelandets digitala signatur."
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar den kryptografiska nyckel som används för att generera meddelandets digitala signatur."
  remarks: "För att ange egenskapen SigningKey, Använd en konstruktor som tar en `signingKey` parameter."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> som innehåller den kryptografiska nyckel som används för att generera meddelandets digitala signatur."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar den identifierare som representerar den nyckel som används för att skapa en digital signatur."
  remarks: "För att ange egenskapen SigningKeyIdentifier, Använd den konstruktor som tar en `signingKeyIdentifier` parameter."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> som anger den identifierare som representerar den nyckel som används för att skapa en digital signatur."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
