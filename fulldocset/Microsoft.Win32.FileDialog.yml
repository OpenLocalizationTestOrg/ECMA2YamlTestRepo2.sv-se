### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  summary: "En abstrakt basklass som innehåller funktioner som är gemensamma för filen dialogrutor, inklusive <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> och <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Initierar en ny instans av den <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> klass."
  syntax:
    content: protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger om en fildialogruta lägger automatiskt till ett tillägg till ett filnamn om användaren utelämnar ett tillägg."
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tillägg läggs; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger om en fildialogruta visar en varning om användaren anger ett namn som inte finns."
  remarks: "Den <xref:Microsoft.Win32.OpenFileDialog>klass anger egenskapen till `true` i sin konstruktor.</xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om varningar visas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet i den här basklass är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger om varningar visas om användaren anger ogiltig sökvägar och filnamn."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om varningar visas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger listan över anpassade platser för fil-dialogrutor."
  remarks: "Från och med [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], öppna och spara filen dialogrutor har en **favoritlänkar** panelen till vänster i dialogrutan som används att snabbt navigera till en annan plats. Dessa länkar kallas anpassade platser. Den här egenskapen kan du ändra listan som visas när programmet använder en dialogruta."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: "Lista över anpassade platser."
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger standardsträngen tillägg du använder för att filtrera listan med filer som visas."
  remarks: "Tilläggssträngen måste innehålla en inledande punkt. Till exempel ange egenskapen DefaultExt till &quot;.txt&quot; för att välja alla textfiler.       Som standard den <xref:Microsoft.Win32.FileDialog.AddExtension%2A>egenskapen försöker bestämma tillägget att filtrera visas fillista från den <xref:Microsoft.Win32.FileDialog.Filter%2A>egenskapen.</xref:Microsoft.Win32.FileDialog.Filter%2A> </xref:Microsoft.Win32.FileDialog.AddExtension%2A> Om filnamnstillägget inte kan fastställas från den <xref:Microsoft.Win32.FileDialog.Filter%2A>DefaultExt-egenskapen ska användas i stället.</xref:Microsoft.Win32.FileDialog.Filter%2A>"
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "Tillägget standardsträngen. Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger om en fildialogruta returnerar platsen för den fil som refereras av en genväg eller platsen för den lnk-genvägsfil."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>returnera den plats som refererar till; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> returnera genvägen plats. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger en sträng som innehåller den fullständiga sökvägen till filen som markerats i en fildialogruta."
  remarks: "Om mer än en fil är markerad (längden på <xref:Microsoft.Win32.FileDialog.FileNames%2A>är större än&1;) filnamnet innehåller namnet på första markerade filen.</xref:Microsoft.Win32.FileDialog.FileNames%2A> Om inget filnamn har valts, innehåller den här egenskapen <xref:System.String.Empty>stället `null`.</xref:System.String.Empty>"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som är den fullständiga sökvägen till filen som markerats i dialogrutan fil.</xref:System.String> Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar en matris som innehåller ett filnamn för de markerade filerna."
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "En matris med <xref:System.String>som innehåller ett filnamn för de markerade filerna.</xref:System.String> Standardvärdet är en matris med ett enstaka objekt vars värde är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Inträffar när användaren väljer ett filnamn genom att antingen klicka på **öppna** -knappen i den <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> eller **spara** -knappen i den <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "FileOk utlöses när användaren väljer ett filnamn, men innan dialogrutan stängs, vilket tillåter dig att bearbeta markeringen. Om det behövs, användarens val kan avbrytas genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.ComponentModel.CancelEventArgs>argument för `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger Filtersträngen som bestämmer vilka typer av filer visas från antingen den <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> eller <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, \\*.xls, \\*.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid Filter string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller filtret.</xref:System.String> Standardvärdet är <xref:System.String>, vilket innebär att inget filter används och alla filtyper visas.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filtersträngen är ogiltig."
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger index för valt i en fildialogruta filtret."
  remarks: "Indexet är 1-baserat, inte 0-baserade, på grund av kompatibilitetskrav för med den underliggande [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]."
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "Den <xref:System.Int32>som är indexet för det valda filtret.</xref:System.Int32> Standard är 1."
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Definierar gemensamma filen dialogrutan hook proceduren som åsidosätts om du vill lägga till vanliga funktioner i en fildialogruta."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Fönsterreferensen för den [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialogrutan."
    - id: msg
      type: System.Int32
      description: "Meddelandet för att kunna bearbetas av den [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] dialogrutan."
    - id: wParam
      type: System.IntPtr
      description: "Parametrar för dialogrutan åtgärder."
    - id: lParam
      type: System.IntPtr
      description: "Parametrar för dialogrutan åtgärder."
    return:
      type: System.IntPtr
      description: "Returnerar <xref:System.IntPtr>att processen har lyckats; annars värdet noll returneras till indikerar.</xref:System.IntPtr>"
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger den inledande katalogen som visas när en fildialogruta."
  remarks: "Om det finns ingen startkatalog har angetts, innehåller den här egenskapen <xref:System.String>i stället för en null-sträng.</xref:System.String>"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller den inledande katalogen.</xref:System.String> Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Genererar den <xref href=&quot;Microsoft.Win32.FileDialog.FileOk&quot;> </xref> händelse."
  remarks: "OnFileOk genererar den <xref:Microsoft.Win32.FileDialog.FileOk>händelse.</xref:Microsoft.Win32.FileDialog.FileOk>       En typ som härleds från <xref:Microsoft.Win32.FileDialog>kan åsidosätta OnFileOk.</xref:Microsoft.Win32.FileDialog> Åsidosättningsmetoden måste anropa OnFileOk för basklassen om <xref:Microsoft.Win32.FileDialog.FileOk>måste aktiveras.</xref:Microsoft.Win32.FileDialog.FileOk>"
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "En <xref:System.ComponentModel.CancelEventArgs>som innehåller informationen om händelsen.</xref:System.ComponentModel.CancelEventArgs>"
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar den [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] vanliga filen dialogrutan flaggor som används av filen dialogrutor för initiering."
  remarks: "Det här värdet används för att visa en fildialogruta med de aktuella egenskapsvärden. De faktiska alternativ visas som egenskaper för specifika dialogrutor, men inte dokumenterad som offentliga flaggvärden på den här nivån så att användning av den här egenskapen är främst interna för användning när du implementerar härledda klasser <xref:Microsoft.Win32.OpenFileDialog>och <xref:Microsoft.Win32.SaveFileDialog>.</xref:Microsoft.Win32.SaveFileDialog> </xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller den [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] vanliga filen dialogrutan flaggor som används av filen dialogrutor för initiering.</xref:System.Int32>"
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Anger alla egenskaper för en fildialogruta tillbaka till sina ursprungliga värden."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Den här egenskapen har inte implementerats."
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "Inte implementerat."
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "<xref:Microsoft.Win32.CommonDialog.RunDialog*>för att visa en fildialogruta i en härledd klass som <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> och <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:Microsoft.Win32.CommonDialog.RunDialog*>"
  remarks: "Dialogrutan som visas så småningom är tilldelad ett ägt fönster som anges av den `hwndOwner` parameter."
  syntax:
    content: protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "Hantera till fönstret som äger dialogrutan."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren klickar på **OK** knappen i dialogrutan som visas (till exempel <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>), annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar en sträng som endast innehåller filnamnet för den valda filen."
  remarks: "Det här värdet är den <xref:Microsoft.Win32.FileDialog.FileName%2A>med alla sökvägsinformation tas bort.</xref:Microsoft.Win32.FileDialog.FileName%2A> Ta bort sökvägarna gör värdet lämplig för användning i program med partiellt förtroende eftersom den förhindrar att program identifiera information om det lokala filsystemet.       Om mer än ett filnamn är vald (längden på <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>är större än ett) sedan den här egenskapen innehåller endast det första markerade filnamnet.</xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>       Se [säker filöverföring från en XBAP exempel](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "En <xref:System.String>som endast innehåller filnamnet för den valda filen.</xref:System.String> Standardvärdet är <xref:System.String>, vilket är också värdet när ingen fil är markerad eller en katalog har valts.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar en matris som innehåller en säker filnamn för de markerade filerna."
  remarks: "Se <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.</xref:Microsoft.Win32.FileDialog.SafeFileName%2A>"
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "En matris med <xref:System.String>som innehåller en säker filnamn för de markerade filerna.</xref:System.String> Standardvärdet är en matris med ett enstaka objekt vars värde är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger texten som visas i namnlisten i en fildialogruta."
  remarks: "Om namnet är null eller <xref:System.String>standard lokaliserade värdet används, exempelvis &quot;Spara som&quot; eller &quot;Öppna&quot;.</xref:System.String>"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som är den text som visas i namnlisten i en fildialogruta.</xref:System.String> Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Returnerar en sträng som representerar en fildialogruta."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En <xref:System.String>representation av <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> som innehåller den fullständiga sökvägen för alla filer som valts från antingen <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Hämtar eller anger ett värde som anger om dialogrutan accepterar endast giltigt [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] filnamn."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om varningar visas när ett ogiltigt filnamn har angetts; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
