### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManagerParameter
  id: ClientBuildManagerParameter
  children:
  - System.Web.Compilation.ClientBuildManagerParameter.#ctor
  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  langs:
  - csharp
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
  type: Class
  summary: "Innehåller värden som skickades till ASP.NET-kompilatorn vid förkompilering."
  remarks: "ASP.NET-webbsidor och kodfiler kan förkompilerat för att underlätta snabbare svar för användare och Tillåt för distribution av webbplatsen utan att distribuera källkoden. Mer information om precompiling en ASP.NET-webbplats finns [översikt över ASP.NET Web Site projektet förkompilering](~/add/includes/ajax-current-ext-md.md).       Klassen ClientBuildManagerParameter lagrar värden som används vid förkompilering. Den <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>egenskapen bestämmer hur sammansättningen skapas.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Du kan till exempel ange <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>till <xref:System.Web.Compilation.PrecompilationFlags>till alla tidigare kompilerade komponenter kompileras eller anger <xref:System.Web.Compilation.PrecompilationFlags>att tillåta den resulterande sammansättningen att skriva över alla komponenter i målkatalogen.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Den <xref:System.Web.Compilation.PrecompilationFlags>uppräknaren har en <xref:System.FlagsAttribute>attribut som tillåter en bitvis kombination av medlemsvärdena.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> Den <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>egenskapen kan innehålla fler än ett värde från den <xref:System.Web.Compilation.PrecompilationFlags>uppräkningen för att ange en kombination av precompilation beteenden.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>       Antingen den <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>egenskapen eller <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>egenskapen tilldelas ett värde för att skapa en sammansättning med starkt krypterat namn.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Båda värdena behöver inte anges till att skapa en sammansättning med starkt krypterat namn.       Ett ClientBuildManagerParameter-objekt har överförts till den <xref:System.Web.Compilation.ClientBuildManager>objekt via den <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>konstruktor.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManager>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a ClientBuildManagerParameter object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/t-system.web.compilation_9_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/t-system.web.compilation_9_1.cs)]"
  syntax:
    content: public class ClientBuildManagerParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Compilation.ClientBuildManagerParameter&quot;> </xref> klass."
  remarks: "Den här konstruktorn initieras inte alla egenskapsvärden. Dessa värden måste anges via den <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, och <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>Egenskaper när objektet har skapats.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/m-system.web.compilation_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/m-system.web.compilation_1.cs)]"
  syntax:
    content: public ClientBuildManagerParameter ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  id: ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Hämtar eller anger inte virtuella sökvägar."
  syntax:
    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Undantagna virtuella sökvägar."
  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  id: PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Hämtar eller anger flaggor som bestämmer precompilation."
  remarks: "Egenskapen PrecompilationFlags bestämmer hur sammansättningen skapas. Du kan till exempel ange PrecompilationFlags <xref:System.Web.Compilation.PrecompilationFlags>till alla tidigare kompilerade komponenter kompileras eller anger <xref:System.Web.Compilation.PrecompilationFlags>att tillåta den resulterande sammansättningen att skriva över alla komponenter i målkatalogen.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> Den <xref:System.Web.Compilation.PrecompilationFlags>uppräknaren har en <xref:System.FlagsAttribute>attribut som tillåter en bitvis kombination av medlemsvärdena.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> Egenskapen PrecompilationFlags kan innehålla fler än ett värde från den <xref:System.Web.Compilation.PrecompilationFlags>uppräkningen för att ange en kombination av precompilation beteenden.</xref:System.Web.Compilation.PrecompilationFlags>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_3_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_3_1.cs)]"
  syntax:
    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }
    return:
      type: System.Web.Compilation.PrecompilationFlags
      description: "Den <xref href=&quot;System.Web.Compilation.PrecompilationFlags&quot;> </xref> för en version av klienten."
  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  id: StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Hämtar eller anger nyckelbehållaren används under kompilering."
  remarks: "Egenskapen StrongNameKeyContainer eller <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>egenskapen tilldelas ett värde för att skapa en sammansättning med starkt krypterat namn.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Båda värdena behöver inte anges till att skapa en sammansättning med starkt krypterat namn."
  example:
  - "The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-cs[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/csharp/p-system.web.compilation_1_1.cs)]\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/visualbasic/p-system.web.compilation_1_1.vb)]"
  syntax:
    content: public string StrongNameKeyContainer { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>av värdet för nyckelbehållaren.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  id: StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Hämtar eller anger nyckelfilen används under kompilering."
  remarks: "Antingen den <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>egenskapen eller egenskapen StrongNameKeyFile tilldelas ett värde för att skapa en sammansättning med starkt krypterat namn.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Båda värdena behöver inte anges till att skapa en sammansättning med starkt krypterat namn."
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_2_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_2_1.cs)]"
  syntax:
    content: public string StrongNameKeyFile { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>av värdet för nyckelfilen.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.PrecompilationFlags
  parent: System.Web.Compilation
  isExternal: false
  name: PrecompilationFlags
  nameWithType: PrecompilationFlags
  fullName: System.Web.Compilation.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
