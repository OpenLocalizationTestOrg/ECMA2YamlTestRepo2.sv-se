### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Representerar ett hanterat OracleBFile objekt som har utformats för att fungera med Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> datatyp. Den här klassen kan inte ärvas."
  remarks: "Oracle `BFILE` datatyp är en Oracle `LOB` datatyp som innehåller en referens till binära data med en maximal storlek på 4 GB. En Oracle `BFILE` skiljer sig från andra Oracle `LOB` datatyperna i att data lagras i en fysisk fil i operativsystemet i stället för på servern. Observera att den `BFILE` datatyp tillhandahåller skrivskyddad åtkomst till data. Därför skriva indatavärdena metoder ärvs från den <xref:System.IO.Stream>klass stöds inte.</xref:System.IO.Stream>       Andra egenskaper hos en `BFILE` datatyp som skiljer den från en `LOB` datatyp är att den:-innehåller Ostrukturerade data.      -Stöd för serversidan högoptimerat.      -Använder referera kopiera semantik. Om du utför en kopieringsåtgärd på till exempel en `BFILE`, endast den `BFILE` kopieras lokaliserare (som är en referens till filen). Data i filen kopieras inte.       Den `BFILE` datatyp som ska användas för att referera till `LOB`s stor storlek, och därför inte praktiskt att lagra i databasen. Finns på klienten, servern och kommunikation kostnader för att använda en `BFILE` datatyp jämfört med den `LOB` datatyp. Det är mer effektivt att komma åt en `BFILE` om du behöver skaffa en liten mängd data. Är det mer effektivt att få åtkomst till databasen kommande `LOB`s om du behöver hämta hela objektet.       Varje icke - NULL OracleBFile-objekt är associerat med två entiteter som definierar platsen för den underliggande fysiska filen:-en Oracle-DIRECTORY-objektet, vilket är en databasalias för en katalog i filsystemet, och -filnamnet för den underliggande fysiska filen som finns i katalogen som är associerade med katalogobjektet.       När en `BFILE` är skapat kan du hämta dess lokaliserare i form av ett objekt med OracleBFile hjälp i <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>eller <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>metoder.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       För att få ett OracleBFile-objekt kan anropa den <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>metoden.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       Den fysiska filen som en OracleBFile-objektet är associerat med behöver inte finnas innan du försöker komma åt den. Ett program kan binda ett OracleBFile till en fil som inte finns, skapa den fysiska filen på den förväntade platsen och sedan anropa <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Om du försöker att komma åt en stängd OracleBFile med hjälp av den <xref:System.Data.OracleClient.OracleBFile.Read%2A>eller <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metoder som öppnar en ny en OracleBFile dataström automatiskt.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       C# exemplet nedan visar hur du skapar en `BFILE` i en Oracle tabell och hämta det i form av ett OracleBFile-objekt. Exemplet visar användningen av den <xref:System.Data.OracleClient.OracleDataReader>objekt och OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> och <xref:System.Data.OracleClient.OracleBFile.Read%2A>metoder.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] för mer information om hur du skapar och använder en Oracle `BFILE`, finns i lämplig i Oracle-dokumentationen.      > [!NOTE] > Den `BeginWrite`, `EndWrite`, och `WriteByte` metoder som ärvs från den `System.IO.Stream` klassen, stöds inte eftersom den `BFILE` datatyp är skrivskyddad."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om den <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> att läsa dataströmmen."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Om en <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> är stängt eller Borttaget, annars <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om sökning framåt och bakåt-sökningsåtgärder kan utföras."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Om en <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> är stängt eller Borttaget, annars <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om objektet har stöd för skrivning."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> eftersom Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> datatyp är skrivskyddad."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Skapar en kopia av detta <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt som är kopplade till samma fysiska fil som originalet."
  remarks: "Egenskaperna för den nya <xref:System.Data.OracleClient.OracleBFile>objektet ursprungligen har samma värden som det ursprungliga objektet.</xref:System.Data.OracleClient.OracleBFile> Men när klonen är klar varje <xref:System.Data.OracleClient.OracleBFile>objektet är oberoende av den andra.</xref:System.Data.OracleClient.OracleBFile> Ändra exempelvis värdet för den <xref:System.Data.OracleClient.OracleBFile.Position%2A>egenskapen på ursprungligt <xref:System.Data.OracleClient.OracleBFile>ändras inte värdet för <xref:System.Data.OracleClient.OracleBFile.Position%2A>kopian.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt som är kopplade till samma fysiska fil som ursprungligt <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objekt."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar den <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> används av den här instansen av den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "Anslutning till en datakälla. Standardvärdet är ett null-värde."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopierar hela innehållet i det här <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> till början av ett mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "De underliggande datatyperna på källan <xref:System.Data.OracleClient.OracleBFile>och mål <xref:System.Data.OracleClient.OracleLob>måste vara kompatibel.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Du kan till exempel kopiera binära data till ett mål <xref:System.Data.OracleClient.OracleLob>som har datatypen tecken.</xref:System.Data.OracleClient.OracleLob>       Du måste ha skrivbehörighet till målet <xref:System.Data.OracleClient.OracleLob>CopyTo åtgärden utförs korrekt.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Målet<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "Antal byte som kopieras."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Målet <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> är en referens för null-objekt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Målet är null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - eller - anslutning med där den här <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associeras är stängd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopierar hela innehållet i det här <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> till ett mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> med angiven förskjutning."
  remarks: "De underliggande datatyperna på källan <xref:System.Data.OracleClient.OracleBFile>och mål <xref:System.Data.OracleClient.OracleLob>måste vara kompatibel.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Du kan till exempel kopiera binära data till ett mål <xref:System.Data.OracleClient.OracleLob>som har datatypen tecken.</xref:System.Data.OracleClient.OracleLob>       Du måste ha skrivbehörighet till målet <xref:System.Data.OracleClient.OracleLob>för den <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>åtgärden att köra korrekt.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Målet <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Förskjutningen som ska kopieras."
    return:
      type: System.Int64
      description: "Antal byte som kopieras."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Målet <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> är en referens för null-objekt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Målet är null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - eller - anslutning med där den här <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associeras är stängd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopior från den här <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> till ett mål <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> med den angivna mängden data, förskjutningen källa och mål-offset."
  remarks: "De underliggande datatyperna på källan <xref:System.Data.OracleClient.OracleBFile>och mål <xref:System.Data.OracleClient.OracleLob>måste vara kompatibel.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Du kan till exempel kopiera binära data till ett mål <xref:System.Data.OracleClient.OracleLob>som har datatypen tecken.</xref:System.Data.OracleClient.OracleLob>       Du måste ha skrivbehörighet till målet <xref:System.Data.OracleClient.OracleLob>för den <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>åtgärden att köra korrekt.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Förskjutning från som ska kopieras."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Målet <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Förskjutningen som ska kopieras."
    - id: amount
      type: System.Int64
      description: "Mängden data i byte, för att kopiera."
    return:
      type: System.Int64
      description: "Antal byte som kopieras."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för parametern beloppet är mindre än noll eller större än 4 GB."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Målet <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> är en referens för null-objekt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Målet är null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - eller - anslutning med där den här <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> associeras är stängd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar namnet på katalogobjekt som en <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt är associerat."
  remarks: "Varje icke-NULL <xref:System.Data.OracleClient.OracleBFile>objekt är associerat med två entiteter som definierar platsen för underliggande fysisk fil:-en Oracle-DIRECTORY-objektet, vilket är en databasalias för en katalog i filsystemet, och -filnamnet för den underliggande fysiska filen som finns i katalogen som är associerade med katalogobjektet.</xref:System.Data.OracleClient.OracleBFile>       Egenskapen DirectoryName Returnerar namnet på katalogobjektet från Oracle-databasen.       Mer information om hur du skapar och använder en Oracle `BFILE`, finns i lämplig i Oracle-dokumentationen."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Namnet på katalogobjektet."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det gjordes ett försök att anropa <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> på en stängd eller tagits bort <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> objekt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om en fysisk fil som innehåller <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> data finns i operativsystemet."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en fysisk fil som innehåller <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> data finns; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objektet har stängts eller tagits bort."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen som en <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associeras är stängd."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar namnet på den <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> utan sökvägen."
  remarks: "För <xref:System.Data.OracleClient.OracleBFile.Null>, returneras en tom sträng.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "Namnet på BFILE."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Stöds inte för närvarande."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> är en <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> dataströmmen."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som returnerar längden i byte på den fysiska filen som den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt är associerat."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Ett långt värde som representerar längden på den fysiska filen i byte."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoder har anropas när dataströmmen har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representerar ett null-värde <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt som inte är bunden till en fysisk fil."
  remarks: "Null kan vara användbart när du vill utföra en jämförelse med ett <xref:System.Data.OracleClient.OracleBFile>att fastställa Nullbarheten.</xref:System.Data.OracleClient.OracleBFile>       Alla försök att utföra en Läsåtgärd på ett Null-objekt lyckas, men returnerar inte några data. Alla försök att utföra en skrivåtgärd på ett Null-objekt genereras ett undantag. Att välja en `BFILE` kolumn som innehåller ett null-värde returnerar Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar den aktuella läsa position i den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dataströmmen."
  remarks: "Sökning till en annan plats utanför längden på dataströmmen stöds inte.       Den `Position` egenskapen inte hålla reda på hur många byte från dataströmmen har förbrukats hoppas över, eller båda."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Aktuell position i den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dataströmmen."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det gjordes ett försök att ange en position negativt eller större än längden på dataströmmen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoder har anropas när dataströmmen har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Läser en sekvens med byte från aktuellt <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dataströmmen och förskott läsa position i dataströmmen med antalet byte."
  remarks: "Metoden Read läsa maximalt `count` byte från aktuellt strömma och lagra dem i `buffer` början på `offset`. Aktuell position i dataströmmen är en avancerad med antalet byte; läsa. men om ett undantag inträffar ändras aktuell position i dataströmmen inte. Läs returnerar antalet lästa byte. Det returnera värdet är noll endast om positionen är för närvarande i slutet av dataströmmen. Läs blockerar förrän minst ett byte av data kan läsas i händelse av att inga data är tillgängliga. Skrivskydd returnerar 0 vid slutet av filen har nåtts. Läs är gratis att returnera färre byte än begärda även om slutet på dataströmmen har överskridits.       Om du försöker att komma åt en stängd <xref:System.Data.OracleClient.OracleBFile>med läsningen eller <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metoder som öppnar en ny en <xref:System.Data.OracleClient.OracleBFile>strömma automatiskt.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       Följande C#-exempel förutsätter schemat i en tabell med Oracle: ```   (col1 number, col2 BFILE)   ``` exemplet visas hur du använder Läs och <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metoder för att komma åt en <xref:System.Data.OracleClient.OracleBFile>objektet.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En matris med byte. När den här metoden returnerar bufferten innehåller den angivna byte-matrisen med värden mellan `offset` och (`offset` + `count`) ersättas med byte som läses från den aktuella källan."
    - id: offset
      type: System.Int32
      description: "Nollbaserade byte-förskjutning i `buffer` som du vill börja lagra data läses från den aktuella dataströmmen."
    - id: count
      type: System.Int32
      description: "Maximalt antal byte som ska läsas från den aktuella dataströmmen."
    return:
      type: System.Int32
      description: "Läsa in det totala antalet byte i bufferten. Detta kan vara mindre än antalet byte på begäran om att många byte är inte tillgängliga eller noll om i slutet av filen har nåtts."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Summan av <code> offset </code> och <code> count </code> är större än buffertens längd."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>count</code> är negativt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen som en <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> associeras är stängd."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoder har anropas när dataströmmen har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Anger positionen för aktuellt <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> dataströmmen."
  remarks: "Om `offset` är negativt, en ny plats krävs före positionen som anges av `origin` med antalet byte som anges av `offset`. Om `offset` är noll, en ny plats krävs för att den positionen som anges av `origin`. Om `offset` är positivt, en ny plats krävs för att följa den positionen som anges av `origin` med antalet byte som anges av `offset`.       Sökning till en annan plats utanför längden på dataströmmen stöds inte.       Om du försöker att komma åt en stängd <xref:System.Data.OracleClient.OracleBFile>med hjälp av den <xref:System.Data.OracleClient.OracleBFile.Read%2A>eller söka metoder som öppnar en ny en <xref:System.Data.OracleClient.OracleBFile>strömma automatiskt.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       Följande C#-exempel förutsätter schemat i en tabell med Oracle: ```   (col1 number, col2 BFILE)   ``` exemplet visas hur du använder den <xref:System.Data.OracleClient.OracleBFile.Read%2A>och söka metoder för att komma åt en <xref:System.Data.OracleClient.OracleBFile>objektet.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "En byte-förskjutning i förhållande till ursprunget. Om `offset` är negativt, den nya platsen kommer föregå positionen som anges av `origin` med antalet byte som anges av `offset`. Om `offset` är noll, den nya platsen kommer att placeringen som angetts av `origin`. Om `offset` är positivt, den nya positionen följer positionen som anges av `origin` med antalet byte som anges av `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Ett värde av typen <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> som anger referenspunkten för att hämta den nya platsen."
    return:
      type: System.Int64
      description: "Ny plats i den aktuella dataströmmen."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det gjordes ett försök att ange en position negativt eller större än längden på dataströmmen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoder har anropas när dataströmmen har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Binder den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objekt till en annan fil i operativsystemet."
  remarks: "SetFileName-åtgärden måste utföras inom en transaktion ska lyckas. Anropa bara SetFileName på en `BFILE` associerar den <xref:System.Data.OracleClient.OracleBFile>objekt med en annan fil, men uppdaterar inte tabellen Oracle.</xref:System.Data.OracleClient.OracleBFile> För att uppdatera Oracle-tabellen när du anropar SetFileName, måste du anropa den `Update` metod för den <xref:System.Data.OracleClient.OracleDataAdapter>och genomföra transaktionen.</xref:System.Data.OracleClient.OracleDataAdapter>       När du hämtar den <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>eller <xref:System.Data.OracleClient.OracleBFile.FileName%2A>egenskapen de cachelagras i det <xref:System.Data.OracleClient.OracleBFile>objektet och påverkas inte av någon klonas <xref:System.Data.OracleClient.OracleBFile>objektens anrop till SetFileName eller av ändringar i `BFILE` i databasen.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Med andra ord kan de inte representerar de faktiska värdena för den `BFILE` objekt på servern.       Dessutom hämtning av antingen egenskapen (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> eller <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) medför både egenskapsvärden hämtas från servern och cachelagras i det <xref:System.Data.OracleClient.OracleBFile>objektet.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       Följande C#-exempel förutsätter schemat i en tabell med Oracle: ```   (col1 number, col2 BFILE)   ``` exemplet visas hur du använder SetFileName <xref:System.Data.OracleClient.OracleBFile.Read%2A>och <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metoder för att komma åt en <xref:System.Data.OracleClient.OracleBFile>objektet.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "Alias för objekt som innehåller en fysisk fil."
    - id: file
      type: System.String
      description: "Namnet på filen i operativsystemet."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden måste utföras inom en transaktion."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Stöds inte för närvarande."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Stöds inte för närvarande."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Undantag som utlöses när en anropad metod inte stöds, eller när det finns ett försök att läsa, söka efter eller skriva till en dataström som inte stöder den anropade funktionen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar en <xref:System.Array>av typen <xref:System.Byte>som innehåller den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> data.</xref:System.Byte> </xref:System.Array>"
  remarks: "Egenskapen Value läser hela `BFILE` i taget.      > [!NOTE] > En fördel med `BFILE`är möjlighet att hämta stora mängder data i block på klienten. När du använder värdet får du emellertid alla data för kolumnen BFILE som ett sammanhängande segment, vilket kan avsevärt öka programmet kostnader."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "En <xref:System.Array>av typen <xref:System.Byte>som innehåller den <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> data.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Stöds inte för närvarande."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Stöds inte för närvarande."
    - id: offset
      type: System.Int32
      description: "Stöds inte för närvarande."
    - id: count
      type: System.Int32
      description: "Stöds inte för närvarande."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Undantag som utlöses när en anropad metod inte stöds, eller när det finns ett försök att läsa, söka efter eller skriva till en dataström som inte stöder den anropade funktionen."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
