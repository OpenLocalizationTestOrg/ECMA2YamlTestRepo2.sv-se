### YamlMime:ManagedReference
items:
- uid: System.Transactions.DependentTransaction
  id: DependentTransaction
  children:
  - System.Transactions.DependentTransaction.Complete
  langs:
  - csharp
  name: DependentTransaction
  nameWithType: DependentTransaction
  fullName: System.Transactions.DependentTransaction
  type: Class
  summary: "Beskriver en klon av en transaktion som ger en garanti för att transaktionen kan inte verkställas förrän programmet kommer att rest om arbetsobjekt för transaktionen. Den här klassen kan inte ärvas."
  remarks: "DependentTransaction är en klon av en <xref:System.Transactions.Transaction>objekt som skapas med hjälp av den <xref:System.Transactions.Transaction.DependentClone%2A>metoden.</xref:System.Transactions.Transaction.DependentClone%2A> </xref:System.Transactions.Transaction>  Det enda syftet är att programmet kan komma att vila och garanterar att transaktionen inte kan användas vid arbete utförs fortfarande på transaktion (till exempel på en arbetstråd).       När arbetet som utförs i den klonade transaktionen slutligen är klar och kan inte bekräftas den underrätta skapare av en transaktion med hjälp av den <xref:System.Transactions.DependentTransaction.Complete%2A>metoden.</xref:System.Transactions.DependentTransaction.Complete%2A> Därför kan du bevara konsekvent och data är korrekt.       Den <xref:System.Transactions.DependentCloneOption>uppräkningen används för att bestämma beteendet på commit.</xref:System.Transactions.DependentCloneOption>  Det här beteendet kontrollen kan ett program att komma till resten samt samtidighet stöder. Mer information om hur du använder den här uppräkningen för att se [hantera samtidighet med DependentTransaction](http://msdn.microsoft.com/en-us/bdad8468-2a90-4b81-8375-278067120cab)."
  example:
  - "The following example shows you how to create a dependent transaction.  \n  \n [!code-vb[Tx_DependentTx#1](~/add/codesnippet/visualbasic/t-system.transactions.de_0_1.vb)]\n [!code-cs[Tx_DependentTx#1](~/add/codesnippet/csharp/t-system.transactions.de_0_1.cs)]"
  syntax:
    content: 'public sealed class DependentTransaction : System.Transactions.Transaction'
  inheritance:
  - System.Object
  - System.Transactions.Transaction
  implements: []
  inheritedMembers:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  platform:
  - net462
- uid: System.Transactions.DependentTransaction.Complete
  id: Complete
  parent: System.Transactions.DependentTransaction
  langs:
  - csharp
  name: Complete()
  nameWithType: DependentTransaction.Complete()
  fullName: System.Transactions.DependentTransaction.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Försök att slutföra beroende transaktionen."
  remarks: "Anropa den här metoden när beroende klonen vill meddela skapare av transaktionen att arbetet är klar och transaktionen inte kan verkställas om överordnat också är klar.       Du bör inte några ytterligare arbetsobjekt för transaktionen eller genereras ett undantag när anropet har anropats.       Om programdomänen kraschar när den här metoden anropas och innan transaktionen är klar transaktionen kan avbryta.       **Obs** den här metoden ska bara anropas en gång under beroende transaktionen livslängd."
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.DependentTransaction.Complete*
  exceptions:
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "Alla försök för mer arbete för transaktion när den här metoden anropas. Dessa inkluderar anropar metoder som <> </> *>, <> </> *>, <> </> *>, <> </> *>, eller några serialiseringsåtgärder i transaktionen."
  platform:
  - net462
references:
- uid: System.Transactions.Transaction
  isExternal: false
  name: System.Transactions.Transaction
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.Transactions.DependentTransaction.Complete
  parent: System.Transactions.DependentTransaction
  isExternal: false
  name: Complete()
  nameWithType: DependentTransaction.Complete()
  fullName: System.Transactions.DependentTransaction.Complete()
- uid: System.Transactions.DependentTransaction.Complete*
  parent: System.Transactions.DependentTransaction
  isExternal: false
  name: Complete
  nameWithType: DependentTransaction.Complete
