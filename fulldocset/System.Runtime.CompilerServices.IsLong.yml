### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.IsLong
  id: IsLong
  children: []
  langs:
  - csharp
  name: IsLong
  nameWithType: IsLong
  fullName: System.Runtime.CompilerServices.IsLong
  type: Class
  summary: "Anger att ändrade heltal är en standard C++ <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> värde. Den här klassen kan inte ärvas."
  remarks: "C++ standard indikerar att en `long` värde och ett heltalsvärde är olika typer.  Men de båda representeras med `ELEMENT_TYPE_I4` i en sammansättning.  Att skilja mellan en `long` från ett heltal i C++ läggs Microsoft C++-kompilatorn IsLong modifieraren till valfri instans av en `long` när instansen är emited.  Det är ytterst viktigt för att bibehålla säkra språknivå typer.       Kompilerare genererar anpassade modifierare i metadata för att ändra hanteringen av just-in-time (JIT) kompileraren värden när standardbeteendet inte är lämpligt.  När JIT-kompilatorn påträffar en anpassad modifierare, hanterar värdet på det sätt som modifieraren anger.  Kompilerare kan använda anpassade modifierare till metoder, parametrar och returvärden.  JIT-kompilatorn måste svara på krävs modifierare men kan ignorera valfria modifierare.       Du kan skapa anpassade modifierare i metadata med hjälp av en av följande metoder:-metoder i den <xref:System.Reflection.Emit.TypeBuilder>klassen som <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, och <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder>      -Genererar en fil av Microsoft mellanliggande språk (MSIL)-instruktion som innehåller anrop till `modopt` och `modreq`, och montera filen med den [Ilasm.exe (IL Assembler)](~/add/includes/ajax-current-ext-md.md).      -Med ohanterad reflektion API."
  example:
  - "The following example demonstrates how to emit an IsLong object into an assembly using reflection.  \n  \n [!code-cpp[Runtime.CompilerServices.IsLong#1](~/add/codesnippet/cpp/t-system.runtime.compile_11_1.cpp)]"
  syntax:
    content: public static class IsLong
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
