### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSACng
  id: DSACng
  children:
  - System.Security.Cryptography.DSACng.#ctor
  - System.Security.Cryptography.DSACng.#ctor(System.Int32)
  - System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  - System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  - System.Security.Cryptography.DSACng.Key
  - System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  - System.Security.Cryptography.DSACng.LegalKeySizes
  - System.Security.Cryptography.DSACng.SignatureAlgorithm
  - System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: DSACng
  nameWithType: DSACng
  fullName: System.Security.Cryptography.DSACng
  type: Class
  summary: "Tillhandahåller kryptering med nästa Generations-implementering av DSA Digital Signature Algorithm ()."
  syntax:
    content: 'public sealed class DSACng : System.Security.Cryptography.DSA'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.DSA
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.DSA.Create
  - System.Security.Cryptography.DSA.Create(System.String)
  - System.Security.Cryptography.DSA.FromXmlString(System.String)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng()
  nameWithType: DSACng.DSACng()
  fullName: System.Security.Cryptography.DSACng.DSACng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.DSACng&quot;> </xref> klass med en slumpmässig nyckel 2 048-bitars."
  syntax:
    content: public DSACng ();
    parameters: []
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng(Int32)
  nameWithType: DSACng.DSACng(Int32)
  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.DSACng&quot;> </xref> klassen med en slumpmässigt genererad nyckel för den angivna storleken."
  remarks: "Viktiga storleken mellan 512 till 3 072 bitar i steg om 64. Vi rekommenderar att en minsta storlek på 2 048 bitar används för alla nycklar."
  syntax:
    content: public DSACng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "Storleken på nyckeln som ska generera i bitar."
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code>är inte giltig."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng(CngKey)
  nameWithType: DSACng.DSACng(CngKey)
  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.DSACng&quot;> </xref> klass med den angivna nyckeln."
  remarks: "Den <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>av `key` måste vara <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName>       Den här konstruktorn skapar en kopia av nyckeln. Även om `key` har tagits bort, kopia av det här nyckelobjektet i DSA förblir aktiv."
  syntax:
    content: public DSACng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "Nyckeln som ska användas för DSA-åtgärder."
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>är inte en giltig DSA-nyckel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: DSACng.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Skapar den digitala signaturen för angivna data."
  syntax:
    content: public override byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Data som ska signeras."
    return:
      type: System.Byte[]
      description: "Den digitala signaturen för angivna data."
  overload: System.Security.Cryptography.DSACng.CreateSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbHash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<code>rgbHash</code>är kortare än Q-värdet för DSA-nyckeln."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Security.Cryptography.DSACng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: DSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Exporterar de algoritmen DSA-parametrarna."
  syntax:
    content: public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att inkludera privata parametrar. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.DSAParameters
      description: "Parametrarna DSA-algoritm."
  overload: System.Security.Cryptography.DSACng.ExportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "DSA-nyckeln är inte en giltig offentlig eller privat nyckel."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Som ska läggas till."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som ska läggas till."
    return:
      type: System.Byte[]
      description: "Som ska läggas till."
  overload: System.Security.Cryptography.DSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Som ska läggas till."
    - id: offset
      type: System.Int32
      description: "Som ska läggas till."
    - id: count
      type: System.Int32
      description: "Som ska läggas till."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Som ska läggas till."
    return:
      type: System.Byte[]
      description: "Som ska läggas till."
  overload: System.Security.Cryptography.DSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  id: ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: ImportParameters(DSAParameters)
  nameWithType: DSACng.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ersätter den befintliga nyckeln som den aktuella instansen fungerar med genom att skapa en ny <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> för parametrarna-strukturen."
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.DSAParameters
      description: "DSA-parametrarna."
  overload: System.Security.Cryptography.DSACng.ImportParameters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "De angivna DSA-parametrarna är inte giltiga."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.Key
  id: Key
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: Key
  nameWithType: DSACng.Key
  fullName: System.Security.Cryptography.DSACng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar den nyckel som ska användas av den <xref href=&quot;System.Security.Cryptography.DSACng&quot;> </xref> objekt för kryptografiska åtgärder som utförs."
  remarks: "Den <xref:System.Security.Cryptography.CngKey>objektet har tagits bort om nyckeln återställs, till exempel genom att ändra den <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName>egenskapen med hjälp av den <xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=fullName>metoden för att skapa en ny nyckel eller avgör överordnat <xref:System.Security.Cryptography.DSACng>objektet.</xref:System.Security.Cryptography.DSACng> </xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> </xref:System.Security.Cryptography.CngKey> Därför bör du kontrollera att nyckelobjektet används inte längre i dessa fall.       Detta <xref:System.Security.Cryptography.CngKey>objektet är inte samma som den <xref:System.Security.Cryptography.CngKey>objekt har överförts till den <xref:System.Security.Cryptography.DSACng.%23ctor%2A>konstruktor, om den konstruktorn har använts.</xref:System.Security.Cryptography.DSACng.%23ctor%2A> </xref:System.Security.Cryptography.CngKey> </xref:System.Security.Cryptography.CngKey> Men pekar den till samma CNG-nyckel."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "Den nyckel som används av den <xref href=&quot;System.Security.Cryptography.DSACng&quot;> </xref> objekt som utför kryptografiska åtgärder."
  overload: System.Security.Cryptography.DSACng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar namnet på nyckelutbytesalgoritmen."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
  fullName: System.Security.Cryptography.DSACng.LegalKeySizes
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar storleken som nyckel i bitar som stöds av algoritmen DSA."
  syntax:
    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "En matris som innehåller viktiga storlekar som stöds av algoritmen."
  overload: System.Security.Cryptography.DSACng.LegalKeySizes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Hämtar namnet på signaturalgoritmen."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Strängen &quot;DSA&quot;."
  overload: System.Security.Cryptography.DSACng.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSACng.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Kontrollerar om den angivna digitala signaturen som matchar angivna data."
  syntax:
    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Signerade data."
    - id: rgbSignature
      type: System.Byte[]
      description: "Den digitala signaturen verifieras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> rgbSignature </code> matchar signaturen som beräknats med angivna data; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DSACng.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<code>rgbHash</code>är kortare än Q-värdet för DSA-nyckeln."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DSA
  isExternal: false
  name: System.Security.Cryptography.DSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.DSACng.#ctor
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng()
  nameWithType: DSACng.DSACng()
  fullName: System.Security.Cryptography.DSACng.DSACng()
- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng(Int32)
  nameWithType: DSACng.DSACng(Int32)
  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng(CngKey)
  nameWithType: DSACng.DSACng(CngKey)
  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: DSACng.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: DSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)
- uid: System.Security.Cryptography.DSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: DSAParameters
  nameWithType: DSAParameters
  fullName: System.Security.Cryptography.DSAParameters
- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ImportParameters(DSAParameters)
  nameWithType: DSACng.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)
- uid: System.Security.Cryptography.DSACng.Key
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Key
  nameWithType: DSACng.Key
  fullName: System.Security.Cryptography.DSACng.Key
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSACng.LegalKeySizes
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
  fullName: System.Security.Cryptography.DSACng.LegalKeySizes
- uid: System.Security.Cryptography.KeySizes[]
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: KeySizes[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSACng.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])
- uid: System.Security.Cryptography.DSACng.#ctor*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng
  nameWithType: DSACng.DSACng
- uid: System.Security.Cryptography.DSACng.CreateSignature*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: CreateSignature
  nameWithType: DSACng.CreateSignature
- uid: System.Security.Cryptography.DSACng.Dispose*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Dispose
  nameWithType: DSACng.Dispose
- uid: System.Security.Cryptography.DSACng.ExportParameters*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ExportParameters
  nameWithType: DSACng.ExportParameters
- uid: System.Security.Cryptography.DSACng.HashData*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData
  nameWithType: DSACng.HashData
- uid: System.Security.Cryptography.DSACng.ImportParameters*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ImportParameters
  nameWithType: DSACng.ImportParameters
- uid: System.Security.Cryptography.DSACng.Key*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Key
  nameWithType: DSACng.Key
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.DSACng.LegalKeySizes*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.DSACng.VerifySignature*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: VerifySignature
  nameWithType: DSACng.VerifySignature
