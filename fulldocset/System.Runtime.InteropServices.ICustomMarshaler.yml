### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ICustomMarshaler
  id: ICustomMarshaler
  children:
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  - System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  langs:
  - csharp
  name: ICustomMarshaler
  nameWithType: ICustomMarshaler
  fullName: System.Runtime.InteropServices.ICustomMarshaler
  type: Interface
  summary: "Ger anpassad omslutningar för hantering av metodanrop."
  remarks: "En konverterare ger en brygga mellan funktionen gamla och nya gränssnitt. Anpassade omordning ger följande fördelar:-Det gör det möjligt för program som har utformats för att arbeta med ett gamla gränssnitt till också fungera med servrar som implementerar ett nytt gränssnitt.      – Det gör det möjligt för program för att arbeta med ett nytt gränssnitt att arbeta med servrar som implementerar ett gamla gränssnitt.       Om du har ett gränssnitt som introducerar olika omordnande beteenden, eller som är exponerad för av Component Object Model (COM) på ett annat sätt kan utforma du en anpassad konverterare i stället för interop-konverteraren. Du kan minimera åtskillnad mellan nya .NET Framework-komponenter och befintliga COM-komponenter med hjälp av en anpassad konverterare.       Anta exempelvis att du utvecklar ett hanterade gränssnitt som heter `INew`. Om det här gränssnittet är exponerad för COM via en standard COM callable wrapper (CCW), har samma metoder som det hanterade gränssnittet och använder omordnande regler som är inbyggda i interop-konverteraren. Anta nu att ett välkänt COM-gränssnitt för `IOld` redan fungerar på samma sätt som den `INew` gränssnitt. Designa en anpassad konverterare får tillgång till en ohanterad implementering av `IOld` som helt enkelt delegerar anrop till den hantera implementeringen av den `INew` gränssnitt. Den anpassade konverteraren fungerar därför som en brygga mellan hanterade och ohanterade gränssnitten.      > [!NOTE] > Anpassad konverterare inte anropas när anrop från hanterad kod till ohanterad kod i en endast dispatch-gränssnitt.      ## Definiera den att konvertera typen innan du kan skapa en anpassad konverterare, måste du definiera hanterade och ohanterade gränssnitten som ska konverteras. Dessa gränssnitt ofta utför samma funktion, men exponeras inte på samma sätt för hanterade och ohanterade objekt.       En hanterad kompilator genererar ett hanterade gränssnitt från metadata och resulterande gränssnittet ser ut som hanterade gränssnittet. I följande exempel visas en typisk gränssnitt.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/cpp/t-system.runtime.interop_8_1.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/csharp/t-system.runtime.interop_8_1.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_1.vb) ] du definierar den ohanterade typen i Interface Definition Language (IDL) och kompilera med Microsoft Interface Definition Language (MIDL)-kompilatorn.     Definiera gränssnittet i en instruktion i biblioteket och tilldela den ett gränssnitts-ID med attributet universal unik identifierare (UUID), som exemplet nedan visar.      ```    [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library OldLib {        [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]        interface IOld : IUnknown            HRESULT OldMethod();   }   ```Kompilatorn MIDL ger flera utgående filer. Om gränssnittet är definierad i Old.idl, utdatafilen Old_i.c definierar en `const` variabel med gränssnittet-ID (IID) för gränssnittet, som exemplet nedan visar.      ```   const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};   ```Filen Old.h skapas också av MIDL. Den innehåller en definition av C++ på gränssnittet som kan ingå i källkoden C++.      ## Implementera ICustomMarshaler gränssnittet din anpassade konverteraren måste implementera gränssnittet ICustomMarshaler för att tillhandahålla rätt omslutningar körningstillstånd.       Följande C#-kod visar det grundläggande gränssnittet som måste implementeras av alla anpassade konverterare.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/cpp/t-system.runtime.interop_8_2.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/csharp/t-system.runtime.interop_8_2.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_2.vb) ] gränssnittet ICustomMarshaler som den innehåller metoder för att ge stöd för konvertering, stöd för rensning och information om data som ska konverteras.          | Typ av åtgärd | ICustomMarshaler metoden | Beskrivning |   |-----------------------|-----------------------------|-----------------|   | Konvertering (från inbyggda till förvaltad kod) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>| Marshals en pekare till interna data till ett hanterat objekt.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> Den här metoden returnerar en anpassad runtime callable wrapper (RCW) som kan konvertera det ohanterade gränssnitt som skickas som ett argument. Konverteraren ska returnera en instans av anpassade RCW för den typen. |   | Konvertera (Native kod) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>| Marshals ett hanterat objekt i en pekare till egna data.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> Den här metoden returnerar en anpassad COM callable wrapper (CCW) som kan konvertera det hanterade gränssnittet som skickas som ett argument. Konverteraren ska returnera en instans av anpassade CCW för den typen. |   | Rensa (för intern kod) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>| Aktiverar konverteraren att rensa upp egna data (CCW) som returneras av metoden <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>. |   | Rensa (av förvaltad kod) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>| Aktiverar konverteraren Rensa hanterade data (RCW) som returneras av metoden <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>. |   | Information (om maskinkod) | <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>| Returnerar storleken på ohanterade data som ska konverteras. |      ### Konvertering <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName>Marshals en pekare till interna data till ett hanterat objekt.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName> </xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A> Den här metoden returnerar en anpassad runtime callable wrapper (RCW) som kan konvertera det ohanterade gränssnitt som skickas som ett argument. Konverteraren ska returnera en instans av anpassade RCW för den typen.       <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName>Marshals ett hanterat objekt i en pekare till egna data.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName> Den här metoden returnerar en anpassad COM callable wrapper (CCW) som kan konvertera det hanterade gränssnittet som skickas som ett argument. Konverteraren ska returnera en instans av anpassade CCW för den typen.      ### Rensa <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>aktiverar konverteraren att rensa upp egna data (CCW) som returneras av den <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>metoden.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>       <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>Aktiverar konverteraren Rensa hanterade data (RCW) som returneras av den <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>metoden.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A></xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>      ### Storleken Information <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>returnerar storleken på ohanterade data som ska konverteras.</xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>      ## Implementera GetInstance-metod implementerar gränssnittet ICustomMarshaler anpassade konverterare måste implementera en `static` anropade metoden `GetInstance` som accepterar en <xref:System.String>som en parameter och har en returtyp av ICustomMarshaler.</xref:System.String> Detta `static` metoden anropas av den CLR COM interop-lagret för att skapa en instans av en instans av den anpassade konverteraren. Strängen som skickas till `GetInstance` är en cookie som använder metoden för att anpassa den returnerade anpassade konverteraren.      ```   static ICustomMarshaler *GetInstance(String *pstrCookie);   ```## Tillämpa MarshalAsAttribute att använda en anpassad konverterare, måste du installera den <xref:System.Runtime.InteropServices.MarshalAsAttribute>attribut till parametern eller fält som är att konverteras.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       Måste du också ange den <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>uppräkningsvärdet till den <xref:System.Runtime.InteropServices.MarshalAsAttribute>konstruktor.</xref:System.Runtime.InteropServices.MarshalAsAttribute> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> Dessutom måste du ange den <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>med något av följande namngivna parametrarna:- <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>(krävs): sammansättningen kvalificerade namnet på den anpassade konverteraren.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> Namnet får innehålla namnområde och klass för den anpassade konverteraren. Om den anpassade konverteraren inte har definierats i sammansättningen som den används i, måste du ange namnet på den sammansättning som den definieras.          > [!NOTE] > Du kan använda den <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>fältet i stället för den <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>fält.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>tar en typ som är enklare att ange.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>      - <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie>(valfritt): en cookie som skickas till den anpassade konverteraren.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> Du kan använda cookien för att ge ytterligare information till konverteraren. Om samma konverteraren används för att tillhandahålla ett antal omslutningar, identifierar cookien en specifik omslutning. Cookien skickas till den `GetInstance` metod för konverteraren.       Den <xref:System.Runtime.InteropServices.MarshalAsAttribute>attributet identifierar den anpassade konverteraren så att den kan aktivera lämpliga omslutning.</xref:System.Runtime.InteropServices.MarshalAsAttribute> Den CLR-interop tjänsten sedan undersöker attributet och skapar anpassade konverteraren första gången argument (parameter eller fält) som behöver konverteras.       Körningen anropar sedan den <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>och <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>metoderna för den anpassade konverteraren aktivera rätt Omslutning för att hantera anropet.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>      ## Använda en anpassad konverterare när den anpassade konverteraren är klar kan du använda den som en anpassad Omslutning för en viss typ. I följande exempel visas definitionen av den `IUserData` hanterade gränssnittet: [!code-cpp [System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/cpp/t-system.runtime.interop_8_3.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/csharp/t-system.runtime.interop_8_3.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_3.vb) ] i följande exempel på `IUserData` gränssnitt använder den `NewOldMarshaler` anpassad konverterare för att aktivera ohanterade klientprogram att skicka en `IOld` gränssnitt till den `DoSomeStuff` metoden.     Hanterade beskrivningen av den `DoSomeStuff` metoden tar en `INew` gränssnitt som visas i föregående exempel, medan den ohanterade versionen av `DoSomeStuff` tar en `IOld` gränssnittspekare som visas i följande exempel.      ```   [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library UserLib {        [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]        interface IUserData : IUnknown            HRESULT DoSomeStuff(IUnknown* pIOld);   }   ```Typbiblioteket som skapas genom att exportera argumentets hanterade definition `IUserData` ger ohanterade definitionen visas i det här exemplet i stället för standard definition. Den <xref:System.Runtime.InteropServices.MarshalAsAttribute>attribut som används i den `INew` argumentet i hanterade definitionen av den `DoSomeStuff` metoden anger att argumentet använder en anpassad konverterare som visas i följande exempel.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/cpp/t-system.runtime.interop_8_4.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/csharp/t-system.runtime.interop_8_4.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_4.vb)][!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/cpp/t-system.runtime.interop_8_5.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/csharp/t-system.runtime.interop_8_5.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_5.vb) ] i föregående exempel kan den första parametern som angetts för den <xref:System.Runtime.InteropServices.MarshalAsAttribute>attributet är den <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>uppräkningsvärdet `UnmanagedType.CustomMarshaler`.</xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.MarshalAsAttribute>                      Den andra parametern är den <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>som anger sammansättningen kvalificerade namnet på den anpassade konverteraren.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> Det här namnet består av namnområde och klass för den anpassade konverteraren (`MarshalType=&quot;MyCompany.NewOldMarshaler&quot;`)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICustomMarshaler
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  id: CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Utför nödvändiga rensningen av hanterade data när den inte längre behövs."
  syntax:
    content: public void CleanUpManagedData (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Hanterade objekt förstörs."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  id: CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Utför nödvändiga rensningen av ohanterade data när den inte längre behövs."
  syntax:
    content: public void CleanUpNativeData (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "En pekare till ohanterade data förstörs."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  id: GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Returnerar storleken på interna data som ska konverteras."
  syntax:
    content: public int GetNativeDataSize ();
    parameters: []
    return:
      type: System.Int32
      description: "Storlek i byte av ursprunglig data."
  overload: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  id: MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Konverterar data hanterade till ohanterade data."
  syntax:
    content: public IntPtr MarshalManagedToNative (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Hanterade objekt som ska konverteras."
    return:
      type: System.IntPtr
      description: "En pekare till COM-vy över hanterade objekt."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  id: MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Konverterar data ohanterade till hanterade data."
  syntax:
    content: public object MarshalNativeToManaged (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "En pekare till ohanterade data som ska omslutas."
    return:
      type: System.Object
      description: "Ett objekt som representerar hanterade visningen av COM-data."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData
  nameWithType: ICustomMarshaler.CleanUpManagedData
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData
  nameWithType: ICustomMarshaler.CleanUpNativeData
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize
  nameWithType: ICustomMarshaler.GetNativeDataSize
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative
  nameWithType: ICustomMarshaler.MarshalManagedToNative
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged
  nameWithType: ICustomMarshaler.MarshalNativeToManaged
