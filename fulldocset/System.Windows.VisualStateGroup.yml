### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "Innehåller ömsesidigt uteslutande <xref href=&quot;System.Windows.VisualState&quot;> </xref> objekt och <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt som används för att flytta från ett tillstånd till en annan."
  remarks: "Varje VisualStateGroup innehåller en samling <xref:System.Windows.VisualState>objekt.</xref:System.Windows.VisualState> En <xref:System.Windows.VisualState>innehåller en samling <xref:System.Windows.Media.Animation.Storyboard>objekt som anger hur kontrollens utseende ändras när kontrollen är i ett visst tillstånd.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Till exempel en <xref:System.Windows.Controls.Button>kan ha lite annorlunda ut när den trycks än när den inte är nedtryckt.</xref:System.Windows.Controls.Button> För två tillstånd som den <xref:System.Windows.Controls.Button>definierar motsvarar när den trycks (`&quot;Pressed&quot;`) och när det är inte (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button>       Du lägger till <xref:System.Windows.VisualState>till en kontroll genom att ange den `VisualStateManager.VisualStateGroups` anslutna egenskapen på kontrollen.</xref:System.Windows.VisualState> Du placerar tillstånd som är ömsesidigt uteslutande till varandra i samma VisualStateGroup. Till exempel den <xref:System.Windows.Controls.CheckBox>har två VisualStateGroup objekt.</xref:System.Windows.Controls.CheckBox> En innehåller tillstånd, `Normal`, `MouseOver`, `Pressed`, och `Disabled`. Den andra innehåller tillstånd, `Checked`, `UnChecked`, och `Indeterminate`. Den <xref:System.Windows.Controls.CheckBox>tillstånd kan gälla `MouseOver` och `UnChecked` på samma gång, men inte i den `MouseOver` och `Pressed` tillstånd på samma gång.</xref:System.Windows.Controls.CheckBox>       Du kan lägga till <xref:System.Windows.VisualState>objekt till alla element är ett praktiskt sätt att aktivera andra att omdefiniera visual beteendet för ett <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.VisualState> Om du skapar en anpassad kontroll som använder en <xref:System.Windows.Controls.ControlTemplate>, kan du ange vilket anger att kontrollen kan vara i genom att lägga till en <xref:System.Windows.TemplateVisualStateAttribute>på dess klassdefinitionen.</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> Sedan alla som skapar en ny <xref:System.Windows.Controls.ControlTemplate>för kontrollen kan lägga till <xref:System.Windows.VisualState>objekt i mallen.</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> Den <xref:System.Windows.TemplateVisualStateAttribute>aktiverar designer verktyg, till exempel Expression Blend exponera kontrollens tillstånd.</xref:System.Windows.TemplateVisualStateAttribute> Tillstånd med samma <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>tillhör samma VisualStateGroup.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       Mer information om hur du använder VisualStateGroup objekt i en <xref:System.Windows.Controls.ControlTemplate>, se [anpassa utseendet på en befintlig kontroll genom att skapa en ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate> För mer information om hur du skapar kontroller som använder den <xref:System.Windows.VisualStateManager>, se [skapar en kontroll som har ett anpassningsbara utseende](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.VisualStateManager>       Den <xref:System.Windows.VisualStateGroup.Transitions%2A>egenskapen innehåller <xref:System.Windows.VisualTransition>objekt som ska användas när kontrollen övergången mellan tillstånd som definieras i VisualStateGroup.</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> klass."
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar den <xref href=&quot;System.Windows.VisualState&quot;> </xref> som för närvarande används kontrollen."
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "Den <xref href=&quot;System.Windows.VisualState&quot;> </xref> som för närvarande används kontrollen."
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inträffar när en kontroll övergår till ett annat tillstånd."
  remarks: "Den här händelsen inträffar när kontrollen övergår till ett nytt tillstånd och <xref:System.Windows.VisualStateGroup.CurrentStateChanging>händelse inträffar.</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inträffar när en kontroll startar övergår till ett annat tillstånd."
  remarks: "Händelsen inträffar när kontrollen börjar övergångstillstånd. Om en <xref:System.Windows.VisualTransition>används till ändringen av status för den här händelsen inträffar när övergången börjar.</xref:System.Windows.VisualTransition> Om en <xref:System.Windows.VisualTransition>används, den här händelsen inträffar när kontrollen går över till det nya läget, men innan det <xref:System.Windows.VisualStateGroup.CurrentStateChanged>händelse.</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger namnet på den <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  remarks: "Kontrollen författare anger om kontrollen kan vara i genom att lägga till en <xref:System.Windows.TemplateVisualStateAttribute>på dess klassdefinitionen.</xref:System.Windows.TemplateVisualStateAttribute> Tillstånd med den samma som <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>tillhör samma <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> Ange namnet på den <xref:System.Windows.VisualStateGroup>till värdet för den <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>egenskapen.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar mängden ömsesidigt uteslutande <xref href=&quot;System.Windows.VisualState&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "Insamling av ömsesidigt uteslutande <xref href=&quot;System.Windows.VisualState&quot;> </xref> objekt."
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar mängden <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt."
  remarks: "<xref:System.Windows.VisualTransition>Objekt i övergångar tillämpas när kontrollen övergångar mellan tillstånd som definieras i <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "Insamling av <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt."
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
