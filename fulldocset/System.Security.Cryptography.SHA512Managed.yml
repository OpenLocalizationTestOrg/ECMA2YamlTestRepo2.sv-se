### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA512Managed
  id: SHA512Managed
  children:
  - System.Security.Cryptography.SHA512Managed.#ctor
  - System.Security.Cryptography.SHA512Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA512Managed.HashFinal
  - System.Security.Cryptography.SHA512Managed.Initialize
  langs:
  - csharp
  name: SHA512Managed
  nameWithType: SHA512Managed
  fullName: System.Security.Cryptography.SHA512Managed
  type: Class
  summary: "Beräknar den <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> hash-algoritm för inkommande data med det hanterade biblioteket."
  remarks: "Hash-algoritmen används som ett unikt värde med fast storlek som representerar en stor mängd data. Hash-värden för två mängder av data ska matcha om också matchar motsvarande data. Små ändringar av data resultera i stor oväntade ändringar i hash-algoritmen.       Hash-storlek för SHA512Managed algoritmen är 512 bitar."
  example:
  - "The following example computes the SHA512Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA512Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_25_1.cpp)]\n [!code-vb[Classic SHA512Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_25_1.vb)]\n [!code-cs[Classic SHA512Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_25_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA512Managed : System.Security.Cryptography.SHA512
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA512
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA512.Create
  - System.Security.Cryptography.SHA512.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA512Managed
  langs:
  - csharp
  name: SHA512Managed()
  nameWithType: SHA512Managed.SHA512Managed()
  fullName: System.Security.Cryptography.SHA512Managed.SHA512Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;> </xref> klass."
  remarks: "Hash-algoritmen används som ett unikt värde med fast storlek som representerar en stor mängd data. Hash-värden för två mängder av data ska matcha om också matchar motsvarande data. Små ändringar av data resultera i stor oväntade ändringar i hash-algoritmen.       Hash-storlek för den <xref:System.Security.Cryptography.SHA512Managed>algoritmen är 512 bitar.</xref:System.Security.Cryptography.SHA512Managed>       **Viktiga** om du aktiverar FIPS säkerhetsinställningen antingen i lokal säkerhetsprincip eller som en del av en grupprincip får du en <xref:System.InvalidOperationException>när du försöker använda den här konstruktorn.</xref:System.InvalidOperationException>"
  syntax:
    content: public SHA512Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA512Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Säkerhetsinställningen FIPS Federal Information Processing Standards () är aktiverat. Denna implementering ingår inte i Windows Platform FIPS-validerade kryptografiska algoritmer."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA512Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA512Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA512Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass skickar data som skrivs till objektet i den <xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;> </xref> hash-algoritm för att beräkna hash-algoritmen."
  remarks: "Den här metoden anropas inte av programkod.       Den här abstrakta metoden utför hash-beräkningen. Varje skrivning till kryptografiska stream-objektet skickar data via den här metoden. För varje datablock uppdaterar tillståndet för hash-objekt av den här metoden så returneras en korrekt hash-värdet i slutet av dataströmmen."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Indata."
    - id: ibStart
      type: System.Int32
      description: "Förskjutningen i Bytematrisen som du vill börja använda data."
    - id: cbSize
      type: System.Int32
      description: "Antal byte i matrisen som ska användas som data."
  overload: System.Security.Cryptography.SHA512Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA512Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA512Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA512Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass Slutför hash-beräkningen efter de senaste data bearbetas av kryptografiska stream-objektet."
  remarks: "Den här metoden anropas inte av programkod. Den här metoden Slutför eventuella partiella beräkning och returnerar korrekt hash-värde för dataströmmen."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Den beräknade hash-kod."
  overload: System.Security.Cryptography.SHA512Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA512Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA512Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA512Managed.Initialize()
  fullName: System.Security.Cryptography.SHA512Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en instans av den <xref href=&quot;System.Security.Cryptography.SHA512Managed&quot;> </xref> klassen med hjälp av det hanterade biblioteket."
  remarks: "Hash-algoritmen används som ett unikt värde med fast storlek som representerar en stor mängd data. Hash-värden för två mängder av data ska matcha om också matchar motsvarande data. Små ändringar av data resultera i stor oväntade ändringar i hash-algoritmen.       Hash-storlek för den <xref:System.Security.Cryptography.SHA512Managed>algoritmen är 512 bitar.</xref:System.Security.Cryptography.SHA512Managed>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA512Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA512
  isExternal: false
  name: System.Security.Cryptography.SHA512
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA512Managed.#ctor
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: SHA512Managed()
  nameWithType: SHA512Managed.SHA512Managed()
  fullName: System.Security.Cryptography.SHA512Managed.SHA512Managed()
- uid: System.Security.Cryptography.SHA512Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA512Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA512Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA512Managed.HashFinal
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA512Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA512Managed.HashFinal()
- uid: System.Security.Cryptography.SHA512Managed.Initialize
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA512Managed.Initialize()
  fullName: System.Security.Cryptography.SHA512Managed.Initialize()
- uid: System.Security.Cryptography.SHA512Managed.#ctor*
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: SHA512Managed
  nameWithType: SHA512Managed.SHA512Managed
- uid: System.Security.Cryptography.SHA512Managed.HashCore*
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA512Managed.HashCore
- uid: System.Security.Cryptography.SHA512Managed.HashFinal*
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA512Managed.HashFinal
- uid: System.Security.Cryptography.SHA512Managed.Initialize*
  parent: System.Security.Cryptography.SHA512Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA512Managed.Initialize
