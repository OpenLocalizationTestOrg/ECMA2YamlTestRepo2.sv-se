### YamlMime:ManagedReference
items:
- uid: System.Reflection.Context.CustomReflectionContext
  id: CustomReflectionContext
  children:
  - System.Reflection.Context.CustomReflectionContext.#ctor
  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  langs:
  - csharp
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext
  fullName: System.Reflection.Context.CustomReflectionContext
  type: Class
  summary: "Representerar en anpassningsbara reflection-kontexten."
  remarks: "CustomReflectionContext kan du lägga till eller ta bort anpassade attribut från reflection-objekt eller lägga till dummy egenskaper till dessa objekt, utan nytt implementera fullständig reflection-modellen. Standard CustomReflectionContext radbryts bara reflection-objekt utan ändringar, men genom att tillämpa subclassing och åsidosätta relevanta metoder du kan lägga till, ta bort, ändra attributen som gäller för alla reflekterade parameter eller en medlem eller lägga till nya egenskaper till en reflekterad typ..       Anta exempelvis att din kod följer reglerna för att använda ett visst attribut på fabriksmetoder, men du måste nu arbeta med tredjeparts-kod som saknar attribut. Du kan använda CustomReflectionContext för att ange en regel för att identifiera de objekt som ska ha attribut och för att ange objekt med dessa attribut när de visas från din kod.       Om du vill använda CustomReflectionContext effektivt stöder kod som använder de reflekterade objekt begreppet att ange en reflection-kontexten i stället för förutsatt att alla reflekterade objekt är kopplade till runtime reflection-kontexten. Många reflektion metoder i .NET Framework ger en <xref:System.Reflection.ReflectionContext>parameter för detta ändamål.</xref:System.Reflection.ReflectionContext>       Om du vill ändra de attribut som tillämpas på en reflekterade parametern eller medlem åsidosätter den <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>eller <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>metod.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> </xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> Dessa metoder ta reflekterade objektet och i attributlistan under den aktuella reflection-kontexten och returnera lista över attribut som ska finnas under anpassade reflection-kontexten.      > [!WARNING] > CustomReflectionContext metoder bör inte att komma åt listan över reflekterade objektet eller metoden attribut direkt genom att anropa den <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metoden på den angivna <xref:System.Reflection.MemberInfo>eller <xref:System.Reflection.ParameterInfo>instans, men i stället bör använda den `declaredAttributes` listan som skickas som en parameter för den <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A>metoden överlagringar.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>       Om du vill lägga till egenskaper till en reflekterad typ. åsidosätta den <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metoden.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> Metoden tar en parameter som anger den reflekterade typ och returnerar en lista över ytterligare egenskaper. Du bör använda den <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>metoden för att skapa egenskapen objekt att returnera.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> Du kan ange delegater när du skapar egenskapen som ska användas som accessorn för egenskapen och kan du utelämna en accessorer att skapa en skrivskyddad eller lässkyddad egenskap. Observera att egenskaper, till exempel dummy har inga metadata eller vanliga mellanliggande språk (CIL) säkerhetskopiering.      > [!WARNING] > Bör du överväga likheten mellan reflekterade objekt när du arbetar med reflektion kontexter eftersom objekten kan vara samma reflekterade objekt i flera kontexter. Du kan använda den <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>metod för att hämta en viss reflection-kontexten version av ett reflekterade objekt.</xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>      > [!WARNING] > A CustomReflectionContext objektet ändrar attributen som returneras av en viss reflection-objekt, t.ex de som erhålls med den <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metoden.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Ändrar inte attributdata som returneras av den <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>metoden och de här två listorna matchar inte när du använder en anpassad reflection-kontexten.</xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>"
  example:
  - "The following example demonstrates how to subclass  CustomReflectionContext to add a custom attribute to all the members of a given type whose names begin with \"To\". To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.  \n  \n [!code-cs[System.Reflection.Context.CustomReflectionContext#1](~/add/codesnippet/csharp/system.reflection.context.customreflectioncontext.consoleapplication1/program.cs#1)]"
  syntax:
    content: 'public abstract class CustomReflectionContext : System.Reflection.ReflectionContext'
  inheritance:
  - System.Reflection.ReflectionContext
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  id: '#ctor'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Initierar en ny instans av den <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> klass."
  syntax:
    content: protected CustomReflectionContext ();
    parameters: []
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  id: '#ctor(System.Reflection.ReflectionContext)'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Initierar en ny instans av den <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> klass med angivna reflection-kontexten som bas."
  syntax:
    content: protected CustomReflectionContext (System.Reflection.ReflectionContext source);
    parameters:
    - id: source
      type: System.Reflection.ReflectionContext
      description: "Reflection-kontexten ska användas som bas."
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  id: AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "När åsidosätts i en härledd klass innehåller en mängd ytterligare egenskaper för den angivna typen, vilket visas i den här reflection-kontexten."
  remarks: "Åsidosätta den här metoden om du vill ange vilka egenskaper som ska läggas till en viss typ. Så här skapar du egenskaperna för den <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>metoden.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> AddProperties (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Att lägga till egenskaper till typ."
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: "En samling med ytterligare egenskaper för den angivna typen."
  overload: System.Reflection.Context.CustomReflectionContext.AddProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Skapar ett objekt som representerar en egenskap som ska läggas till en typ som ska användas med den <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>metoden.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Objekt som returneras av den här metoden är inte klar <xref:System.Reflection.PropertyInfo>objekt och bör endast användas i kontexten för den <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metoden.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Typ av egenskapen för att skapa."
    - id: name
      type: System.String
      description: "Namnet på egenskapen för att skapa."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "Ett objekt som representerar egenskapen <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "Ett objekt som representerar egenskapen <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    return:
      type: System.Reflection.PropertyInfo
      description: "Ett objekt som representerar egenskapen."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Skapar ett objekt som representerar en egenskap som ska läggas till en typ som ska användas med den <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>metoden och använda de angivna anpassade attribut.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Objekt som returneras av den här metoden är inte klar <xref:System.Reflection.PropertyInfo>objekt och bör endast användas i kontexten för den <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metoden.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter, System.Collections.Generic.IEnumerable<Attribute> propertyCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> getterCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> setterCustomAttributes);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Typ av egenskapen för att skapa."
    - id: name
      type: System.String
      description: "Namnet på egenskapen för att skapa."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "Ett objekt som representerar egenskapen <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "Ett objekt som representerar egenskapen <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    - id: propertyCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "En samling med anpassade attribut som ska gälla för egenskapen."
    - id: getterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "En samling av anpassade attribut i egenskapen <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
    - id: setterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "En samling av anpassade attribut i egenskapen <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
    return:
      type: System.Reflection.PropertyInfo
      description: "Ett objekt som representerar egenskapen."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "När åsidosätts i en härledd klass, ger du en lista över anpassade attribut för den angivna medlemmen som representeras i den här reflection-kontexten."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "Den medlem vars anpassade attribut som ska returneras."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "En samling Medlemsattribut i den aktuella kontexten."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "En samling som representerar de anpassade attributen för den angivna medlemmen i den här reflection-kontexten."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "När åsidosätts i en härledd klass, ger du en lista över anpassade attribut för den angivna parametern som visas i den här reflection-kontexten."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: "Parametern vars anpassade attribut som ska returneras."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "En samling parameterns attribut i den aktuella kontexten."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "En samling som representerar de anpassade attributen för den angivna parametern i den här reflection-kontexten."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  id: MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hämtar representationen i den här reflection-kontexten för en sammansättning som representeras av ett objekt från en annan reflection-kontexten."
  syntax:
    content: public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "Externa representation av sammansättningen som ska representera i den här kontexten."
    return:
      type: System.Reflection.Assembly
      description: "Representation av sammansättningen i den här reflection-kontexten."
  overload: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  id: MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Hämtar representationen i den här reflection-kontexten för en typ som representeras av ett objekt från en annan reflection-kontexten."
  syntax:
    content: public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);
    parameters:
    - id: type
      type: System.Reflection.TypeInfo
      description: "Externa representation av den typ som representerar i den här kontexten."
    return:
      type: System.Reflection.TypeInfo
      description: "Representation av typen i den här reflection-kontexten."
  overload: System.Reflection.Context.CustomReflectionContext.MapType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.ReflectionContext
  isExternal: false
  name: System.Reflection.ReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PropertyInfo>
  nameWithType: IEnumerable<PropertyInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.PropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Func<Object,Object>
  nameWithType: Func<Object,Object>
  fullName: System.Func<System.Object,System.Object>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Action<Object,Object>
  nameWithType: Action<Object,Object>
  fullName: System.Action<System.Object,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.Context.CustomReflectionContext.#ctor*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext.CustomReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties
  nameWithType: CustomReflectionContext.AddProperties
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty
  nameWithType: CustomReflectionContext.CreateProperty
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes
  nameWithType: CustomReflectionContext.GetCustomAttributes
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly
  nameWithType: CustomReflectionContext.MapAssembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType
  nameWithType: CustomReflectionContext.MapType
