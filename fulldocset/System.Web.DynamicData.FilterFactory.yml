### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FilterFactory
  id: FilterFactory
  children:
  - System.Web.DynamicData.FilterFactory.#ctor
  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  langs:
  - csharp
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
  type: Class
  summary: "Skapar en mall för filtret."
  remarks: "Klassen FilterFactory används vid körning av dynamiska Data för att hämta en instans av en filtermall för en viss kolumn.       Du kan åsidosätta de metoder som definieras i den här klassen för att anpassa hur filter mallar läses. Till exempel laddas en anpassad implementering filter mallar från en annan plats än ~/DynamicData/Filters standardmappen.       Dynamiska Data innehåller filter mallar för sekundärnyckeln, boolesk och uppräkning kolumnen typer och visar dem med hjälp av en <xref:System.Web.UI.WebControls.DropDownList>kontroll.</xref:System.Web.UI.WebControls.DropDownList> Du kan också skapa anpassade filter mallar."
  example:
  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.
  syntax:
    content: public class FilterFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> klass."
  syntax:
    content: public FilterFactory ();
    parameters: []
  overload: System.Web.DynamicData.FilterFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar en instans av filtermallen."
  remarks: "Den här metoden anropas av dynamiska Data, för att hämta en instans av en mall för filtret. Härledda klasser kan åsidosätta den här metoden om du vill anpassa hur instanser av filtret mallar skapas. Till exempel hämta en anpassad implementering mallar från en kompilerad sammansättning i stället för från ~/DynamicData/Filters standardmappen."
  syntax:
    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Datakolumnen som filtermallen gäller."
    - id: filterUIHint
      type: System.String
      description: "Namnet på filtermallen om du vill använda."
    return:
      type: System.Web.DynamicData.QueryableFilterUserControl
      description: "En instans av den <xref href=&quot;System.Web.DynamicData.QueryableFilterUserControl&quot;> </xref> klass."
  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den virtuella sökvägen till filtermallen."
  remarks: "Som standard finns filter mallar i mappen ~/DynamicData/Filers.       Den här metoden anger den virtuella sökvägen till den mapp som innehåller fältet mallen. Härledda klasser kan åsidosätta den här metoden om du vill ange filter mallar från en annan virtuell sökväg."
  syntax:
    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Datakolumnen som filtermallen gäller."
    - id: filterUIHint
      type: System.String
      description: "Filtermallen ska användas."
    return:
      type: System.String
      description: "Den virtuella sökvägen till filtermallen."
  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FilterFactory.#ctor
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
- uid: System.Web.DynamicData.QueryableFilterUserControl
  parent: System.Web.DynamicData
  isExternal: false
  name: QueryableFilterUserControl
  nameWithType: QueryableFilterUserControl
  fullName: System.Web.DynamicData.QueryableFilterUserControl
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
- uid: System.Web.DynamicData.FilterFactory.#ctor*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory.FilterFactory
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl
  nameWithType: FilterFactory.CreateFilterControl
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath
  nameWithType: FilterFactory.GetFilterVirtualPath
