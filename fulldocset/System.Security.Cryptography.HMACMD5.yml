### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACMD5
  id: HMACMD5
  children:
  - System.Security.Cryptography.HMACMD5.#ctor
  - System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  langs:
  - csharp
  name: HMACMD5
  nameWithType: HMACMD5
  fullName: System.Security.Cryptography.HMACMD5
  type: Class
  summary: "Beräknar ett Hash-baserad meddelandeautentiseringskod (HMAC) med hjälp av den <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> hash-funktionen."
  remarks: "HMACMD5 är en typ av nycklad hashalgoritm som konstrueras utifrån hash-funktionen Message Digest Algorithm 5 (MD5) och används som en hashbaserad meddelandeautentiseringskod (HMAC). Processen HMAC kombinerar en hemlig nyckel med meddelandedata, hashar resultatet med hashfunktionen, kombinerar det hashvärdet med den hemliga nyckeln igen och tillämpar sedan hashfunktionen en andra gång. Utgående hash är 128 bitar långt.       En HMAC kan användas för att avgöra om ett meddelande som skickas via en osäker kanal har manipulerats, förutsatt att avsändaren och mottagaren dela en hemlig nyckel. Avsändaren beräknar hash-värdet för den ursprungliga informationen och skickar både ursprungliga data och hash-värde som ett enda meddelande. Mottagaren beräknar hash-värdet för det mottagna meddelandet och kontrollerar att den beräknade HMAC matchar överförda HMAC.       Ändringar i data eller hash-värdet ger ett matchningsfel eftersom kännedom om den hemliga nyckeln som krävs för att ändra meddelandet och återskapa rätt hash-värdet. Om de ursprungliga och beräknade hash-värdena matchar autentiseras därför meddelandet.       MD5 är en kryptografisk hash-algoritm som utvecklade RSA Laboratories. HMACMD5 accepterar nycklar i alla storlekar och ger en hash-sekvens som är 128 bitar långt."
  example:
  - "The following example shows how to sign a file by using the HMACMD5 object and then how to verify the file.  \n  \n [!code-cs[HMACMD5#1](~/add/codesnippet/csharp/t-system.security.crypto_58_1.cs)]\n [!code-cpp[HMACMD5#1](~/add/codesnippet/cpp/t-system.security.crypto_58_1.cpp)]\n [!code-vb[HMACMD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_58_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACMD5 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> klassen med hjälp av en slumpmässigt genererad nyckel."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>är en typ av nycklad hashalgoritm som konstrueras utifrån MD5 hash-funktionen och som används som en hashbaserad meddelandeautentiseringskod (HMAC).</xref:System.Security.Cryptography.HMACMD5> Processen HMAC kombinerar en hemlig nyckel med meddelandedata, hashar resultatet med hashfunktionen, kombinerar det hashvärdet med den hemliga nyckeln igen och tillämpar sedan hashfunktionen en andra gång. Utgående hash är 128 bitar långt.       Den här konstruktorn använder en 64-byte, slumpmässigt genererad nyckel."
  syntax:
    content: public HMACMD5 ();
    parameters: []
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACMD5
  langs:
  - csharp
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> klassen med hjälp av den angivna nyckeln."
  remarks: "<xref:System.Security.Cryptography.HMACMD5>är en typ av nycklad hashalgoritm som konstrueras utifrån MD5 hash-funktionen och som används som en hashbaserad meddelandeautentiseringskod (HMAC).</xref:System.Security.Cryptography.HMACMD5> Processen HMAC kombinerar en hemlig nyckel med meddelandedata, hashar resultatet med hashfunktionen, kombinerar det hashvärdet med den hemliga nyckeln igen och tillämpar sedan hashfunktionen en andra gång. Utgående hash är 128 bitar långt.       Den här konstruktorn använder en nyckel som du anger för att skapa den <xref:System.Security.Cryptography.HMACMD5>objekt.</xref:System.Security.Cryptography.HMACMD5>"
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACMD5> class.
  syntax:
    content: public HMACMD5 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Den hemliga nyckeln för <xref href=&quot;System.Security.Cryptography.HMACMD5&quot;> </xref> kryptering. Nyckeln kan vara valfri längd, men om det är fler än 64 byte långt den ska kodas (med SHA-1) att härleda en 64-byte-nyckel. Därför är den rekommenderade storleken på den hemliga nyckeln 64 byte."
  overload: System.Security.Cryptography.HMACMD5.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACMD5.#ctor
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5()
  nameWithType: HMACMD5.HMACMD5()
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5()
- uid: System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5(Byte[])
  nameWithType: HMACMD5.HMACMD5(Byte[])
  fullName: System.Security.Cryptography.HMACMD5.HMACMD5(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACMD5.#ctor*
  parent: System.Security.Cryptography.HMACMD5
  isExternal: false
  name: HMACMD5
  nameWithType: HMACMD5.HMACMD5
