### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MultipartContent
  id: MultipartContent
  children:
  - System.Net.Http.MultipartContent.#ctor
  - System.Net.Http.MultipartContent.#ctor(System.String)
  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  - System.Net.Http.MultipartContent.Dispose(System.Boolean)
  - System.Net.Http.MultipartContent.GetEnumerator
  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: MultipartContent
  nameWithType: MultipartContent
  fullName: System.Net.Http.MultipartContent
  type: Class
  summary: "Innehåller en mängd <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekt som hämta serialiseras i multipart / * innehåll typspecifikationen."
  syntax:
    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skapar en ny instans av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klass."
  syntax:
    content: public MultipartContent ();
    parameters: []
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skapar en ny instans av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klass."
  syntax:
    content: public MultipartContent (string subtype);
    parameters:
    - id: subtype
      type: System.String
      description: "Undertyp av multipart innehållet."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> subtype </code> har <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller innehåller endast blanktecken."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skapar en ny instans av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> klass."
  syntax:
    content: public MultipartContent (string subtype, string boundary);
    parameters:
    - id: subtype
      type: System.String
      description: "Undertyp av multipart innehållet."
    - id: boundary
      type: System.String
      description: "Strängen som gräns för multipart innehållet."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> subtype </code> har <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng.       Den <code> boundary </code> har <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller innehåller endast blanktecken.       - eller - <code> boundary </code> slutar med ett blanksteg."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Längden på den <code> boundary </code> var större än 70."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  id: Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lägg till multipart HTTP-innehållet i en samling <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekt som hämta serialiseras i multipart / * innehåll typspecifikationen."
  syntax:
    content: public virtual void Add (System.Net.Http.HttpContent content);
    parameters:
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet som ska läggas till i samlingen."
  overload: System.Net.Http.MultipartContent.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> och eventuellt omhändertar hanterade resurser."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`. När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Net.Http.MultipartContent>referenser.</xref:System.Net.Http.MultipartContent></xref:System.Object.Finalize%2A> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> till versioner endast ohanterade resurser."
  overload: System.Net.Http.MultipartContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Returnerar en uppräknare itererar genom insamling av <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objekt som hämta serialiseras i multipart / * innehåll typspecifikationen..."
  remarks: "Foreach satsen i C#-språk (för varje i Visual Basic) döljer komplexiteten i uppräknare. Därför rekommenderas foreach, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
      description: "Ett objekt som kan användas för att gå igenom samlingen."
  overload: System.Net.Http.MultipartContent.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Serialisera multipart http-innehållet till en dataström som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när allt innehåll serialiseras till mål-dataström.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Mål-dataströmmen."
    - id: context
      type: System.Net.TransportContext
      description: "Information om transporten (kanalbindningstoken, till exempel). Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Explicit implementering av den <xref:System.Net.Http.MultipartContent.GetEnumerator*>metoden.</xref:System.Net.Http.MultipartContent.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Ett objekt som kan användas för att gå igenom samlingen."
  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Bestämmer om HTTP-multipart innehåll har en ogiltig längd i byte."
  remarks: "Metoden TryComputeLength kan HTTP-multipart innehåll att beräkna den maximala längden. Detta är användbart för innehållstyper som ska kunna beräkna enkelt innehåll. Om datoranvändning innehållslängden är inte möjligt eller dyr (kräver att systemet att buffra hela innehållet där serialisering skulle vara dyra eller kräver att systemet allokera mycket minne), den här metoden kan returnera `false`. Om den här metoden returnerar `false`, innebär detta att chunked överföringen är nödvändig eller innehållet måste hämta buffras innan den skickas till servern."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Längden i byte av HHTP innehåll."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> length </code> är en ogiltig längd, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.MultipartContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MultipartContent.#ctor
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.MultipartContent.GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<HttpContent>
  nameWithType: IEnumerator<HttpContent>
  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.Http.HttpContent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: HttpContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.MultipartContent.#ctor*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent
  nameWithType: MultipartContent.MultipartContent
- uid: System.Net.Http.MultipartContent.Add*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add
  nameWithType: MultipartContent.Add
- uid: System.Net.Http.MultipartContent.Dispose*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose
  nameWithType: MultipartContent.Dispose
- uid: System.Net.Http.MultipartContent.GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator
  nameWithType: MultipartContent.GetEnumerator
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: MultipartContent.SerializeToStreamAsync
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength
  nameWithType: MultipartContent.TryComputeLength
