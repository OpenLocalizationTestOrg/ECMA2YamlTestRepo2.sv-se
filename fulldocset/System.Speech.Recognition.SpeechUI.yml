### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SpeechUI
  id: SpeechUI
  children:
  - System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)
  langs:
  - csharp
  name: SpeechUI
  nameWithType: SpeechUI
  fullName: System.Speech.Recognition.SpeechUI
  type: Class
  summary: "Innehåller text-och statusinformation om recognition åtgärder som ska visas i användargränssnittet för tal-plattformen."
  remarks: "Medlemmar i klassen SpeechUI kan användas för att ange exakt feedback för slutanvändaren via användargränssnittet för igenkänning tal. Ett program kan returnera godtycklig text och lyckade/misslyckade information med hjälp av den här klassen."
  example:
  - "The following example is a handler for the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event. This event is used by a <xref:System.Speech.Recognition.Grammar> that is designed to handle password input in the form \"My password is …\".  \n  \n If a password is not present, or not valid, <xref:System.Speech.Recognition.SpeechUI.SendTextFeedback%2A> sends error information to the Speech platform user interface.  \n  \n```  \n  \ngrammar.SpeechRecognized +=   \ndelegate(object sender, SpeechRecognizedEventArgs eventArgs)   \n{  \n  SemanticValue semantics = eventArgs.Result.Semantics;  \n  RecognitionResult result=eventArgs.Result;  \n  \n  if (!semantics.ContainsKey(\"Password\"))   \n  {  \n    SpeechUI.SendTextFeedback(eventArgs.Result, \"No Password Provided\", false);  \n  }  \n  else   \n  {  \n    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  \n                  result.Words[3],  \n                  result.Words[result.Words.Count - 1]);  \n    MemoryStream pwdMemoryStream = new MemoryStream();  \n    pwdAudio.WriteToAudioStream(pwdMemoryStream);  \n    if (!IsValidPwd(pwdMemoryStream))   \n    {  \n      string badPwd = System.IO.Path.GetTempPath() +   \n              \"BadPwd\" + (new Random()).Next().ToString() + \".wav\";  \n      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  \n      pwdAudio.WriteToWaveStream(waveStream);  \n      waveStream.Flush();  \n      waveStream.Close();  \n      SpeechUI.SendTextFeedback(eventArgs.Result, \"Invalid Password\", false);  \n    }  \n  }  \n};  \n```"
  syntax:
    content: public class SpeechUI
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)
  id: SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)
  parent: System.Speech.Recognition.SpeechUI
  langs:
  - csharp
  name: SendTextFeedback(RecognitionResult,String,Boolean)
  nameWithType: SpeechUI.SendTextFeedback(RecognitionResult,String,Boolean)
  fullName: System.Speech.Recognition.SpeechUI.SendTextFeedback(RecognitionResult,String,Boolean)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Skickar status och beskrivande text till tal plattform användargränssnittet om statusen för en åtgärd med igenkänning."
  remarks: "SendTextFeedback kan användas för att indikera att en recognition åtgärden kunde inte uppfyller vissa kriterier, även om indata kändes igen.       Ett exempel är verifiering av koden säkerhetsinformation där indata kändes fullständigt, men verifieringsinformation var fel."
  example:
  - "The following example is a handler for a <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event. This event is used by a <xref:System.Speech.Recognition.Grammar> that is designed to handle password input of the form, \"My password is …\".  \n  \n If a password is not present, or not valid, **SendTextFeedback** is used to send error information to the Speech platform user interface.  \n  \n```  \n  \ngrammar.SpeechRecognized +=  \ndelegate(object sender, SpeechRecognizedEventArgs eventArgs)   \n{  \n  SemanticValue semantics = eventArgs.Result.Semantics;  \n  RecognitionResult result=eventArgs.Result;  \n  \n  if (!semantics.ContainsKey(\"Password\"))   \n  {  \n    SpeechUI.SendTextFeedback(eventArgs.Result, \"No Password Provided\", false);  \n  }  \n  else  \n  {  \n    RecognizedAudio pwdAudio = result.GetAudioForWordRange(  \n              result.Words[3],  \n              result.Words[result.Words.Count - 1]);  \n    MemoryStream pwdMemoryStream = new MemoryStream();  \n    pwdAudio.WriteToAudioStream(pwdMemoryStream);  \n    if (!IsValidPwd(pwdMemoryStream))   \n    {  \n      string badPwd = System.IO.Path.GetTempPath() + \"BadPwd\" +   \n               (new Random()).Next().ToString() + \".wav\";  \n      FileStream waveStream = new FileStream(badPwd, FileMode.Create);  \n      pwdAudio.WriteToWaveStream(waveStream);  \n      waveStream.Flush();  \n      waveStream.Close();  \n      SpeechUI.SendTextFeedback(eventArgs.Result, \"Invalid Password\", false);  \n    }  \n  }  \n};  \n```"
  syntax:
    content: public static bool SendTextFeedback (System.Speech.Recognition.RecognitionResult result, string feedback, bool isSuccessfulAction);
    parameters:
    - id: result
      type: System.Speech.Recognition.RecognitionResult
      description: "En giltig <xref href=&quot;System.Speech.Recognition.RecognitionResult&quot;> </xref> instans."
    - id: feedback
      type: System.String
      description: "En <xref:System.String>som innehåller en kommentar om recognition åtgärden som producerade den <xref href=&quot;System.Speech.Recognition.RecognitionResult&quot;> </xref> `result`.</xref:System.String>"
    - id: isSuccessfulAction
      type: System.Boolean
      description: "En <xref uid=&quot;langword_csharp_bool&quot; name=&quot;bool&quot; href=&quot;&quot;> </xref> som anger om programmet bedöms recognition åtgärden lyckas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om informationen som angavs för metoden (<code>Feedback</code>, och <code> isSuccessfulAction </code>) har gjorts tillgängliga användargränssnitt för tal-plattform och <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om åtgärden misslyckades."
  overload: System.Speech.Recognition.SpeechUI.SendTextFeedback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)
  parent: System.Speech.Recognition.SpeechUI
  isExternal: false
  name: SendTextFeedback(RecognitionResult,String,Boolean)
  nameWithType: SpeechUI.SendTextFeedback(RecognitionResult,String,Boolean)
  fullName: System.Speech.Recognition.SpeechUI.SendTextFeedback(RecognitionResult,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.RecognitionResult
  parent: System.Speech.Recognition
  isExternal: false
  name: RecognitionResult
  nameWithType: RecognitionResult
  fullName: System.Speech.Recognition.RecognitionResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SpeechUI.SendTextFeedback*
  parent: System.Speech.Recognition.SpeechUI
  isExternal: false
  name: SendTextFeedback
  nameWithType: SpeechUI.SendTextFeedback
