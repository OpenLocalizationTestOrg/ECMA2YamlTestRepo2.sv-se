### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Hanterar formulärautentisering tjänster för webbprogram. Den här klassen kan inte ärvas."
  remarks: "Formulärautentisering kan användare och verifiering av lösenord för webbprogram som inte kräver Windows-autentisering. Med formulärautentisering, lagras användarinformationen i en extern datakälla som en <xref:System.Web.Security.Membership>databas, eller i konfigurationsfilen för ett program.</xref:System.Web.Security.Membership> När en användare autentiseras upprätthåller formulärautentisering en autentiseringsbiljett i en cookie eller URL: en så att en autentiserad användare inte behöver ange autentiseringsuppgifter för varje begäran.       Formulär för autentisering är aktiverat genom att ange den `mode` attribut för konfigurationselementet till `Forms`. Du kan kräva att alla begäranden till ett program innehåller en giltig användare autentiseringsbiljetten med hjälp av konfigurationselementet för att neka en begäran för en okänd användare som visas i följande exempel.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```I exemplet ovan kräver ett giltigt användarnamn som tillhandahålls av formulär för autentisering i begäran om en ASP.NET-sida som ingår i programmet. Om det finns inget användarnamn, sedan omdirigeras begäran till konfigurerade <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Klassen FormsAuthentication ger åtkomst till metoder och egenskaper som du kan använda i ett program som autentiserar användare. Den <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metoden omdirigerar en webbläsare till den konfigurerade <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>för användare att logga in på ett program.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>Metoden omdirigerar en autentiserad användare tillbaka till den ursprungliga skyddade URL: en som begärdes eller <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Det finns också metoder som gör det möjligt att hantera formulär för autentisering biljetter, om det behövs."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klass."
  remarks: "Den här konstruktorn är inte avsedd att användas från din kod."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifierar ett användarnamn och lösenord mot autentiseringsuppgifter som lagras i konfigurationsfilen för ett program."
  remarks: "Autentiseringsmetoden kontrollerar autentiseringsuppgifterna som lagras i avsnittet i programmets konfigurationsfil. Du kan också använda ASP.NET-medlemskap för att lagra autentiseringsuppgifter och anrop i <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>verifiera autentiseringsuppgifterna.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Mer information finns i [hantera användare med hjälp av medlemskap](~/add/includes/ajax-current-ext-md.md).       För ökad säkerhet kan du kryptera lösenord ska lagras i konfigurationsfilen för ett program med hjälp av den <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>metoden.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "Användarnamnet."
    - id: password
      type: System.String
      description: "Lösenord för användaren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användarnamnet och lösenordet är giltiga. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar värdet för domänen i cookien för formulär för autentisering."
  remarks: "CookieDomain egenskapens värde har angetts i konfigurationsfilen för ett ASP.NET-program med hjälp av den `domain` attribut för konfigurationselementet. Egenskapsvärdet CookieDomain anger <xref:System.Web.HttpCookie.Domain%2A>cookien kommer att använda efter.</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "Den <xref:System.Web.HttpCookie.Domain*>cookien för formulär för autentisering.</xref:System.Web.HttpCookie.Domain*> Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om programmet är konfigurerat för cookieless formulär för autentisering."
  remarks: "Egenskapen CookieMode är värdet för den `cookieless` attribut för konfigurationselementet. Egenskapen CookieMode bestämmer om den <xref:System.Web.Security.FormsAuthenticationTicket>värdet kommer att lagras i en sessionscookie i webbläsaren eller lagras i den <xref:System.Web.HttpRequest.QueryString%2A>egenskapen.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > När den <xref:System.Web.Security.FormsAuthenticationTicket>värdet lagras i URI: N, längden på den genererade URI kan vara längre än den tillåtna maxlängden.</xref:System.Web.Security.FormsAuthenticationTicket> Detta beror sannolikt att inträffa när den <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>egenskap är inställd på programmets namn och namnet på programmet är lång (minst&40; tecken), när användaren namnen i programmet är lång eller när långa <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>strängar lagras i den <xref:System.Web.Security.FormsAuthenticationTicket>värde.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Om den genererade URI är för lång, webbservern returnerar en `400 - Bad Request` fel."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "En av de <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> värden som anger om programmet är konfigurerat för cookieless formulär för autentisering. Standardvärdet är <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om programmet är konfigurerad för att stödja cookieless formulär för autentisering."
  remarks: "Egenskapen CookiesSupported returnerar ett värde baserat på den <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>värde och funktionerna i webbläsaren.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Om den <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>egenskap är inställd på <xref:System.Web.HttpCookieMode>, returnerar egenskapen CookiesSupported `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Om den <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>egenskap är inställd på <xref:System.Web.HttpCookieMode>, returnerar egenskapen CookiesSupported `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Om den <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>egenskap är inställd på <xref:System.Web.HttpCookieMode>, returnerar egenskapen CookiesSupported `true` om webbläsaren stöder cookies och cookies är aktiverade, annars egenskapen CookiesSupported returnerar `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Om den <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>egenskap är inställd på <xref:System.Web.HttpCookieMode>, egenskapen CookiesSupported returnerar `true` om den <xref:System.Web.HttpRequest.Browser%2A>för aktuellt <xref:System.Web.HttpContext.Request%2A>stöder cookies och omdirigera med cookies; annars egenskapen CookiesSupported returnerar `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Om programmet har konfigurerats för att stödja cookieless formulärautentisering; Annars <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objekt baserat på krypterade formulärautentisering biljetten överförs till metoden."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "Krypterade autentiseringsbiljetten."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Om den <code> encryptedTicket </code> parametern är inte en giltig biljett <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar URL som den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klassen omdirigerar till om någon omdirigering URL anges."
  remarks: "DefaultUrl egenskapens värde har angetts i konfigurationsfilen för ett ASP.NET-program med hjälp av den `defaultUrl` attribut för konfigurationselementet. Egenskapen DefaultUrl används av den <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metoden om inga Retur-URL som ingår i begäran.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> På liknande sätt den <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>metoden returnerar DefaultUrl om ingen retur-URL som ingår i begäran.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "URL-Adressen som den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klassen omdirigerar till om någon omdirigering URL anges. Standardvärdet är &quot;default.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om autentiserade användare kan omdirigeras till URL: er i andra webbprogram."
  remarks: "Egenskapsvärdet EnableCrossAppRedirects ställs in med den `enableCrossAppRedirects` attribut för konfigurationselementet.       Egenskapen EnableCrossAppRedirects är markerat i den <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metoden när omdirigeringen URL: en inte pekar på en sida i det aktuella programmet.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Om EnableCrossAppRedirects `true`, och sedan omdirigeringen utförs; om EnableCrossAppRedirects `false`, webbläsaren omdirigeras till sidan som definierats i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > När du dirigerar sidor i program, måste du se till att specifika attribut i konfigurationselementet dupliceras mellan de autentiserade program. Mer information och exempel finns i [formulär för program](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > När flera program omdirigeringar tillåts din webbplats är sårbara för en exploatering som leder användarna till en webbplats, men använder inloggningssidan för webbplatsen. Kontrollera alltid att omdirigerings-URL som returneras av den <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>metoden är en URL som du förväntar dig så att du kan se till att du omdirigerar endast till godkända webbplatser.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Du måste också kontrollera att rätt protokoll (HTTP eller HTTPS) används för omdirigerings-URL. Du kan lägga till en hanterare för återanslående till din inloggningssidan om du vill utföra dessa kontroller eller du kan lägga till en hanterare för den <xref:System.Web.UI.WebControls.Login.LoggedIn>händelsen för den <xref:System.Web.UI.WebControls.Login>kontroll.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om autentiserade användare kan omdirigeras till URL: er i andra webbprogram. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aktiverar formulär för autentisering."
  remarks: "Om den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen är `null`, att egenskapen har angetts till standardvärdet URL från den `configurationData` parameter.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Om den <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>egenskapen är `null`, egenskapsuppsättning till inloggnings-URL-värdet från den `configurationData` parameter.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "En samling med namn-värde som innehåller värden för &quot;defaultUrl&quot; och/eller &quot;loginUrl&quot;. Parametern kan vara null om det inte finns några värden för standard-URL eller inloggnings-URL."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Programmet finns inte i förinläsningen-fasen."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en sträng som innehåller en krypterad formulärautentisering biljett som är lämplig för användning i en HTTP-cookie."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Den <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objekt som du vill skapa den kryptera formulärautentisering biljetten."
    return:
      type: System.String
      description: "En sträng som innehåller en krypterad formulärautentisering biljett."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar namnet på den cookie som används för att lagra biljetten för formulär för autentisering."
  remarks: "FormsCookieName egenskapens värde har angetts i konfigurationsfilen för ett ASP.NET-program med hjälp av den `name` attribut för konfigurationselementet. FormsCookieName används för att referera till den cookie som visar den <xref:System.Web.Security.FormsAuthenticationTicket>information.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "Namnet på den cookie som används för att lagra biljetten för formulär för autentisering. Standardvärdet är &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar sökvägen för cookien för formulär för autentisering."
  remarks: "FormsCookiePath egenskapens värde har angetts i konfigurationsfilen för en ASP.NET-program med den `path` attribut för konfigurationselementet. Anger FormsCookiePath den <xref:System.Web.HttpCookie.Path%2A>för cookie som visar den <xref:System.Web.Security.FormsAuthenticationTicket>information.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "Sökvägen till cookien där formulärautentisering biljett information lagras. Standardvärdet är &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en autentiseringscookie för ett angivet användarnamn. Detta anger inte cookien som en del av utgående svar så att ett program kan ha mer kontroll över hur cookien utfärdas."
  remarks: "Sökvägen på cookien som bestäms av den <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Namnet på den autentiserade användaren."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "En <xref href=&quot;System.Web.HttpCookie&quot;> </xref> som innehåller krypterade formulärautentisering biljett information. Standardvärdet för den <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>egenskapen används.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en autentiseringscookie för ett angivet användarnamn. Detta anger inte cookien som en del av utgående svar."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Namnet på den autentiserade användaren."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Den <xref:System.Web.HttpCookie.Path*>i autentiseringscookien.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "En <xref href=&quot;System.Web.HttpCookie&quot;> </xref> som innehåller krypterade formulärautentisering biljett information."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Returnerar omdirigerings-URL för den ursprungliga begäran som orsakade att omdirigeras till inloggningssidan."
  remarks: "Du kan använda den här metoden när du vill utföra omdirigeringen i din programkod istället för att använda den <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metoden.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       Metoden GetRedirectUrl returnerar den URL som angavs i frågan sträng med den `ReturnURL` variabelnamn. Till exempel i URL: en `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, GetRedirectUrl-metoden returnerar den returnera-URL `caller.aspx`. Om den `ReturnURL` variabel finns inte, GetRedirectUrl-metoden returnerar URL: en i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET lägger automatiskt till den returnera-URL när webbläsaren omdirigeras till inloggningssidan.       Som standard den `ReturnUrl` variabeln måste referera till en sida i det aktuella programmet. Om `ReturnUrl` hänvisar till en sida i ett annat program eller på en annan server GetRedirectUrl-metoder returnerar URL i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Om du vill tillåta Retur-URL att referera till en sida utanför det aktuella programmet, måste du ange den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` med hjälp av den `enableCrossAppRedirects` attribut för konfigurationselementet.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Inställningen den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` så att flera program omdirigeringar är ett potentiellt hot.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Mer information finns i <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Namnet på den autentiserade användaren."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Den här parametern ignoreras."
    return:
      type: System.String
      description: "En sträng som innehåller omdirigerings-URL."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Genererar ett hash-lösenord som lämpar sig för att lagra i en konfigurationsfil som är baserat på det angivna lösenordet och hash-algoritm."
  remarks: "Metoden HashPasswordForStoringInConfigFile skapar ett som hashformaterats-lösenordsvärde som kan användas vid lagring av autentiseringsuppgifter för formulär för autentisering i konfigurationsfilen för ett program.       Autentiseringsuppgifter som lagras i konfigurationsfilen för ett program som används av den <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>metod för att verifiera lösenord för användare av ett program.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Alternativt kan du använda ASP.NET-medlemskap för att lagra autentiseringsuppgifter. Mer information finns i [hantera användare med hjälp av medlemskap](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "Lösenordet som hash."
    - id: passwordFormat
      type: System.String
      description: "Hash-algoritmen att använda. `passwordFormat`är en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> som representerar en av de <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> uppräkningsvärden."
    return:
      type: System.String
      description: "Lösenordet som hashformaterats."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>är inte ett giltigt <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> värde."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Initierar den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> objekt baserat på konfigurationsinställningarna för programmet."
  remarks: "Initiera-metoden anropas när du <xref:System.Web.Security.FormsAuthenticationModule>skapar en instans av <xref:System.Web.Security.FormsAuthentication>klassen.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Den här metoden ska inte anropas från din kod."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om formulär för autentisering är aktiverat."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om formulär för autentisering är aktiverad; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar URL för inloggningen sidan som den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klassen omdirigeras till."
  remarks: "LoginUrl egenskapens värde har angetts i konfigurationsfilen för ett ASP.NET-program med hjälp av den `loginUrl` attribut för konfigurationselementet. LoginUrl används av den <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metoden.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "URL: en för inloggningen sidan som den <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> klassen omdirigeras till. Standardvärdet är &quot;login.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Omdirigerar en autentiserad användare tillbaka till den ursprungligen begärda URL eller standard-URL."
  remarks: "Metoden RedirectFromLoginPage omdirigerar till den URL som angavs i frågan sträng med den `ReturnURL` variabelnamn. Till exempel i URL: en `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, metoden RedirectFromLoginPage omdirigerar till den returnera-URL `caller.aspx`. Om den `ReturnURL` variabel finns inte, metoden RedirectFromLoginPage omdirigerar till URL: en i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET lägger automatiskt till den returnera-URL när webbläsaren omdirigeras till inloggningssidan.       Som standard den `ReturnUrl` variabeln måste referera till en sida i det aktuella programmet. Om `ReturnUrl` refererar till en sida i ett annat program eller på en annan server RedirectFromLoginPage metoder omdirigerar till URL: en i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Om du vill tillåta omdirigerar till en sida utanför det aktuella programmet, måste du ange den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` med hjälp av den `enableCrossAppRedirects` attribut för konfigurationselementet.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Inställningen den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` så att flera program omdirigeringar är ett potentiellt hot.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Mer information finns i <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Om den <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>egenskapen är `true`, och antingen den `ReturnUrl` variabeln är inom det aktuella programmet eller <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen är `true`, och sedan metoden RedirectFromLoginPage utfärdar en autentiseringsbiljett och placeras på en standard cookie med hjälp av den <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>metoden.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false` och omdirigera sökvägen till en URL i det aktuella programmet, biljetten utfärdas som en del av omdirigerings-URL.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>är `true`, och omdirigera URL: en inte refererar till en sida i det aktuella programmet, metoden RedirectFromLoginPage utfärdar en autentiseringsbiljett och placerar den i den <xref:System.Web.HttpRequest.QueryString%2A>egenskapen.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Autentiserade användarnamn."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'Returnerar Webbadressen som angetts i frågesträngen innehåller ett protokoll än HTTP: eller HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Omdirigerar en autentiserad användare till den ursprungligen begärda URL eller standard-URL med den angivna cookie-sökvägen för cookien för formulär för autentisering."
  remarks: "Metoden RedirectFromLoginPage omdirigerar till den Retur-URL som angetts i frågan sträng med den `ReturnURL` variabelnamn. Till exempel i URL: en `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, metoden RedirectFromLoginPage omdirigerar till den returnera-URL `caller.aspx`. Om den `ReturnURL` variabel finns inte, metoden RedirectFromLoginPage omdirigerar till URL: en i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET lägger automatiskt till den returnera-URL när webbläsaren omdirigeras till inloggningssidan.       Som standard den `ReturnUrl` variabeln måste referera till en sida i det aktuella programmet. Om `ReturnUrl` refererar till en sida i ett annat program eller på en annan server RedirectFromLoginPage metoden omdirigerar till URL: en i den <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>egenskapen.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Om du vill tillåta omdirigerar till en sida utanför det aktuella programmet, måste du ange den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` med hjälp av den `enableCrossAppRedirects` attribut för konfigurationselementet.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Inställningen den <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen `true` så att flera program omdirigeringar är ett potentiellt hot.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Mer information finns i <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskap.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Om den <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>egenskapen är `true`, och antingen den `ReturnUrl` variabeln är inom det aktuella programmet eller <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>egenskapen är `true`, och sedan metoden RedirectFromLoginPage utfärdar en autentiseringsbiljett och placeras på den cookie som angetts av den `strCookiePath` parameter med hjälp av den <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>metoden.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false` och omdirigera sökvägen till en URL i det aktuella programmet, biljetten utfärdas som en del av omdirigerings-URL.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>är `true`, och omdirigera URL: en inte refererar till en sida i det aktuella programmet, metoden RedirectFromLoginPage utfärdar en autentiseringsbiljett och placerar den i den <xref:System.Web.HttpRequest.QueryString%2A>egenskapen.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Autentiserade användarnamn."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Cookie-sökvägen för biljetten för formulär för autentisering."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'Returnerar Webbadressen som angetts i frågesträngen innehåller ett protokoll än HTTP: eller HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Omdirigerar webbläsaren till inloggnings-URL."
  remarks: "Metoden RedirectToLoginPage dirigeras webbläsaren till <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Metoden RedirectToLoginPage tar inte bort cookien för formulär för autentisering. Du kan använda metoden RedirectToLoginPage tillsammans med <xref:System.Web.Security.FormsAuthentication.SignOut%2A>metoden för att logga ut användare och att en annan användare att logga in.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Omdirigerar webbläsaren till inloggnings-URL med den angivna frågesträngen."
  remarks: "Metoden RedirectToLoginPage omdirigerar webbläsaren att den <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>och omfattar den `extraQueryString` värdet som den <xref:System.Management.ManagementQuery.QueryString%2A>för den omdirigerade platsen.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Metoden RedirectToLoginPage tar inte bort cookien för formulär för autentisering. Du kan använda metoden RedirectToLoginPage tillsammans med <xref:System.Web.Security.FormsAuthentication.SignOut%2A>metoden för att logga ut användare och att en annan användare att logga in.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "Frågesträngen ska ingå i omdirigerings-URL."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Villkorligt uppdaterar problemet datum och tid och förfallodatum och tid för en <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "Metoden RenewTicketIfOld uppdaterar datum och tid för den angivna <xref:System.Web.Security.FormsAuthenticationTicket>om aktuella datum och tid minus det <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>värdet är större än den <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>värde minus aktuellt datum och tid.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       Biljetten uppdateras med den <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>-egenskapen angetts till aktuellt datum och tid och <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>-egenskapen angetts till aktuellt datum och tid plus ursprungligt <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>minus ursprungligt värdet <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>värde.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Formulärautentisering biljett att uppdatera."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Den uppdaterade <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om cookien för formulär för autentisering kräver SSL för att kunna returneras till servern."
  remarks: "Egenskapsvärdet RequireSSL anges i konfigurationsfilen för ett ASP.NET-program med hjälp av den `requireSSL` attribut för konfigurationselementet. Du kan ange i Web.config-filen för ASP.NET-program, om SSL (Secure Sockets Layer) måste returnera cookien för formulär för autentisering till servern genom att ange den `requireSSL` attribut. Mer information finns i <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       Vi rekommenderar att om du konfigurerar `requireSSL` som `false`, du också konfigurera `slidingExpiration` som `false`, för att minska den tid som en biljett är giltig."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om SSL krävs för att returnera cookien för formulär för autentisering till servern. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en autentiseringsbiljett för det angivna användarnamnet och lägger till den i samlingen cookies för svaret eller URL: en om du använder cookieless autentisering."
  remarks: "Metoden SetAuthCookie lägger till en biljetten för formulär för autentisering till samlingen cookies, eller till URL: en om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Biljetten för formulär för autentisering ger information för formulär för autentisering till nästa begäran från webbläsaren. Med formulär för autentisering, kan du använda metoden SetAuthCookie när du vill autentisera en användare men fortfarande behålla kontrollen över navigering med omdirigeringar."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Namnet på en autentiserad användare. Det behöver inte mappas till ett Windows-konto."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Skapar en autentiseringsbiljett för det angivna användarnamnet och lägger till den samlingen cookies i svaret, med den angivna cookie-sökvägen eller använda en URL Om du använder cookieless autentisering."
  remarks: "Metoden SetAuthCookie lägger till en biljetten för formulär för autentisering till samlingen cookies eller URL: en om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Biljetten för formulär för autentisering ger information för formulär för autentisering till nästa begäran från webbläsaren. Med formulär för autentisering, kan du använda metoden SetAuthCookie när du vill autentisera en användare men fortfarande behålla kontrollen över navigering med omdirigeringar."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Namnet på en autentiserad användare."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här skapar du en beständig cookie (en som sparas mellan webbläsarsessioner); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Cookie-sökvägen för biljetten för formulär för autentisering."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tar bort biljetten för formulär för autentisering från webbläsaren."
  remarks: "Metoden SignOut tar bort formulärautentisering biljett information från cookie eller URL: en om <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>är `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Du kan använda metoden SignOut tillsammans med <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metoden för att logga ut användare och att en annan användare att logga in.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Om du kör uteslutande i cookieless läge eller om du stöder både autentiserade och anonyma användare, bör du uttryckligen styra omdirigering till inloggningssidan om du behöver särskilda affärslogiken för att köra på grund av att ta bort anonym identifierare.       När metoden SignOut anropas, görs en omdirigering till programmets inloggningssidan genom att anropa den <xref:System.Web.HttpResponse.Redirect%2A>metod med den `endResponse` parametern `false`.</xref:System.Web.HttpResponse.Redirect%2A> Omdirigeringen utförs inte förrän sidan har avslutats, så att ytterligare kod kan köras. Om koden inte innehåller en explicit omdirigering till en annan sida omdirigeras användaren till inloggningssidan som konfigurerats i programmets konfigurationsfil.       Anrop till metoden SignOut tas endast formulärautentiseringscookie. Webbservern lagrar inte giltigt och har upphört att gälla biljetter för senare jämförelse. Detta gör webbplatsen sårbar för ett replay-attacker om en obehörig användare erhåller en giltig formulärautentiseringscookie. För att förbättra säkerheten när du använder en formulärautentiseringscookie, bör du göra följande:-använda absolut förfallodatum för formulär autentiseringscookies genom att ange den <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>egenskapen `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Detta begränsar fönstret där en hijacked cookie spelas upp.      – Endast utfärda och acceptera autentiseringscookies över Secure Sockets Layer (SSL), genom att ange den <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>egenskapen `true` och genom att köra hela webbplatsen i SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Ange den <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>egenskapen `true` garanterar att ASP.NET skickar aldrig en autentiseringscookie till webbläsaren via en icke-SSL-anslutning, men klienten kan inte hänsyn till den säkra inställningen på cookien.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Det innebär att klienten kan skicka formulärautentiseringscookie via en icke-SSL-anslutning så att den sårbara för kapar. Du kan förhindra att en klient skickar formulärautentiseringscookie i klartext genom att köra hela webbplatsen i SSL.      -Använd beständig lagring på servern ska registreras när en användare loggar ut från webbplatsen och använda händelse som <xref:System.Web.HttpApplication.PostAuthenticateRequest>händelsen för att avgöra om den aktuella användaren autentiserades med formulärautentisering.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Om användaren autentiserades med formulär för autentisering och, om informationen i beständig lagring anger användaren loggas omedelbart Rensa cookien för autentisering och dirigera om webbläsaren tillbaka till inloggningssidan. Uppdatera lagring för att återspegla att användaren är inloggad när en lyckad inloggning. När du använder den här metoden kan ditt program måste följa inloggad statusen för användaren och tvinga inaktiva användare att logga ut."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om ett glidande förfallodatum är aktiverat."
  remarks: "Egenskapsvärdet SlidingExpiration ställs in med den `slidingExpiration` attribut för konfigurationselementet.       Ett glidande återställer förfallodatum förfallotiden för en giltig cookie för autentisering om en begäran görs och mer än hälften av timeout-intervall har förflutit. Om cookien förfaller, måste användaren igen att autentisera. Egenskapen SlidingExpiration `false` kan förbättra säkerheten för ett program genom att begränsa den tid som en autentiseringscookie är giltigt, baserat på den konfigurerade `timeout` värde.       Vi rekommenderar att om du konfigurerar `requireSSL` som `false`, du också konfigurera `slidingExpiration` som `false`, för att minska den tid som en biljett är giltig."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om ett glidande förfallodatum är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om du vill använda Coordinated Universal Time (UTC) eller lokal tid för Biljetten upphör att gälla."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Ett värde som anger om du vill använda Coordinated Universal Time (UTC) eller lokal tid för Biljetten upphör att gälla."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar hur lång tid innan en autentiseringsbiljett upphör att gälla."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "Hur lång tid innan en autentiseringsbiljett upphör att gälla."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
