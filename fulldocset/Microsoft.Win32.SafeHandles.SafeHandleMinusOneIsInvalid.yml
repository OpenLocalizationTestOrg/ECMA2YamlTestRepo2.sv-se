### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  id: SafeHandleMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  type: Class
  summary: "Tillhandahåller en basklass för Win32 safe-referensen implementeringar där värdet -1 indikerar en ogiltig referens."
  remarks: "Den här klassen härleds från <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName>klassen.</xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName> Det beskriver formatet för en ogiltig referens som använder värdet -1. Ytterligare produkter i den här klassen (till exempel, fil eller registernyckel referenser) kan specialisering detta ytterligare. Finns det <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>klass för ett exempel på en klass som härleds från SafeHandleMinusOneIsInvalid.</xref:Microsoft.Win32.SafeHandles.SafeFileHandle>      > [!WARNING] > Den här typen implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try``catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SafeHandleMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initierar en ny instans av den <xref href=&quot;Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid&quot;> </xref> klassen som anger om referensen är frigörs på ett tillförlitligt sätt."
  syntax:
    content: protected SafeHandleMinusOneIsInvalid (bool ownsHandle);
    parameters:
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att på ett tillförlitligt sätt frigöra referensen under fasen slutförande; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att förhindra tillförlitliga versionen (rekommenderas inte)."
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Hämtar ett värde som anger om referensen är ogiltig."
  remarks: "Common language runtime använder den här egenskapen för att avgöra om viktiga slutförande krävs."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om referensen inte är giltigt. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: System.Runtime.InteropServices.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: SafeHandleMinusOneIsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.SafeHandleMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleMinusOneIsInvalid.IsInvalid
