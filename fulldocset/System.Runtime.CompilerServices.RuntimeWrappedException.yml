### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.RuntimeWrappedException
  id: RuntimeWrappedException
  children:
  - System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  langs:
  - csharp
  name: RuntimeWrappedException
  nameWithType: RuntimeWrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException
  type: Class
  summary: "Packar ett undantag inte är härledd från <xref:System.Exception>klass.</xref:System.Exception> Den här klassen kan inte ärvas."
  remarks: "Vissa språk, till exempel C++ kan du utlösa undantag av hanterade typer.  Andra språk, till exempel Microsoft C# och Visual Basic kan kräva att alla undantag som utlöses vara härledd från <xref:System.Exception>klass.</xref:System.Exception>  För att bibehålla kompatibilitet mellan olika språk, packar common language runtime (CLR) objekt som inte är härlett från <xref:System.Exception>i en RuntimeWrappedException-objektet.</xref:System.Exception>       Du kan använda den <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>klassen för att ange om undantag ska visas omsluten i ett catch-block och undantagsfilter för en sammansättning.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  Många språk kompilerare, inklusive Microsoft C# och Visual Basic kompilerare, gäller det här attributet som standard för att ange radbrytning beteende.       Observera att körningen fortfarande radbrytas undantag även om du använder den <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>klassen för att ange att du inte vill att de omslutna.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  I det här fallet är undantag okrypterad endast i catch-block eller ett undantagsfilter."
  example:
  - "The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a RuntimeWrappedException object.  \n  \n [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/add/codesnippet/cpp/t-system.runtime.compile_12_1.cpp)]"
  syntax:
    content: 'public sealed class RuntimeWrappedException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Anger den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt med information om undantaget."
  remarks: "GetObjectData metoden anger en <xref:System.Runtime.Serialization.SerializationInfo>objekt med alla undantag objektdata mål för serialisering.</xref:System.Runtime.Serialization.SerializationInfo> Vid deserialisering, undantaget är färdigställts från den `SerializationInfo` överförs via dataströmmen."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som innehåller det serialiserade objektdata om undantag som genereras."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Den <xref:System.Runtime.Serialization.StreamingContext>objekt som innehåller detaljerad information om käll- och målservrar.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  id: WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Hämtar det objekt som har wrappats av den <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> objekt."
  remarks: "Egenskapen WrappedException hämtar ett objekt som utlöstes som ett undantag från ett språk som tillåter undantag som inte härledd från <xref:System.Exception>klass.</xref:System.Exception>"
  syntax:
    content: public object WrappedException { get; }
    return:
      type: System.Object
      description: "Det objekt som har wrappats av den <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> objekt."
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData
  nameWithType: RuntimeWrappedException.GetObjectData
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
