### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Claims.ClaimSet
  id: ClaimSet
  children:
  - System.IdentityModel.Claims.ClaimSet.#ctor
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  - System.IdentityModel.Claims.ClaimSet.Count
  - System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  - System.IdentityModel.Claims.ClaimSet.GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Issuer
  - System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  - System.IdentityModel.Claims.ClaimSet.System
  - System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Windows
  langs:
  - csharp
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
  type: Class
  summary: "Representerar mängden anspråk som är associerade med en entitet."
  remarks: "När klassen ClaimSet har skapats, kan inte ändras.       Undersöka innehållet i en ClaimSet för vissa typer av anspråk är en vanlig åtgärd när du använder anspråksbaserad auktorisering. Om du vill kontrollera en ClaimSet förekomst av särskilda anspråk att använda den <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A>metoden.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A> Metoden ger bättre prestanda än iterera direkt via ClaimSet."
  example:
  - >-
    [!code-cs[c_ClaimSet#1](~/add/codesnippet/csharp/t-system.identitymodel.c_1_1.cs)]
     [!code-vb[c_ClaimSet#1](~/add/codesnippet/visualbasic/t-system.identitymodel.c_1_1.vb)]
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(Namespace="http://schemas.xmlsoap.org/ws/2005/05/identity")]

      public abstract class ClaimSet : System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> klass."
  remarks: "Reserverat för framtida användning."
  syntax:
    content: protected ClaimSet ();
    parameters: []
  overload: System.IdentityModel.Claims.ClaimSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  id: ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Anger om den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> innehåller den angivna <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>."
  remarks: "Om du vill hitta det angivna anspråket anropa den <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>metoden.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "Den <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> som ska eftersökas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna anspråket finns i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  id: ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Anger om den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> innehåller den angivna <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>, med hjälp av den angivna &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; objekt."
  remarks: "Om du vill hitta det angivna anspråket anropa den <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>metoden.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim, System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim> comparer);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "Den <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> som ska eftersökas."
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
      description: "Den &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; objekt som används för att göra jämförelsen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna anspråket finns i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>, annars<xref uid=&quot;langword_csharp_false.&quot; name=&quot;false.&quot; href=&quot;&quot;></xref>"
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Count
  id: Count
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Hämtar antalet anspråk i den här anspråksuppsättningen när åsidosätts i en härledd klass."
  remarks: "För att få ett enskilt anspråk, använda den <xref:System.IdentityModel.Claims.ClaimSet.Item%2A>egenskapen.</xref:System.IdentityModel.Claims.ClaimSet.Item%2A>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "Antalet anspråk i den här <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  id: FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "När åsidosätts i härledda klassen söker efter en <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objekt som matchar den angivna Anspråkstypen och rättigheter i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "Att fastställa om det här <xref:System.IdentityModel.Claims.ClaimSet>innehåller anspråket utan att returnera anspråket anropet den <xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A>metoden.</xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  example:
  - >-
    [!code-cs[c_ClaimSet#2](~/add/codesnippet/csharp/m-system.identitymodel.c_1.cs)]
     [!code-vb[c_ClaimSet#2](~/add/codesnippet/visualbasic/m-system.identitymodel.c_1.vb)]
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim> FindClaims (string claimType, string right);
    parameters:
    - id: claimType
      type: System.String
      description: "Uniform resource identifier (URI) av en typ av anspråk. Flera anspråk typer är tillgängliga som statiska egenskaper för den <xref href=&quot;System.IdentityModel.Claims.ClaimTypes&quot;> </xref> klass."
    - id: right
      type: System.String
      description: "URI för höger som är associerade med det nya anspråket. Flera rättigheter som är tillgängliga som statiska egenskaper för den <xref href=&quot;System.IdentityModel.Claims.Rights&quot;> </xref> klass."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
      description: "En &lt;xref:System.Collections.Generic.IEnumerable%601&gt; av typen <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> som gör att du kan räkna upp de anspråk som matchar de angivna kriterierna."
  overload: System.IdentityModel.Claims.ClaimSet.FindClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "När åsidosätts i en härledd klass, får en &lt;xref:System.Collections.Generic.IEnumerator%601&gt; som kan användas för att räkna upp de <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objekt i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare. Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
      description: "En &lt;xref:System.Collections.Generic.IEnumerator%601&gt; som kan användas för att räkna upp de <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objekt i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  id: Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "När åsidosätts i en härledd klass, hämtar du den enhet som har utfärdat detta <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "Utfärdaren av anspråk som angetts som returneras av <xref:System.IdentityModel.Claims.ClaimSet.System%2A>egenskapen är <xref:System.IdentityModel.Claims.DefaultClaimSet>.</xref:System.IdentityModel.Claims.DefaultClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.System%2A>"
  syntax:
    content: public abstract System.IdentityModel.Claims.ClaimSet Issuer { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "Den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objekt som har utfärdat detta <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objekt."
  overload: System.IdentityModel.Claims.ClaimSet.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "När åsidosätts i en härledd klass, får den <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> för det angivna indexet."
  syntax:
    content: public abstract System.IdentityModel.Claims.Claim this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Index för anspråk som ska hämtas."
    return:
      type: System.IdentityModel.Claims.Claim
      description: "Den <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> med det angivna indexet."
  overload: System.IdentityModel.Claims.ClaimSet.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System
  id: System
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Hämtar en <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objekt som representerar ett program betrodda utfärdare."
  remarks: "Den här typen av <xref:System.IdentityModel.Claims.ClaimSet>objektet används vanligtvis som värde för den <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>-egenskapen för en <xref:System.IdentityModel.Claims.ClaimSet>som utfärdas av det aktuella programmet.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>       Till exempel när ett program autentiserar ett användarnamn och lösenord, skapas en <xref:System.IdentityModel.Claims.ClaimSet>som representerar användare med den <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>-egenskapen angetts till systemet.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet System { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "Systemet <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objekt."
  overload: System.IdentityModel.Claims.ClaimSet.System*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Hämtar en &lt;xref:System.Collections.Generic.IEnumerator%601&gt; som kan användas för att räkna upp de <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objekt i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "Den `foreach` satsen i C#-språk (`for each` i Visual Basic) döljer komplexiteten i uppräknare. Därför använder `foreach` rekommenderas, i stället för direkt manipulering uppräknaren.       Uppräknare kan användas för att läsa data i samlingen, men de kan inte användas för att ändra den underliggande mängden."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En &lt;xref:System.Collections.Generic.IEnumerator%601&gt; som kan användas för att räkna upp de <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objekt i den <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  id: Windows
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Hämtar en uppsättning anspråk som innehåller Windows säkerhetsidentifierare."
  remarks: "Den här typen av <xref:System.IdentityModel.Claims.ClaimSet>objektet används vanligtvis som värde för den <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>-egenskapen för en <xref:System.IdentityModel.Claims.ClaimSet>som utfärdas av Windows.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet> Till exempel när ett program autentiserar ett användarnamn och lösenord med hjälp av Windows-autentisering, skapas den <xref:System.IdentityModel.Claims.ClaimSet>med den <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>-egenskapen angetts till Windows.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet Windows { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "En <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> som innehåller minst ett anspråk av typen <xref:System.IdentityModel.Claims.ClaimTypes.Sid*>.</xref:System.IdentityModel.Claims.ClaimTypes.Sid*>"
  overload: System.IdentityModel.Claims.ClaimSet.Windows*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Claims.Claim
  parent: System.IdentityModel.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.IdentityModel.Claims.Claim
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
- uid: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Claim>
  nameWithType: IEqualityComparer<Claim>
  fullName: System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Count
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Claim>
  nameWithType: IEnumerator<Claim>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
- uid: System.IdentityModel.Claims.ClaimSet.System
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
- uid: System.IdentityModel.Claims.ClaimSet.#ctor*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim
  nameWithType: ClaimSet.ContainsClaim
- uid: System.IdentityModel.Claims.ClaimSet.Count*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims
  nameWithType: ClaimSet.FindClaims
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ClaimSet.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Issuer*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet.Item*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item
  nameWithType: ClaimSet.Item
- uid: System.IdentityModel.Claims.ClaimSet.System*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
