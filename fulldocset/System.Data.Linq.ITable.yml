### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ITable
  id: ITable
  children:
  - System.Data.Linq.ITable.Attach(System.Object)
  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  - System.Data.Linq.ITable.Attach(System.Object,System.Object)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.ITable.Context
  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  - System.Data.Linq.ITable.IsReadOnly
  langs:
  - csharp
  name: ITable
  nameWithType: ITable
  fullName: System.Data.Linq.ITable
  type: Interface
  summary: "Används för svagt skrivna frågan scenarier."
  remarks: "Mer information om metoder finns <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601>"
  syntax:
    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'
  implements:
  - System.Collections.IEnumerable
  - System.Linq.IQueryable
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Bifogar en enhet kan det <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i ett oförändrat tillstånd."
  remarks: "Mer information om hur du använder den här metoden finns [datahämtning och CUD åtgärder i flera nivåer program (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Enheten som ska anslutas."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  id: Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Bifogar alla entiteter i en samling till den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i ett ändrat eller oförändrat tillstånd."
  remarks: "Mer information om hur du använder den här metoden finns [datahämtning och CUD åtgärder i flera nivåer program (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: "Samling med entiteter."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ansluta entiteterna som ändrad."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  id: Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Bifogar en enhet kan det <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i antingen ett ändrat eller oförändrat tillstånd genom att ange både entiteten och det ursprungliga tillståndet."
  remarks: "Mer information om hur du använder den här metoden finns [datahämtning och CUD åtgärder i flera nivåer program (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: "Enheten som ska anslutas."
    - id: original
      type: System.Object
      description: "En instans av samma entitetstyp med datamedlemmar som innehåller de ursprungliga värdena."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  id: AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Bifogar alla entiteter i en samling till den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i ett ändrat eller oförändrat tillstånd."
  remarks: "Mer information om hur du använder den här metoden finns [datahämtning och CUD åtgärder i flera nivåer program (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Samling med entiteter."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Bifogar alla entiteter i en samling till den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i ett ändrat eller oförändrat tillstånd."
  remarks: "Mer information om hur du använder den här metoden finns [datahämtning och CUD åtgärder i flera nivåer program (LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Samling med entiteter."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ansluta entiteterna som ändrad."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Context
  id: Context
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Hämtar den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> som har använts för att hämta det <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: "Den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> används för att hämta den <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  overload: System.Data.Linq.ITable.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Placerar alla entiteter från samling till en <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> tillstånd."
  remarks: "Anropa <xref:System.Data.Linq.DataContext.SubmitChanges%2A>att utföra den faktiska borttagningen i databasen.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Samlingen som innehåller alla objekt som har tagits bort."
  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  id: DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Placerar en entitet från den här tabellen i en <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> tillstånd."
  remarks: "Frånkopplade entiteter måste kopplas innan de kan tas bort. Anropa <xref:System.Data.Linq.DataContext.SubmitChanges%2A>att utföra den faktiska borttagningen i databasen.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Enheten som ska tas bort."
  overload: System.Data.Linq.ITable.DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  id: GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Returnerar en matris med ändrade medlemmar med de aktuella och ursprungliga värdena."
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Den enhet som du vill hämta matrisen."
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "Returnerar en matris med ändrade medlemmar med de aktuella och ursprungliga värdena."
  overload: System.Data.Linq.ITable.GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  id: GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Hämtar ursprungliga värden."
  remarks: "Tänk på följande:-entitet-argumentet måste vara icke-null. Annars genereras ett undantag för null-argument.      -För strikt typkontroll (`TEntity`)-metoden måste mappas och måste vara en entitetstyp. Det vill säga måste den ha information om objekt-ID i dess mappning. Annars genereras ett fel typ-undantag."
  syntax:
    content: public object GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Det entitet vars ursprungliga värde som ska hämtas."
    return:
      type: System.Object
      description: "En kopia av den ursprungliga enheten. Värdet är null om entiteten skickades inte spåras. Frånkopplade entiteter som skickas tillbaka av en klient måste anslutas innan den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> kan hålla koll på deras tillstånd. &quot;Ursprungliga tillstånd&quot; en nyss bifogad enhet upprättas baserat på värden har angetts av klienten. Datakontexten spårar inte tillståndet för frånkopplade entiteter."
  overload: System.Data.Linq.ITable.GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  id: InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Lägger till alla entiteter i en samling till den <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> i en <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> tillstånd."
  remarks: "Anropa <xref:System.Data.Linq.DataContext.SubmitChanges%2A>att utföra den faktiska infogningen i databasen.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "Att lägga till enheter."
  overload: System.Data.Linq.ITable.InsertAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  id: InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Lägger till en entitet i en <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> till den här tabellen."
  remarks: "Anropa <xref:System.Data.Linq.DataContext.SubmitChanges%2A>att utföra den faktiska infogningen i databasen.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Enheten som ska läggas till."
  overload: System.Data.Linq.ITable.InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anger om typ av enheterna som ingår i detta <xref href=&quot;System.Data.Linq.ITable&quot;> </xref> instansen har en primärnyckel."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Returnerar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om typen inte har en primärnyckel; annars, FALSKT."
  overload: System.Data.Linq.ITable.IsReadOnly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.ITable.Attach(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
- uid: System.Data.Linq.ITable.Context
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: ModifiedMemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.ITable.IsReadOnly
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
- uid: System.Data.Linq.ITable.Attach*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach
  nameWithType: ITable.Attach
- uid: System.Data.Linq.ITable.AttachAll*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll
  nameWithType: ITable.AttachAll
- uid: System.Data.Linq.ITable.Context*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit
  nameWithType: ITable.DeleteAllOnSubmit
- uid: System.Data.Linq.ITable.DeleteOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: ITable.DeleteOnSubmit
- uid: System.Data.Linq.ITable.GetModifiedMembers*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers
  nameWithType: ITable.GetModifiedMembers
- uid: System.Data.Linq.ITable.GetOriginalEntityState*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: ITable.GetOriginalEntityState
- uid: System.Data.Linq.ITable.InsertAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit
  nameWithType: ITable.InsertAllOnSubmit
- uid: System.Data.Linq.ITable.InsertOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit
  nameWithType: ITable.InsertOnSubmit
- uid: System.Data.Linq.ITable.IsReadOnly*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
