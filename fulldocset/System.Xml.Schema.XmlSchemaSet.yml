### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaSet
  id: XmlSchemaSet
  children:
  - System.Xml.Schema.XmlSchemaSet.#ctor
  - System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  - System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaSet.CompilationSettings
  - System.Xml.Schema.XmlSchemaSet.Compile
  - System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  - System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  - System.Xml.Schema.XmlSchemaSet.Count
  - System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  - System.Xml.Schema.XmlSchemaSet.GlobalElements
  - System.Xml.Schema.XmlSchemaSet.GlobalTypes
  - System.Xml.Schema.XmlSchemaSet.IsCompiled
  - System.Xml.Schema.XmlSchemaSet.NameTable
  - System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaSet.Schemas
  - System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  - System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaSet.XmlResolver
  langs:
  - csharp
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
  type: Class
  summary: "Innehåller en cache med XML-Schema definition language (XSD) scheman."
  remarks: "> [!IMPORTANT]> – Använd inte scheman från okända källor eller platser. Då kommer att kompromettera säkerheten för din kod.   >-XML-scheman (inklusive infogade scheman) är natur sårbar för denial of service-attacker. inte acceptera villkoren i ej betrodda scenarier.   >-Schemat verifieringsmeddelanden fel och undantag kan visa känslig information om innehållsmodellen eller URI sökvägar till schemafilen. Var noga med att inte visa den här informationen till ej betrodda anropare.   >-Ytterligare säkerhetsaspekter beskrivs i avsnittet &quot;Säkerhetsaspekter&quot;.       XmlSchemaSet är en cache eller ett bibliotek där du kan lagra XML Schema definition language (XSD) scheman. XmlSchemaSet förbättrar prestandan genom cachelagring scheman i minnet i stället för att komma åt dem från en fil eller en URL. Varje schema identifieras med namnområdes-URI och plats som har angetts när schemat har lagts till i uppsättningen. Du använder den <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>egenskap att tilldela objektet XmlSchemaSet XML-läsaren ska använda för verifiering.</xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=fullName>      ## Säkerhetsaspekter – Använd inte scheman från okända källor. Då kommer att kompromettera säkerheten för din kod. Externa namnområden eller platser som refereras i inkluderar, matchas importera och omdefiniering element i ett schema med avseende på det schema som innehåller eller importerar dem bas-URI. Till exempel om bas-URI för inklusive eller importera schemat är tom eller `null`, externa platser kan lösas med avseende på den aktuella katalogen. Den <xref:System.Xml.XmlUrlResolver>klassen används för att lösa externa scheman som standard.</xref:System.Xml.XmlUrlResolver> Om du vill inaktivera lösning av inkludera import, och definiera om element i ett schema, ange den <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>egenskapen `null`.</xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=fullName>      -XmlSchemaSet klassen använder den <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>klassen för att parsa och matcha reguljära uttryck i ett XML-schema.</xref:System.Text.RegularExpressions.Regex?displayProperty=fullName> Validering av mönsteraspekter med reguljära uttryck i en XML-schemat kan omfatta ökade CPU-användning och bör inte användas i scenarier med hög tillgänglighet.      -Undantag som uppstått på grund av med hjälp av klassen XmlSchemaSet, till exempel den <xref:System.Xml.Schema.XmlSchemaException>klassen kan innehålla känslig information som inte ska visas i ej betrodda scenarier.</xref:System.Xml.Schema.XmlSchemaException> Till exempel den <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>egenskapen för ett <xref:System.Xml.Schema.XmlSchemaException>Returnerar URI-sökväg till schemafilen som orsakade undantaget.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Den <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>egenskapen ska inte visas i ej betrodda scenarier.</xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Undantag bör hanteras korrekt så att känslig information inte visas i ej betrodda scenarier."
  example:
  - "The following example validates an XML file using schemas stored in the XmlSchemaSet. The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the XmlSchemaSet to use for validation.  \n  \n [!code-cpp[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_0_1.cpp)]\n [!code-cs[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlReader_Validate_SchemaSet#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_0_1.vb)]  \n  \n## Input  \n The sample uses the following two input files.  \n  \n **booksSchemaFail.xml:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_2.xml)]  \n  \n **books.xsd:**  \n  \n [!code-xml[XmlReader_Validate_SchemaSet#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_0_3.xsd)]  \n  \n## Output  \n Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'. Expected 'title' in namespace 'urn:bookstore-schema'.  \n  \n Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'. Expected 'first-name' in namespace 'urn:bookstore-schema'."
  syntax:
    content: public class XmlSchemaSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> klass."
  syntax:
    content: public XmlSchemaSet ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> klass med angivna <xref:System.Xml.XmlNameTable>.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public XmlSchemaSet (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "Den <xref:System.Xml.XmlNameTable>objekt som ska användas.</xref:System.Xml.XmlNameTable>"
  overload: System.Xml.Schema.XmlSchemaSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.XmlNameTable>objektet skickas som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlNameTable>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  id: Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lägger till den angivna <xref:System.Xml.Schema.XmlSchema>till den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  remarks: "Om den <xref:System.Xml.Schema.XmlSchema>objektet finns redan i den <xref:System.Xml.Schema.XmlSchemaSet>, metoden Add händer ingenting.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchema>       Funktionerna i den här metoden är identisk med den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objekt att lägga till den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt om schemat är ogiltigt.</xref:System.Xml.Schema.XmlSchema> Om schemat inte är giltigt och <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> har angetts <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras och lämplig verifiering händelsen inträffar. Annars en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> genereras."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objektet skickas som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  id: Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lägger till alla XML-Schema definition language (XSD) scheman i den angivna <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> till den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Innan du kan lägga till ett schema till en <xref:System.Xml.Schema.XmlSchemaSet>, den måste vara korrekt meddelandefilsposter.</xref:System.Xml.Schema.XmlSchemaSet> Förbearbetning utför följande grundläggande uppgifter.      1.  Schemat är markerad för strukturella giltighet enligt reglerna för W3C XML-Schema, men schemat valideras inte fullständigt.      2.  Referenser till interna och externa schemakomponenter har åtgärdats. Alla importerade eller ingår scheman som har hämtats också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerade scheman läggs till som separata <xref:System.Xml.Schema.XmlSchema>objekt, och ingår scheman görs en del av inklusive <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Om den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen för den <xref:System.Xml.Schema.XmlSchemaSet>att lägga till är `true`, alla scheman i den <xref:System.Xml.Schema.XmlSchemaSet>att lägga till läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Om den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen för den <xref:System.Xml.Schema.XmlSchemaSet>att lägga till är `false`, varje schemat som lagts till meddelandefilsposter innan avsnittet läggs.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> Om något av scheman i den nyligen tillagda <xref:System.Xml.Schema.XmlSchemaSet>inte kan vara meddelandefilsposter inga scheman har lagts till, i stället en <xref:System.Xml.Schema.XmlSchemaException>genereras.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet> Därför kan två kodexemplet inte är jämbördiga.      ```vb#   &quot; First example   schemaSet.Add(schemaSet1)      &quot; Second example   Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          schemaSet.Add(schema)      Next   ```      ```c#   // First example   schemaSet.Add(schemaSet1);      // Second example   foreach(XmlSchema schema in schemaSet.Schemas())   {       schemaSet.Add(schema);   }   ```Föregående två kodexempel är inte jämbördiga. I det första exemplet, om det finns ett ogiltigt schema i `schemaSet1` och dess <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskap är inställd på `false`, inga scheman har lagts till i `schemaSet`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> I det andra exemplet flera scheman kan läggas till `schemaSet` innan har stött på ett ogiltigt schema och ett undantag."
  example:
  - "The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the Add method.  \n  \n```vb#  \nDim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  \nschemaSet2.Add(schemaSet1)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet1 = new XmlSchemaSet();  \nschemaSet1.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet1.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchemaSet schemaSet2 = new XmlSchemaSet();  \nschemaSet2.Add(schemaSet1);  \n```"
  syntax:
    content: public void Add (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Ett schema i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektet skickas som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lägger till XML-Schema definition language (XSD) schemat på den angivna Webbadressen för att den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Innan du kan lägga till ett schema till en <xref:System.Xml.Schema.XmlSchemaSet>, den måste vara korrekt meddelandefilsposter.</xref:System.Xml.Schema.XmlSchemaSet> Förbearbetning utför följande grundläggande uppgifter.      1.  Schemat är markerad för strukturella giltighet enligt reglerna för W3C XML-Schema, men schemat valideras inte fullständigt.      2.  Referenser till interna och externa schemakomponenter har åtgärdats. Alla importerade eller ingår scheman som har hämtats också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerade scheman läggs till som separata <xref:System.Xml.Schema.XmlSchema>objekt, och ingår scheman görs en del av inklusive <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Följande är viktigt att tänka på när du använder metoden Add.      -Lägger till ett schema till den <xref:System.Xml.Schema.XmlSchemaSet>med samma mål namnområde och schema-URL: en som ett schema som redan ingår i den <xref:System.Xml.Schema.XmlSchemaSet>returneras det ursprungliga schemaobjektet.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      -När ett nytt schema har lagts till en <xref:System.Xml.Schema.XmlSchemaSet>, <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>-egenskapen för den <xref:System.Xml.Schema.XmlSchemaSet>anges till `false`.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>      – Alla inkludera eller importera element påträffades i ett XML-schema matchas när Add-metod anropas. Det gick inte att matcha inkluderar och importera element resulterar i en varning för validering av schemat och om ingen <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>har angetts för den <xref:System.Xml.Schema.XmlSchemaSet>objektet dessa varning rapporteras inte.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>      – Om ett schema med samma målnamnområdet som ett schema som redan finns i den <xref:System.Xml.Schema.XmlSchemaSet>läggs till i <xref:System.Xml.Schema.XmlSchemaSet>, både scheman läggs.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>          > [!NOTE] > Det här beteendet skiljer sig från den föråldrade <xref:System.Xml.Schema.XmlSchemaCollection>objektet.</xref:System.Xml.Schema.XmlSchemaCollection>      -Metoden Lägg till i den <xref:System.Xml.Schema.XmlSchemaSet>har möjligheten att använda målnamnområdet definieras i ett schema, i stället för att målnamnområdet anges som en parameter när Add-metod anropas.</xref:System.Xml.Schema.XmlSchemaSet> Ange `null` i den `targetNamespace` -parametern för metoden Add instruerar den <xref:System.Xml.Schema.XmlSchemaSet>att använda målnamnområdet som definierats i schemat, enligt beskrivningen i följande kodexempel.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(Nothing, &quot;books.xsd&quot;)      Dim schema As XmlSchema   For Each schema In schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;)       schema.Write(Console.Out)   Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;books.xsd&quot;);      foreach(XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/books&quot;))   {       schema.Write(Console.Out);   }   ```I exemplet ovan, `null` har angetts som den `targetNamespace` parameter till metoden Add. Därför kan den `targetNamespace` definieras i books.xml filen används. I det här fallet resultatet av metoden Add anropades skulle vara identiska om http://www.contoso.com/books hade angetts som den `targetNamespace` parameter.      -W3C XML-schemat kan scheman utan ett målnamnområde ska ingå i scheman med ett definierat målnamnområde. I det här fallet tvingas schemat utan ett målnamnområde definierats till målnamnområdet för det inkluderade schemat. Inkluderade schemat behandlas som om den hade den målnamnområde som definierats. På liknande sätt scheman utan ett målnamnområde kan läggas till i <xref:System.Xml.Schema.XmlSchemaSet>och tvingas till målnamnområde som angetts av Add-metod som illustreras i följande exempel.</xref:System.Xml.Schema.XmlSchemaSet>      ```   <xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>       <xs:element name=&quot;A&quot; type=&quot;xs:string&quot; />   </xs:schema>   ```Om schemat ovan läggs till i <xref:System.Xml.Schema.XmlSchemaSet>med mål namnområde http://www.contoso.com/new/targetnamespace (som visas i följande kodexempel) behandlas som om målnamnområdet som deklarerats i schemat har `http://www.contoso.com/new/targetnamespace`.</xref:System.Xml.Schema.XmlSchemaSet>      ```vb#   Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;)      Dim schema As XmlSchema      For Each schema in schemaSet.Schemas()          Console.WriteLine(schema.TargetNamespace)         Next   ```      ```c#   XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(&quot;http://www.contoso.com/new/targetnamespace&quot;, &quot;http://www.contoso.com/targetnamespace.xsd&quot;);   foreach(XmlSchema schema in schemaSet.Schemas())   {       Console.WriteLine(schema.TargetNamespace);   }   ```"
  example:
  - "The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n```  \n  \n The example uses the `books.xsd` file as input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_3_1.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` egenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda den `targetNamespace` anges i schemat."
    - id: schemaUri
      type: System.String
      description: "Den URL som anger att läsa in schemat."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt om schemat är ogiltigt.</xref:System.Xml.Schema.XmlSchema> Om schemat inte är giltigt och <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> har angetts <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras och lämplig verifiering händelsen inträffar. Annars en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> genereras."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den URL som skickades som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller <xref:System.String.Empty>.</xref:System.String.Empty>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  id: Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lägger till XML-Schema definition language (XSD) schemat finns i den <xref:System.Xml.XmlReader>till den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Innan du kan lägga till ett schema till en <xref:System.Xml.Schema.XmlSchemaSet>, den måste vara korrekt meddelandefilsposter.</xref:System.Xml.Schema.XmlSchemaSet> Förbearbetning utför följande grundläggande uppgifter.      1.  Schemat är markerad för strukturella giltighet enligt reglerna för W3C XML-Schema, men schemat valideras inte fullständigt.      2.  Referenser till interna och externa schemakomponenter har åtgärdats. Alla importerade eller ingår scheman som har hämtats också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerade scheman läggs till som separata <xref:System.Xml.Schema.XmlSchema>objekt, och ingår scheman görs en del av inklusive <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema>       Följande är viktigt att tänka på när du använder metoden Add.      -Har läst in scheman importeras eller inkluderad scheman som finns i <xref:System.Xml.XmlReader>också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader>      -Om den <xref:System.Xml.XmlReader>är inte placerad i rotelementet, en <xref:System.Xml.Schema.XmlSchemaException>genereras såvida inte det aktuella objektet är ett element.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.XmlReader> Om det aktuella objektet är en `xs:schema` elementet schemadokumentet läses in i den <xref:System.Xml.Schema.XmlSchemaSet>, annars en <xref:System.Xml.Schema.XmlSchemaException>genereras eftersom schemat inte är giltigt.</xref:System.Xml.Schema.XmlSchemaException> </xref:System.Xml.Schema.XmlSchemaSet>      -Om den <xref:System.Xml.XmlReader>placeras över en sekvens med XML-noder läggs till den första noden i sekvensen.</xref:System.Xml.XmlReader>      -Om schemat skapades från en <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>metodanrop, värdet för den <xref:System.Xml.Schema.XmlSchemaValidationFlags>egenskapen ignoreras eftersom infogade schemat bearbetning inte har tillämpats för W3C XML-schemadokument.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName>      - <xref:System.Xml.XmlResolver>-Egenskapen för den <xref:System.Xml.XmlReader>inte används för att lösa referenser till namnområden eller schemat platser i inkludera och importera element.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlResolver> I stället den <xref:System.Xml.XmlResolver>egenskapen för den <xref:System.Xml.Schema.XmlSchemaSet>används.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      -Metoden Lägg till i den <xref:System.Xml.Schema.XmlSchemaSet>har möjligheten att använda målnamnområdet definieras i ett schema, i stället för att målnamnområdet anges som en parameter när Add-metod anropas.</xref:System.Xml.Schema.XmlSchemaSet> Ange `null` eller <xref:System.String.Empty?displayProperty=fullName>att lägga till metoden anger det <xref:System.Xml.Schema.XmlSchemaSet>att använda målnamnområdet som angetts i schemat.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.String.Empty?displayProperty=fullName> Ett exempel på detta finns i <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metod.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Återstående funktionerna i den här metoden är identisk med den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A>"
  example:
  - "The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", New XmlTextReader(\"books.xsd\")  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", new XmlTextReader(\"books.xsd\");  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` egenskapen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda den `targetNamespace` anges i schemat."
    - id: schemaDocument
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>objekt.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt om schemat är ogiltigt.</xref:System.Xml.Schema.XmlSchema> Om schemat inte är giltigt och <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> har angetts <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras och lämplig verifiering händelsen inträffar. Annars en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> genereras."
  overload: System.Xml.Schema.XmlSchemaSet.Add*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.XmlReader>objektet skickas som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  id: CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar eller anger den <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> för den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "<xref:System.Xml.Schema.XmlSchemaCompilationSettings>Klassen anger unika partikel tillskrivningar UPA () validering alternativ för <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaCompilationSettings> Mer information om hur du aktiverar UPA kontroller finns i <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>egenskap.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaCompilationSettings
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;></xref> for the <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>. Standardvärdet är en <xref href=&quot;System.Xml.Schema.XmlSchemaCompilationSettings&quot;> </xref> instans med den <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>egenskapen <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck*>"
  overload: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  id: Compile
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kompilerar XML-Schema definition language (XSD) scheman läggs till i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> till en logisk schemat."
  remarks: "Den här metoden anropas automatiskt när verifiering krävs och <xref:System.Xml.Schema.XmlSchemaSet>inte har kompilerats tidigare, till exempel när en <xref:System.Xml.Schema.XmlSchemaSet>används som indata för att skapa en <xref:System.Xml.XmlReader>objekt i den <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>-egenskapen för ett <xref:System.Xml.XmlReaderSettings>objekt.</xref:System.Xml.XmlReaderSettings> </xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Om den <xref:System.Xml.Schema.XmlSchemaSet>är redan i tillståndet kompilerade den här metoden ska inte kompilera om scheman.</xref:System.Xml.Schema.XmlSchemaSet> Om den här metoden körs, den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskap är inställd på `true`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Scheman som tidigare har kompilerats som en <xref:System.Xml.Schema.XmlSchemaSet>inte kompileras.</xref:System.Xml.Schema.XmlSchemaSet> Dock scheman som har kompilerats med metoden kompilera i den <xref:System.Xml.Schema.XmlSchema>kan kompileras.</xref:System.Xml.Schema.XmlSchema>      > [!NOTE] > Måste du anropa <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoden om du har ändrat ett schema (eller någon av dess innehåller/import) har lagt till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Den <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoden kontrollerar schemat för strukturella giltighet enligt reglerna för W3C XML-Schema.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> Den kommer dock inte att utföra en fullständig verifieringen. Den kan också lösa referenser till interna och externa schemakomponenter. Alla importerade eller ingår scheman som har hämtats också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerade scheman läggs till som separata <xref:System.Xml.Schema.XmlSchema>objekt medan inkluderade scheman görs en del av inklusive <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Om anropet till Ombearbeta lyckas den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskap är inställd på false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n```"
  syntax:
    content: public void Compile ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaSet.Compile*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Ett fel uppstod vid verifiering och kompilerar scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  id: Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Anger om ett XML-Schema definition language (XSD) schema med det angivna målet namnområdet-URI är den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Scheman som indirekt läggs till i <xref:System.Xml.Schema.XmlSchemaSet>upptäcks av metoden innehåller; exempelvis importeras scheman.</xref:System.Xml.Schema.XmlSchemaSet> Därför om ett schema för http://www.contoso.com/retail namnområdet som importerar ett schema för namnområdet http://www.contoso.com/books läggs till i <xref:System.Xml.Schema.XmlSchemaSet>, anropar innehåller med `http://www.contoso.com/books` som en parameter returneras `true`.</xref:System.Xml.Schema.XmlSchemaSet>"
  syntax:
    content: public bool Contains (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` egenskapen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om ett schema med det angivna målet namnområdet-URI finns i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  id: Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Anger om angivna XML-Schema definition language (XSD) <xref:System.Xml.Schema.XmlSchema>objektet är i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  syntax:
    content: public bool Contains (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objekt.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Xml.Schema.XmlSchema>objektet är i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> skickades som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  id: CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Kopierar alla de <xref:System.Xml.Schema.XmlSchema>objekt från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> till den angivna matrisen som börjar vid angivet index.</xref:System.Xml.Schema.XmlSchema>"
  remarks: ''
  example:
  - "The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schemas(schemaSet.Count) As XmlSchema  \nschemaSet.CopyTo(schemas, 0)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nXmlSchema[] schemas = new XmlSchema[schemaSet.Count];  \nschemaSet.CopyTo(schemas, 0);  \n```"
  syntax:
    content: public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchema[]
      description: "Kopiera objekt till matrisen."
    - id: index
      type: System.Int32
      description: "Index i matrisen där kopiera börjar."
  overload: System.Xml.Schema.XmlSchemaSet.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Count
  id: Count
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar antalet logiska XML-Schema definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Om det finns två scheman för namnområdet `http://www.contoso.com` i den <xref:System.Xml.Schema.XmlSchemaSet>, egenskapen Count returnerar 1 eftersom scheman som behandlas som en enskild logisk schemat för validering.</xref:System.Xml.Schema.XmlSchemaSet> Men om en schemat för namnområdet `http://www.contoso.com/retail` importeras ett schema för den `http://www.contoso.com/books` namnområde, värdet för egenskapen Antal skulle vara 2."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antalet logiska scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  id: GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar alla globala attribut i XML-Schema-definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Insamling av globala attribut."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  id: GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar alla globala element i XML-Schema-definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "De globala element."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  id: GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar alla globala enkla och komplexa typer i alla XML-Schema-definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Egenskapen GlobalTypes returnerar alltid en typ som representerar den `xs:anyType` komplexa typen."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "Insamling av globala enkla och komplexa typer."
  overload: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  id: IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar ett värde som anger om XML-Schema definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> har kompilerats."
  remarks: "Egenskapen ÄrKompilerat påverkas inte om du redigerar scheman i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Uppdateringar av enskilda scheman i den <xref:System.Xml.Schema.XmlSchemaSet>spåras inte.</xref:System.Xml.Schema.XmlSchemaSet> Därför egenskapen ÄrKompilerat kan vara `true` även om en av scheman som finns i <xref:System.Xml.Schema.XmlSchemaSet>har ändrats, så länge inga scheman har lagts till eller tas bort från <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - For an example of the IsCompiled property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.
  syntax:
    content: public bool IsCompiled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om alla scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> har kompilerats sedan du senast ett schema har lagts till eller tas bort från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  id: NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar standard <xref:System.Xml.XmlNameTable>används av den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> vid inläsning av nya XML-Schema definition language (XSD) scheman.</xref:System.Xml.XmlNameTable>"
  syntax:
    content: public System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "En tabell med atomiserad string-objekt."
  overload: System.Xml.Schema.XmlSchemaSet.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  id: Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Tar bort det angivna XML-Schema definition language (XSD)-schemat från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Ta bort ett schema från den <xref:System.Xml.Schema.XmlSchemaSet>anger den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the Remove method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.Remove(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.Remove(schema);  \n    }  \n}  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objekt att ta bort från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objektet tas bort från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om schemat inte hittades i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.Remove*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat är inte ett giltigt schema."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>skickades som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  id: RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Tar bort det angivna schemat för XML-Schema definition language (XSD) och de scheman som importeras från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Metoden RemoveRecursive tar bort det angivna schemat och alla scheman som importeras från den <xref:System.Xml.Schema.XmlSchemaSet>, så länge det finns inga beroenden på schemat eller dess importerade scheman.</xref:System.Xml.Schema.XmlSchemaSet> Om det är beroende av schemat eller dess importerade scheman i den <xref:System.Xml.Schema.XmlSchemaSet>, ingenting tas bort och RemoveRecursive returnerar `false`.</xref:System.Xml.Schema.XmlSchemaSet> Om `false` returneras och en <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>har definierats, en varning skickas till händelsehanteraren som beskriver beroenden.</xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>       Om det angivna schemat importerar andra scheman och det angivna schemat tidigare togs bort med den <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>metoden RemoveRecursive metoden inte kommer att ta bort de importera scheman och returnerar `false`.</xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> Till exempel om `parentSchema` importerar `childSchema1` och `childSchema2` kommer bara att ta bort följande kod `parentSchema`, men har inte importerats `childSchema1` och `childSchema2` scheman: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.Remove(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` följande kod tar bort den `parentSchema` och importerade scheman: ```   XmlSchemaSet ss = new XmlSchemaSet();   XmlSchema xs = XmlSchema.Read(XmlReader.Create(&quot;parentSchema.xsd&quot;), null);   ss.Add(xs);   ss.Compile();   ss.RemoveRecursive(xs);   ss.Compile();   ``` i RemoveRecursive-metoden har ingen effekt på tillståndet för den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskapen.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the RemoveRecursive method.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    If schema.TargetNamespace = \"http://www.contoso.com/music\" Then  \n        schemaSet.RemoveRecursive(schema)  \n    End If  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/retail\", \"http://www.contoso.com/retail.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Add(\"http://www.contoso.com/music\", \"http://www.contoso.com/music.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    if (schema.TargetNamespace == \"http://www.contoso.com/music\")  \n    {  \n        schemaSet.RemoveRecursive(schema);  \n    }  \n}  \n```"
  syntax:
    content: public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);
    parameters:
    - id: schemaToRemove
      type: System.Xml.Schema.XmlSchema
      description: "Den <xref:System.Xml.Schema.XmlSchema>objekt att ta bort från den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Xml.Schema.XmlSchema>objektet och alla dess importer var har tagits bort, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>skickades som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  id: Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ombearbeta ett XML-Schema definition language (XSD) schema som redan finns i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Ombearbetning ett schema utför alla förbearbetning åtgärder som utförs på ett schema när den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>metoden anropas.</xref:System.Xml.Schema.XmlSchemaSet.Add%2A> Om anropet för att bearbeta på nytt lyckas den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskap är inställd på `false`.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>       Bearbeta på nytt-metoden ska användas efter ett schema i den <xref:System.Xml.Schema.XmlSchemaSet>har ändrats, efter den <xref:System.Xml.Schema.XmlSchemaSet>har utfört kompilering.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > Måste du anropa metoden bearbeta på nytt om du har ändrat ett schema (eller någon av dess innehåller/import) när du lägger till den i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Metoden bearbeta på nytt kommer finns i schemat för strukturella giltighet enligt reglerna för W3C XML-Schema. Den kommer dock inte att utföra en fullständig verifieringen. Den kan också lösa referenser till interna och externa schemakomponenter. Alla importerade eller ingår scheman som har hämtats också läggs till i <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Importerade scheman läggs till som separata <xref:System.Xml.Schema.XmlSchema>objekt medan inkluderade scheman görs en del av inklusive <xref:System.Xml.Schema.XmlSchema>.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema> Om anropet till Ombearbeta lyckas den <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>egenskap är inställd på false.</xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>"
  example:
  - "The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>. After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified. Calling the Reprocess method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nDim schema As XmlSchema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \nschemaSet.Compile()  \n  \nDim element As XmlSchemaElement = New XmlSchemaElement()  \nschema.Items.Add(element)  \nelement.Name = \"book\"  \nelement.SchemaTypeName = New XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\")  \n  \nschemaSet.Reprocess(schema)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nXmlSchema schema = schemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \nschemaSet.Compile();  \n  \nXmlSchemaElement element = new XmlSchemaElement();  \nschema.Items.Add(element);  \nelement.Name = \"book\";  \nelement.SchemaTypeName = new XmlQualifiedName(\"string\", \"http://www.w3.org/2001/XMLSchema\");  \n  \nschemaSet.Reprocess(schema);  \n```"
  syntax:
    content: public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Schemat att Ombearbeta."
    return:
      type: System.Xml.Schema.XmlSchema
      description: "En <xref:System.Xml.Schema.XmlSchema>objekt om schemat är ett giltigt schema.</xref:System.Xml.Schema.XmlSchema> Om schemat inte är giltigt och <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> anges <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras och lämplig verifiering händelsen inträffar. Annars en <xref href=&quot;System.Xml.Schema.XmlSchemaException&quot;> </xref> genereras."
  overload: System.Xml.Schema.XmlSchemaSet.Reprocess*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Schemat är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objektet skickas som en parameter är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.Xml.Schema.XmlSchema>objektet skickas som en parameter inte redan finns i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  id: Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returnerar en mängd med alla XML-Schema-definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  remarks: "Den här metoden returnerar scheman som har lagts till indirekt till den <xref:System.Xml.Schema.XmlSchemaSet>eftersom de har importerats.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > I scheman metoden är motsvarigheten till <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>metoden i föråldrade <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas()  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas())  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Ett <xref:System.Collections.ICollection>-objekt som innehåller alla scheman som har lagts till i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Collections.ICollection> Om inga scheman inte har lagts till i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, en tom <xref:System.Collections.ICollection>objekt returneras.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  id: Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returnerar en mängd med alla XML-Schema-definition language (XSD) scheman i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som hör till det angivna namnområdet."
  remarks: "Om den `targetNamespace` parametern är `null` eller <xref:System.String.Empty>, och sedan returneras alla scheman utan ett namnområde.</xref:System.String.Empty>       Den här metoden returnerar scheman som har lagts till indirekt till den <xref:System.Xml.Schema.XmlSchemaSet>eftersom de har importerats.</xref:System.Xml.Schema.XmlSchemaSet>      > [!NOTE] > I scheman metoden är motsvarigheten till <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>metoden i föråldrade <xref:System.Xml.Schema.XmlSchemaCollection>.</xref:System.Xml.Schema.XmlSchemaCollection> </xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>"
  example:
  - "The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\")  \n  \nDim schema As XmlSchema  \n  \nFor Each schema In schemaSet.Schemas(\"http://www.contoso.com/books\")  \n  \n    schema.Write(Console.Out)  \n  \nNext  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(\"http://www.contoso.com/books\", \"http://www.contoso.com/books.xsd\");  \n  \nforeach (XmlSchema schema in schemaSet.Schemas(\"http://www.contoso.com/books\"))  \n{  \n    schema.Write(Console.Out);  \n}  \n```"
  syntax:
    content: public System.Collections.ICollection Schemas (string targetNamespace);
    parameters:
    - id: targetNamespace
      type: System.String
      description: "Schemat `targetNamespace` egenskapen."
    return:
      type: System.Collections.ICollection
      description: "Ett <xref:System.Collections.ICollection>-objekt som innehåller alla scheman som har lagts till i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> som hör till det angivna namnområdet.</xref:System.Collections.ICollection> Om inga scheman inte har lagts till i <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>, en tom <xref:System.Collections.ICollection>objekt returneras.</xref:System.Collections.ICollection>"
  overload: System.Xml.Schema.XmlSchemaSet.Schemas*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Anger en händelsehanterare för emot information om XML-Schema definition language (XSD) schemavalideringsfel."
  remarks: "Anger en händelsehanterare för att ta emot information om schemavalideringsfel när den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>eller <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>metoder för den <xref:System.Xml.Schema.XmlSchemaSet>kallas.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A>       Om en händelsehanterare inte är definierad, en <xref:System.Xml.Schema.XmlSchemaException>genereras för eventuella verifieringsfel där <xref:System.Xml.Schema.XmlSeverityType>är <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaException> Undantag utlöses inte verifieringsfel med en <xref:System.Xml.Schema.XmlSeverityType>av <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType>"
  example:
  - "The following code example illustrates adding a ValidationEventHandler to capture errors and warnings when validating an XML document against a schema.  \n  \n [!code-cs[XmlSchemaSetOverall Example#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[XmlSchemaSetOverall Example#1](~/add/codesnippet/cpp/e-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[XmlSchemaSetOverall Example#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_2_1.vb)]  \n  \n The example uses the books.xml file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_2.xml)]  \n  \n The example uses the books.xsd file as an input.  \n  \n [!code-xml[XmlSchemaSetOverall Example#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_2_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Anger den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha namnområden eller platser som refereras i inkludera och importera element i ett schema."
  remarks: "Den <xref:System.Xml.XmlResolver>av en <xref:System.Xml.Schema.XmlSchemaSet>används för att lösa namnområden eller platser som refereras i inkludera och importera element i ett schema, helst ett schema har lagts till med hjälp av den <xref:System.Xml.Schema.XmlSchemaSet.Add%2A>eller <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>metoder.</xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> </xref:System.Xml.Schema.XmlSchemaSet.Add%2A> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlResolver>      > [!IMPORTANT] > Externa namnområden eller platser som refereras i inkluderar, importera och omdefiniering element i ett schema matchas med avseende på det schema som innehåller eller importerar dem bas-URI. Till exempel om bas-URI för inklusive eller importera schemat är tom eller `null`, externa platser kan lösas med avseende på den aktuella katalogen. Den <xref:System.Xml.XmlUrlResolver>klassen används för att lösa externa scheman som standard.</xref:System.Xml.XmlUrlResolver> Om du vill inaktivera lösning av inkludera import- och omdefiniering element i ett schema för egenskapen XmlResolver `null`."
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha namnområden eller platser som refereras i inkludera och importera element i ett schema."
  overload: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaSet.#ctor
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet()
  nameWithType: XmlSchemaSet.XmlSchemaSet()
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet()
- uid: System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet(XmlNameTable)
  nameWithType: XmlSchemaSet.XmlSchemaSet(XmlNameTable)
  fullName: System.Xml.Schema.XmlSchemaSet.XmlSchemaSet(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchema)
  nameWithType: XmlSchemaSet.Add(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(XmlSchemaSet)
  nameWithType: XmlSchemaSet.Add(XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,String)
  nameWithType: XmlSchemaSet.Add(String,String)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add(String,XmlReader)
  nameWithType: XmlSchemaSet.Add(String,XmlReader)
  fullName: System.Xml.Schema.XmlSchemaSet.Add(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
  fullName: System.Xml.Schema.XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaCompilationSettings
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaCompilationSettings
  nameWithType: XmlSchemaCompilationSettings
  fullName: System.Xml.Schema.XmlSchemaCompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile()
  nameWithType: XmlSchemaSet.Compile()
  fullName: System.Xml.Schema.XmlSchemaSet.Compile()
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(String)
  nameWithType: XmlSchemaSet.Contains(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains(XmlSchema)
  nameWithType: XmlSchemaSet.Contains(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Contains(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo(XmlSchema[],Int32)
  nameWithType: XmlSchemaSet.CopyTo(XmlSchema[],Int32)
  fullName: System.Xml.Schema.XmlSchemaSet.CopyTo(XmlSchema[],Int32)
- uid: System.Xml.Schema.XmlSchema[]
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchema
    name: XmlSchema
    nameWithType: XmlSchema
    fullName: XmlSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlSchemaSet.Count
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
  fullName: System.Xml.Schema.XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
  fullName: System.Xml.Schema.XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
  fullName: System.Xml.Schema.XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
  fullName: System.Xml.Schema.XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove(XmlSchema)
  nameWithType: XmlSchemaSet.Remove(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Remove(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive(XmlSchema)
  nameWithType: XmlSchemaSet.RemoveRecursive(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.RemoveRecursive(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess(XmlSchema)
  nameWithType: XmlSchemaSet.Reprocess(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaSet.Reprocess(XmlSchema)
- uid: System.Xml.Schema.XmlSchemaSet.Schemas
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas()
  nameWithType: XmlSchemaSet.Schemas()
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Xml.Schema.XmlSchemaSet.Schemas(System.String)
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas(String)
  nameWithType: XmlSchemaSet.Schemas(String)
  fullName: System.Xml.Schema.XmlSchemaSet.Schemas(String)
- uid: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaSet.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaSet.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaSet.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaSet.#ctor*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet.XmlSchemaSet
- uid: System.Xml.Schema.XmlSchemaSet.Add*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Add
  nameWithType: XmlSchemaSet.Add
- uid: System.Xml.Schema.XmlSchemaSet.CompilationSettings*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CompilationSettings
  nameWithType: XmlSchemaSet.CompilationSettings
- uid: System.Xml.Schema.XmlSchemaSet.Compile*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Compile
  nameWithType: XmlSchemaSet.Compile
- uid: System.Xml.Schema.XmlSchemaSet.Contains*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Contains
  nameWithType: XmlSchemaSet.Contains
- uid: System.Xml.Schema.XmlSchemaSet.CopyTo*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: CopyTo
  nameWithType: XmlSchemaSet.CopyTo
- uid: System.Xml.Schema.XmlSchemaSet.Count*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Count
  nameWithType: XmlSchemaSet.Count
- uid: System.Xml.Schema.XmlSchemaSet.GlobalAttributes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalAttributes
  nameWithType: XmlSchemaSet.GlobalAttributes
- uid: System.Xml.Schema.XmlSchemaSet.GlobalElements*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalElements
  nameWithType: XmlSchemaSet.GlobalElements
- uid: System.Xml.Schema.XmlSchemaSet.GlobalTypes*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: GlobalTypes
  nameWithType: XmlSchemaSet.GlobalTypes
- uid: System.Xml.Schema.XmlSchemaSet.IsCompiled*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: IsCompiled
  nameWithType: XmlSchemaSet.IsCompiled
- uid: System.Xml.Schema.XmlSchemaSet.NameTable*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: NameTable
  nameWithType: XmlSchemaSet.NameTable
- uid: System.Xml.Schema.XmlSchemaSet.Remove*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Remove
  nameWithType: XmlSchemaSet.Remove
- uid: System.Xml.Schema.XmlSchemaSet.RemoveRecursive*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: RemoveRecursive
  nameWithType: XmlSchemaSet.RemoveRecursive
- uid: System.Xml.Schema.XmlSchemaSet.Reprocess*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Reprocess
  nameWithType: XmlSchemaSet.Reprocess
- uid: System.Xml.Schema.XmlSchemaSet.Schemas*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: Schemas
  nameWithType: XmlSchemaSet.Schemas
- uid: System.Xml.Schema.XmlSchemaSet.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaSet
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaSet.XmlResolver
