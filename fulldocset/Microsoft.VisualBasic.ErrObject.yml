### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ErrObject
  id: ErrObject
  children:
  - Microsoft.VisualBasic.ErrObject.Clear
  - Microsoft.VisualBasic.ErrObject.Description
  - Microsoft.VisualBasic.ErrObject.Erl
  - Microsoft.VisualBasic.ErrObject.GetException
  - Microsoft.VisualBasic.ErrObject.HelpContext
  - Microsoft.VisualBasic.ErrObject.HelpFile
  - Microsoft.VisualBasic.ErrObject.LastDllError
  - Microsoft.VisualBasic.ErrObject.Number
  - Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.VisualBasic.ErrObject.Source
  langs:
  - csharp
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
  type: Class
  summary: "Den <xref uid=&quot;langword_csharp_ErrObject&quot; name=&quot;ErrObject&quot; href=&quot;&quot;> </xref> modulen innehåller egenskaper och metoder som används för att identifiera och hantera körningsfel med hjälp av den <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> objekt."
  remarks: "Den `ErrObject` modulen stöder den `Err` objekt. Mer information finns i <xref:Microsoft.VisualBasic.Information.Err%2A>.</xref:Microsoft.VisualBasic.Information.Err%2A>"
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n```  \nDim Msg As String  \n' If an error occurs, construct an error message.  \nOn Error Resume Next   ' Defer error handling.  \nErr.Clear  \nErr.Raise(6)   ' Generate an \"Overflow\" error.  \n' Check for error, then show message.  \nIf Err.Number <> 0 Then  \n    Msg = \"Error # \" & Str(Err.Number) & \" was generated by \" _  \n        & Err.Source & ControlChars.CrLf & Err.Description  \n    MsgBox(Msg, MsgBoxStyle.Information, \"Error\")  \nEnd If  \n```"
  syntax:
    content: public sealed class ErrObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Clear
  id: Clear
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Rensar alla egenskapsinställningar för den <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> objekt."
  remarks: "Använd `Clear` explicit avmarkera den `Err` objekt när ett fel har hanterats, till exempel när du använder uppskjutna felhantering med `On Error Resume Next`. Den `Clear` metoden anropas automatiskt när någon av följande påståenden körs:-någon typ av `Resume` statement - `Exit Sub`, `Exit Function`, eller `Exit Property` – alla `On Error` statement - alla `Try...Catch...Finally` instruktionen > [!NOTE] > den `On Error Resume Next` konstruktion kan det vara bättre att `On Error GoTo` vid hantering av fel uppstod när åtkomst till andra objekt. Kontrollerar `Err` efter varje interaktion med ett objekt som tar bort tvetydighet om vilka objekt öppnade koden: du kan vara säker på vilket objekt som placerats felkoden i `Err.Number`, samt vilka objekttyper som ursprungligen skapade felet (det angivna objektet i `Err.Source`)."
  example:
  - "This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings. Without the call to `Clear`, the second call to `MsgBox` would display the same error message.  \n  \n [!code-vb[VbVbalrErrorHandling#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._141_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.VisualBasic.ErrObject.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Description
  id: Description
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som innehåller en beskrivande sträng som är associerad med ett fel. Läsning och skrivning."
  remarks: "Den `Description` inställningen för egenskapen består av en kort beskrivning av felet. Använd den här egenskapen för att uppmärksamma användare om ett fel som du inte kan eller inte vill hantera. När en användardefinierad fel genereras, tilldela en kort beskrivning av felet för att den `Description` egenskapen. Om den `Description` egenskapen inte är ifylld, och värdet för den <xref:Microsoft.VisualBasic.ErrObject.Number%2A>egenskapen motsvarar ett körningsfel i Visual Basic och sedan strängen som returneras av den <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>funktionen anges i den `Description` egenskapen när felet har genererats.</xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> </xref:Microsoft.VisualBasic.ErrObject.Number%2A>"
  example:
  - "This example assigns a user-defined message to the `Description` property of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som innehåller en beskrivande sträng som är associerad med ett fel. Läsning och skrivning."
  overload: Microsoft.VisualBasic.ErrObject.Description*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Erl
  id: Erl
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar ett heltal som anger numret på den sista körda instruktionen. Skrivskyddad."
  remarks: "Om Visual Basic påträffar inga radnummer, returnerar 0."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n```  \n10:     On Error Resume Next  \n20:     Err.Raise(60000)  \n' Returns 20.  \n30:     MsgBox(Erl())  \n```"
  syntax:
    content: public int Erl { get; }
    return:
      type: System.Int32
      description: "Returnerar ett heltal som anger numret på den sista körda instruktionen. Skrivskyddad."
  overload: Microsoft.VisualBasic.ErrObject.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.GetException
  id: GetException
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar undantaget som motsvarar de fel som inträffade."
  remarks: "Den `GetException` funktionen är endast tillgänglig från den `Err` objektklass. Det fungerar med den `Exception` -egenskapen för den `Err` objekt som ska visas fel som inträffat."
  example:
  - "The following code displays the message assigned to the exception in the `Err` object:  \n  \n [!code-vb[VbVbalrCatRef#66](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._226_1.vb)]"
  syntax:
    content: public Exception GetException ();
    parameters: []
    return:
      type: System.Exception
      description: "Returnerar undantaget som motsvarar de fel som inträffade."
  overload: Microsoft.VisualBasic.ErrObject.GetException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  id: HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> med kontext-ID för ett ämne i en hjälpfil. Läsning och skrivning."
  remarks: "Den `HelpContext` egenskapen används för att visa sammanhangsberoende hjälp för ett program. Om en hjälpfilen har angetts i `HelpFile`, `HelpContext` egenskapen används för att visa hjälpfilen identifieras automatiskt. Om både den `HelpFile` och `HelpContext` egenskaper är tomt, värdet för den <xref:Microsoft.VisualBasic.ErrObject.Number%2A>egenskapen kontrolleras.</xref:Microsoft.VisualBasic.ErrObject.Number%2A> Om värdet för den `Number` egenskapen motsvarar Visual Basic körfel värdet och sedan hjälp för Visual Basic kontext-ID för felet används. Om värdet för den `Number` egenskapen motsvarar inte ett Visual Basic-fel visas skärmen innehållet för filen hjälp för Visual Basic.      > [!NOTE] > Bör du skriva rutiner i ditt program för att hantera vanliga fel. Vid programmering med ett objekt som kan du använda objektets hjälpfilen att förbättra kvaliteten på din felhantering eller att ett meningsfullt meddelande till användaren om felet inte kan återställas."
  example:
  - "This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._34_1.vb)]"
  syntax:
    content: public int HelpContext { get; set; }
    return:
      type: System.Int32
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> med kontext-ID för ett ämne i en hjälpfil. Läsning och skrivning."
  overload: Microsoft.VisualBasic.ErrObject.HelpContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  id: HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som innehåller den fullständiga sökvägen till en hjälpfil. Läsning och skrivning."
  remarks: "Om du anger en hjälpfil av den `HelpFile` egenskapen, det automatiskt anropas när användaren trycker på tangenten Help (eller på F1) i dialogrutan med fel. Om den `HelpContext` -egenskapen innehåller en giltig kontext-ID för den angivna filen, som visas automatiskt. Om ingen `HelpFile` har angetts visas hjälpfilen för Visual Basic.      > [!NOTE] > Bör du skriva rutiner i ditt program för att hantera vanliga fel. Vid programmering med ett objekt som kan du använda objektets hjälpfilen att förbättra kvaliteten på din felhantering eller att ett meningsfullt meddelande till användaren om felet inte kan återställas."
  example:
  - "This example uses the `HelpFile` property of the `Err` object to start the Help system. By default, the `HelpFile` property contains the name of the Visual Basic Help file.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._70_1.vb)]"
  syntax:
    content: public string HelpFile { get; set; }
    return:
      type: System.String
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som innehåller den fullständiga sökvägen till en hjälpfil. Läsning och skrivning."
  overload: Microsoft.VisualBasic.ErrObject.HelpFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  id: LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar en felkod som produceras av ett anrop till en dynamiska länkbiblioteket (DLL). Skrivskyddad."
  remarks: "Egenskapen LastDllError gäller enbart för DLL-anrop från Visual Basic-kod. När sådana ett anrop görs returnerar funktionen kallas vanligtvis en kod som anger lyckad eller misslyckad och egenskapen LastDllError fylls. I dokumentationen för den DLL funktioner att fastställa returvärden som anger lyckad eller misslyckad. När felkoden returneras, ska Visual Basic-program söka egenskapen LastDllError. Inget undantag inträffar när egenskapen LastDllError har angetts.      > [!NOTE] > I LastDllError egenskapen skyddas av <xref:System.Security.Permissions.SecurityAction>, som hjälper dig att förhindra att den åtkomst från icke betrodd kod.</xref:System.Security.Permissions.SecurityAction> Dock <xref:System.Security.Permissions.SecurityAction>kräver den omedelbara anroparen har <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>behörighet.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> </xref:System.Security.Permissions.SecurityAction> Om din kod kan anropas från delvis betrodd kod, utgör exponera värdet för LastDllError utan validering en säkerhetsrisk.   >> För viktiga begränsningar om hur du använder den <xref:System.Security.Permissions.SecurityAction>medlem, se [kräver kontra</xref:System.Security.Permissions.SecurityAction> LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5). Mer information om behörigheter finns <xref:System.Security.Permissions.SecurityPermission>och [kod åtkomstbehörigheter](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>       Observera för smarta enheter på den här egenskapen returnerar alltid noll."
  example:
  - "The following example shows how you can use the `LastDllError` property after calling a function in the Windows API. The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function. `GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window. If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.  \n  \n [!code-vb[VbVbalrErrorHandling#8](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_1.vb)]  \n[!code-vb[VbVbalrErrorHandling#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_2.vb)]  \n[!code-vb[VbVbalrErrorHandling#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_3.vb)]  \n  \n [!code-vb[VbVbalrErrorHandling#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_4.vb)]"
  syntax:
    content: public int LastDllError { get; }
    return:
      type: System.Int32
      description: "Returnerar en felkod som produceras av ett anrop till en dynamiska länkbiblioteket (DLL). Skrivskyddad."
  overload: Microsoft.VisualBasic.ErrObject.LastDllError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Number
  id: Number
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger ett numeriskt värde som anger ett fel. Läsning och skrivning."
  remarks: "Alla de `Raise` argument utom `Number` är valfria. Om du utelämnar valfria argument och egenskapsinställningar för den `Err` objektet innehåller värden som inte har åtgärdats, dessa värden fungerar som värden för din fel.       Eftersom den `Err` objekt ger bättre information än när du genererar fel med den `Error` instruktionen `Raise` är användbart för att generera fel vid skrivning av klassmoduler. Om till exempel den `Raise` metoden källan som genererade fel kan anges i den `Source` egenskapen onlinehjälpen för felet kan refereras och så vidare.       När returnera ett användardefinierat fel från ett objekt, ange `Err.Number` genom att lägga till nummer du har valt som felkod till den `VbObjectError` konstant. Exempelvis kan du använda följande kod för att returnera antalet 1051 som felkod: [!code-vb [VbVbalrErrorHandling #13](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)]"
  example:
  - "This example illustrates a typical use of the `Number` property in an error-handling routine.  \n  \n [!code-vb[VbVbalrErrorHandling#12](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_2.vb)]  \n  \n This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic. The calling function can catch the error and report it to the user. Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_3.vb)]"
  syntax:
    content: public int Number { get; set; }
    return:
      type: System.Int32
      description: "Returnerar eller anger ett numeriskt värde som anger ett fel. Läsning och skrivning."
  overload: Microsoft.VisualBasic.ErrObject.Number*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>är större än 65535."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  id: Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Genererar ett körningsfel; kan användas i stället för den <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> instruktionen."
  remarks: "Alla de `Raise` argument utom `Number` är valfria. Om du utelämnar valfria argument och egenskapsinställningar för den `Err` objektet innehåller värden som inte har åtgärdats, dessa värden fungerar som värden för din fel.       Eftersom den `Err` objekt ger bättre information än när du genererar fel med den `Error` instruktionen `Raise` är användbart för att generera fel vid skrivning av klassmoduler. Om till exempel den `Raise` metoden källan som genererade fel kan anges i den `Source` egenskapen onlinehjälpen för felet kan refereras och så vidare."
  example:
  - "This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic. The calling function can catch the error and report it to the user with a message box.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/b1f4ec6f-36d3-4787-9987-_1.vb)]"
  syntax:
    content: public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);
    parameters:
    - id: Number
      type: System.Int32
      description: "Obligatoriskt. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>heltal som identifierar typ av fel. Visual Basic-fel är i intervallet 0-65535; intervallet 0 – 512 är reserverat för systemfel; intervallet 513 – 65 535 är tillgängligt för anpassade fel. När du ställer in den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen egna felkoden i en klassmodul som du lägger till din felkoden till den <xref uid=&quot;langword_csharp_vbObjectError&quot; name=&quot;vbObjectError&quot; href=&quot;&quot;> </xref> konstant. Till exempel om du vill generera felnumret 513 tilldela `vbObjectError + 513` till den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen."
    - id: Source
      type: System.Object
      description: "Valfritt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttryck namngivning av objektet eller programmet som genererade felet. När den här egenskapen för ett objekt, använda formuläret `project`.`class`. Om `Source` inte anges används för process-ID för det aktuella projektet i Visual Basic."
    - id: Description
      type: System.Object
      description: "Valfritt. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>uttryck som beskriver felet. Om inget anges värdet i den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen undersöks. Om de kan mappas till ett körningsfel i Visual Basic-kod, den sträng som returneras av den <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> funktion används som den <xref uid=&quot;langword_csharp_Description&quot; name=&quot;Description&quot; href=&quot;&quot;> </xref> egenskapen. Om inga Visual Basic-fel som motsvarar den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen meddelandet &quot;program- eller objektdefinierat fel&quot; används."
    - id: HelpFile
      type: System.Object
      description: "Valfritt. Den fullständiga sökvägen till hjälpfilen där hittar du information om felet. Om inget anges används det fullständigt kvalificerade enhet, sökväg och filnamn hjälp för Visual Basic."
    - id: HelpContext
      type: System.Object
      description: "Valfritt. Kontext-ID som identifierar ett ämne inom `HelpFile` som ger hjälp för felet. Om det utelämnas används Visual Basic-hjälpfilen kontext-ID för fel som motsvarar den <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> egenskapen används om den finns."
  overload: Microsoft.VisualBasic.ErrObject.Raise*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Source
  id: Source
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som anger namnet på objektet eller program som ursprungligen skapade felet. Läsning och skrivning."
  remarks: "Den `Source` egenskapen anger en `String` uttryck som representerar objektet som genererade felet; uttrycket är vanligtvis objektets klassnamn eller process-ID. Använd den `Source` egenskapen för att ange information om din kod inte kan hantera ett fel genereras i ett objekt som används. Om du har åtkomst till Microsoft Excel och genererar exempelvis ett `Division by zero` fel, Microsoft Excel anger `Err.Number` till dess felkod för detta fel- och anger `Source` till &quot;Excel.Application&quot;.       När programmet genererar ett fel från kod `Source` är ditt programs programmässiga-ID. I en klass, `Source` ska innehålla ett namn med formatet *projekt*.* klassen*. När ett oväntat fel uppstår i din kod i `Source` egenskapen fylls i automatiskt. Fel i en modul `Source` innehåller projektets namn."
  example:
  - "This example demonstrates the use of the `Source` property in a typical error-handling routine. When an error is raised from `Class1`, the string `\"Class1\"` is assigned to the `Source` property of the `Err` object. This string is then displayed in an informative message indicating the source and number of the error.  \n  \n [!code-vb[VbVbalrErrorHandling#15](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._39_1.vb)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "Returnerar eller anger en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> uttryck som anger namnet på objektet eller program som ursprungligen skapade felet. Läsning och skrivning."
  overload: Microsoft.VisualBasic.ErrObject.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.ErrObject.Clear
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
- uid: Microsoft.VisualBasic.ErrObject.Description
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ErrObject.Erl
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ErrObject.GetException
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
- uid: Microsoft.VisualBasic.ErrObject.Source
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
- uid: Microsoft.VisualBasic.ErrObject.Clear*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear
  nameWithType: ErrObject.Clear
- uid: Microsoft.VisualBasic.ErrObject.Description*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
- uid: Microsoft.VisualBasic.ErrObject.Erl*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
- uid: Microsoft.VisualBasic.ErrObject.GetException*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException
  nameWithType: ErrObject.GetException
- uid: Microsoft.VisualBasic.ErrObject.HelpContext*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise
  nameWithType: ErrObject.Raise
- uid: Microsoft.VisualBasic.ErrObject.Source*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
