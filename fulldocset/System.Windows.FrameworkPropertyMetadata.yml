### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkPropertyMetadata
  id: FrameworkPropertyMetadata
  children:
  - System.Windows.FrameworkPropertyMetadata.#ctor
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  - System.Windows.FrameworkPropertyMetadata.AffectsArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsRender
  - System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  - System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  - System.Windows.FrameworkPropertyMetadata.Inherits
  - System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  - System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  - System.Windows.FrameworkPropertyMetadata.Journal
  - System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  - System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  - System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  - System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  langs:
  - csharp
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata
  fullName: System.Windows.FrameworkPropertyMetadata
  type: Class
  summary: "Rapporter eller gäller metadata för en beroendeegenskap uttryckligen lägga till egenskapen framework-specifika egenskaper."
  remarks: "Den här klassen härleds från <xref:System.Windows.PropertyMetadata>(via <xref:System.Windows.UIPropertyMetadata>).</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> För de flesta WPF application framework-nivå-utveckling är FrameworkPropertyMetadata den typ som används för beroende egenskapens metadata i stället för den grundläggande metadata typer <xref:System.Windows.PropertyMetadata>eller <xref:System.Windows.UIPropertyMetadata>.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> Detta gäller både för befintliga-dependency properties och de flesta scenarier med anpassade beroende egenskap.       Medlemmar som har deklarerats i den här klassen som tillägget i <xref:System.Windows.PropertyMetadata>basklass innehåller olika booleskt egenskaper som anger eller rapporten WPF framework nivå egenskapen systembeteendet som egenskapsarv, databindning och layout.</xref:System.Windows.PropertyMetadata>       Flera konstruktorn signaturer för att skapa en instans av FrameworkPropertyMetadata ta en <xref:System.Windows.FrameworkPropertyMetadataOptions>parameter.</xref:System.Windows.FrameworkPropertyMetadataOptions> Den <xref:System.Windows.FrameworkPropertyMetadataOptions>uppräkningen används bara för att ange inledande beteende i konstruktorn och annars visas inte när FrameworkPropertyMetadata konstrueras.</xref:System.Windows.FrameworkPropertyMetadataOptions> Du kan hämta eller ange motsvarande information via olika egenskaper som resursnamn uppräkningsvärden som används i konstruktorn anropet från en konstruerade instansen.      <a name=&quot;xamlTextUsage_FrameworkPropertyMetadata&quot;></a>## XAML Text användning av den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example gets metadata for a dependency property on a particular owner as the initial base <xref:System.Windows.PropertyMetadata> type. That metadata is cast to FrameworkPropertyMetadata. If the cast returned a valid FrameworkPropertyMetadata, then various FrameworkPropertyMetadata property values are reported through a simple UI (not shown).  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: 'public class FrameworkPropertyMetadata : System.Windows.UIPropertyMetadata'
  inheritance:
  - System.Object
  - System.Windows.PropertyMetadata
  - System.Windows.UIPropertyMetadata
  implements: []
  inheritedMembers:
  - System.Windows.PropertyMetadata.CoerceValueCallback
  - System.Windows.PropertyMetadata.DefaultValue
  - System.Windows.PropertyMetadata.IsSealed
  - System.Windows.PropertyMetadata.PropertyChangedCallback
  - System.Windows.UIPropertyMetadata.IsAnimationProhibited
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  id: '#ctor'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass."
  remarks: "Den här signaturen initierar alla värden i FrameworkPropertyMetadata till standardinställningarna för egenskapen. <xref:System.Windows.PropertyMetadata.DefaultValue%2A>kommer att `null`, och de olika <xref:System.Windows.FrameworkPropertyMetadata>booleska egenskaper kommer att `false`.</xref:System.Windows.FrameworkPropertyMetadata></xref:System.Windows.PropertyMetadata.DefaultValue%2A>"
  syntax:
    content: public FrameworkPropertyMetadata ();
    parameters: []
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med angivet standardvärde."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen, vanligtvis anges som ett värde för en specifik typ."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med det angivna <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> återanrop."
  remarks: ''
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1paramcallback](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1paramcallback)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med det angivna standardvärdet och alternativ i framework-nivå metadata."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>       Värde markeras som uppsättningen flaggor i den `flags` parameter anger booleskt värde för <xref:System.Windows.FrameworkPropertyMetadata>-Egenskaper matchar som <xref:System.Windows.FrameworkPropertyMetadataOptions>Flaggnamn till `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan senare ändra värdena för egenskaperna i metadata, så länge metadata som ännu inte har kopplats till en specifik egenskap systemåtgärd."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen, vanligtvis anges som ett värde för en specifik typ."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativflaggor (en kombination av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> värden). Dessa alternativ anger egenskaper på beroendegenskapen som interagerar med system som layout eller databindning."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med det angivna standardvärdet och angetts <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> återanrop."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor2param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor2param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen, vanligtvis anges som ett värde för en specifik typ."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med de angivna återanrop."
  remarks: "Den här implementeringen anropar en grundläggande initieraren och lägger sedan till den `coerceValueCallback` genom att ange egenskapen på bas-instansen."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referens till en hanterare implementering anropas när egenskapen systemet anropar <xref:System.Windows.DependencyObject.CoerceValue*>för den här beroendeegenskap.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klassen med angivna värdet och framework metadata standardalternativ och angetts <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> återanrop."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>       Värde markeras som uppsättningen flaggor i den `flags` parameter anger booleskt värde för <xref:System.Windows.FrameworkPropertyMetadata>-Egenskaper matchar som <xref:System.Windows.FrameworkPropertyMetadataOptions>Flaggnamn till `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortfarande ändra värdena för egenskaperna i metadata, så länge metadata som ännu inte har kopplats till en specifik egenskap systemåtgärd."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen, vanligtvis anges som ett värde för en specifik typ."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativflaggor (en kombination av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> värden). Dessa alternativ anger egenskaper på beroendegenskapen som interagerar med system som layout eller databindning."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med det angivna standardvärdet och angivna återanrop."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor3param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor3param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen anges vanligtvis som en viss typ."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referens till en hanterare-implementering som anropas när egenskapen systemet anropar <xref:System.Windows.DependencyObject.CoerceValue*>för den här beroendeegenskap.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med det angivna standardvärdet och alternativ i framework metadata angivna återanrop."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>       Värde markeras som uppsättningen flaggor i den `flags` parameter anger booleskt värde för <xref:System.Windows.FrameworkPropertyMetadata>-Egenskaper matchar som <xref:System.Windows.FrameworkPropertyMetadataOptions>Flaggnamn till `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortfarande ändra värdena för egenskaperna i metadata, så länge metadata som ännu inte har kopplats till en specifik egenskap systemåtgärd."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen anges vanligtvis som en viss typ."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativflaggor (en kombination av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> värden). Dessa alternativ anger egenskaper på beroendegenskapen som interagerar med system som layout eller databindning."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referens till en hanterare-implementering som anropas när egenskapen systemet anropar <xref:System.Windows.DependencyObject.CoerceValue*>mot den här egenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med angivna värdet och framework metadata standardalternativen och angivna återanrop ett booleskt värde som kan användas för att förhindra animering för egenskapen."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>       Den `isAnimationProhibited` parametern anger det första värdet i <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>egenskapen deklareras av omedelbar grundläggande <xref:System.Windows.UIPropertyMetadata>klass.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       Värde markeras som uppsättningen flaggor i den `flags` parameter anger booleskt värde för <xref:System.Windows.FrameworkPropertyMetadata>-Egenskaper matchar som <xref:System.Windows.FrameworkPropertyMetadataOptions>Flaggnamn till `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortfarande ändra värdena för egenskaperna i metadata, så länge metadata som ännu inte har kopplats till en specifik egenskap systemåtgärd."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen anges vanligtvis som en viss typ."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativflaggor (en kombination av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> värden). Dessa alternativ anger egenskaper på beroendegenskapen som interagerar med system som layout eller databindning."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referens till en hanterare-implementering som anropas när egenskapen systemet anropar <xref:System.Windows.DependencyObject.CoerceValue*>på den här beroendeegenskap.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att förhindra att systemets egenskapen animera egenskapen som tillämpas på dessa metadata. Dessa egenskaper höjer ett undantag för körning från egenskapen systemet om animeringar av dem. försök görs. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>för att animera egenskapen. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> klass med metadata för angivna standard värdet och framework alternativ, angivna återanrop ett booleskt värde som kan användas för att förhindra att animeringen på egenskapen och databindning update trigger standard."
  remarks: "Typ av värdet för `defaultValue` måste matcha eller vara relaterad till typen i den ursprungliga registreringen av beroendeegenskap som kommer att tillämpas dessa metadata. Matchningsfel mellan metadatatyp för standardvärde och typ av beroendeegenskap som används för kan vara svårt att felsöka, eftersom fel inte kan upptäckas under kompilering. Egenskapen system utvärderas inte det giltiga värdet för en egenskap tills körningstid, så resultatet av en standard typegenskapen/matchningsfel för värdetyp är ett fel under körning.       Värdet <xref:System.Windows.DependencyProperty.UnsetValue>har en särskild innebörd i egenskapen systemet och kan inte användas som en beroende egenskap standardvärde.</xref:System.Windows.DependencyProperty.UnsetValue>       Den `isAnimationProhibited` parametern anger det första värdet i <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>egenskapen deklareras av omedelbar grundläggande <xref:System.Windows.UIPropertyMetadata>klass.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       Mer information om uppdateringen för källan för bindningar finns [bindning översikt över](~/add/includes/ajax-current-ext-md.md).       Värde markeras som uppsättningen flaggor i den `flags` parameter anger booleskt värde för <xref:System.Windows.FrameworkPropertyMetadata>-Egenskaper matchar som <xref:System.Windows.FrameworkPropertyMetadataOptions>Flaggnamn till `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Du kan fortfarande ändra värdena för egenskaperna i metadata, så länge metadata som ännu inte har kopplats till en specifik egenskap systemåtgärd."
  example:
  - "[!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP_DUST](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap_dust)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited, System.Windows.Data.UpdateSourceTrigger defaultUpdateSourceTrigger);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Standardvärdet för beroendegenskapen anges vanligtvis som en viss typ."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "Metadata alternativflaggor (en kombination av <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> värden). Dessa alternativ anger egenskaper på beroendegenskapen som interagerar med system som layout eller databindning."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "En referens till en hanterare-implementering som anropar egenskapen systemet när det giltiga värdet för egenskapen ändras."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "En referens till en hanterare-implementering som anropas när egenskapen systemet anropar <xref:System.Windows.DependencyObject.CoerceValue*>mot den här egenskapen.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att förhindra att systemets egenskapen animera egenskapen som tillämpas på dessa metadata. Dessa egenskaper höjer ett undantag för körning från egenskapen systemet om animeringar av dem. försök görs. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: defaultUpdateSourceTrigger
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Den <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> ska användas när bindningarna för den här egenskapen används som har sina <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> inställd på <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>anges till <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; finns kommentarer."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  id: AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om en beroendeegenskap potentiellt påverka ordna pass under layout motorn åtgärder."
  remarks: "<xref:System.Windows.FrameworkElement>och <xref:System.Windows.FrameworkContentElement>inkluderar en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som övervakar giltiga värdeändringar till alla beroendeegenskaper som finns på ett element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denna logik, beroendeegenskaper som giltiga värdet och metadata med AffectsArrange inställd på `true` initierar en uppskjuten begäran om att ogiltigförklara den visuella informationen för elementet (ett anrop till <xref:System.Windows.UIElement.InvalidateArrange%2A>).</xref:System.Windows.UIElement.InvalidateArrange%2A> Eftersom den här WPF framework nivå implementeringen redan är på plats behöver du normalt inte leta efter egenskaper i samband med AffectsArrange om du ersätter eller ändrar beteendet WPF framework nivå layout avsevärt.       Anpassad <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringar kan välja att ha samma problem för beroende egenskapsändringar där AffectsArrange är `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsArrange&quot;></a>## XAML Text användning medlemmar i den här klassen är antingen inte vanligtvis används i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendegenskapen där dessa metadata finns potentiellt påverkar ordna pass; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  id: AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om en beroendeegenskap potentiellt påverka mått pass under layout motorn åtgärder."
  remarks: "<xref:System.Windows.FrameworkElement>och <xref:System.Windows.FrameworkContentElement>inkluderar en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som övervakar giltiga värdeändringar till alla beroendeegenskaper som finns på ett element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denna logik, beroendeegenskaper som giltiga värdet och metadata med AffectsMeasure inställd på `true` initierar en uppskjuten begäran om att ogiltigförklara den visuella informationen för elementet. Eftersom den här WPF framework nivå implementeringen redan är på plats behöver du normalt inte leta efter egenskaper i samband med AffectsMeasure om du ersätter eller ändrar beteendet WPF framework nivå layout avsevärt.       Anpassad <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringar kan välja att ha samma problem för beroende egenskapsändringar där AffectsMeasure är `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsMeasure&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendegenskapen där dessa metadata finns potentiellt påverkar mått pass; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  id: AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om en beroendeegenskap kan påverka ordna förbikoppling av dess överordnade element layout under layout motorn åtgärder."
  remarks: "<xref:System.Windows.FrameworkElement>och <xref:System.Windows.FrameworkContentElement>inkluderar en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som övervakar giltiga värdeändringar till alla beroendeegenskaper som finns på ett element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denna logik, beroendeegenskaper som giltiga värdet och metadata med AffectsParentArrange inställd på `true` initierar en uppskjuten begäran om att ogiltigförklara den visuella informationen för det överordnade elementet.       I allmänhet kan du inte behöver ändras för en <xref:System.Windows.FrameworkElement>egenskapen till ett överordnat element med AffectsParentArrange eftersom elementet i sig själv kan redan ha en egen <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>som `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> </xref:System.Windows.FrameworkElement> Det är vanligen tillräckligt, eftersom ändringar i det underordnade elementet vanligtvis upprätta en överordnad ordna när det är lämpligt. AffectsParentArrange används ibland för en <xref:System.Windows.FrameworkContentElement>härledd klass.</xref:System.Windows.FrameworkContentElement> I det här fallet underordnade element anger en egenskap, men en <xref:System.Windows.FrameworkContentElement>härledd klass styr inte sin egen återgivning.</xref:System.Windows.FrameworkContentElement> Renderingen hanteras av en <xref:System.Windows.FrameworkElement>överordnade element som fungerar som värd för innehåll.</xref:System.Windows.FrameworkElement> Exempelvis kan en ändring i värdet för den <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>bifogade egenskapen genom ett underordnat element upphäver ordna för överordnat eftersom positionen för underordnat i överordnat måste ändras.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Därför kan den <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>bifogade egenskapen har metadata där AffectsParentArrange är `true`.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Ett annat exempel är <xref:System.Windows.Controls.Control.Padding%2A>; när den här egenskapsändringar överordnad kan ändra placeringen av underordnat, beroende på tillgängligt utrymme.</xref:System.Windows.Controls.Control.Padding%2A>       Eftersom den här WPF framework nivå implementeringen redan är på plats behöver du normalt inte leta efter egenskaper i samband med AffectsParentArrange om du inte avsevärt ersätta eller ändra beteendet WPF framework nivå layout.       Anpassad <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringar kan välja att ha samma problem för beroende egenskapsändringar där AffectsParentArrange är `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper för alla härledda klasser av <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentArrange&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendegenskapen där dessa metadata finns potentiellt påverkar ordna pass särskilt på dess överordnade element. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  id: AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om en beroendeegenskap potentiellt påverka measure förbikoppling av dess överordnade element layout under layout motorn åtgärder."
  remarks: "<xref:System.Windows.FrameworkElement>och <xref:System.Windows.FrameworkContentElement>inkluderar en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som övervakar giltiga värdeändringar till alla beroendeegenskaper som finns på ett element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denna logik, beroendeegenskaper som giltiga värdet och metadata med AffectsParentMeasure inställd på `true` initierar en uppskjuten begäran om att ogiltigförklara den visuella informationen för det överordnade elementet. Eftersom den här WPF framework nivå implementeringen redan är på plats behöver du normalt inte leta efter egenskaper i samband med AffectsParentMeasure om du ersätter eller ändrar beteendet WPF framework nivå layout avsevärt.       I allmänhet kan du inte behöver ändras för en <xref:System.Windows.FrameworkElement>egenskapen till ett överordnat element med AffectsParentMeasure eftersom elementet i sig själv kan redan ha en egen <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>som `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.FrameworkElement> Det beror vanligen tillräckligt ändringar i det underordnade elementet vanligtvis initiera överordnade mått lyckat när det är lämpligt. AffectsParentMeasure används ibland för en <xref:System.Windows.FrameworkContentElement>härledd klass.</xref:System.Windows.FrameworkContentElement> I det här fallet underordnade element anger en egenskap, men en <xref:System.Windows.FrameworkContentElement>härledd klass styr inte sin egen återgivning.</xref:System.Windows.FrameworkContentElement> Renderingen hanteras av en <xref:System.Windows.FrameworkElement>överordnade element som fungerar som värd för innehåll.</xref:System.Windows.FrameworkElement> Exempelvis kan en ändring i värdet för den <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>egenskap med ett underordnat element upphäver mått på överordnat eftersom relativa avstånd i punkterna kan ändra, och kan öka eller minska innehållsvärden storlek.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName> Därför kan den <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>egenskapen har metadata där AffectsParentMeasure är `true`.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>       Innehållsvärden element ofta också söka efter ändringar i beroendeegenskaper där AffectsParentMeasure har `true`, som en del av innehållsvärden återgivning logik. Till exempel den <xref:System.Windows.Controls.TextBox>element måste svara på vissa ändringar i text som kan kräva som rutan av den <xref:System.Windows.Controls.TextBox>själva ändras.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Anpassad <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringar kan välja att ha samma problem för beroende egenskapsändringar där AffectsParentMeasure är `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper för alla härledda klasser av <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentMeasure&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendeegenskap där dessa metadata finns potentiellt påverkar mått pass särskilt på dess överordnade element. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  id: AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om en beroendeegenskap kan påverka den allmänna layouten på något sätt som uttryckligen påverkar inte ordningen eller mått, men kräver en uppdateras."
  remarks: "<xref:System.Windows.FrameworkElement>och <xref:System.Windows.FrameworkContentElement>inkluderar en implementering av <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>som övervakar giltiga värdeändringar till alla beroendeegenskaper som finns på ett element.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Som en del av denna logik, beroendeegenskaper som giltiga värdet och metadata med AffectsRender inställd på `true` initierar en uppskjuten begäran om att ogiltigförklara den visuella informationen för elementet. Eftersom den här WPF framework nivå implementeringen redan är på plats behöver du normalt inte leta efter egenskaper i samband med AffectsRender om du ersätter eller ändrar beteendet WPF framework nivå layout avsevärt.       Anpassad <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>implementeringar kan välja att ha samma problem för beroende egenskapsändringar där AffectsRender är `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       Egenskaper för alla härledda klasser av <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsRender&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendegenskapen på vilket dessa metadata finns påverkar återgivning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  id: BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om egenskapen Binder dubbelriktat som standard."
  remarks: "Den här egenskapen som saknas `true`, bindningsuppdateringar är enkelriktade som standard, baserat på standardbeteendet för den <xref:System.Windows.Data.Binding>konstruktorer eller motsvarande [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] syntax.</xref:System.Windows.Data.Binding>       I befintliga element hittar du vanligtvis den här egenskapen har angetts till `true` i metadata för beroendeegenskaper som både rapportera tillstånd och som kan ändras av en användare, till exempel <xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName>.</xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName>       Den här egenskapen rapporteras endast standardegenskaperna för bindning uppdatering av beroendegenskapen i allmänhet. Någon bindning som angetts till den här egenskapen för en instans lokalt kan ange den <xref:System.Windows.Data.Binding.Mode%2A>egenskapen för bindningen och ändra denna standardinställning.</xref:System.Windows.Data.Binding.Mode%2A>       Egenskaper för alla härledda klasser av <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_BindsTwoWayByDefault&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool BindsTwoWayByDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om beroendegenskapen på vilket dessa metadata finns Binder dubbelriktat som standard. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  id: DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger standardinställningarna för <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> om du vill använda när bindningar för egenskapen med dessa metadata tillämpas, som har sina <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> inställd på <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  remarks: "Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_DefaultUpdateSourceTrigger&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger DefaultUpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Ett värde för uppräkning, andra än <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den här egenskapen anges till <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>; värdet som du anger ska bli standard begäran av bindningar."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  id: Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om värdet på beroendegenskapen kan ärvas."
  remarks: "Värdet egenskapsarv är en funktion i den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] egenskapen system på WPF framework nivå där vissa dependency-egenskaper kan anges lokalt på ett element eller nära roten av en [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] element konsolträdet och har värdet ärvs av alla element i underordnade element som också har den egenskapen logiska träd. Värdet egenskapsarv är inte aktiverad som standard och aktiverar den har vissa konsekvenser för prestanda. Mer information finns i [värdet egenskapsarv](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Även om värdet egenskapsarv kan visas för bilaga beroendeegenskaper arv beteendet för en bilaga egenskap till vissa objekt objekt avdelningar i trädet runtime är odefinierad. Använd alltid <xref:System.Windows.DependencyProperty.RegisterAttached%2A>att registrera egenskaper som anger du Inherits i metadata.</xref:System.Windows.DependencyProperty.RegisterAttached%2A>       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Inherits&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool Inherits { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapsvärdet kan ärvas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Inherits*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  id: IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om databindning stöds för beroendegenskapen."
  remarks: "Den här egenskapen `false` för en av två möjliga villkor: antingen databindning till en beroendeegenskap är inte tillåten eftersom beroendeegenskapen är skrivskyddad (som rapporterades i egenskapen Beroendeidentifierare, inte metadata), eller värdet för en annan metadataegenskapen <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>, har angetts till `true` i metadata.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> Den här egenskapen är exponerad bekvämlighets skull så att anropare inte behöver kontrollera båda <xref:System.Windows.DependencyProperty.ReadOnly%2A>och <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.DependencyProperty.ReadOnly%2A>       Om du försöker skapa metadata som anger att ett annat läsa/skriva-egenskap inte ska ha stöd för databindning ange flaggan <xref:System.Windows.FrameworkPropertyMetadataOptions>(Observera liten naming convention skillnaden jämfört med <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>).</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.FrameworkPropertyMetadataOptions>      <a name=&quot;xamlTextUsage_IsDataBindingAllowed&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool IsDataBindingAllowed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om databindning stöds på beroendeegenskap som dessa metadata gäller; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  id: IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om beroendegenskapen stöder databindning."
  remarks: "Observera att denna metadataegenskap är inställd på `true` specifikt för egenskaper som inte ska ha stöd för databindning trots att det är skrivskyddade egenskaper. Förutsättningen är att i de flesta fall där en beroendeegenskap deklareras databindning önskas eftersom databindning är en av de viktiga scenarier där en beroendeegenskap är användbart. Till skillnad från <xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, inte bara ändras en standard som kan ändras senare på en specifik bindning.</xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A> Den här egenskapen `true` i metadata för en beroendeegenskap metadata inaktiverar alla bindningar från att tillämpa deras värden via uttryck på den beroendeegenskapen.       Skrivskyddad beroendeegenskaper stöder inte databindning (eftersom de inte har någon sättare som kan använda ändrade värden), men kommer fortfarande rapporten `false` för IsNotDataBindable. Detta beror på att egenskaper som motsvarar en <xref:System.Windows.FrameworkPropertyMetadataOptions>värden rapporterar paritet med hur metadata faktiskt upprättades, i stället för att alltid reporting beteendet slutet resultatet som namn på egenskapen antyder.</xref:System.Windows.FrameworkPropertyMetadataOptions> För att avgöra om en viss beroendeegenskap tillåter databindning, bör du vanligtvis Kontrollera <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>i stället.</xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>i syfte att underlätta för att kontrollera att båda är <xref:System.Windows.DependencyProperty.ReadOnly%2A>och IsNotDataBindable som en enda åtgärd, vilket ger det förväntade resultatet.</xref:System.Windows.DependencyProperty.ReadOnly%2A></xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_IsNotDataBindable&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool IsNotDataBindable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen inte stöder databindning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  id: Journal
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om den här egenskapen innehåller journalnivåer information som program kan och bör lagra som en del av en implementering av journaler."
  remarks: "Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Journal&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool Journal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om journaler måste utföras på beroendeegenskap som dessa metadata tillämpas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Journal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  id: Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gör en sammanfogningen av källmetadata med grundläggande metadata."
  remarks: "Den här metoden används internt när metadata har åsidosatts."
  syntax:
    content: protected override void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);
    parameters:
    - id: baseMetadata
      type: System.Windows.PropertyMetadata
      description: "Grundläggande metadata för sammanslagning."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Beroendegenskapen dessa metadata tillämpas på."
  overload: System.Windows.FrameworkPropertyMetadata.Merge*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  id: OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Anropas när denna metadata har kopplats till en egenskap, vilket innebär att metadata är är förseglat."
  remarks: "Alla mutability av datastruktur för en <xref:System.Windows.FrameworkPropertyMetadata>instans ska markeras som inte ändras när den här metoden anropas.</xref:System.Windows.FrameworkPropertyMetadata>"
  syntax:
    content: protected override void OnApply (System.Windows.DependencyProperty dp, Type targetType);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Beroendegenskapen som metadata har tillämpats."
    - id: targetType
      type: System.Type
      description: "Den typ som är kopplade till dessa metadata om det här är typspecifika metadata. Om det här är standard metadata värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OnApply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  id: OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om egenskapen värdet arv utvärderingen ska omfatta över vissa innehåll gränser i det logiska trädet element."
  remarks: "Dessa metadata rapporterar en sällan används ändring av egenskapen värdet arv beteende över särskilda överordnade element-och underordnade element gränser. Kanoniskt exempel på sådana gräns är innehållet i en <xref:System.Windows.Controls.Frame>, där <xref:System.Windows.Controls.Frame>innehåll kan komma in på nytt oberoende av förekomsten av <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Frame> Önskad egenskapen systembeteendet är att värdet egenskapsarv inte bör Bläddra i innehållet i den <xref:System.Windows.Controls.Frame>, eftersom innehållet kanske element som värd för ramens programmet inte äger och hanterar.</xref:System.Windows.Controls.Frame> Ange metadata med OverridesInheritanceBehavior inställd på `true`, såväl som att ange <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>som `true`, kommer egenskapen där metadata som används för att kunna ärvas även tvärs över den <xref:System.Windows.Controls.Frame>gräns eller liknande gränserna.</xref:System.Windows.Controls.Frame> </xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_OverridesInheritanceBehavior&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool OverridesInheritanceBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet egenskapsarv ska omfatta över vissa innehåll gränser; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  id: SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om underordnade egenskaper för beroendegenskapen inte påverkar återgivningen av objektet."
  remarks: "Det här alternativet om metadata är relevanta för beroendeegenskaper referenstyper, där den typen har sin egen egenskapsvärden. System layoutlogik är vanligtvis att anta att alla beroendeegenskap med underordnade egenskaper potentiellt påverkar layout, eftersom kontrollerar alla underordnade egenskaper för ändringar är mer tidskrävande än faktiskt körs en annan återge pass. Det här alternativet `true` är användbart för att optimera prestandan för WPF framework nivån layout systemimplementering.       Egenskaper för klasser som härleds från <xref:System.Windows.PropertyMetadata>definieras vanligen i objektmodellen som skrivskyddad.</xref:System.Windows.PropertyMetadata> Detta är så att de kan justeras efter initiering av instansen. Men när metadata som används som en del av ett anrop till <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, eller <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, systemets egenskapen kommer försegla metadata instansen och egenskaper som förmedlar information om metadata är nu vara oföränderliga.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Försök att ange den här egenskapen efter <xref:System.Windows.PropertyMetadata.IsSealed%2A>är `true` på dessa metadata instans ska generera ett undantag.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_SubPropertiesDoNotAffectRender&quot;></a>## XAML Text användning medlemmar i den här klassen inte används vanligtvis i [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool SubPropertiesDoNotAffectRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om ändringar av underordnade egenskapsvärden inte påverkar återgivning om ändras. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metadata har redan tillämpats till en beroende egenskap operation, så att metadata är förseglade och kan inte ange egenskaper för metadata."
  platform:
  - net462
references:
- uid: System.Windows.UIPropertyMetadata
  isExternal: false
  name: System.Windows.UIPropertyMetadata
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
- uid: System.Windows.FrameworkPropertyMetadataOptions
  parent: System.Windows
  isExternal: false
  name: FrameworkPropertyMetadataOptions
  nameWithType: FrameworkPropertyMetadataOptions
  fullName: System.Windows.FrameworkPropertyMetadataOptions
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
- uid: System.Windows.FrameworkPropertyMetadata.#ctor*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge
  nameWithType: FrameworkPropertyMetadata.Merge
- uid: System.Windows.FrameworkPropertyMetadata.OnApply*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply
  nameWithType: FrameworkPropertyMetadata.OnApply
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
