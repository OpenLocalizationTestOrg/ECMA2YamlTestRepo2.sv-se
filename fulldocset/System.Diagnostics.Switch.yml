### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Switch
  id: Switch
  children:
  - System.Diagnostics.Switch.#ctor(System.String,System.String)
  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.OnValueChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  langs:
  - csharp
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
  type: Class
  summary: "Ger en abstrakt basklass för att skapa nya felsökning och spårning växlar."
  remarks: "En växel ger en effektiv metod för att styra spårning och felsökning utdata vid körning med externa inställningar. Växeln-klassen implementerar standardbeteendet för växlar, så att du kan ändra nivån växeln vid körning.       Den här klassen är basklass för den <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch>och <xref:System.Diagnostics.TraceSwitch>klasser.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.BooleanSwitch> Dessa växlar uppfyller de flesta felsökning och spårning behov. Mer information om spårning växlar finns [Trace växlar](~/add/includes/ajax-current-ext-md.md).       Du måste aktivera spårning och felsökning om du vill använda en växel. Följande syntax är kompileraren specifika. Om du använder kompilerare än C# eller Visual Basic, finns i dokumentationen för din kompilator.      -Om du vill aktivera felsökning i C#, lägger du till den `/d:DEBUG` flaggan till kommandoraden kompileraren när du kompilerar koden eller du kan lägga till `#define DEBUG` överst i filen. I Visual Basic kan du lägga till den `/d:DEBUG=True` flaggan till kommandoraden kompileraren.      -Om du vill aktivera spårning med i C#, lägger du till den `/d:TRACE` flaggan till kommandoraden kompileraren när du kompilera koden eller Lägg till `#define TRACE` överst i filen. I Visual Basic kan du lägga till den `/d:TRACE=True` flaggan till kommandoraden kompileraren.       Om du vill ställa in din växel, redigera konfigurationsfilen som motsvarar namnet på ditt program. I den här filen du lägger till en växel och ange värdet, ta bort en växel eller rensa alla växlarna tidigare angetts av programmet. Konfigurationsfilen ska formateras som i följande exempel: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;true&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` konfigurationsavsnittet exempel definierar en <xref:System.Diagnostics.BooleanSwitch>med den <xref:System.Diagnostics.Switch.DisplayName%2A>egenskapen `mySwitch` och <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>värdet `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> </xref:System.Diagnostics.BooleanSwitch> I programmet, du kan använda konfigurerade växelvärdet genom att skapa en <xref:System.Diagnostics.BooleanSwitch>med samma namn som visas i följande kodexempel.</xref:System.Diagnostics.BooleanSwitch>       [!code-cpp[Klassiska växeln exempel&#4;](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_1.cpp)][!code-cs[klassiska växeln exempel&#4;  ](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_1.cs)]"
  example:
  - "The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  \n  \n The first example creates the enumeration used to set the level of the switch.  \n  \n [!code-cpp[Classic Switch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_2.cpp)]\n [!code-cs[Classic Switch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_2.cs)]\n [!code-vb[Classic Switch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_2.vb)]  \n  \n The following example creates the new switch. The code implements a `Level` property to set the value of the new switch. `Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  \n  \n [!code-cpp[Classic Switch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_3.cpp)]\n [!code-cs[Classic Switch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_3.cs)]\n [!code-vb[Classic Switch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_3.vb)]  \n  \n The following example creates a new switch in `Main`. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  \n  \n [!code-cpp[Classic Switch Example#3](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_4.cpp)]\n [!code-cs[Classic Switch Example#3](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_4.cs)]\n [!code-vb[Classic Switch Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_4.vb)]"
  syntax:
    content: public abstract class Switch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> klass."
  remarks: "När du skapar en ny <xref:System.Diagnostics.Switch>objekt, värdet för den `displayName` används för att hitta inledande växelinställningar.</xref:System.Diagnostics.Switch> Standardvärdet är en tom sträng (&quot;&quot;).       I XML-konfigurationsfilen du lägger till en växel och ange värdet, ta bort en växel eller rensa alla växlarna tidigare angetts av programmet. Dynamiska ändringar i konfigurationsfilen identifieras inte medan programmet körs. Du måste stoppa och starta om ett program innan ändringar i konfigurationsfilen börjar gälla. Konfigurationsfilen ska formateras som i följande exempel:```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;10&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: protected Switch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "Namnet på växeln."
    - id: description
      type: System.String
      description: "Beskrivning för växel."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> klass, ange namn, beskrivning och standardvärde för växeln."
  remarks: "Den `displayName` används för att ange värdet för den <xref:System.Diagnostics.Switch.DisplayName%2A>egenskapen och `description` parameter är använder för att ange värdet för den <xref:System.Diagnostics.Switch.Description%2A>egenskapen.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Den `defaultSwitchValue` parameter är värdet för parametern om den <xref:System.Diagnostics.Switch.Value%2A>egenskapen har inte angetts av koden eller av filen konfigurationsattributet.</xref:System.Diagnostics.Switch.Value%2A> Finns det <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>överlagra för ytterligare information.</xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: protected Switch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "Namnet på växeln."
    - id: description
      type: System.String
      description: "Beskrivning av växeln."
    - id: defaultSwitchValue
      type: System.String
      description: "Standardvärdet för växeln."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Attributes
  id: Attributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar anpassade växeln-attribut som definieras i programmets konfigurationsfil."
  remarks: "Egenskapen attribut identifierar de anpassade attributen som refereras i programmets konfigurationsfil. Orefererade anpassade attribut räknas inte. Klasser som ärver från den <xref:System.Diagnostics.Switch>klassen kan lägga till anpassade attribut genom att åsidosätta den <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>metoden och returnera en strängmatris av anpassade attributnamn.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> </xref:System.Diagnostics.Switch>"
  example:
  - "The following code sample shows how to display the unrecognized attributes for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#15](~/add/codesnippet/csharp/p-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#15](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "En <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> som innehåller de skiftlägeskänsliga Anpassa attribut för spårningsväxeln."
  overload: System.Diagnostics.Switch.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Description
  id: Description
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar en beskrivning av växeln."
  remarks: "Den här egenskapen bör ange funktionen växeln; till exempel &quot;aktiverar spårning för en komponent som directory watcher.&quot; Värdet som det `descriptor` parametern i den <xref:System.Diagnostics.Switch.%23ctor%2A>konstruktor.</xref:System.Diagnostics.Switch.%23ctor%2A>"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Beskrivning av växeln. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Diagnostics.Switch.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.DisplayName
  id: DisplayName
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar ett namn som används för att identifiera växeln."
  remarks: 'När du skapar en ny <xref:System.Diagnostics.Switch>objekt, DisplayName söker efter första växelinställningar.</xref:System.Diagnostics.Switch> Mer information finns i <xref:System.Diagnostics.Switch.%23ctor%2A>konstruktorn och [så här: skapa, starta och konfigurera spårning växlar](~/add/includes/ajax-current-ext-md.md) i Visual Studio-dokumentationen.</xref:System.Diagnostics.Switch.%23ctor%2A>'
  example:
  - "The following code example displays the display name for the switch in use by a trace source.  This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.  \n  \n [!code-cs[System.Diagnostics.TraceSource#10](~/add/codesnippet/csharp/p-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#10](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "Namnet används för att identifiera växeln. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Diagnostics.Switch.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar de Anpassa attribut som stöds av den virtuella växeln."
  remarks: "Standardimplementering för metoden GetSupportedAttributes returnerar `null`. Om en växel har lagts till i en konfigurationsfil och anpassade attribut anges som inte ingår i Strängmatrisen som returneras av GetSupportedAttributes, en <xref:System.Configuration.ConfigurationException>när växeln läses.</xref:System.Configuration.ConfigurationException>"
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#34](~/add/codesnippet/csharp/m-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#34](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "En strängmatris som innehåller namnen på de Anpassa attribut som stöds av växeln, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det stöder inte anpassade attribut."
  overload: System.Diagnostics.Switch.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Anropas när den <xref:System.Diagnostics.Switch.SwitchSetting*>egenskapen har ändrats.</xref:System.Diagnostics.Switch.SwitchSetting*>"
  remarks: "OnSwitchSettingChanged startas första gången en växel läser den <xref:System.Diagnostics.Switch.SwitchSetting%2A>värdet från konfigurationsfilen och anropas varje gång den växeln värdet ändras.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected virtual void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Anropas när den <xref:System.Diagnostics.Switch.Value*>egenskapen har ändrats.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "Standardimplementering Parsar det nya värdet för den <xref:System.Diagnostics.Switch.Value%2A>egenskapen till ett heltalsvärde som används för att ange den <xref:System.Diagnostics.Switch.SwitchSetting%2A>egenskapen.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected virtual void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.SwitchSetting
  id: SwitchSetting
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar eller anger den aktuella inställningen för den här växeln."
  syntax:
    content: protected int SwitchSetting { get; set; }
    return:
      type: System.Int32
      description: "Den aktuella inställningen för den här växeln. Standardvärdet är noll."
  overload: System.Diagnostics.Switch.SwitchSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Value
  id: Value
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar eller anger värdet för växeln."
  remarks: "Den <xref:System.Diagnostics.Switch.OnValueChanged%2A>metoden anropas när värdet på egenskapen värde ändras.</xref:System.Diagnostics.Switch.OnValueChanged%2A> Den <xref:System.Diagnostics.Switch.OnValueChanged%2A>metoden Parsar värdet för den här egenskapen och konverteras till ett heltalsvärde som sedan används för att ange den <xref:System.Diagnostics.Switch.SwitchSetting%2A>egenskapen.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.OnValueChanged%2A>"
  syntax:
    content: protected string Value { get; set; }
    return:
      type: System.String
      description: "En sträng som representerar värdet av växeln."
  overload: System.Diagnostics.Switch.Value*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Värdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - eller - värdet består inte uteslutande av ett valfritt negativt tecken följt av en serie siffror mellan 0 och 9.       - eller - värdet representerar ett värde mindre än <xref:System.Int32.MinValue>eller större än <xref:System.Int32.MaxValue>.</xref:System.Int32.MaxValue> </xref:System.Int32.MinValue>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
- uid: System.Diagnostics.Switch.Attributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.#ctor*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch
  nameWithType: Switch.Switch
- uid: System.Diagnostics.Switch.Attributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
- uid: System.Diagnostics.Switch.Description*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
- uid: System.Diagnostics.Switch.DisplayName*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: Switch.GetSupportedAttributes
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: Switch.OnSwitchSettingChanged
- uid: System.Diagnostics.Switch.OnValueChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged
  nameWithType: Switch.OnValueChanged
- uid: System.Diagnostics.Switch.SwitchSetting*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
