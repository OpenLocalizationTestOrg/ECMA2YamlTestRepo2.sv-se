### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Verifierar autentiseringsuppgifter för användare och hanterar användarinställningar. Den här klassen kan inte ärvas."
  remarks: "Klassen medlemskap används i ASP.NET-program för att verifiera autentiseringsuppgifter och hantera användarinställningar som lösenord och e-postadresser. Klassen medlemskap kan användas fristående eller i samband med den <xref:System.Web.Security.FormsAuthentication>att skapa ett komplett system för att autentisera användare av ett webbprogram eller en webbplats.</xref:System.Web.Security.FormsAuthentication> Den <xref:System.Web.UI.WebControls.Login>kontrollen innehåller klassen medlemskap för att ge en smidig mekanism för att validera användare.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Om du inte är bekant med funktionerna för medlemskap i ASP.NET finns [introduktion till medlemskap](~/add/includes/ajax-current-ext-md.md) innan du fortsätter. En lista över andra avsnitt relaterade till medlemskap, se [hantera användare med hjälp av medlemskap](~/add/includes/ajax-current-ext-md.md).       Klassen medlemskap finns funktioner för att:-skapa nya användare.      -Lagrar medlemskapsinformation (användarnamn, lösenord, e-postadresser och stöddata) i Microsoft SQL Server eller i ett annat dataarkiv.      -Autentisering av användare som besöker din webbplats. Du kan autentisera användare via programmering eller kan du använda den <xref:System.Web.UI.WebControls.Login>behörighet att skapa en fullständig autentisering system som kräver lite eller ingen kod.</xref:System.Web.UI.WebControls.Login>      -Hantering av lösenord, som omfattar att skapa, ändra, hämtar och återställa dem och så vidare. Du kan också konfigurera ASP.NET-medlemskap för att kräva en frågor och svar för att autentisera lösenord Återställ eller hämtning av förfrågningar för användare som har glömt sitt lösenord.       Även om ASP.NET-medlemskap är en fristående funktion i ASP.NET för autentisering, kan den integreras med ASP.NET rollhantering att tillhandahålla auktorisering för din webbplats. Medlemskap kan även integreras med ASP.NET-användaren <xref:System.Web.Profile>att tillhandahålla programspecifika anpassning som kan skräddarsys för enskilda användare.</xref:System.Web.Profile> Mer information finns i [förstå rollhantering](~/add/includes/ajax-current-ext-md.md) och [översikt över ASP.NET-profilen egenskaper](~/add/includes/ajax-current-ext-md.md).       Klassen medlemskap beroende medlemskapsprovidrar att kommunicera med en datakälla. .NET Framework innehåller en <xref:System.Web.Security.SqlMembershipProvider>, som lagrar användarinformation i en Microsoft SQL Server-databas och en <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, vilket innebär att du kan lagra användarinformation på en Active Directory eller Active Directory Application Mode (ADAM).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Du kan också implementera en anpassad medlemskapsprovider att kommunicera med en annan datakälla som kan användas av klassen medlemskap. Anpassade medlemskapsprovidrar ärver <xref:System.Web.Security.MembershipProvider>abstrakt klass.</xref:System.Web.Security.MembershipProvider> Mer information finns i [implementera en medlemskapsprovider](~/add/includes/ajax-current-ext-md.md).       Som standard aktiveras ASP.NET-medlemskap för alla ASP.NET-program. Är standardprovider för medlemskap i <xref:System.Web.Security.SqlMembershipProvider>och har angetts i konfigurationen för datorn med namnet `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> Standardinstansen av den <xref:System.Web.Security.SqlMembershipProvider>har konfigurerats för att ansluta till en lokal instans av Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Du kan ändra standardinställningarna för att ange en <xref:System.Web.Security.SqlMembershipProvider>än den `AspNetSqlProvider` serverinstansen som standardprovidern eller ange en instans av en anpassad provider som standardprovidern för ASP.NET-program med hjälp av filen Web.config.</xref:System.Web.Security.SqlMembershipProvider> Du kan ange hur ASP.NET-medlemskap för ditt webbprogram med hjälp av konfigurationsavsnittet i Web.config-filen. Du kan använda den `providers` under avsnittet för att ange en medlemskapsprovider än en standard-providers. Till exempel i följande avsnitt tar bort medlemskapsprovidrar standard från det aktuella tillämpningsprogrammets konfigurationen och lägger till en ny provider med namnet `SqlProvider` som ansluter till en SQL Server-instans med namnet `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar eller anger namnet på programmet."
  remarks: "ApplicationName används för att identifiera de användare som är specifika för ett program. Det vill säga kan samma användarnamn finns i databasen för flera ASP.NET-program som anger en annan ApplicationName. Detta gör att flera program kan använda samma databas för att lagra användarinformation utan att köra i dubblettanvändare namnet står i konflikt. Flera ASP.NET-program kan också använda samma användardatabasen genom att ange samma ApplicationName. ApplicationName kan anges via programmering eller deklarativt i konfigurationen för webbprogrammet.      > [!CAUTION] > Eftersom en enda medlemskap providern standardinstansen används för alla begäranden som betjänats genom en <xref:System.Web.HttpApplication>objekt du kan ha flera begäranden samtidigt körs och försök att ange egenskapsvärdet ApplicationName.</xref:System.Web.HttpApplication> Egenskapen ApplicationName är inte trådsäkert för flera skrivningar och ändra värdet för egenskapen ApplicationName kan ge oväntade resultat för flera användare av ett program. Vi rekommenderar att du inte skriva kod som användarna kan ange egenskapen ApplicationName om du måste. Ett exempel på ett program där egenskapen ApplicationName kan krävas är ett administrativa program som hanterar medlemskapsdata för flera program. Denna ansökan måste vara ett program för en användare och inte ett webbprogram."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Namnet på programmet."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lägger till en ny användare i datalagret."
  remarks: "CreateUser lägger till en ny användare i datalagret och returnerar ett <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser> Om användaren misslyckas, en <xref:System.Web.Security.MembershipCreateUserException>genereras.</xref:System.Web.Security.MembershipCreateUserException> Du kan hämta en <xref:System.Web.Security.MembershipCreateStatus>värdet från den <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>egenskapen för den <xref:System.Web.Security.MembershipCreateUserException>som anger varför gick inte att skapa användaren.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       När en användare medlemskap har skapats och du har en referens till en <xref:System.Web.Security.MembershipUser>objekt för användaren, du kan ändra inställningarna för den användaren med den <xref:System.Web.Security.MembershipUser>offentliga metoder som <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>för program där <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>är `true`, eller genom att ange värden för den <xref:System.Web.Security.MembershipUser>objekt och skicka dem till den <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Om det finns redan en användare i datakällan för programmet, kan du hämta ett <xref:System.Web.Security.MembershipUser>objekt för befintliga användare med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Den <xref:System.Web.Security.SqlMembershipProvider>innehåller ett alternativ för att kräva en unik e-postadress för varje användare.</xref:System.Web.Security.SqlMembershipProvider> Om den <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>egenskapen är `true`, behöver du använda en CreateUser överlagringar som kan du ange en e-postadress för användaren som skapas.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Annars en <xref:System.Web.Security.MembershipCreateUserException>genereras.</xref:System.Web.Security.MembershipCreateUserException>       Inledande och avslutande blanksteg bort från alla parametervärden."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn för den nya användaren."
    - id: password
      type: System.String
      description: "Lösenordet för den nya användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Användaren har inte skapats. Kontrollera den <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>-egenskapen för en <xref:System.Web.Security.MembershipCreateStatus>värde.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lägger till en ny användare med en angiven e-postadress till datalagret."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>lägger till en ny användare i datalagret och returnerar ett <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Om användaren misslyckas, en <xref:System.Web.Security.MembershipCreateUserException>genereras.</xref:System.Web.Security.MembershipCreateUserException> Du kan hämta en <xref:System.Web.Security.MembershipCreateStatus>värdet från den <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>egenskapen för den <xref:System.Web.Security.MembershipCreateUserException>som anger varför gick inte att skapa användaren.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       När en användare medlemskap har skapats och du har en referens till en <xref:System.Web.Security.MembershipUser>objekt för användaren, du kan ändra inställningarna för den användaren med den <xref:System.Web.Security.MembershipUser>offentliga metoder som <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>för program där <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>är `true`, eller genom att ange värden för den <xref:System.Web.Security.MembershipUser>objekt och skicka dem till den <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Om det finns redan en användare i datakällan för programmet, kan du hämta ett <xref:System.Web.Security.MembershipUser>objekt för befintliga användare med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Inledande och avslutande blanksteg bort från alla parametervärden."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn för den nya användaren."
    - id: password
      type: System.String
      description: "Lösenordet för den nya användaren."
    - id: email
      type: System.String
      description: "E-postadress för den nya användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Användaren har inte skapats. Kontrollera den <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>-egenskapen för en <xref:System.Web.Security.MembershipCreateStatus>värde.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lägger till en ny användare med angivna egenskapsvärden i datalagret och returnerar en statusparameter som anger att användaren har skapats eller orsaken till det inte gick att skapa användare."
  remarks: "CreateUser lägger till en ny användare i datalagret och returnerar ett <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser> Om användaren misslyckas, kan du hämta en <xref:System.Web.Security.MembershipCreateStatus>värdet från den `status` output-parameter som anger varför inte gick att skapa användaren.</xref:System.Web.Security.MembershipCreateStatus>       CreateUser-metoden returnerar `null` om `password` är en tom sträng eller `null`, `username` är en tom sträng eller `null` eller innehåller ett kommatecken (,), `passwordQuestion` är inte `null` och är en tom sträng eller `passwordAnswer` är inte `null` och innehåller en tom sträng.       När en användare medlemskap har skapats och du har en referens till en <xref:System.Web.Security.MembershipUser>objekt för användaren, du kan ändra inställningarna för den användaren med den <xref:System.Web.Security.MembershipUser>offentliga metoder och genom att ange värden för den <xref:System.Web.Security.MembershipUser>objektet och sedan överföra den <xref:System.Web.Security.MembershipUser>objekt till den <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Om det finns redan en användare i datakällan för programmet, kan du hämta ett <xref:System.Web.Security.MembershipUser>objekt för befintliga användare med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Inledande och avslutande blanksteg bort från alla sträng parametervärden."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn för den nya användaren."
    - id: password
      type: System.String
      description: "Lösenordet för den nya användaren."
    - id: email
      type: System.String
      description: "E-postadress för den nya användaren."
    - id: passwordQuestion
      type: System.String
      description: "Lösenordsfråga värde för användaren medlemskap."
    - id: passwordAnswer
      type: System.String
      description: "Lösenordssvaret värde för användaren medlemskap."
    - id: isApproved
      type: System.Boolean
      description: "Ett booleskt värde som anger om den nya användaren är godkänd för att logga in."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "En <xref:System.Web.Security.MembershipCreateStatus>som anger att användaren har skapats eller orsaken till att gick inte att skapa.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser> Om ingen användare har skapats genom den här metoden returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lägger till en ny användare med angivna egenskapsvärden och en unik identifierare till datalagret och returnerar en statusparameter som anger att användaren har skapats eller orsaken till det inte gick att skapa användare."
  remarks: "CreateUser lägger till en ny användare i datalagret och returnerar ett <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser> Om användaren misslyckas, kan du hämta en <xref:System.Web.Security.MembershipCreateStatus>värdet från den `status` output-parameter som anger varför inte gick att skapa användaren.</xref:System.Web.Security.MembershipCreateStatus> Du kan ange en unik identifierare för användare, till exempel värdet för en primärnyckel för en databas med hjälp av den `providerUserKey` parameter.       CreateUser-metoden returnerar `null` om `password` är en tom sträng eller `null`, `username` är en tom sträng eller `null` eller innehåller ett kommatecken (,), `passwordQuestion` är inte `null` och innehåller en tom sträng eller `passwordAnswer` är inte `null` och innehåller en tom sträng.       När en användare medlemskap har skapats och du har en referens till en <xref:System.Web.Security.MembershipUser>objekt för användaren, du kan ändra inställningarna för den användaren med den <xref:System.Web.Security.MembershipUser>offentliga metoder och genom att ange värden för den <xref:System.Web.Security.MembershipUser>objektet och sedan överföra den <xref:System.Web.Security.MembershipUser>objekt till den <xref:System.Web.Security.Membership.UpdateUser%2A>metoden.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Om det finns redan en användare i datakällan för programmet, kan du hämta ett <xref:System.Web.Security.MembershipUser>objekt för befintliga användare med den <xref:System.Web.Security.Membership.GetUser%2A>metoden.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Inledande och avslutande blanksteg bort från alla sträng parametervärden."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Användarnamn för den nya användaren."
    - id: password
      type: System.String
      description: "Lösenordet för den nya användaren."
    - id: email
      type: System.String
      description: "E-postadress för den nya användaren."
    - id: passwordQuestion
      type: System.String
      description: "Lösenordsfråga värde för användaren medlemskap."
    - id: passwordAnswer
      type: System.String
      description: "Lösenordssvaret värde för användaren medlemskap."
    - id: isApproved
      type: System.Boolean
      description: "Ett booleskt värde som anger om den nya användaren är godkänd för att logga in."
    - id: providerUserKey
      type: System.Object
      description: "Användar-ID för den användare som ska lagras i datalagret medlemskap."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "En <xref:System.Web.Security.MembershipCreateStatus>som anger att användaren har skapats eller inte gick att skapa orsak.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt för den nyligen skapade användaren.</xref:System.Web.Security.MembershipUser> Om ingen användare har skapats genom den här metoden returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tar bort en användare och relaterade användardata från databasen."
  remarks: "Data som lagras i databasen för den <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, eller <xref:System.Web.UI.WebControls.WebParts.WebPart>anpassning också tas bort när du använder den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, och <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objekt för datalagring.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Namnet på användaren tar bort."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har tagits bort; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>är en tom sträng eller innehåller ett komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>är<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tar bort en användare från databasen."
  remarks: "Användare har tagits bort från databasen endast tas bort från den konfigurerade `applicationName`.       Om `deleteAllRelatedData` är `true`, data som lagras i databasen för den <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, eller <xref:System.Web.UI.WebControls.WebParts.WebPart>anpassning också tas bort när du använder den <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, och <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objekt för datalagring.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Namnet på användaren tar bort."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ta bort data som rör användaren från databasen. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att lämna data som är relaterade till användare i databasen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har tagits bort; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>är en tom sträng eller innehåller ett komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om den aktuella medlemskapsprovidern är konfigurerad för att tillåta användare att återställa sina lösenord."
  remarks: "Lösenord för återställning är möjligheten för ASP.NET-medlemskap att ersätta det aktuella lösenord för ett användarnamn med ett nytt slumpmässigt genererade lösenordet när en användare har glömt sitt lösenord eller det aktuella lösenordet är inte längre giltig. Detta är användbart när lösenordet formatet är inställt på <xref:System.Web.Security.MembershipPasswordFormat>, som användare inte kan hämta lösenord som hashformaterats.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om medlemskapsprovidern stöder återställning av lösenord Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om den aktuella medlemskapsprovidern är konfigurerad för att tillåta användare att hämta sina lösenord."
  remarks: "Om EnablePasswordRetrieval `false`, den underliggande medlemskapsprovidern kan utlösa en <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Leverantörer som ingår i .NET Framework stöder flera lösenord format för att öka säkerheten för lösenord. Om formatet lösenord har angetts till <xref:System.Web.Security.MembershipPasswordFormat>, och sedan på användare kommer inte att hämta sina befintliga lösenord från databasen.</xref:System.Web.Security.MembershipPasswordFormat> Den <xref:System.Web.Security.MembershipPasswordFormat>lösenordsformat ger enkelriktad kodning av lösenord.</xref:System.Web.Security.MembershipPasswordFormat> Lösenord &quot;hashas&quot; och jämfört med värden som lagras i databasen för autentisering. &quot;Hashformaterats&quot; värden får inte vara kodad inte att hämta lösenordsvärdet för. Mer information finns i <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om medlemskapsprovidern stöder hämtning av lösenord Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling användare medlemskap där e-postadressen innehåller den angivna e-postadressen för att matcha."
  remarks: "FindUsersByEmail returnerar en lista över medlemskap användare där e-postadressen matchar den angivna `emailToMatch` för den konfigurerade `applicationName`.       Den <xref:System.Web.Security.SqlMembershipProvider>utför sökningen med hjälp av en LIKE-instruktion mot den `emailToMatch` parameter.</xref:System.Web.Security.SqlMembershipProvider> Alla jokertecken som stöds av SQL Server i som satser kan användas i den `emailToMatch` parametervärdet."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadress att söka efter."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som innehåller alla användare som matchar den <code> emailToMatch </code> parameter.</xref:System.Web.Security.MembershipUserCollection>       Inledande och avslutande blanksteg bort från den <code> emailToMatch </code> parametervärdet."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling medlemskap användare på en sida av data, där e-postadressen innehåller den angivna e-postadressen för att matcha."
  remarks: "FindUsersByEmail returnerar en lista över medlemskap användare där e-postadressen matchar den angivna `emailToMatch` för den konfigurerade `applicationName`.       Den <xref:System.Web.Security.SqlMembershipProvider>utför sökningen med hjälp av en LIKE-instruktion mot den `emailToMatch` parameter.</xref:System.Web.Security.SqlMembershipProvider> Alla jokertecken som stöds av SQL Server i som satser kan användas i den `emailToMatch` parametervärdet.       Resultaten av FindUsersByEmail är begränsad av den `pageIndex` och `pageSize` parametrar. Den `pageSize` parametern anger det maximala antalet <xref:System.Web.Security.MembershipUser>objekt som ska returneras i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parametern identifierar vilken sida av resultat som ska returneras, där 0 identifierar den första sidan. Den `totalRecords` parametern är en `out` parameter som är inställd på det totala antalet användare för medlemskap som matchade den `emailToMatch` värde. Om exempelvis 13 användare hittades var `emailToMatch` matchade en del av eller hela e-postadressen, och `pageIndex` värdet var 1 med en `pageSize` 5-den <xref:System.Web.Security.MembershipUserCollection>returnerade skulle innehålla sjätte till tionde användare returnerades.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`skulle anges till 13.       Inledande och avslutande blanksteg bort från den `emailToMatch` parametervärdet."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadress att söka efter."
    - id: pageIndex
      type: System.Int32
      description: "Index på sidan med resultat som ska returneras. `pageIndex`är nollbaserade."
    - id: pageSize
      type: System.Int32
      description: "Storleken på sidan med resultat som ska returneras."
    - id: totalRecords
      type: System.Int32
      description: "Det totala antalet matchande användare."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som innehåller en sida i <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objekt början på den sida som anges av <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>är mindre än noll.       - eller - <code>pageSize</code> är mindre än 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling användare medlemskap där användarnamnet innehåller det angivna användarnamnet ska matchas."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Returnerar en lista över medlemskap användare där användarnamnet matchar den angivna `usernameToMatch` för den konfigurerade `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Den <xref:System.Web.Security.SqlMembershipProvider>utför sökningen med hjälp av en LIKE-instruktion mot den `usernameToMatch` parameter.</xref:System.Web.Security.SqlMembershipProvider> Alla jokertecken som stöds av SQL Server i som satser kan användas i den `usernameToMatch` parametervärdet.       Inledande och avslutande blanksteg bort från alla parametervärden."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Användarnamnet som eftersöks."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som innehåller alla användare som matchar den <code> usernameToMatch </code> parameter.</xref:System.Web.Security.MembershipUserCollection>       Inledande och avslutande blanksteg bort från den <code> usernameToMatch </code> parametervärdet."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling medlemskap användare på en sida av data, där användarnamnet innehåller det angivna användarnamnet ska matchas."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Returnerar en lista över medlemskap användare där användarnamnet matchar den angivna `usernameToMatch` för den konfigurerade `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Den <xref:System.Web.Security.SqlMembershipProvider>utför sökningen med hjälp av en LIKE-instruktion mot den `usernameToMatch` parameter.</xref:System.Web.Security.SqlMembershipProvider> Alla jokertecken som stöds av SQL Server i som satser kan användas i den `usernameToMatch` parametervärdet.       Resultaten av FindUsersByName är begränsad av den `pageIndex` och `pageSize` parametrar. Den `pageSize` parametern anger det maximala antalet <xref:System.Web.Security.MembershipUser>objekt som ska returneras i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parametern identifierar vilken sida av resultat som ska returneras, där 0 identifierar den första sidan. Den `totalRecords` parametern är en `out` parameter som är inställd på det totala antalet användare för medlemskap som matchade den `usernameToMatch` värde. Om exempelvis 13 användare hittades var `usernameToMatch` matchade en del av eller hela användarnamnet och `pageIndex` värdet var 1 med en `pageSize` 5-den <xref:System.Web.Security.MembershipUserCollection>returnerade skulle innehålla sjätte till tionde användare returnerades.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`skulle anges till 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Användarnamnet som eftersöks."
    - id: pageIndex
      type: System.Int32
      description: "Index på sidan med resultat som ska returneras. `pageIndex`är nollbaserade."
    - id: pageSize
      type: System.Int32
      description: "Storleken på sidan med resultat som ska returneras."
    - id: totalRecords
      type: System.Int32
      description: "Det totala antalet matchande användare."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>som innehåller en sida i <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objekt början på den sida som anges av <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Inledande och avslutande blanksteg bort från den <code> usernameToMatch </code> parametervärdet."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>är en tom sträng.       - eller - <code>pageIndex</code> är mindre än noll.       - eller - <code>pageSize</code> är mindre än 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Genererar ett slumpmässigt lösenord för den angivna längden."
  remarks: "Metoden GeneratePassword används för att generera ett slumpmässigt lösenord och mest används av den <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>metoden som implementeras av en medlemskapsprovider att återställa lösenordet för en användare till ett nytt, tillfälligt lösenord.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       Det genererade lösenordet innehåller endast alfanumeriska tecken och följande skiljetecken: `!@#$%^&*()_-+=[{]};:<>|./?`. Inga dolda eller icke utskrivbara tecken ingår i genererat lösenord.      > [!NOTE] > Slumpmässigt lösenord som skapats av metoden GeneratePassword är inte säkert att skicka det reguljära uttrycket i den <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>egenskapen.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Dock slumpmässigt lösenord uppfyller de kriterier som fastställts av den <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>egenskapen och `numberOfNonAlphanumericCharacters` parameter.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "Antalet tecken i genererat lösenord. Längden måste vara mellan 1 och 128 tecken."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'Det minsta antalet icke-alfanumeriska tecken (t.ex @, #,!, %, &amp;och så vidare) i genererade lösenordet.'
    return:
      type: System.String
      description: "Ett slumpmässigt lösenord för den angivna längden."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>är mindre än 1 eller större än 128 - eller - <code>numberOfNonAlphanumericCharacters</code> är mindre än 0 eller större än <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling med alla användare i databasen."
  remarks: "GetAllUsers returnerar information för alla medlemskap för ett program som en samling <xref:System.Web.Security.MembershipUser>objekt.</xref:System.Web.Security.MembershipUser> Var försiktig när du använder metoden GetAllUsers med mycket stora användardatabaser som den resulterande <xref:System.Web.Security.MembershipUserCollection>i din ASP.NET sida kan försämra prestanda för ditt program.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>av <xref:System.Web.Security.MembershipUser>-objekt som representerar alla användare i databasen.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling med alla användare i databasen på sidorna i data."
  remarks: "Resultaten av GetAllUsers är begränsad av den `pageIndex` och `pageSize` parametrar. Den `pageSize` parametern anger det maximala antalet <xref:System.Web.Security.MembershipUser>objekt som ska returneras i <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Den `pageIndex` parametern identifierar vilken sida av resultat som ska returneras, där 0 identifierar den första sidan. Den `totalRecords` parametern är en `out` parameter som är inställd på det totala antalet användare av medlemskap för den konfigurerade `applicationName`. Till exempel om det finns 13 användare för den konfigurerade `applicationName`, och `pageIndex` värdet var 1 med en `pageSize` 5, den <xref:System.Web.Security.MembershipUserCollection>returnerade skulle innehålla sjätte till tionde användare returnerades.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`skulle anges till 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Index på sidan med resultat som ska returneras. Använd 0 om du vill ange den första sidan."
    - id: pageSize
      type: System.Int32
      description: "Storleken på sidan med resultat som ska returneras. `pageIndex`är nollbaserade."
    - id: totalRecords
      type: System.Int32
      description: "Det totala antalet användare."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "En <xref:System.Web.Security.MembershipUserCollection>av <xref:System.Web.Security.MembershipUser>-objekt som representerar alla användare i databasen för den konfigurerade <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>är mindre än noll.       - eller - <code>pageSize</code> är mindre än 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar antalet användare som för närvarande åtkomst till ett program."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Returnerar antalet användare för den aktuella <xref:System.Web.Security.Membership.ApplicationName%2A>där datum för senaste aktivitet är större än den aktuella tiden minus <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Aktiviteten senaste tidsvärdet stämpel har uppdaterats till aktuellt datum och tid när användarens autentiseringsuppgifter valideras av den <xref:System.Web.Security.Membership.ValidateUser%2A>eller <xref:System.Web.Security.Membership.UpdateUser%2A>metod eller när ett anrop till en <xref:System.Web.Security.Membership.GetUser%2A>överlagring som tar inga parametrar eller som använder den `userIsOnline` parametern för att ange datum-och tidsstämpel som ska uppdateras.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Antalet användare som för närvarande åtkomst till ett program."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan och uppdaterar aktiviteten senaste datum-och tidsstämpel för den aktuella användaren är inloggad medlemskap."
  remarks: "GetUser hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser> Om du använder någon av GetUser överlagringar som inte har en `username` parametern GetUser returnerar informationen för den aktuella användaren är inloggad medlemskap. Den aktuella användaren är inloggad medlemskap identifieras av <xref:System.Security.Principal.IIdentity.Name%2A>för användaren i aktuellt <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan också ange om du vill GetUser att uppdatera aktiviteten senaste datum-och tidsstämpel för användaren som hämtas med hjälp av den `userIsOnline` parameter. I den <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte tar en `userIsOnline` parametern `GetUser()` implicit uppdateringar aktiviteten senaste datum-och tidsstämpel för användaren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`och `GetUser(System.Object)` inte."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den aktuella inloggade användaren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen medlemskap användare är inloggad."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan för den aktuella användaren är inloggad medlemskap. Uppdateringar aktiviteten senaste tidsvärdet tidsstämpel för den aktuella användaren är inloggad medlemskap, om anges."
  remarks: "GetUser-metoden hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser> Om du använder en av de <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte har en `username` parametern <xref:System.Web.Security.Membership.GetUser%2A>returnerar informationen för den aktuella användaren är inloggad medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Den aktuella användaren är inloggad medlemskap identifieras av <xref:System.Security.Principal.IIdentity.Name%2A>för användaren i aktuellt <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan också ange om du vill <xref:System.Web.Security.Membership.GetUser%2A>att uppdatera aktiviteten senaste datum-och tidsstämpel för användaren som hämtas med hjälp av den `userIsOnline` parameter.</xref:System.Web.Security.Membership.GetUser%2A> I den <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte tar en `userIsOnline` parametern `GetUser()` implicit uppdateringar aktiviteten senaste datum-och tidsstämpel för användaren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`och `GetUser(System.Object)` inte."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Om <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, uppdateringar aktiviteten senaste datum-och tidsstämpel för den angivna användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den aktuella inloggade användaren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen medlemskap användare är inloggad."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan för medlemskap användaren som är associerad med den angivna unika identifieraren."
  remarks: "GetUser-metoden hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser> Användaren identifieras med unikt ID från datakällan som anges i den `providerUserKey` parameter.       Du kan också ange om du vill <xref:System.Web.Security.Membership.GetUser%2A>att uppdatera aktiviteten senaste datum-och tidsstämpel för användaren som hämtas med den `userIsOnline` parameter.</xref:System.Web.Security.Membership.GetUser%2A> I den <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte tar en `userIsOnline` parametern `GetUser()` implicit uppdateringar aktiviteten senaste datum-och tidsstämpel för användaren.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`och `GetUser(System.Object)` inte"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Unikt ID från datakällan medlemskap för användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den användaren som associerats med den angivna unika identifieraren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan för den angivna medlemskap användaren."
  remarks: "GetUser-metoden hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser> Om du använder en av de <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte har en `username` parametern <xref:System.Web.Security.Membership.GetUser%2A>returnerar informationen för den aktuella användaren är inloggad medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Den aktuella användaren är inloggad medlemskap identifieras av <xref:System.Security.Principal.IIdentity.Name%2A>för användaren i aktuellt <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan också ange om du vill <xref:System.Web.Security.Membership.GetUser%2A>att uppdatera aktiviteten senaste datum-och tidsstämpel för användaren som hämtas med den `userIsOnline` parameter.</xref:System.Web.Security.Membership.GetUser%2A> I den <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte tar en `userIsOnline` parametern <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicit uppdateringar aktiviteten senaste datum-och tidsstämpel för användaren.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser och <xref:System.Web.Security.Membership.GetUser%2A>inte.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Namnet på användaren att hämta."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den angivna användaren.</xref:System.Web.Security.MembershipUser> Om den <code> username </code> parametern inte motsvarar en befintlig användare, den här metoden returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>innehåller ett komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan för medlemskap användaren som är associerad med den angivna unika identifieraren. Uppdateringar aktiviteten senaste tidsvärdet tidsstämpel för användaren, om anges."
  remarks: "GetUser-metoden hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser> Användaren identifieras med den unika identifieraren från den angivna datakällan i den `providerUserKey` parameter."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Unikt ID från datakällan medlemskap för användaren."
    - id: userIsOnline
      type: System.Boolean
      description: "Om <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, uppdateringar aktiviteten senaste datum-och tidsstämpel för den angivna användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den användaren som associerats med den angivna unika identifieraren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar informationen från datakällan för den angivna medlemskap användaren. Uppdateringar aktiviteten senaste tidsvärdet tidsstämpel för användaren, om anges."
  remarks: "GetUser-metoden hämtar informationen från datakällan och skapar en <xref:System.Web.Security.MembershipUser>objekt fylls med data som returnerades.</xref:System.Web.Security.MembershipUser>       Om du använder en av de <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte har en `username` parametern <xref:System.Web.Security.Membership.GetUser%2A>returnerar informationen för den aktuella användaren är inloggad medlemskap.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Den aktuella användaren är inloggad medlemskap identifieras av <xref:System.Security.Principal.IIdentity.Name%2A>för användaren i aktuellt <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Du kan också ange om du vill <xref:System.Web.Security.Membership.GetUser%2A>att uppdatera aktiviteten senaste datum-och tidsstämpel för användaren som hämtas med den `userIsOnline` parameter.</xref:System.Web.Security.Membership.GetUser%2A> I den <xref:System.Web.Security.Membership.GetUser%2A>överlagringar som inte tar en `userIsOnline` parametern <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicit uppdateringar aktiviteten senaste datum-och tidsstämpel för användaren.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>och <xref:System.Web.Security.Membership.GetUser%2A>inte.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Namnet på användaren att hämta."
    - id: userIsOnline
      type: System.Boolean
      description: "Om <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, uppdateringar aktiviteten senaste datum-och tidsstämpel för den angivna användaren."
    return:
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>-objekt som representerar den angivna användaren.</xref:System.Web.Security.MembershipUser> Om den <code> username </code> parametern inte motsvarar en befintlig användare, den här metoden returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>innehåller ett komma (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett användarnamn där e-postadressen för användaren matchar den angivna e-postadressen."
  remarks: "GetUserNameByEmail kan användas för att hämta användarnamnet för användaren medlemskap i de fall där en användare inte känner sitt användarnamn, men känner e-postadress. Om fler än en användare i datalagret har samma e-postadress, returneras det första användarnamnet påträffades.       Inledande och avslutande blanksteg bort från alla parametervärden."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "E-postadress att söka efter."
    return:
      type: System.String
      description: "Användarnamn där e-postadressen för användaren matchar den angivna e-postadressen. Om ingen matchning hittas <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Identifierare för den algoritm som används för att hash-lösenord."
  remarks: "Egenskapen HashAlgorithmType identifierar anpassade hashalgoritm som används av <xref:System.Web.Security.Membership>klass.</xref:System.Web.Security.Membership> Du ställer in egenskapen HashAlgorithmType med den `hashAlgorithmType` attribut för elementet.       .NET Framework kan du konfigurera anpassade kryptografiska klasser med konfigurationsavsnittet element. Egenskapen HashAlgorithmType måste matcha den `name` attribut för element i ett element. Mer information finns i [mappning algoritmen namn till Kryptografiklasserna](~/add/includes/ajax-current-ext-md.md).       Om egenskapen HashAlgorithmType inte har angetts i <xref:System.Web.Security.Membership>klassen använder hash-algoritmen i den `validation` -attributet för elementet.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "Identifierare av algoritmen som används för att hash-lösenord, eller tomt för att använda standard-hash-algoritmen."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar antalet ogiltigt lösenord eller lösenordssvaret försök som tillåts innan användaren medlemskap är låst."
  remarks: "Egenskapen MaxInvalidPasswordAttempts fungerar tillsammans med den <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>egenskapen för att skydda datorn mot en oönskad källa med upprepade försök att gissa lösenord eller lösenordssvar en användares gruppmedlemskap.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Om antalet ogiltiga lösenord eller lösenord svar angett medlemskap är större än eller lika med värdet på egenskapen MaxInvalidPasswordAttempts inom antalet minuter som anges av den <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>egenskapen och användaren är utelåst från webbplatsen genom att ange den <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>egenskapen `true` tills användaren är låst av ett anrop till den <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metoden.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Om ett giltigt lösenord eller ett lösenordssvar anges innan värdet på egenskapen MaxInvalidPasswordAttempts nås, har räknaren som spårar antalet ogiltiga försök värdet noll.       Ogiltigt lösenord och svaret lösenordsförsök spåras separat. Till exempel om MaxInvalidPasswordAttempts-egenskap är inställd på 5 har användaren till fem försök att ange rätt lösenord och upp till fem försöker ange ett korrekt lösenordssvar utan på att låsas.       Egenskapsvärdet MaxInvalidPasswordAttempts anges i den konfiguration som använder den `maxInvalidPasswordAttempts` attribut för konfigurationselementet.       Om den <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>egenskapen är `false`, ogiltig lösenordssvar försök spåras inte.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Antalet ogiltigt lösenord eller lösenordssvaret försök som tillåts innan användaren medlemskap är låst."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar det minsta antalet specialtecken som måste finnas i ett giltigt lösenord."
  remarks: "Egenskapen MinRequiredNonAlphanumericCharacters returnerar det minsta antalet särskild, icke-alfanumeriska tecken som måste anges för att skapa ett giltigt lösenord för medlemskapsprovidern som angivits i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       MinRequiredNonalphanumericCharacters får egenskapen har värdet i den konfiguration som använder den `minRequiredNonAlphanumericCharacters` attribut för konfigurationselementet.       Ett icke-alfanumeriska tecken är ett tecken som den <xref:System.Char.IsLetterOrDigit%2A>metoden returnerar `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Minsta antal specialtecken som måste finnas i ett giltigt lösenord."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar den minsta längden som krävs för ett lösenord."
  remarks: "Egenskapen MinRequiredPasswordLength hämtar det minsta antalet tecken som måste anges för att skapa ett giltigt lösenord för medlemskapsprovidern som angivits i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       Egenskapsvärdet MinRequiredPasswordLength anges i den konfiguration som använder den `minRequiredPasswordLength` attribut för konfigurationselementet."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "Den minsta längden som krävs för ett lösenord."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar tidsfönstret mellan vilka efterföljande misslyckade försök att ange ett giltigt lösenord eller lösenordssvar spåras."
  remarks: "Egenskapen PasswordAttemptWindow fungerar tillsammans med den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>egenskapen kan du skydda datorn mot en oönskad källa för att gissa lösenord eller lösenordssvar av användaren genom medlemskap upprepade försök.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> När en användare försöker logga in med, ändra eller återställa sitt lösenord tillåts bara ett visst antal på varandra följande försök inom ett angivet tidsintervall. Längden på den här tidsperioden har angetts i egenskapen PasswordAttemptWindow, som anger antalet minuter mellan ogiltiga försök.       Om antalet misslyckade försök i följd som en användare gör att återställa hans eller hennes lösenord är lika med det värde som lagras i den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>egenskap och tid som gått sedan senaste Ogiltigt försök är mindre än antalet minuter som anges i egenskapen PasswordAttemptWindow medlemskap användaren är låst.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Användaren är utelåst genom att ange den <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>egenskapen `true` tills användaren är låst av ett anrop till den <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metoden.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Om intervallet mellan det aktuella misslyckade försöket och det senaste försöket är större än inställningen för egenskapen PasswordAttemptWindow räknas aktuella Ogiltigt försök som först. Om ett giltigt lösenordssvar anges innan det maximala antalet tillåtna felaktiga försök har nåtts, har antalet ogiltiga lösenordssvar försök angetts till 0 (noll). Om ett giltigt lösenord anges innan det maximala antalet tillåtna Ogiltigt försök har nåtts, antalet ogiltiga lösenordsförsök och antalet försök ogiltig lösenordssvar har angetts till 0 (noll).       Ogiltigt lösenord och lösenordssvar försök ackumuleras oberoende av varandra. Till exempel om den <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>är inställd på 5, och tre ogiltigt lösenord-försök görs följt av två ogiltig lösenordssvar försök, två mer ogiltig lösenordsförsök (eller ytterligare tre ogiltig lösenordssvar försök) måste göras PasswordAttemptWindow för medlemskap-användare bli utelåsta.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Egenskapsvärdet PasswordAttemptWindow anges i tillämpningsprogrammets konfiguration med hjälp av den `passwordAttemptWindow` attributet i konfigurationselementet avsnittet.       Om den <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>egenskap är inställd på `false`, ogiltig lösenordssvar försök spåras inte.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "Tidsfönster, i minuter, som följd kunde inte under försök att ange ett giltigt lösenord eller lösenordssvar spåras. Standardvärdet är 10 minuter. Om intervallet mellan det aktuella misslyckade försöket och det senaste försöket är större än inställningen för egenskapen PasswordAttemptWindow, behandlas varje misslyckat försök som om det vore första försöket."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar det reguljära uttrycket som används för att utvärdera ett lösenord."
  remarks: "Egenskapen PasswordStrengthRegularExpression hämtar det reguljära uttrycket som används för att utvärdera lösenordskomplexitet från providern som angivits i den <xref:System.Web.Security.Membership.Provider%2A>egenskapen.</xref:System.Web.Security.Membership.Provider%2A>       Egenskapen PasswordStrengthRegularExpression har angetts i den konfiguration som använder den `passwordStrengthRegularExpression` attribut för konfigurationselementet.       Mer information om reguljära uttryck finns [reguljära uttryck för .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Ett reguljärt uttryck som används för att utvärdera ett lösenord."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en referens till standardprovider för medlemskap för programmet."
  remarks: "Egenskapen kan du referera standardprovider för medlemskap för ett program direkt. Detta är vanligt för åtkomst till anpassade medlemmar på medlemskapsprovidern som inte är <xref:System.Web.Security.MembershipProvider>abstrakt klass för grundläggande.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Standardprovider för medlemskap för programmet som exponeras med hjälp av en <xref:System.Web.Security.MembershipProvider>abstrakt klass för grundläggande.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar en samling medlemskapsprovidrar för ASP.NET-program."
  remarks: "Egenskapen Providers refererar alla medlemskapsprovidrar aktiverat för ett program, inklusive providers lagts till i filen Web.config för programmet och Machine.config-filen för alla program. Du kan styra vilka medlemskap providers är tillgängliga för ett program som använder den `providers` element i avsnittet i konfigurationen för programmet. Till exempel i följande exempel visas i avsnittet i Web.config-filen för ett program som tar bort den <xref:System.Web.Security.SqlMembershipProvider>instansen (`AspNetSqlProvider`) angetts i konfigurationsfilen för datorn och lägger till en <xref:System.Web.Security.SqlMembershipProvider>instans med namnet `SqlProvider` som standardprovider för medlemskap för programmet.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```När du anger den [medlemskap Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) avsnitt, måste du ange den `defaultProvider` attribut. Om du inte anger en [medlemskap Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) avsnitt i filen Web.config, värdena från datorkonfigurationen används och <xref:System.Web.Security.SqlMembershipProvider>instans med namnet `AspNetSqlProvider` upprättas som den `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Du kan hämta en strikt typkontroll referens till en providern ur providermängden indexering medlemskapsprovidern efter namn och kastar som den önskade typen."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "En <xref:System.Web.Security.MembershipProviderCollection>av medlemskapsprovidrar som konfigurerats för ASP.NET-programmet.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hämtar ett värde som anger om standardprovider för medlemskap måste användaren att svara på en lösenordsfråga för återställning av lösenord och hämtning."
  remarks: "Kräver en frågor och svar ger ett ytterligare säkerhetslager när hämtning eller återställa en användares lösenord. Användarna kan ange en fråga och svar när sitt användarnamn skapas kan senare använda att hämta eller återställa ett nytt lösenord.       Krävfrågaochsvar kontrolleras när <xref:System.Web.Security.MembershipUser.ResetPassword%2A>eller <xref:System.Web.Security.MembershipUser.GetPassword%2A>kallas.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> Den .NET Framework-providern utlöser en <xref:System.NotSupportedException>om RequiresQuestionAndAnswer `true` och det angivna lösenordssvaret är `null`.</xref:System.NotSupportedException>       Om <xref:System.Web.Security.Membership.EnablePasswordReset%2A>och <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>båda `false`, RequiresQuestionAndAnswer kan användas för att framtvinga skapandet av frågor och svar när nya användare skapas, men fråga och svar används inte.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Du kommer att kunna hämta frågan med hjälp av <xref:System.Web.Security.MembershipUser>klassen.</xref:System.Web.Security.MembershipUser>       Mer information finns i <xref:System.Web.Security.MembershipUser.ResetPassword%2A>och <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om ett lösenordssvar måste anges för lösenordsåterställning och hämtning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Uppdaterar databasen med information för den angivna användaren."
  remarks: "UpdateUser använder som indata, en <xref:System.Web.Security.MembershipUser>objekt fylls med aktuell information för användaren medlemskap och uppdaterar datakällan med värden för den <xref:System.Web.Security.MembershipUser>objekt.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Du kan skapa en ny <xref:System.Web.Security.MembershipUser>, eller hämta ett <xref:System.Web.Security.MembershipUser>objekt fylls med aktuella värden på datakällan med den <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, eller <xref:System.Web.Security.Membership.FindUsersByEmail%2A>metoder.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "En <xref:System.Web.Security.MembershipUser>objekt som representerar användare uppdateras och den uppdaterade informationen för användaren.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Anger antalet minuter efter den senaste aktiviteten tid/datum tidsstämpel för en användare under vilken användaren anses vara online."
  remarks: "Egenskapsvärdet UserIsOnlineTimeWindow kontrolleras under anrop till <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Om den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>för en användare är större än aktuellt datum och tid minus UserIsOnlineTimeWindow värdet i minuter sedan användaren anses vara online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Du kan fastställa om en användare medlemskap anses online med <xref:System.Web.Security.MembershipUser.IsOnline%2A>egenskapen för <xref:System.Web.Security.MembershipUser>klassen.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       Den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>för en användare uppdateras när en användares autentiseringsuppgifter kunde valideras av den <xref:System.Web.Security.Membership.ValidateUser%2A>metoden.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Du kan också uppdatera de <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>för en medlemskap användare när du anropar någon av de <xref:System.Web.Security.Membership.GetUser%2A>överlagringar.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Om du anropar en <xref:System.Web.Security.Membership.GetUser%2A>överlagring som tar en `userIsOnline` parameter, ange ett värde för `true` att uppdatera den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>för användaren.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "Antalet minuter efter den senaste aktiviteten tidsvärdet tidsstämpel för en användare under vilken användaren anses vara online."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifierar att det angivna användarnamnet och lösenordet är giltiga."
  remarks: "ValidateUser ger ett enkelt sätt att kontrollera användarnamn och lösenord från datakällan. Observera att, om den `username` parameter är tom eller `null`, en <xref:System.Web.HttpException>genereras.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Namnet på användaren som ska verifieras."
    - id: password
      type: System.String
      description: "Lösenordet för den angivna användaren."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna användarnamnet och lösenordet är giltiga. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inträffar när en användare skapas, ett lösenord ändras eller ett lösenord har återställts."
  remarks: "Den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>händelsen inträffar när den <xref:System.Web.Security.MembershipProvider.CreateUser%2A>-metoden i <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>-metoden eller <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>anropas metoden för en medlemskapsprovider.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Du kan använda den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>händelsen för att validera lösenordet format och värden för medlemskap användare.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Du kan avbryta aktuellt <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, eller <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>åtgärden genom att ange den <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>egenskapen för den angivna <xref:System.Web.Security.ValidatePasswordEventArgs>till `true` under den <xref:System.Web.Security.MembershipProvider.ValidatingPassword>händelse.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Om du avbryter den aktuella åtgärden genom att ange den <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>egenskapen `true`, du kan ange den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>egenskapen för den angivna <xref:System.Web.Security.ValidatePasswordEventArgs>till ett undantag som beskriver varför-lösenordsverifieringen misslyckades.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Anropa metoden genereras ett undantag som den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>egenskapen.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Om den <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>egenskapen är `null`, anroparen genereras en allmän lösenord valideringsfelet undantagsfel.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
