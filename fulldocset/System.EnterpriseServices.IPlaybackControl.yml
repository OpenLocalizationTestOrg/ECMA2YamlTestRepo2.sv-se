### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "Funktioner i komponenter i kö i onormal hantering av uppspelningsfel på serversidan och klientsidan misslyckade leveransmekanismen Message Queuing."
  remarks: "Undantagsklass som definierats för komponenten i COM +-katalogen implementerar både IPlaybackControl och gränssnitt för den ursprungliga klassen. Implementeringar av metoden för gränssnittet för klassen används för att utföra undantagshantering för misslyckade metoder i klassen sig själv. Ska anropas efter <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>eller <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>att bearbeta undantag för den ursprungligen anropade metoden.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> </xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>       Komponenter i kö spelaren anropar metoder för IPlaybackControl att informera undantagshanterare objektet som ett meddelande som kommer att placeras på sista kvarvarande eller obeställbara kön. Komponenter i kö spelaren anropar sedan metoden samma i undantagshanterare objektet som inte hade i det ursprungliga metodanropet. Undantagshanterare objektet kan implementera ett alternativ kan till exempel genom att samla in diagnostikinformation för problem eller att generera ett objekt eller ett meddelande med information om klienten till problemet. Om programmet inte implementerar IPlaybackControl är skadligt meddelande placerad på sista kvarvarande eller obeställbara kön när komponenter i kö spelaren tillgång alla nya försök.       Skadligt meddelande är ett meddelande som inte kan bearbetas av någon anledning, kanske på grund av ett problem med servern eller system för meddelandeköer. Transaktionen återställs och skadligt meddelande som leder till överst i kön. När meddelandet har tagits bort igen, sker samma sak. Det här meddelandet kan fortsätta slinga tills något görs för att åtgärda problemet. Tjänsten QC hanterar skadligt meddelande med hjälp av ett antal nya försök. Meddelandet har flyttats till en slutlig vilande kö efter flera misslyckade försök. Förgiftade meddelanden finns kvar i vilande kö tills flyttats manuellt med hjälp av verktyget köade komponenter.       Skadligt meddelande situation kan också lösas programmässigt med hjälp av den <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>metod som informerar författaren server-sida-komponent som alla försök att spela upp uppskjutna aktiveringen har misslyckats.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>       Om du upptäcker ett skadligt meddelande, kanske du kan snabbt lösa den bakomliggande orsaken till problemet. Om servern var offline av någon anledning, kan du hämta servern online igen. Om du inte kan lösa problemet snabbt, kan du generera en annan transaktion som meddelar den begärande transaktionen inte förekommer automatiskt. Begäranden kan göra en kompenserande transaktion som kastar effekten av en transaktion som redan har genomförts."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Informerar klientsidan undantagshantering komponenten att alla Message Queuing-försök att leverera meddelandet till servern avvisas och meddelandet därför på klientsidan Xact Dead Letter queue."
  remarks: "När meddelanden tas emot i Xact kö med olevererade brev, försöker COM + anropa en undantagshanterare för klientsidan som rör serverklass att leverera detta meddelande. Den gör detta genom att först anropa FinalClientRetry och sedan anropar undantagshantering versionen av den misslyckade metoden i undantagshanterare objektet. Den här metoden undantag kan sedan vidta en åtgärd som undantag, till exempel upptäcker att skicka ett e-postmeddelande till administratören eller åtgärda klientsidan kompenserande (återföring effekten av en tidigare transaktion). Om metoden undantag inte lyckas finns meddelandet kvar på Xact kö med olevererade brev.       Xact kö med olevererade brev kan visas i Utforskaren Microsoft Message Queue (MSMQ)."
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Informerar klass-implementering serversidan undantag att alla försök att spela upp den uppskjutna aktiveringen till servern har misslyckats och meddelandet kommer att flyttas till dess slutliga vilande kö."
  remarks: "När meddelanden tas emot på Xact kö med olevererade brev, försöker COM + anropa en undantagshanterare för serversidan som rör serverklass att leverera detta meddelande. Den gör detta genom att först anropa FinalServerRetry och sedan anropar undantagshantering version av metoden misslyckade i undantag hanterare objektet. Den här metoden undantag kan sedan vidta en åtgärd som undantag, till exempel upptäcker att skicka ett e-postmeddelande till administratören eller åtgärda klientsidan kompenserande (återföring effekten av en tidigare transaktion). Serverobjektet bör göra allt för att slutföra den här transaktionen. I annat fall krävs manuella åtgärder för att bearbeta meddelandet. Om metoden undantag inte lyckas flyttas meddelandet till den slutliga vilande kö."
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
