### YamlMime:ManagedReference
items:
- uid: System.Data.IDbCommand
  id: IDbCommand
  children:
  - System.Data.IDbCommand.Cancel
  - System.Data.IDbCommand.CommandText
  - System.Data.IDbCommand.CommandTimeout
  - System.Data.IDbCommand.CommandType
  - System.Data.IDbCommand.Connection
  - System.Data.IDbCommand.CreateParameter
  - System.Data.IDbCommand.ExecuteNonQuery
  - System.Data.IDbCommand.ExecuteReader
  - System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.IDbCommand.ExecuteScalar
  - System.Data.IDbCommand.Parameters
  - System.Data.IDbCommand.Prepare
  - System.Data.IDbCommand.Transaction
  - System.Data.IDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
  type: Interface
  summary: "Representerar en SQL-instruktion som körs medan du är ansluten till en datakälla och implementeras av .NET Framework dataproviders som kommer åt relationsdatabaser."
  remarks: "Gränssnittet IDbCommand kan en ärvande klass att implementera en kommando-klass som representerar en SQL-instruktion som körs på en datakälla. Mer information om kommandot klasser finns [ett kommando körs](~/add/includes/ajax-current-ext-md.md).       Ett program skapa inte en instans av gränssnittet IDbCommand direkt, men de skapar en instans av en klass som ärver IDbCommand.       Klasser som ärver IDbCommand måste implementera ärvda medlemmar och vanligtvis definiera ytterligare medlemmar för att lägga till provider-specifik funktion. Till exempel gränssnittet IDbCommand definierar den <xref:System.Data.IDbCommand.ExecuteNonQuery%2A>metoden.</xref:System.Data.IDbCommand.ExecuteNonQuery%2A> I sin tur den <xref:System.Data.SqlClient.SqlCommand>klassen ärver den här metoden och definierar också den <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>metoden.</xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.idbcommand_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.idbcommand_1.vb)]"
  syntax:
    content: 'public interface IDbCommand : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbCommand.Cancel
  id: Cancel
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: IDbCommand.Cancel()
  fullName: System.Data.IDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Försöker avbryter körningen av ett <xref href=&quot;System.Data.IDbCommand&quot;> </xref>."
  remarks: "Om det finns inget att avbryta, händer ingenting. Om det finns ett kommando i processen och försök att avbryta misslyckas, genereras inget undantag."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.Data.IDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandText
  id: CommandText
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: IDbCommand.CommandText
  fullName: System.Data.IDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger texten kommandot ska köras mot datakällan."
  remarks: "När den <xref:System.Data.IDbCommand.CommandType%2A>egenskap är inställd på `StoredProcedure`, ställa in egenskapen CommandText på namnet på den lagrade proceduren.</xref:System.Data.IDbCommand.CommandType%2A> Användaren kan krävas du använder syntaxen för escape-tecken om namnet på lagrade proceduren innehåller specialtecken. Kommandot anropar den här lagrade proceduren när du anropar en Execute-metoder."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_2_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_2_1.cs)]"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "Kommandot text ska köras. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Data.IDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
  fullName: System.Data.IDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger väntetiden innan försöket att köra ett kommando och ett fel genereras."
  remarks: ''
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_0_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_0_1.cs)]"
  syntax:
    content: public int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Tid (i sekunder) att vänta tills kommandot att köras. Standardvärdet är 30 sekunder."
  overload: System.Data.IDbCommand.CommandTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapsvärdet som tilldelats är mindre än 0."
  platform:
  - net462
- uid: System.Data.IDbCommand.CommandType
  id: CommandType
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: IDbCommand.CommandType
  fullName: System.Data.IDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger eller anger hur <xref:System.Data.IDbCommand.CommandText*>egenskapen tolkas.</xref:System.Data.IDbCommand.CommandText*>"
  remarks: "När du anger egenskapen CommandType till `StoredProcedure`, bör du ange den <xref:System.Data.IDbCommand.CommandText%2A>egenskapen till namnet på den lagrade proceduren.</xref:System.Data.IDbCommand.CommandText%2A> Kommandot Kör den lagrade proceduren när du anropar en Execute-metoder."
  syntax:
    content: public System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "En av de <xref href=&quot;System.Data.CommandType&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.CommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Connection
  id: Connection
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: IDbCommand.Connection
  fullName: System.Data.IDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger den <xref href=&quot;System.Data.IDbConnection&quot;> </xref> används av den här instansen av den <xref href=&quot;System.Data.IDbCommand&quot;> </xref>."
  syntax:
    content: public System.Data.IDbConnection Connection { get; set; }
    return:
      type: System.Data.IDbConnection
      description: "Anslutningen till datakällan."
  overload: System.Data.IDbCommand.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: IDbCommand.CreateParameter()
  fullName: System.Data.IDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en ny instans av en <xref href=&quot;System.Data.IDbDataParameter&quot;> </xref> objekt."
  remarks: "Vid arv från <xref:System.Data.IDbCommand>, ett .NET Framework-dataprovidern implementerar en strikt typad version av CreateParameter.</xref:System.Data.IDbCommand>"
  syntax:
    content: public System.Data.IDbDataParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.IDbDataParameter
      description: "En <xref uid=&quot;langword_csharp_IDbDataParameter&quot; name=&quot;IDbDataParameter&quot; href=&quot;&quot;> </xref> objekt."
  overload: System.Data.IDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: IDbCommand.ExecuteNonQuery()
  fullName: System.Data.IDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kör en SQL-instruktion mot den <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;> </xref> objekt för en .NET Framework-dataprovidern och returnerar antalet rader som påverkas."
  remarks: "Du kan använda ExecuteNonQuery operationer katalog (till exempel frågar strukturen i en databas eller skapa databasobjekt, till exempel tabeller) eller ändra data i en databas utan att använda en <xref:System.Data.DataSet>genom att köra UPDATE-, INSERT- eller DELETE-instruktioner.</xref:System.Data.DataSet>       Även om ExecuteNonQuery inte returnerar några rader är eventuella utdataparametrar eller returvärden mappas till parametrarna fyllda med data.       Det returnera värdet är antalet rader som påverkas av kommandot för UPDATE-, INSERT och DELETE-instruktioner. För alla andra typer av rapporter är det returnera värdet-1."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it. To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.idbcommand_1_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_1_1.vb)]"
  syntax:
    content: public int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Antal rader som påverkas."
  overload: System.Data.IDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen finns inte.       - eller - anslutningen är inte öppen."
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: IDbCommand.ExecuteReader()
  fullName: System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kör den <> </> *> mot den <> </> *> och skapar en <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.IDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "En <xref href=&quot;System.Data.IDataReader&quot;> </xref> objekt."
  overload: System.Data.IDbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kör den <> </> *> mot den <> </> *>, och skapar en <xref href=&quot;System.Data.IDataReader&quot;> </xref> med någon av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> värden."
  remarks: "Anroparen måste anropa den <xref:System.Data.IDbConnection.Open%2A>metod för den <xref:System.Data.IDbCommand.Connection%2A>egenskapen.</xref:System.Data.IDbCommand.Connection%2A> </xref:System.Data.IDbConnection.Open%2A>       När den <xref:System.Data.IDbCommand.CommandType%2A>egenskapen `StoredProcedure`, <xref:System.Data.IDbCommand.CommandText%2A>egenskapen ska anges till namnet på den lagrade proceduren.</xref:System.Data.IDbCommand.CommandText%2A> </xref:System.Data.IDbCommand.CommandType%2A> Kommandot körs den här lagrade proceduren när du anropar <xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A>      > [!NOTE] > Använd <xref:System.Data.CommandBehavior>att hämta stora värden och binärdata.</xref:System.Data.CommandBehavior> Annars en <xref:System.OutOfMemoryException>kan uppstå och anslutningen kommer att stängas.</xref:System.OutOfMemoryException>       När de <xref:System.Data.IDataReader>används och den associerade <xref:System.Data.IDbConnection>är upptagen betjänar <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDbConnection> </xref:System.Data.IDataReader> I det här tillståndet kan kan inga andra åtgärder utföras på <xref:System.Data.IDbConnection>än stänger det.</xref:System.Data.IDbConnection> I så fall förrän den <xref:System.Data.IDataReader.Close%2A>DataReader-objektet-metoden anropas.</xref:System.Data.IDataReader.Close%2A> Om DataReader-objektet har skapats med <xref:System.Data.CommandBehavior>inställd på `CloseConnection`, stänger DataReader-objektet stängs anslutningen automatiskt.</xref:System.Data.CommandBehavior>"
  syntax:
    content: public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "En av de <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> värden."
    return:
      type: System.Data.IDataReader
      description: "En <xref href=&quot;System.Data.IDataReader&quot;> </xref> objekt."
  overload: System.Data.IDbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: IDbCommand.ExecuteScalar()
  fullName: System.Data.IDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kör frågan och returnerar den första kolumnen i den första raden i resultatuppsättningen som returnerats av frågan. Extra kolumner eller rader ignoreras."
  remarks: "Använd metoden ExecuteScalar för att hämta ett värde (till exempel ett samlat värde) från en-databas. Detta kräver mindre kod än att använda <xref:System.Data.IDbCommand.ExecuteReader%2A>metoden, och sedan utför åtgärderna som behövs för att generera det enskilda värdet med de data som returneras av <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDbCommand.ExecuteReader%2A>       En typisk ExecuteScalar fråga kan formateras som i följande C#-exempel: ```   CommandText = &quot;select count(*) as NumberOfRegions from region&quot;;   Int32 count = (int) ExecuteScalar();   ``` om den första kolumnen i den första raden i resultatuppsättningen inte hittas, en null-referens (`Nothing` i Visual Basic) returneras. Om värdet i databasen är `null`, returnerar frågan `DBNull.Value`."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.idbcommand_0_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_0_1.vb)]"
  syntax:
    content: public object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Den första kolumnen i den första raden i resultatuppsättningen."
  overload: System.Data.IDbCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Parameters
  id: Parameters
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: IDbCommand.Parameters
  fullName: System.Data.IDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the <xref href=&quot;System.Data.IDataParameterCollection&quot;></xref>."
  remarks: ''
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters. In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.  \n  \n [!code-cs[Classic WebData IDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.idbcommand_1_1.cs)]\n [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.idbcommand_1_1.vb)]"
  syntax:
    content: public System.Data.IDataParameterCollection Parameters { get; }
    return:
      type: System.Data.IDataParameterCollection
      description: "Parametrarna för SQL-instruktion eller lagrad procedur."
  overload: System.Data.IDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.Prepare
  id: Prepare
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: IDbCommand.Prepare()
  fullName: System.Data.IDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en förberedd (eller kompilerade) version av kommandot på datakällan."
  remarks: "Om den <xref:System.Data.IDbCommand.CommandType%2A>egenskap är inställd på `TableDirect`, Förbered händer ingenting.</xref:System.Data.IDbCommand.CommandType%2A> Om <xref:System.Data.IDbCommand.CommandType%2A>är inställd på `StoredProcedure`, anropet för att förbereda ska lyckas, men det kan resultera i en Nej op.</xref:System.Data.IDbCommand.CommandType%2A> Servern cachelagrar automatiskt planer för återanvändning är nödvändiga. Det finns därför inget behov av att anropa den här metoden direkt i ditt klientprogram."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.idbcommand_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.idbcommand_2_1.cs)]"
  syntax:
    content: public void Prepare ();
    parameters: []
  overload: System.Data.IDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <> </> *> har inte angetts.       -or-       The <>*> is not <xref:System.Data.OleDb.OleDbConnection.Open*>.</xref:System.Data.OleDb.OleDbConnection.Open*>"
  platform:
  - net462
- uid: System.Data.IDbCommand.Transaction
  id: Transaction
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: IDbCommand.Transaction
  fullName: System.Data.IDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger transaktionen inom vilken den <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> objekt av en .NET Framework-dataprovidern körs."
  syntax:
    content: public System.Data.IDbTransaction Transaction { get; set; }
    return:
      type: System.Data.IDbTransaction
      description: "den <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> objekt av en .NET Framework-dataprovidern körs. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.IDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
  fullName: System.Data.IDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger hur kommandoresultat används till den <xref href=&quot;System.Data.DataRow&quot;> </xref> när det används av den <xref:System.Data.IDataAdapter.Update*>metoden för en <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>.</xref:System.Data.IDataAdapter.Update*>"
  syntax:
    content: public System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "En av de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_Both&quot; name=&quot;Both&quot; href=&quot;&quot;> </xref> om kommandot genereras automatiskt. Då är standardvärdet <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det angivna värdet var inte något av de <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> värden."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbCommand.Cancel
  parent: System.Data.IDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: IDbCommand.Cancel()
  fullName: System.Data.IDbCommand.Cancel()
- uid: System.Data.IDbCommand.CommandText
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandText
  nameWithType: IDbCommand.CommandText
  fullName: System.Data.IDbCommand.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDbCommand.CommandTimeout
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
  fullName: System.Data.IDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand.CommandType
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandType
  nameWithType: IDbCommand.CommandType
  fullName: System.Data.IDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.IDbCommand.Connection
  parent: System.Data.IDbCommand
  isExternal: false
  name: Connection
  nameWithType: IDbCommand.Connection
  fullName: System.Data.IDbCommand.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbCommand.CreateParameter
  parent: System.Data.IDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: IDbCommand.CreateParameter()
  fullName: System.Data.IDbCommand.CreateParameter()
- uid: System.Data.IDbDataParameter
  parent: System.Data
  isExternal: false
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.IDbCommand.ExecuteNonQuery
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: IDbCommand.ExecuteNonQuery()
  fullName: System.Data.IDbCommand.ExecuteNonQuery()
- uid: System.Data.IDbCommand.ExecuteReader
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: IDbCommand.ExecuteReader()
  fullName: System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.IDbCommand.ExecuteScalar
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: IDbCommand.ExecuteScalar()
  fullName: System.Data.IDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbCommand.Parameters
  parent: System.Data.IDbCommand
  isExternal: false
  name: Parameters
  nameWithType: IDbCommand.Parameters
  fullName: System.Data.IDbCommand.Parameters
- uid: System.Data.IDataParameterCollection
  parent: System.Data
  isExternal: false
  name: IDataParameterCollection
  nameWithType: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
- uid: System.Data.IDbCommand.Prepare
  parent: System.Data.IDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: IDbCommand.Prepare()
  fullName: System.Data.IDbCommand.Prepare()
- uid: System.Data.IDbCommand.Transaction
  parent: System.Data.IDbCommand
  isExternal: false
  name: Transaction
  nameWithType: IDbCommand.Transaction
  fullName: System.Data.IDbCommand.Transaction
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbCommand.UpdatedRowSource
  parent: System.Data.IDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
  fullName: System.Data.IDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.IDbCommand.Cancel*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Cancel
  nameWithType: IDbCommand.Cancel
- uid: System.Data.IDbCommand.CommandText*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandText
  nameWithType: IDbCommand.CommandText
- uid: System.Data.IDbCommand.CommandTimeout*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: IDbCommand.CommandTimeout
- uid: System.Data.IDbCommand.CommandType*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CommandType
  nameWithType: IDbCommand.CommandType
- uid: System.Data.IDbCommand.Connection*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Connection
  nameWithType: IDbCommand.Connection
- uid: System.Data.IDbCommand.CreateParameter*
  parent: System.Data.IDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: IDbCommand.CreateParameter
- uid: System.Data.IDbCommand.ExecuteNonQuery*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: IDbCommand.ExecuteNonQuery
- uid: System.Data.IDbCommand.ExecuteReader*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: IDbCommand.ExecuteReader
- uid: System.Data.IDbCommand.ExecuteScalar*
  parent: System.Data.IDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: IDbCommand.ExecuteScalar
- uid: System.Data.IDbCommand.Parameters*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Parameters
  nameWithType: IDbCommand.Parameters
- uid: System.Data.IDbCommand.Prepare*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Prepare
  nameWithType: IDbCommand.Prepare
- uid: System.Data.IDbCommand.Transaction*
  parent: System.Data.IDbCommand
  isExternal: false
  name: Transaction
  nameWithType: IDbCommand.Transaction
- uid: System.Data.IDbCommand.UpdatedRowSource*
  parent: System.Data.IDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: IDbCommand.UpdatedRowSource
