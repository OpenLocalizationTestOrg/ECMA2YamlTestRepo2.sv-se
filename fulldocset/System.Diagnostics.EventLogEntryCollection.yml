### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntryCollection
  id: EventLogEntryCollection
  children:
  - System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  - System.Diagnostics.EventLogEntryCollection.Count
  - System.Diagnostics.EventLogEntryCollection.GetEnumerator
  - System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: EventLogEntryCollection
  nameWithType: EventLogEntryCollection
  fullName: System.Diagnostics.EventLogEntryCollection
  type: Class
  summary: "Definierar storlek och uppräknare för en samling <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> instanser."
  remarks: "Använd klassen EventLogEntryCollection vid läsning av poster som är associerade med en <xref:System.Diagnostics.EventLog>instans.</xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Entries%2A>Egenskapen för <xref:System.Diagnostics.EventLog>klassen är en samling med alla poster i händelseloggen.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Entries%2A>       Eftersom nya poster läggs till i den befintliga listan, kan stega igenom samlingen du öppna poster som har skapats efter EventLogEntryCollection skapades. Men när du visar hela listan kan uppdateras inte med nya poster."
  example:
  - "The following example demonstrates how to obtain event log information from an EventLogEntryCollection object.  \n  \n [!code-cs[EventLogEntry_CopyTo#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_CopyTo#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_CopyTo#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: 'public class EventLogEntryCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  id: CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Kopierar delarna av den <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> till en matris med <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> instanser som börjar vid en viss matrisindex."
  remarks: "Eftersom nya poster läggs till i den befintliga listan, kan gå igenom samlingen du komma åt poster som skapades när du skapade i <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection> En matris med <xref:System.Diagnostics.EventLogEntry>instanser är fast när den har instansierats.</xref:System.Diagnostics.EventLogEntry> Därför kan du läsa nya poster i matrisen som returneras av metoden CopyTo."
  example:
  - "The following example creates an <xref:System.Diagnostics.EventLogEntry> array and uses the CopyTo method to copy the contents of an <xref:System.Diagnostics.EventLogEntryCollection> into it.  \n  \n [!code-cs[EventLogEntry_CopyTo#2](~/add/codesnippet/csharp/c20f2fb2-3d8d-4b5e-8328-_1.cs)]\n [!code-vb[EventLogEntry_CopyTo#2](~/add/codesnippet/visualbasic/c20f2fb2-3d8d-4b5e-8328-_1.vb)]"
  syntax:
    content: public void CopyTo (System.Diagnostics.EventLogEntry[] entries, int index);
    parameters:
    - id: entries
      type: System.Diagnostics.EventLogEntry[]
      description: "Endimensionell matris av <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> instanser som är målet för elementen som kopieras från samlingen. Matrisen måste ha Nollbaserad indexering."
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i matrisen vid kopiering av vilka börjar."
  overload: System.Diagnostics.EventLogEntryCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Count
  id: Count
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar antalet poster i händelseloggen (det vill säga antalet element i den <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> samling)."
  remarks: "En som <xref:System.Diagnostics.EventLogEntryCollection>representerar en dynamisk lista över alla poster i en.</xref:System.Diagnostics.EventLogEntryCollection> Därför egenskapen Count kan ändras under livslängden för den <xref:System.Diagnostics.EventLogEntryCollection>instans som du skapar.</xref:System.Diagnostics.EventLogEntryCollection> Det är oftast bäst att arbeta med egenskapen Count direkt i stället för att tilldela värdet till en variabel."
  example:
  - "The following example demonstrates how to use the Count property to iterate through an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_25_1.cs)]\n [!code-cpp[EventLogEntry_Item#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_25_1.cpp)]\n [!code-vb[EventLogEntry_Item#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_25_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antal poster som finns i händelseloggen."
  overload: System.Diagnostics.EventLogEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Stöder en enkel iteration via den <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> objekt."
  remarks: "Det objekt som returneras av metoden GetEnumerator är en Omslutning för det <xref:System.Diagnostics.EventLogEntryCollection>klass som implementerar det <xref:System.Collections.IEnumerator>uppräknare.</xref:System.Collections.IEnumerator> </xref:System.Diagnostics.EventLogEntryCollection>      > [!NOTE] > Om samlingen har ändrats under upprepning, upprepning avslutas. För att undvika denna möjlighet finns i <xref:System.Diagnostics.EventLogEntryCollection.Item%2A>-egenskapen för en alternativ metod för att söka igenom en samling.</xref:System.Diagnostics.EventLogEntryCollection.Item%2A>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Ett objekt som kan användas för att iterera över samlingen."
  overload: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar en post i händelseloggen, baserat på ett index som börjar vid 0 (noll)."
  remarks: "<xref:System.Diagnostics.EventLogEntry>objekt som indexeras av systemets händelselogg enligt i kronologisk ordning som de anlände i händelseloggen.</xref:System.Diagnostics.EventLogEntry> Använd egenskapen Item för att välja en specifik händelselogg vars index i samlingen är känd.       Gå igenom den <xref:System.Diagnostics.EventLogEntryCollection>instansen steg igenom <xref:System.Diagnostics.EventLogEntry>objekt sekventiellt.</xref:System.Diagnostics.EventLogEntry> </xref:System.Diagnostics.EventLogEntryCollection> Samlingen är dynamiska och antalet poster kanske inte ändras när du anger loopen. Därför bör du använda en `for each...next` slinga i stället för en `for(int i=0; i<count, i++)` slinga för att gå igenom de poster som är associerade med den <xref:System.Diagnostics.EventLogEntryCollection>instans för att granska hela uppsättningen av poster.</xref:System.Diagnostics.EventLogEntryCollection>       Eftersom nya poster läggs till i den befintliga listan, kan gå igenom samlingen du komma åt poster som skapades när du skapade i <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection>"
  example:
  - "The following example demonstrates how to display information for the items in an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_Item#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_Item#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: public virtual System.Diagnostics.EventLogEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet som är associerad med posten i händelseloggen."
    return:
      type: System.Diagnostics.EventLogEntry
      description: "Post i händelseloggen på den plats som anges av den <code> index </code> parameter."
  overload: System.Diagnostics.EventLogEntryCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Kopierar element i samlingen till en <xref:System.Array>början från en viss <xref:System.Array>index.</xref:System.Array> </xref:System.Array>"
  remarks: "Använd den <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A>metod för den <xref:System.Diagnostics.EventLogEntryCollection>klassen för att kopiera hela eller delar av samlingen till en <xref:System.Diagnostics.EventLogEntry>matris.</xref:System.Diagnostics.EventLogEntry> </xref:System.Diagnostics.EventLogEntryCollection> </xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Den endimensionell <xref:System.Array>som är mål för element som kopieras från samlingen.</xref:System.Array> Den <xref:System.Array>måste ha Nollbaserad indexering.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar ett värde som anger om åtkomst till den <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> synkroniseras (trådsäkra)."
  remarks: "För den <xref:System.Diagnostics.EventLogEntryCollection>klassen metoden ICollection.IsSynchronized returnerar alltid `false`.</xref:System.Diagnostics.EventLogEntryCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Om åtkomst till samlingen inte är synkroniserad (trådsäkra)."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> objekt."
  remarks: "För <xref:System.Diagnostics.EventLogEntryCollection>-klassen, egenskapen ICollection.SyncRoot alltid returnerar aktuellt <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection> </xref:System.Diagnostics.EventLogEntryCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till samlingen."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
- uid: System.Diagnostics.EventLogEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogEntry
    name: EventLogEntry
    nameWithType: EventLogEntry
    fullName: EventLogEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntryCollection.Count
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: EventLogEntryCollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.Count*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: EventLogEntryCollection.GetEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item
  nameWithType: EventLogEntryCollection.Item
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
