### YamlMime:ManagedReference
items:
- uid: System.Globalization.GregorianCalendar
  id: GregorianCalendar
  children:
  - System.Globalization.GregorianCalendar.#ctor
  - System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  - System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.ADEra
  - System.Globalization.GregorianCalendar.AlgorithmType
  - System.Globalization.GregorianCalendar.CalendarType
  - System.Globalization.GregorianCalendar.Eras
  - System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  - System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  - System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.MaxSupportedDateTime
  - System.Globalization.GregorianCalendar.MinSupportedDateTime
  - System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.GregorianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: GregorianCalendar
  nameWithType: GregorianCalendar
  fullName: System.Globalization.GregorianCalendar
  type: Class
  summary: "Representerar gregoriansk kalender."
  remarks: "Gregoriansk kalender identifierar två epoker: f. kr. eller B.C.E. och e. kr. eller C.E. Den här implementeringen av klassen GregorianCalendar identifierar endast aktuella era (e. kr. eller C.E.).      > [!NOTE] > Information om hur du använder klassen GregorianCalendar och andra klasser i kalendern i .NET Framework finns [arbeta med kalendrar](~/add/includes/ajax-current-ext-md.md).       Ett skottår i gregoriansk kalender är definierad som ett år är jämnt delbar med 4, såvida det inte är delbart med 100. År som delbart med 400 är dock skottår. Till exempel år 1900 var inte ett skottår, men var år 2000. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       Gregoriansk kalender har 12 månader med 28 till 31 dagar: januari (31 dagar), februari (28 eller 29 dagar), mars (31 dagar), April (30 dagar), kanske (31 dagar), juni (30 dagar), juli (31 dagar), augusti (31 dagar), September (30 dagar), oktober (31 dagar), November (30 dagar) och December (31 dagar). Februari har 29 dagar under skottår och 28 under vanliga år.      > [!IMPORTANT] > Som standard alla <xref:System.DateTime>och <xref:System.DateTimeOffset>värden express datum och tider i gregoriansk kalender.</xref:System.DateTimeOffset> </xref:System.DateTime>       Gregoriansk kalender utvecklades som en ersättning för Juliansk kalender (som representeras av den <xref:System.Globalization.JulianCalendar>klassen) och introducerades i ett litet antal kulturer på 15 oktober 1582.</xref:System.Globalization.JulianCalendar> När du arbetar med historiska datum som föregår en kultur införandet av gregoriansk kalender, bör du använda den ursprungliga kalendern om den är tillgänglig i .NET Framework. Till exempel ändrats Danmark från Juliansk kalender till gregoriansk kalender på februari 19 (i Juliansk kalender) eller 1 mars (i gregoriansk kalender) av 1 700. I det här fallet bör du använda Juliansk kalender för datum före införandet av gregoriansk kalender. Observera dock att ingen kulturen har inbyggda stöd för <xref:System.Globalization.JulianCalendar>klass.</xref:System.Globalization.JulianCalendar> Du måste använda den <xref:System.Globalization.JulianCalendar>klass som en fristående kalender.</xref:System.Globalization.JulianCalendar> Mer information finns i.       I följande exempel visas att februari 18, 1 700 i Juliansk kalender, vilket är den sista dagen Juliansk kalender officiellt har använts i Danmark, är en dag före mars 1, 1 700 i gregoriansk kalender.       [!code-cs[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.g_0_1.cs)][!code-vb[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_1.vb) ] varje <xref:System.Globalization.CultureInfo>stöder en uppsättning kalendrar.</xref:System.Globalization.CultureInfo>   Den <xref:System.Globalization.CultureInfo.Calendar%2A>-egenskap returnerar standardkalender för kulturen, och <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>egenskapen returnerar en matris som innehåller alla kalendrar som stöds av kulturen.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Så här ändrar du den kalender som används av en <xref:System.Globalization.CultureInfo>kan programmet ange <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen till en ny <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>       <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>Ignorerar skiljetecken i era förkortade namn endast om GregorianCalendar väljs i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>och kulturen använder &quot;E. kr.&quot;</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName></xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> era namn, det vill säga e. kr.&quot;&quot; motsvarar &quot;AD&quot;."
  example:
  - "The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name \"A.D.\".  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/csharp/t-system.globalization.g_0_2.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/cpp/t-system.globalization.g_0_2.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class GregorianCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> klassen med <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> värde."
  remarks: "Standardvärdet <xref:System.Globalization.GregorianCalendarTypes>är <xref:System.Globalization.GregorianCalendarTypes>.</xref:System.Globalization.GregorianCalendarTypes> </xref:System.Globalization.GregorianCalendarTypes> Om <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>egenskapen <xref:System.Globalization.CultureInfo>har angetts till en <xref:System.Globalization.GregorianCalendar>som skapas med den här konstruktorn, datum och tider är lokaliserade på det språk som är associerade med <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Globalization.GregorianCalendar> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.  \n  \n [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/visualbasic/m-system.globalization.g_2_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/csharp/m-system.globalization.g_2_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/cpp/m-system.globalization.g_2_1.cpp)]"
  syntax:
    content: public GregorianCalendar ();
    parameters: []
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  id: '#ctor(System.Globalization.GregorianCalendarTypes)'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> klassen med hjälp av den angivna <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> värde."
  syntax:
    content: public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);
    parameters:
    - id: type
      type: System.Globalization.GregorianCalendarTypes
      description: "Den <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> värde som anger vilken språkversion av kalendern för att skapa."
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>type</code>är inte en medlem av den <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> uppräkning."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är angivet antal månader från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. År tillhör den resulterande <xref:System.DateTime>påverkas om den resulterande månaden är utanför året i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel om den angivna månaden oktober som har 31 dagar, den angivna dagen är den 31: a dagen i månaden och värdet för den `months` parameter är 6, resulterande året är en mer än det angivna året, månaden resulterande April, och den resulterande dagen 30: e dag, vilket är den sista dagen i April.       Om värdet för den `months` parameter är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.g_8_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.g_8_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_8_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_8_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_8_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till månader.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Antalet månader att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet månader till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>är mindre än-120000.       - eller - <code>months</code> är större än 120000."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är det angivna antalet år från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. Den månad delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel har februari 28 dagar utom under skottår när det har 29 dagar. Om det angivna datumet är den 29 dagen i februari under ett skottår och värdet för `years` är 1, den resulterande är 28 dagen i februari följande år.       Om `years` är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.g_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.g_4_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_4_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_4_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_4_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till år.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Antalet år för att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet år till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ADEra
  id: ADEra
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Representerar det aktuella era. Det här fältet är konstant."
  remarks: 'Gregoriansk kalender identifierar två epoker: f. kr. eller B.C.E. och e. kr. eller C.E. Den här implementeringen av den <xref:System.Globalization.GregorianCalendar>klassen identifierar endast den aktuella era (e. kr.</xref:System.Globalization.GregorianCalendar> eller C.E.). Det här fältet returnerar alltid 1.'
  syntax:
    content: public const int ADEra = 1;
    return:
      type: System.Int32
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar ett värde som anger om den aktuella kalendern är sol-baserade, lunar-baserad eller en kombination av båda."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.g_2_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.g_2_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Returnerar alltid <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.CalendarType
  id: CalendarType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar eller anger den <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> värde som anger versionen av aktuellt <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.  \n  \n [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/visualbasic/p-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/cpp/p-system.globalization.g_3_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/csharp/p-system.globalization.g_3_1.cs)]"
  syntax:
    content: public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }
    return:
      type: System.Globalization.GregorianCalendarTypes
      description: "En <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> värde som anger versionen av aktuellt <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.CalendarType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet som anges i en set-åtgärd är inte medlem i den <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> uppräkning."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den aktuella instansen är skrivskyddad i set-åtgärd."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.Eras
  id: Eras
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar listan över epoker i den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: 'Gregoriansk kalender identifierar två epoker: f. kr. eller B.C.E. och e. kr. eller C.E. Den här implementeringen av den <xref:System.Globalization.GregorianCalendar>klassen identifierar endast den aktuella era (e. kr.</xref:System.Globalization.GregorianCalendar> eller C.E.). Den här egenskapen returnerar alltid en matris med bara ett element.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "En heltalsmatris som representerar epoker i den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen i månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_5_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_5_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_5_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen i månaden i <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar veckodagen i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Den <xref:System.DayOfWeek>värden är söndag, måndag, tisdag, onsdag, torsdag, fredag och lördag.</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_0_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_0_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_0_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "En <xref:System.DayOfWeek>värde som representerar dag i veckan i <code> time </code>.</xref:System.DayOfWeek>"
  overload: System.Globalization.GregorianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen på året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Dag på året definieras som antalet dagar från den första dagen på året. Till exempel GetDayOfYear för den första dagen i den första månaden returnerar 1 och GetDayOfYear för den sista dagen i den senaste månaden returnerar det totala antalet dagar i år, vilket är det samma värde som returneras av <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_3_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_3_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 366 som representerar dagen på året i <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar i den angivna månaden i det angivna året angivna era."
  remarks: "Den här metoden returnerar exempelvis 28 eller 29 för februari (`month` = 2), beroende på om `year` är ett skottår."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5d22c0c3-8560-4ab0-878f-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5d22c0c3-8560-4ab0-878f-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5d22c0c3-8560-4ab0-878f-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar i den angivna månaden i det angivna året angivna era."
  overload: System.Globalization.GregorianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar under det angivna året angivna era."
  remarks: "Den här metoden returnerar till exempel 365 eller 366, beroende på om `year` är ett skottår."
  example:
  - "The following code example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/a71f2fe7-84c1-4827-ac70-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/a71f2fe7-84c1-4827-ac70-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/a71f2fe7-84c1-4827-ac70-_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar under den angivna era angivna året."
  overload: System.Globalization.GregorianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar era i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: 'Gregoriansk kalender identifierar två epoker: f. kr. eller B.C.E. och e. kr. eller C.E. Den här implementeringen av den <xref:System.Globalization.GregorianCalendar>klassen identifierar endast den aktuella era (e. kr.</xref:System.Globalization.GregorianCalendar> eller C.E.).'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_6_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_6_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_6_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar era i <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar leap månad för ett år och era."
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett år."
    - id: era
      type: System.Int32
      description: "En tidsperiod. Specify either <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Alltid 0 eftersom gregoriansk kalender inte känner igen leap månader."
  overload: System.Globalization.GregorianCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>är mindre än gregoriansk kalenderår 1 eller större än gregoriansk kalenderår 9999.       -or-       <code>era</code> is not <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_9_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_9_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_9_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden i <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet månader i det angivna året angivna era."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/401ca427-6c60-47eb-91ba-_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/401ca427-6c60-47eb-91ba-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/401ca427-6c60-47eb-91ba-_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet månader under det angivna året angivna era."
  overload: System.Globalization.GregorianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_7_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_7_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_7_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar året i <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna datumet i den angivna era är ett skottår dag."
  remarks: "Ett skottår i gregoriansk kalender definieras som ett år är jämnt delbart med fyra utom är delbart med 100. År som delbart med 400 är dock skottår. Till exempel år 1900 var inte ett skottår, men var år 2000. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap dag är en dag som uppstår endast i ett skottår. I gregoriansk kalender är den 29 dagen i februari endast leap dagen."
  example:
  - "The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/cpp/f70e7f67-7d6a-4484-9fbf-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/f70e7f67-7d6a-4484-9fbf-_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/csharp/f70e7f67-7d6a-4484-9fbf-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna dagen är leap om dagen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om den angivna månaden i det angivna året angivna era är ett skottår månad."
  remarks: "Ett skottår i gregoriansk kalender definieras som ett år är jämnt delbart med fyra utom är delbart med 100. År som delbart med 400 är dock skottår. Till exempel år 1900 var inte ett skottår, men var år 2000. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap månad är en hel månad som sker endast under ett skottår. Gregoriansk kalender har inte någon leap månader."
  example:
  - "The following code example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/de7e90b6-6a1d-4ed0-8d65-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/de7e90b6-6a1d-4ed0-8d65-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/de7e90b6-6a1d-4ed0-8d65-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "Den här metoden returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, såvida inte åsidosätts av en härledd klass."
  overload: System.Globalization.GregorianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna året angivna era är ett skottår."
  remarks: "Ett skottår i gregoriansk kalender definieras som ett år är jämnt delbart med fyra utom är delbart med 100. År som delbart med 400 är dock skottår. Till exempel år 1900 var inte ett skottår, men var år 2000. Ett vanligt år har 365 dagar och ett skottår har 366 dagar."
  example:
  - "The following code example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna året är ett skottår; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det senaste datum och tidpunkt som stöds av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> typen."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Senaste datum och tid som stöds av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> typ, vilket är den senaste tidpunkt då den 31 December 9999 C.E. och motsvarar <xref:System.DateTime.MaxValue>.</xref:System.DateTime.MaxValue>"
  overload: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det tidigaste datum och tid som stöds av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> typen."
  remarks: "Även om värdet för egenskapen MinSupportedDateTime är den första tidpunkt då den 1 januari 0001 C.E. gregoriansk kalender introducerades inte förrän den 15 oktober 1582 och dess införs i hela Europeiska kontinent och globalt gick långsamt. Tills de har antagit gregoriansk kalender, de flesta kulturer i Europeiska, används American och australisk kontinenter Juliansk kalender som representeras av <xref:System.Globalization.JulianCalendar>klass.</xref:System.Globalization.JulianCalendar>"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_0_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_0_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_0_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Det tidigaste datum och tid som stöds av den <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> typ, vilket är den första tidpunkt då den 1 januari 0001 C.E. och motsvarar <xref:System.DateTime.MinValue>.</xref:System.DateTime.MinValue>"
  overload: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar en <xref:System.DateTime>som har angetts till angivet datum och tid i den angivna era.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: hour
      type: System.Int32
      description: "Ett heltal mellan 0 och 23 som representerar timmen."
    - id: minute
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar minut."
    - id: second
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar sekund."
    - id: millisecond
      type: System.Int32
      description: "Ett heltal mellan 0 och 999 som representerar millisekunder."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.DateTime
      description: "Den <xref:System.DateTime>som har angetts till angivet datum och tid i den aktuella era.</xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>year</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>hour</code> är mindre än noll eller större än 23.       - eller - <code>minute</code> är mindre än noll eller större än 59.       - eller - <code>second</code> är mindre än noll eller större än 59.       - eller - <code>millisecond</code> är mindre än noll eller större än 999."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konverterar år till ett årtal med hjälp av den <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>egenskapen fastställa lämpliga talet.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>är det senaste året i intervallet 100 år som representeras av ett årtal.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> På talet bestäms genom att hitta den enda förekomsten av två siffror `year` inom intervallet 100 år. Till exempel om <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>har angetts till 2029, 100 år intervall är från 1930 till 2029.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Därför tolkas 30 2-siffrig värdet som 1930, medan 29 2-siffrig värdet tolkas som 2029.       ToFourDigitYear stöder ett årtal eller ett fyrsiffriga år. Skicka ett årtal värde (mindre än 100) medför metoden att konvertera värdet till ett fyrsiffrigt värde enligt den <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>-värde som representerar på lämplig talet.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Om programmet tillhandahåller ett årtal-värde som ligger inom intervallet kalender som stöds till ToFourDigitYear, returnerar metoden faktiska indatavärdet. Om programmet tillhandahåller ett fyrsiffrigt-värde som är utanför intervallet som stöds kalender, eller om det finns ett negativt värde, genereras metoden ett undantag."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett två siffror eller fyra siffror heltal som representerar året ska konverteras."
    return:
      type: System.Int32
      description: "Ett heltal som innehåller fyra siffror representation av <code> year </code>."
  overload: System.Globalization.GregorianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar eller anger det senaste året för ett urval av 100 år som representeras av ett 2 årtal."
  remarks: "Den här egenskapen gör en 2 årtal korrekt översättas till ett 4-siffrig år. Till exempel om den här egenskapen anges till 2029 är 100 år intervallet från 1930 till 2029. Därför tolkas 30 2-siffrig värdet som 1930, medan 29 2-siffrig värdet tolkas som 2029.       Det första värdet i den här egenskapen är härledd från inställningarna i den nationella inställningar och språkinställningar alternativ delen av Kontrollpanelen. Denna information kan dock ändra under <xref:System.AppDomain>.</xref:System.AppDomain> Den <xref:System.Globalization.GregorianCalendar>klassen upptäcker inte ändringar i systeminställningarna för automatiskt.</xref:System.Globalization.GregorianCalendar>       Programmet måste ange ett värde till 99 att 2 årtal är tas bokstavligt. Till exempel om den här egenskapen anges till 99, är 100 år intervallet från 0 (inte ett giltigt värde för de flesta kalendrar) till 99. Därför tolkas 30 2-siffrig värdet som 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Det senaste året för ett intervall om 100 år som representeras av ett 2 årtal."
  overload: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet som anges i en set-åtgärd är mindre än 99.       - eller - värdet som anges i en set-åtgärd är större än <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den aktuella instansen är skrivskyddad i set-åtgärd."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.GregorianCalendar.#ctor
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
- uid: System.Globalization.GregorianCalendarTypes
  parent: System.Globalization
  isExternal: false
  name: GregorianCalendarTypes
  nameWithType: GregorianCalendarTypes
  fullName: System.Globalization.GregorianCalendarTypes
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.GregorianCalendar.ADEra
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
- uid: System.Globalization.GregorianCalendar.#ctor*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar
  nameWithType: GregorianCalendar.GregorianCalendar
- uid: System.Globalization.GregorianCalendar.AddMonths*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: GregorianCalendar.AddMonths
- uid: System.Globalization.GregorianCalendar.AddYears*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears
  nameWithType: GregorianCalendar.AddYears
- uid: System.Globalization.GregorianCalendar.AlgorithmType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: GregorianCalendar.GetDayOfMonth
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: GregorianCalendar.GetDayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: GregorianCalendar.GetDayOfYear
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: GregorianCalendar.GetDaysInMonth
- uid: System.Globalization.GregorianCalendar.GetDaysInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: GregorianCalendar.GetDaysInYear
- uid: System.Globalization.GregorianCalendar.GetEra*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra
  nameWithType: GregorianCalendar.GetEra
- uid: System.Globalization.GregorianCalendar.GetLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: GregorianCalendar.GetLeapMonth
- uid: System.Globalization.GregorianCalendar.GetMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: GregorianCalendar.GetMonth
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: GregorianCalendar.GetMonthsInYear
- uid: System.Globalization.GregorianCalendar.GetYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear
  nameWithType: GregorianCalendar.GetYear
- uid: System.Globalization.GregorianCalendar.IsLeapDay*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: GregorianCalendar.IsLeapDay
- uid: System.Globalization.GregorianCalendar.IsLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: GregorianCalendar.IsLeapMonth
- uid: System.Globalization.GregorianCalendar.IsLeapYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: GregorianCalendar.IsLeapYear
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: GregorianCalendar.ToDateTime
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: GregorianCalendar.ToFourDigitYear
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
