### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: "Representerar en behållare som kan lagra flera dataobjekt."
  remarks: "Paketet är en abstrakt klass som kan användas för att ordna objekt i en enda enhet av en definierad fysiskt format för överföring och effektiv åtkomst.       En ZIP-fil är primär fysiskt format för paketet.  Andra paket-implementeringar kan använda andra fysiska format, till exempel ett XML-dokument, en databas eller en webbtjänst.       Som ett filsystem refereras objekt som finns i ett paket i en hierarkiskt ordnad mappar och filer.       Även om själva paketet är en abstrakt klass i <xref:System.IO.Packaging.ZipPackage>härledda klassen används som standard den <xref:System.IO.Packaging.Package.Open%2A>metoden.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.ZipPackage>       En <xref:System.IO.Packaging.PackagePart>(&quot;del&quot;) är den abstrakt klass som representerar ett objekt som lagras i ett paket.</xref:System.IO.Packaging.PackagePart>       En <xref:System.IO.Packaging.PackageRelationship>(&quot;relationen&quot;) definierar en association mellan en källa paketet eller <xref:System.IO.Packaging.PackagePart>och ett målobjekt.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackageRelationship>  En <xref:System.IO.Packaging.PackageRelationship>kan vara något av två typer, som kan vara något av två typer:-en package-nivå relation (skapas av den <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName>metoden) avser antingen ett paket: – en rikta en del i paketet.</xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName> </xref:System.IO.Packaging.PackageRelationship>          -En målresurs utanför paketet.      -A del nivå relation (skapas av den <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>metoden) avser en källa <xref:System.IO.Packaging.PackagePart>antingen: – en annan rikta en del i paketet.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>          -En målresurs utanför paketet.       Relationens källa paket eller källan <xref:System.IO.Packaging.PackagePart>betraktas som &quot;ägare&quot; för relationen.</xref:System.IO.Packaging.PackagePart>  När källobjektet tas bort raderas även alla relationer som ägs av källobjektet.  Processen att skapa eller ta bort en relation ändras inte fysiskt käll- eller mål-objekt på något sätt.       En <xref:System.IO.Packaging.PackageDigitalSignature>(&quot;digital signatur&quot;) är en sammansättning av delar och relationer som representerar en digital signatur som ingår i ett paket.</xref:System.IO.Packaging.PackageDigitalSignature>  Den digitala signaturen identifierar avsändaren och verifierar att signerade delar och relationer som finns i paketet inte har ändrats.       Paket har också stöd för Digital Rights Management (DRM) vilket innebär innehållselement i ett paket som ska krypteras med särskilda behörigheter som beviljas åtkomst till behöriga användare.       Baserat på paketet, en <xref:System.Windows.Xps.Packaging.XpsDocument>är av typen paketet som utformats för att lagra dokument baserat på Öppna [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</xref:System.Windows.Xps.Packaging.XpsDocument>       [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]använder paket för att lagra innehåll, resurser och relationer för sidor och dokument med hjälp av en vanlig ZIP-fil som standard. Som med alla ZIP-filen som tillämpningsprogrammet kan använda den <xref:System.IO.Packaging>klasser för att lagra och du kan också skydda någon typ eller antalet datafiler i en enskild behållare effektivt att nå.</xref:System.IO.Packaging>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows the basic steps for creating a Package.  In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.  (This is similar to the case in which an HTML file has an \\<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.  The first, a \"package-level\" relationship, defines the document part as the package's root element.  A second, \"part-level\" relationship defines the association between the document part (the \"source\" of the part-level relationship) and its use of the image part (the \"target\" of the part-level relationship).  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> klass som använder en viss <xref href=&quot;System.IO.FileAccess&quot;> </xref>."
  remarks: "Paketet är en skyddad konstruktor för <xref:System.IO.Packaging.Package>abstrakt klass för grundläggande.</xref:System.IO.Packaging.Package> När den anropas i en härledd klass initierar konstruktorn paketet en ny instans av den härledda klassen."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "I/o behörigheterna för paketet."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> openFileAccess </code> är inte giltig."
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> klass som använder en viss <xref href=&quot;System.IO.FileAccess&quot;> </xref> och direktöverföring av alternativet."
  remarks: "Paketet är en skyddad konstruktor för <xref:System.IO.Packaging.Package>abstrakta grundläggande abstrakt grundläggande klass.</xref:System.IO.Packaging.Package> När den anropas i en härledd klass initierar konstruktorn paketet en ny instans av den härledda klassen."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "I/o behörigheterna för paketet."
    - id: streaming
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att öppna paketet för strömning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> openFileAccess </code> är inte giltig."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Sparar och stänger paketet plus underliggande del dataströmmar."
  remarks: "För den <xref:System.IO.Packaging.Package>klassen Stäng och <xref:System.IO.Packaging.Package.Dispose%2A>utföra samma åtgärd, det finns ingen anledning att anropa <xref:System.IO.Packaging.Package.Dispose%2A>Om du anropar Stäng eller vice versa.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package>       Stäng och <xref:System.IO.Packaging.Package.Dispose%2A>anropa internt <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A> </xref:System.IO.Packaging.Package.Dispose%2A>      > [!NOTE] > Den `using` instruktionen (skiljer sig från den `using` namnutrymme) är det rekommenderade sättet att stängas och <xref:System.IO.Packaging.Package.Dispose%2A>ett paket.</xref:System.IO.Packaging.Package.Dispose%2A>  [Skriva ett exempel på paketet](http://go.microsoft.com/fwlink/?LinkID=160055) och [läsa ett exempel på paketet](http://go.microsoft.com/fwlink/?LinkID=160034) visar hur du stänger och ta bort ett paket med hjälp av den `using` instruktionen."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.Package.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar en ny komprimerad del med angivna URI: N och content-type."
  remarks: "CreatePart initierar en tom <xref:System.IO.Stream>för den nya skulle hämtas.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Metoden kan användas för att hämta en referens till stream-instans som är associerade med skulle hämtas.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       En del <xref:System.IO.Packaging.PackagePart.CompressionOption%2A>är <xref:System.IO.Packaging.CompressionOption?displayProperty=fullName>.</xref:System.IO.Packaging.CompressionOption?displayProperty=fullName> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       Mer information om paketdelar finns i avsnittet 1.1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] av den nya delen."
    - id: contentType
      type: System.String
      description: "Innehållstypen för dataströmmen."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Den nya skapade del."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En del med det angivna <code> partUri </code> finns redan i paketet."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad (en ny del kan inte läggas)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar en ny del med angivna URI: N, content-type och komprimeringsalternativet."
  remarks: "För standard <xref:System.IO.Packaging.ZipPackage>härledda klass, de CreatePart metoden stöder endast två `compressionOption` värden, <xref:System.IO.Packaging.CompressionOption>eller <xref:System.IO.Packaging.CompressionOption>komprimering.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Andra <xref:System.IO.Packaging.CompressionOption>värdena för <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, eller <xref:System.IO.Packaging.CompressionOption>använder <xref:System.IO.Packaging.CompressionOption>komprimering.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       CreatePart skapar en tom <xref:System.IO.Stream>för den nya skulle hämtas.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Metoden kan användas för att hämta en referens till stream-instans som är associerade med skulle hämtas.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] av den nya delen."
    - id: contentType
      type: System.String
      description: "Innehållstypen för dataströmmen."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Komprimeringsalternativet för dataström, <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> eller <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> komprimering."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Den nya skapade del."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En del med det angivna <code> partUri </code> finns redan i paketet."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> compressionOption </code> värdet är inte giltigt."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad (en ny del kan inte läggas)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "När åsidosätts i en härledd klass, skapar du en ny del i paketet."
  remarks: "Den härledda CreatePartCore-metoden anropas av <xref:System.IO.Packaging.Package.CreatePart%2A>metoden för att skapa en del baserat på det fysiska formatet implementeras i härledda klassen.</xref:System.IO.Packaging.Package.CreatePart%2A>       Som standard en <xref:System.IO.Packaging.ZipPackage>härledd klass implementering av abstract <xref:System.IO.Packaging.Package>klassen tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärd <xref:System.IO.Packaging.Package.CreatePart%2A>internt anrop CreatePartCore av den <xref:System.IO.Packaging.ZipPackage>klassen för att skapa en ny del i en ZIP-fil.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.CreatePart%2A>       För standard <xref:System.IO.Packaging.ZipPackage>härledda klass, de CreatePartCore metoden stöder endast två `compressionOption` värden, <xref:System.IO.Packaging.CompressionOption>eller <xref:System.IO.Packaging.CompressionOption>komprimering.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Andra <xref:System.IO.Packaging.CompressionOption>värdena för <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, eller <xref:System.IO.Packaging.CompressionOption>använder <xref:System.IO.Packaging.CompressionOption>komprimering.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       Mer information om paketet modellen och paketdelar som finns i kapitel 1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] för den del som håller på att skapas."
    - id: contentType
      type: System.String
      description: "Innehållstypen för dataströmmen."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Komprimeringsalternativet för dataströmmen."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Den skapade del."
  overload: System.IO.Packaging.Package.CreatePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar en package-nivå relation till en del med angivna URI: N, mål-läge och relationstyp."
  remarks: "En package-nivå relationen definierar en association mellan paketet och en tillhörande mål del eller resurs.  En package-nivå relation kan vara ett av två sätt.      -Mellan en <xref:System.IO.Packaging.Package>till en mål-del i paketet.</xref:System.IO.Packaging.Package>      -Mellan en <xref:System.IO.Packaging.Package>till en målresurs utanför paketet.</xref:System.IO.Packaging.Package>       I en paket-relation paketet betraktas som &quot;ägare&quot; för relationen.  När paketet tas bort raderas även alla relationer som ägs av paketet.       CreateRelationship ändras inte fysiskt mål del eller resurs på något sätt.       Målet för en relation kan inte vara en annan relation.       Om `targetMode` har angetts som <xref:System.IO.Packaging.TargetMode>, `targetUri` måste vara en relativ URI som är utformad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.</xref:System.IO.Packaging.TargetMode>  Internt relativ URI kan vara antingen en absolut sökväg som börjar med ett snedstreck (&quot;/&quot;) tecken som &quot;/ page1.xaml&quot; eller &quot;/ images/picture4.jpg&quot;, eller en relativ sökväg som &quot;... / imagespicture1.jpg &quot;som matchas mot paketrot (&quot;/ &quot;) som bas-URI.       Om `targetMode` har angetts som <xref:System.IO.Packaging.TargetMode>, `targetUri` kan vara antingen en absolut eller relativ URI formaterad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; är ett exempel på en absolut URI som refererar till en extern målresurs &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; är ett exempel på en relativ URI som också refererar till en extern mål resurs &quot;1.jpg&quot; men som matchar mot URI i själva paketet.       `relationshipType`måste vara en [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] som är formaterad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.  I följande tabell visas nivån paketet `relationshipType` URI: er som definieras i specifikationen Open paketering konventioner (OPC).      | Paket-nivå relationen | Relationstypen URI |   |---------------------------------|---------------------------|   | Viktiga egenskaper | http://schemas.openxmlformats.org/package/2006/relationships/meta-data-huvudegenskaper |   | Digital signatur | http://schemas.openxmlformats.org/package/2006/relationships/digit al-signatur/signatur |   | Den digitala Signaturcertifikat | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ Signaturcertifikat |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ signaturursprung |   | Miniatyr | http://schemas.openxmlformats.org/package/2006/relationships/meta data/miniatyr |       Mer information om paketering och relationer i paketet finns i avsnittet 1.3 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use CreateRelationship to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] delens mål."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Anger om mål-delen är <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> eller <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> till paketet."
    - id: relationshipType
      type: System.String
      description: "En URI som unikt definierar rollen för relationen."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Paketet nivå relation till den angivna delen."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> targetMode </code> är inte giltig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar en package-nivå relation till en del med en viss URI, mål-läge, relationstypen och [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "En package-nivå relationen definierar en association mellan paketet och en tillhörande mål del eller resurs.  En package-nivå relation kan vara ett av två sätt.      -Mellan en <xref:System.IO.Packaging.Package>till en mål-del i paketet.</xref:System.IO.Packaging.Package>      -Mellan en <xref:System.IO.Packaging.Package>till en målresurs utanför paketet.</xref:System.IO.Packaging.Package>       I en paket-relation paketet betraktas som &quot;ägare&quot; för relationen.  När paketet tas bort raderas även alla relationer som ägs av paketet.       CreateRelationship ändras inte fysiskt mål del eller resurs på något sätt.       Målet för en relation kan inte vara en annan relation.       `id`måste vara en giltig XML-identifierare.  Den `id` typ är xsd: ID och måste följa namnkonventionerna föreskrivs i XML Schema del 2: datatyper specifikationen (se [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).       Om `id` har angetts som `null` ett unikt ID ska skapas automatiskt.  En `id` anges med en tom sträng är inte giltig.       Om `targetMode` har angetts som <xref:System.IO.Packaging.TargetMode>, `targetUri` måste vara en relativ URI som är utformad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.</xref:System.IO.Packaging.TargetMode>  Internt relativ URI kan vara antingen en absolut sökväg som börjar med ett snedstreck (&quot;/&quot;) tecken som &quot;/ page1.xaml&quot; eller &quot;/ images/picture4.jpg&quot;, eller en relativ sökväg som &quot;... / imagespicture1.jpg &quot;som matchas mot paketrot (&quot;/ &quot;) som bas-URI.       Om `targetMode` har angetts som <xref:System.IO.Packaging.TargetMode>, `targetUri` kan vara antingen en absolut eller relativ URI formaterad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; är ett exempel på en absolut URI som refererar till en extern målresurs &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; är ett exempel på en relativ URI som också refererar till en extern mål resurs &quot;1.jpg&quot; men som matchar mot URI i själva paketet.       `relationshipType`måste vara en URI som är formaterad enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.  I följande tabell visas nivån paketet `relationshipType` URI: er som definieras i specifikationen Open paketering konventioner (OPC).      | Paket-nivå relationen | Relationstypen URI |   |---------------------------------|---------------------------|   | Viktiga egenskaper | http://schemas.openxmlformats.org/package/2006/relationships/meta-data-huvudegenskaper |   | Digital signatur | http://schemas.openxmlformats.org/package/2006/relationships/digit al-signatur/signatur |   | Den digitala Signaturcertifikat | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ Signaturcertifikat |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ signaturursprung |   | Miniatyr | http://schemas.openxmlformats.org/package/2006/relationships/meta data/miniatyr |       Mer information om paketering och relationer i paketet finns i avsnittet 1.3 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] delens mål."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Anger om mål-delen är <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> eller <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> till paketet."
    - id: relationshipType
      type: System.String
      description: "En URI som unikt definierar rollen för relationen."
    - id: id
      type: System.String
      description: "En unik identifierare för XML."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Paketet nivå relation till den angivna delen."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> targetMode </code> är inte giltig."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>är inte en giltig XML-identifierare; eller en del med det angivna <code>id</code> förekommer redan i paketet."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tar bort en del med en viss URI från paketet."
  remarks: "`partUri`måste vara en relativ URI som består av en absolut sökväg som börjar med ett snedstreck (&quot;/&quot;) tecken.  Den absoluta sökvägen är i förhållande till paketrot och bildas enligt den [RFC 3986](http://tools.ietf.org/html/rfc3986) allmänna Syntax för identifierare URI (Uniform Resource)-specifikationen.  &quot;/ page1.xaml&quot; och &quot;/ images/picture4.jpg&quot; är exempel på giltiga del URI: er.       Inget undantag inträffar om en del med det angivna `partUri` är inte i paketet.  (Du kan använda den <xref:System.IO.Packaging.Package.PartExists%2A>metod för att avgöra om en del med en angiven `partUri` finns i paketet.)</xref:System.IO.Packaging.Package.PartExists%2A>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] delens att ta bort."
  overload: System.IO.Packaging.Package.DeletePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "När åsidosätts i en härledd klass, tar du bort en del med en viss URI."
  remarks: "Som standard en <xref:System.IO.Packaging.ZipPackage>härledd klass implementering av abstract <xref:System.IO.Packaging.Package>klassen tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärd <xref:System.IO.Packaging.Package.DeletePart%2A>internt anrop DeletePartCore av <xref:System.IO.Packaging.ZipPackage>klassen för att utföra den faktiska delete-åtgärden baserat på fysiskt format implementeras i härledda klassen.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.DeletePart%2A>       Mer information om paketet modellen och paketdelar som finns i kapitel 1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den <xref:System.IO.Packaging.PackagePart.Uri*>av den <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> att ta bort.</xref:System.IO.Packaging.PackagePart.Uri*>"
  overload: System.IO.Packaging.Package.DeletePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tar bort en relation för paket-nivå."
  remarks: "En package-nivå relationen definierar en association mellan paketet och en tillhörande mål del eller resurs.  En package-nivå relation kan vara ett av två sätt.      -Mellan en <xref:System.IO.Packaging.Package>till en mål-del i paketet.</xref:System.IO.Packaging.Package>      -Mellan en <xref:System.IO.Packaging.Package>till en målresurs utanför paketet.</xref:System.IO.Packaging.Package>       I en paket-relation paketet betraktas som &quot;ägare&quot; för relationen.  När paketet tas bort raderas även alla relationer som ägs av paketet.       Inget undantag inträffar om en relation med det angivna `id` är inte i paketet.       DeleteRelationship ändras inte den mål-delen på något sätt fysiskt.       Mer information om paketet relationer finns i avsnittet 1.3 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "Den <xref:System.IO.Packaging.PackageRelationship.Id*>av den <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> att ta bort.</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.Package.DeleteRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>är inte en giltig XML-identifierare."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Rensningar av och sparar innehållet i alla delar och relationer, stängs paketet, och frigör alla resurser."
  remarks: "Kontrollera att alla ändringar sparas korrekt Dispose också Slutför rensningar och stänger alla delar och relationer som ingår i paketet.       För den <xref:System.IO.Packaging.Package>class, Dispose och <xref:System.IO.Packaging.Package.Close%2A>utför samma åtgärd - det finns ingen anledning att anropa Dispose om du anropar <xref:System.IO.Packaging.Package.Close%2A>, och vice versa.</xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package>       <xref:System.IO.Packaging.Package.Close%2A>och Dispose anropa internt <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A></xref:System.IO.Packaging.Package.Close%2A>       Härledda klasser som tilldela och hantera icke-minnesresurser ska åsidosätta den här metoden om du vill frigöra resurser när Dispose anropas. Härledd klass åsidosättningar bör också kontakta <xref:System.IO.Packaging.Package.Flush%2A>och metoden basklass Dispose Kontrollera basklass rensning utförs alltid.</xref:System.IO.Packaging.Package.Flush%2A>      > [!NOTE] > Den `using` instruktionen (skiljer sig från den `using` namnutrymme) är det rekommenderade sättet att <xref:System.IO.Packaging.Package.Close%2A>och ta bort ett paket.</xref:System.IO.Packaging.Package.Close%2A> [Skriva ett exempel på paketet](http://go.microsoft.com/fwlink/?LinkID=160055) visar hur du stänger och ta bort ett paket med hjälp av den `using` instruktionen."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.IO.Packaging.Package.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar åtkomst till filen inställning för paketet."
  remarks: "Egenskapen FileOpenAccess har inget standardvärde.  Filen åtkomstinställning som anges i den <xref:System.IO.Packaging.Package.%23ctor%2A>konstruktorn anropa när du skapar ett nytt paket eller i den <xref:System.IO.Packaging.Package.Open%2A>samtal när du öppnar ett befintligt paket.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.Package.%23ctor%2A>"
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href=&quot;System.IO.FileAccess&quot;></xref> values: <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, or <xref href=&quot;System.IO.FileAccess&quot;></xref>.'
  overload: System.IO.Packaging.Package.FileOpenAccess*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Sparar innehållet i alla delar och relationer som ingår i paketet."
  remarks: "Internt anrop tömma den härledda klassen <xref:System.IO.Packaging.Package.FlushCore%2A>implemetation utföras faktiska format-specifika tömning.</xref:System.IO.Packaging.Package.FlushCore%2A>  Den härledda klassen <xref:System.IO.Packaging.Package.FlushCore%2A>metoden ansvarar för att spara faktiskt del och relation innehållet implementering för särskilda fysiska härledd klass.</xref:System.IO.Packaging.Package.FlushCore%2A>       Som standard en <xref:System.IO.Packaging.ZipPackage>härledda implementering av abstract <xref:System.IO.Packaging.Package>basklass tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage> I standardåtgärd tömma internt anrop <xref:System.IO.Packaging.Package.FlushCore%2A>Spara delar och relationer i ett ZIP-filen paket.</xref:System.IO.Packaging.Package.FlushCore%2A>       Flush anropas automatiskt av den <xref:System.IO.Packaging.Package.Close%2A>och <xref:System.IO.Packaging.Package.Dispose%2A>metoder.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>  När <xref:System.IO.Packaging.Package.Close%2A>eller <xref:System.IO.Packaging.Package.Dispose%2A>kallas behöver du inte anropa tömma separat.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.Package.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är skrivskyddad och kan inte ändras."
  platform:
  - net462
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "När åsidosätts i en härledd klass sparar innehållet i alla delar och relationer i arkivet för härledd klass."
  remarks: "FlushCore anropas av <xref:System.IO.Packaging.Package.Flush%2A>sätt att genomföra den faktiska streamsqlstore baserat på det fysiska format implementeras i härledda klassen.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  overload: System.IO.Packaging.Package.FlushCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar en del med en viss URI."
  remarks: "En <xref:System.InvalidOperationException>genereras om en del med det angivna `partUri` finns inte.</xref:System.InvalidOperationException>       Den <xref:System.IO.Packaging.Package.PartExists%2A>metoden kan användas för att avgöra om `partUri` refererar till en befintlig part.</xref:System.IO.Packaging.Package.PartExists%2A>       Som standard en <xref:System.IO.Packaging.ZipPackage>härledda implementering av abstract <xref:System.IO.Packaging.Package>basklass tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärden GetPart internt anropar <xref:System.IO.Packaging.Package.GetPartCore%2A>av den <xref:System.IO.Packaging.ZipPackage>klassen för att returnera en begärda del från en ZIP-fil.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] delens att returnera."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Delen med det angivna <code> partUri </code>."
  overload: System.IO.Packaging.Package.GetPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En del med det angivna <code> partUri </code> är inte i paketet."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar den del av en viss URI när åsidosätts i en härledd klass."
  remarks: "Som standard en <xref:System.IO.Packaging.ZipPackage>härledda implementering av abstract <xref:System.IO.Packaging.Package>klassen tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärd <xref:System.IO.Packaging.Package.GetPart%2A>internt anrop GetPartCore av den <xref:System.IO.Packaging.ZipPackage>klassen för att hämta en del från en ZIP-fil.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPart%2A>       Mer information om paketet modellen och paketdelar som finns i kapitel 1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] delens att hämta."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Den begärda delen; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om en del med det angivna <code> partUri </code> är inte i paketet."
  overload: System.IO.Packaging.Package.GetPartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar en mängd med alla delar i paketet."
  remarks: "GetParts returnerar en mängd med alla delar som ingår i paketet inklusive <xref:System.IO.Packaging.PackageRelationship>delar.</xref:System.IO.Packaging.PackageRelationship>       GetParts aldrig returnerar `null`, men returnerade samlingen kommer att innehålla noll element om paketet innehåller inga delar.       Som standard en <xref:System.IO.Packaging.ZipPackage>härledda implementering av abstract <xref:System.IO.Packaging.Package>basklass tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärden GetParts anropar den <xref:System.IO.Packaging.Package.GetPartsCore%2A>metod för den <xref:System.IO.Packaging.ZipPackage>klassen för att returnera delarna från en ZIP-fil.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartsCore%2A>       Mer information om paket och paketdelar som finns i avsnittet 1.1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.  For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: "En samling med alla de <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> element som ingår i paketet."
  overload: System.IO.Packaging.Package.GetParts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar en matris med alla delar i paketet när åsidosätts i en härledd klass."
  remarks: "Den härledda klass GetPartsCore implementeringen anropas av <xref:System.IO.Packaging.Package.GetParts%2A>metoden för att komma åt och returnerar matris av delar baserat på det fysiska formatet implementeras i härledda klassen.</xref:System.IO.Packaging.Package.GetParts%2A>       Som standard en <xref:System.IO.Packaging.ZipPackage>härledda implementering av abstract <xref:System.IO.Packaging.Package>klassen tillhandahålls och används.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  I standardåtgärd <xref:System.IO.Packaging.Package.GetParts%2A>internt anrop <xref:System.IO.Packaging.Package.GetPartCore%2A>av den <xref:System.IO.Packaging.ZipPackage>klassen för att hämta delarna från en ZIP-fil.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A> </xref:System.IO.Packaging.Package.GetParts%2A>       Mer information om paketet modellen och paketdelar som finns i kapitel 1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: "En matris med de delar som ingår i paketet."
  overload: System.IO.Packaging.Package.GetPartsCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar paketet nivå-relation med en viss identifierare."
  remarks: "`id`måste vara en giltig XML-identifierare.  Den `id` typ är xsd: ID och måste följa namnkonventionerna föreskrivs i XML Schema del 2: datatyper specifikationen (se [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).       Mer information om paketering och relationer i paketet finns i avsnittet 1.3 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "Den <xref:System.IO.Packaging.PackageRelationship.Id*>i relationen att returnera.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Paketet nivå relation med det angivna <code> id </code>."
  overload: System.IO.Packaging.Package.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>är inte en giltig XML-identifierare."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En relation med det angivna <code> id </code> är inte i paketet."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar en mängd med alla paket-nivå relationer."
  remarks: "GetRelationships aldrig returnerar `null`; men returnerade samlingen kan innehålla noll element om paketet innehåller inga paket nivå relationer.       En package-nivå relationen definierar en association mellan paketet och en tillhörande mål del eller resurs.  En package-nivå relation kan vara ett av två sätt.      -Mellan en <xref:System.IO.Packaging.Package>till en mål-del i paketet.</xref:System.IO.Packaging.Package>      -Mellan en <xref:System.IO.Packaging.Package>till en målresurs utanför paketet.</xref:System.IO.Packaging.Package>       I en paket-relation paketet betraktas som &quot;ägare&quot; för relationen.  När paketet tas bort raderas även alla relationer som ägs av paketet.  Processen att skapa eller ta bort relationen ändrar inte fysiskt mål del eller resurs på något sätt.       Mer information om paketering och relationer i paketet finns i avsnittet 1.3 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "En samling med alla paket-nivå-relationer som ingår i paketet."
  overload: System.IO.Packaging.Package.GetRelationships*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returnerar en mängd med alla paket-nivå-relationer som matchar ett visst <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
  remarks: "<xref:System.IO.Packaging.Package.GetRelationships%2A>Returnerar aldrig `null`; men returnerade samlingen kan innehålla noll element om det inte finns några relationer i paketet på objektnivå som matchar det angivna `relationshipType`.</xref:System.IO.Packaging.Package.GetRelationships%2A>       I följande tabell visas nivån paketet `relationshipType` URI: er som definieras i specifikationen Open paketering konventioner (OPC).      | Paket-nivå relationen | Relationstypen URI |   |---------------------------------|---------------------------|   | Viktiga egenskaper | http://schemas.openxmlformats.org/package/2006/relationships/meta-data-huvudegenskaper |   | Digital signatur | http://schemas.openxmlformats.org/package/2006/relationships/digit al-signatur/signatur |   | Den digitala Signaturcertifikat | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ Signaturcertifikat |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ signaturursprung |   | Miniatyr | http://schemas.openxmlformats.org/package/2006/relationships/meta data/miniatyr |       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "Den <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>för att matcha och returnera i samlingen.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "En samling av paketet på objektnivå relationer som matchar det angivna <code> relationshipType </code>."
  overload: System.IO.Packaging.Package.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>är en tom sträng."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket på en viss i/o-dataström."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "I/o-ström att öppna paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Att öppna paketet kräver Läs- eller Läs/Skriv behörighet och det angivna <code> stream </code> är lässkyddad; eller att öppna paketet kräver att Skriv- eller Läs-och skrivbehörighet och den angivna <code> stream </code> är skrivskyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket vid en given sökvägen och filnamnet."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Detta <xref:System.IO.Packaging.Package.Open%2A>metoden öppnar paketet med standardattribut <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, och <xref:System.IO.FileShare>(för att ange olika attribut med någon av andra Open-metoden överlagringar).</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.Packaging.Package.Open%2A>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen och namnet på paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket med angivna IO dataströmmen och fil-läge."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "I/o-ström att öppna paketet."
    - id: packageMode
      type: System.IO.FileMode
      description: "Filåtkomstläge att öppna paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>packageMode</code>värdet är inte giltigt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Att öppna paketet kräver Läs- eller Läs/Skriv behörighet och det angivna <code> stream </code> är lässkyddad; eller att öppna paketet kräver att Skriv- eller Läs-och skrivbehörighet och den angivna <code> stream </code> är skrivskyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket vid en given sökväg med en viss fil-läge."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Öppna då öppnas paketet med standardattribut <xref:System.IO.FileAccess>och <xref:System.IO.FileShare>(för att ange olika attribut med någon av andra Open-metoden överlagringar).</xref:System.IO.FileShare> </xref:System.IO.FileAccess>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen och namnet på paketet."
    - id: packageMode
      type: System.IO.FileMode
      description: "Filåtkomstläge att öppna paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> packageMode </code> är inte giltig."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket med angivna i/o-dataström, filläget och åtkomst till filen inställningen."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "I/o-ström att öppna paketet."
    - id: packageMode
      type: System.IO.FileMode
      description: "Filåtkomstläge att öppna paketet."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Filåtkomst att öppna paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Att öppna paketet kräver Läs- eller Läs/Skriv behörighet och det angivna <code> stream </code> är lässkyddad; eller att öppna paketet kräver att Skriv- eller Läs-och skrivbehörighet och den angivna <code> stream </code> är skrivskyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket vid en given sökväg med en viss filläge och åtkomst till filen inställningen."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Då öppna öppnar paketet med en standard <xref:System.IO.FileShare>attribut (att ange ett annat attribut används i <xref:System.IO.Packaging.Package.Open%2A>metodöverlagringen).</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.FileShare>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen och namnet på paketet."
    - id: packageMode
      type: System.IO.FileMode
      description: "Filåtkomstläge att öppna paketet."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Filåtkomst att öppna paketet."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppnar ett paket vid en given sökväg med en viss filläge, åtkomst till filen och filresursen inställningen."
  remarks: "<xref:System.IO.Packaging.ZipPackage>är standardtypen för paket som används av Open-metoden.</xref:System.IO.Packaging.ZipPackage>       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen och namnet på paketet."
    - id: packageMode
      type: System.IO.FileMode
      description: "Filåtkomstläge att öppna paketet."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Filåtkomst att öppna paketet."
    - id: packageShare
      type: System.IO.FileShare
      description: "Läge att öppna paketet för fildelning."
    return:
      type: System.IO.Packaging.Package
      description: "Öppna paketet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar core egenskaperna för paketet."
  remarks: "Mer information om paketet huvudegenskaper finns i avsnittet 3.1 i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning i [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "Core egenskaperna för paketet."
  overload: System.IO.Packaging.Package.PackageProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Anger om det är en del med en viss URI i paketet."
  remarks: "Den `partUri` måste inledas med ett snedstreck tecknet &quot;/&quot; och vara absolut från roten i paketet.       Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.Uri>Delens att söka efter.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en del med det angivna <code> partUri </code> finns i paketet, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.PartExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad (det går inte att läsa information)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Anger om en package-nivå relation med angivet ID finns i paketet."
  remarks: "Mer information finns i specifikationen Open paketering konventioner (OPC) tillgänglig för hämtning på [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>I relationen att söka efter.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en package-nivå relation med det angivna <code> id </code> finns i paketet, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>är inte en giltig XML-identifierare."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Paketet är inte öppen (<>*> eller <> </> *> har anropats)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Paketet är lässkyddad."
  platform:
  - net462
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Den här medlemmen stöder den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastrukturen och är inte avsedd för användning av programmet.  Använd typ-säkert <xref:System.IO.Packaging.Package.Dispose*>metod i stället.</xref:System.IO.Packaging.Package.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.IO.Packaging.Package.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart[]
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    nameWithType: PackagePart
    fullName: PackagePart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.#ctor*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package
  nameWithType: Package.Package
- uid: System.IO.Packaging.Package.Close*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close
  nameWithType: Package.Close
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreatePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore
  nameWithType: Package.CreatePartCore
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.DeletePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart
  nameWithType: Package.DeletePart
- uid: System.IO.Packaging.Package.DeletePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore
  nameWithType: Package.DeletePartCore
- uid: System.IO.Packaging.Package.DeleteRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship
  nameWithType: Package.DeleteRelationship
- uid: System.IO.Packaging.Package.Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose
  nameWithType: Package.Dispose
- uid: System.IO.Packaging.Package.FileOpenAccess*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush
  nameWithType: Package.Flush
- uid: System.IO.Packaging.Package.FlushCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore
  nameWithType: Package.FlushCore
- uid: System.IO.Packaging.Package.GetPart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart
  nameWithType: Package.GetPart
- uid: System.IO.Packaging.Package.GetPartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore
  nameWithType: Package.GetPartCore
- uid: System.IO.Packaging.Package.GetParts*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts
  nameWithType: Package.GetParts
- uid: System.IO.Packaging.Package.GetPartsCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore
  nameWithType: Package.GetPartsCore
- uid: System.IO.Packaging.Package.GetRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship
  nameWithType: Package.GetRelationship
- uid: System.IO.Packaging.Package.GetRelationships*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships
  nameWithType: Package.GetRelationships
- uid: System.IO.Packaging.Package.GetRelationshipsByType*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: Package.GetRelationshipsByType
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
- uid: System.IO.Packaging.Package.PackageProperties*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
- uid: System.IO.Packaging.Package.PartExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists
  nameWithType: Package.PartExists
- uid: System.IO.Packaging.Package.RelationshipExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists
  nameWithType: Package.RelationshipExists
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: Package.System.IDisposable.Dispose
