### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.ColumnAttribute
  id: ColumnAttribute
  children:
  - System.Data.Linq.Mapping.ColumnAttribute.#ctor
  - System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  - System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  - System.Data.Linq.Mapping.ColumnAttribute.DbType
  - System.Data.Linq.Mapping.ColumnAttribute.Expression
  - System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  - System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  - System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  - System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  - System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  langs:
  - csharp
  name: ColumnAttribute
  nameWithType: ColumnAttribute
  fullName: System.Data.Linq.Mapping.ColumnAttribute
  type: Class
  summary: "Associerar en klass med en kolumn i en databastabell."
  remarks: "Använd det här attributet för att utse en medlem av en entitetsklass som representerar en kolumn i en databastabell. Du kan använda det här attributet för alla fält eller egenskap som är `public`, `private`, eller `internal`.       Endast de entitet klassmedlemmar identifierats som kolumner sparas när [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] sparar ändringar till databasen.       Använd kommatecken för att avgränsa flera egenskaper på attributet."
  example:
  - "```vb#  \n<Table(Name:=\"Employees\")>  _  \nPublic Class Employees  \n    Private _LastName As String  \n    ' …  \n    <Column(Storage:=\"_LastName\", DbType:=\"NVarChar(20) NOT NULL\", _  \n        CanBeNull:=false)> _  \n    Public Property LastName() As String  \n        Get  \n            Return Me._LastName  \n        End Get  \n        Set  \n            If ((Me._LastName = value) _  \n                = false) Then  \n                Me.OnPropertyChanging(\"LastName\")  \n                Me._LastName = value  \n                Me.OnPropertyChanged(\"LastName\")  \n            End If  \n        End Set  \n    End Property  \nEnd Class  \n```  \n  \n```c#  \n[Table(Name=\"Employees\")]  \npublic class Employees  \n{  \n    private string _LastName;      \n    // …  \n    [Column(Storage=\"_LastName\", DbType=\"NVarChar(20) NOT NULL\",   \n        CanBeNull=false)]  \n    public string LastName  \n    {  \n        get  \n        {  \n            return this._LastName;  \n        }  \n        set  \n        {  \n            if ((this._LastName != value))  \n            {  \n                this.OnPropertyChanging(\"LastName\");  \n                this._LastName = value;  \n                this.OnPropertyChanged(\"LastName\");  \n            }  \n        }  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute
  inheritance:
  - System.Attribute
  - System.Data.Linq.Mapping.DataAttribute
  implements: []
  inheritedMembers:
  - System.Data.Linq.Mapping.DataAttribute.Name
  - System.Data.Linq.Mapping.DataAttribute.Storage
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Linq.Mapping.ColumnAttribute&quot;> </xref> klass."
  syntax:
    content: public ColumnAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger den <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> uppräkning."
  remarks: ''
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#1)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#1)]
  syntax:
    content: public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "Den <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> värde."
  overload: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om kolumnen kan innehålla null-värden."
  remarks: "Om du anger värdet till `false`, data i motsvarande kolumn antas vara icke-null.      > [!NOTE] > Den här egenskapen är en dubblett från den <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>egenskapen i informationssyfte.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> Den <xref:System.Data.Linq.DataContext.CreateDatabase%2A>metoden används endast den <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>egenskapen.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> </xref:System.Data.Linq.DataContext.CreateDatabase%2A> Därför måste du ange om kolumnen kan innehålla null-värden i den <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>egenskapen även.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#2)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#2)]
  syntax:
    content: public bool CanBeNull { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger typ av databaskolumnen."
  remarks: "Använd den här egenskapen för att ange den exakta texten som definierar kolumnen i en deklaration för Transact-SQL-tabell. Ange egenskapen DbType endast om du planerar att använda <xref:System.Data.Linq.DataContext.CreateDatabase%2A>att skapa en instans av databasen.</xref:System.Data.Linq.DataContext.CreateDatabase%2A>       Standardvärdet för DbType härledas från medlemstypen. Mer information finns i [mappning av SQL-CLR-typen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#4)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#4)]
  syntax:
    content: public string DbType { get; set; }
    return:
      type: System.String
      description: "Se anmärkning."
  overload: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om en kolumn är en beräknad kolumn i en databas."
  remarks: "Använd den här egenskapen när du använder <xref:System.Data.Linq.DataContext.CreateDatabase%2A>att definiera en kolumn som innehåller beräknade värden.</xref:System.Data.Linq.DataContext.CreateDatabase%2A>       Om du vill skapa en kolumn som definierats i SQL som till exempel `InventoryVal AS UnitPrice * UnitsInStock`, Använd följande *uttryck* sträng: `&quot;UnitPrice * UnitsInStock&quot;`.      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] har inte stöd för beräknade kolumner som primära nycklar."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#5)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#5)]
  syntax:
    content: public string Expression { get; set; }
    return:
      type: System.String
      description: "Standard = tom."
  overload: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om en kolumn som innehåller värden som databasen automatiskt-genererar."
  remarks: "IsDbGenerated medlemmar synkroniseras omedelbart efter rad med data infogas och medlemmarna som är tillgängliga efter <xref:System.Data.Linq.DataContext.SubmitChanges%2A>har slutförts.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>      > [!NOTE] > Om kolumnen innehåller primärnyckelvärden och IsDbGenerated som anger `true`, bör du också lägga till den <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>egenskapen med hjälp av den `IDENTITY` modifieraren.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#6)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#6)]
  syntax:
    content: public bool IsDbGenerated { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om en kolumn som innehåller en diskriminator värde för en [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] arvshierarki."
  remarks: "När `true`, den här egenskapen anger klassmedlem som hålla diskriminator värdet i en arvshierarki.       Du kan ange egenskapen `true` för Nej mer än en medlem som måste tillhöra den översta mappade klassen i hierarkin."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#7)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#7)]
  syntax:
    content: public bool IsDiscriminator { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om klassmedlem för den här representerar en kolumn som är en del av eller alla primärnyckel för tabellen."
  remarks: "Om en entitetsklass, du måste ange minst en medlem med det här attributet och den måste mappas till primär nyckel eller en unik nyckel på motsvarande tabell eller vy. Om du inte gör detta prompter [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] att tänka på instanser av klassen i skrivskyddat läge för att skicka ändringar till databasen.       Om du anger fler än en medlem i klassen med hjälp av den här egenskapen är nyckeln anses vara en kombination av de associera kolumnerna.      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] har inte stöd för beräknade kolumner som primära nycklar."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#8)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#8)]
  syntax:
    content: public bool IsPrimaryKey { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger om kolumntypen för medlemmen är en databas tidsstämpel eller version."
  remarks: "Versionsnummer ökas och tidsstämpelkolumner uppdateras varje gång den associera raden har uppdaterats. (Den här egenskapen anger [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] att en kolumn som ska uppdateras för att visa att det är en ny version; det är inte tänkt att registrera information, till exempel vem som gjorde att uppdateringen.)       Tänk på följande när `IsVersion` är sant:-Använd <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>att ange rätt modifierarna om du vill ange en version eller en tidsstämpel kolumn.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> Om du inte anger <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] härleder rätt modifierarna.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>       Versionsnummer ökas och tidsstämpelkolumner uppdateras varje gång den associera raden har uppdaterats. Medlemmar med `IsVersion=true` synkroniseras omedelbart efter dataraden har uppdaterats. De nya värdena är synliga när <xref:System.Data.Linq.DataContext.SubmitChanges%2A>har slutförts.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#9)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#9)]
  syntax:
    content: public bool IsVersion { get; set; }
    return:
      type: System.Boolean
      description: "Standardvärde = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hämtar eller anger hur [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] närmar sig identifieringen av optimistisk samtidighetskonflikter."
  remarks: "När den här egenskapen används med en av tre uppräkningar, bestämmer hur [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] identifierar samtidighetskonflikter.       Om ingen medlem är utformad som `IsVersion=true`, ursprungliga medlemsvärden jämförs med det aktuella databastillståndet.       Följande uppräkningar är tillgängliga:- `Always` alltid använda den här kolumnen för konfliktidentifiering.      - `Never` Aldrig använder den här kolumnen för konfliktidentifiering.      - `WhenChanged` Använder den här kolumnen endast när medlemmen har ändrats av programmet."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#10)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#10)]
  syntax:
    content: public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "Standard = <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref>, såvida inte <xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> för en medlem.</xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>       Andra värden är <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref> och <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: System.Data.Linq.Mapping.DataAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute
  nameWithType: ColumnAttribute.ColumnAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
