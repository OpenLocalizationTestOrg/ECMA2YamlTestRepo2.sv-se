### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter
  id: PropertyFilter
  children:
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  - System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  langs:
  - csharp
  name: PropertyFilter
  nameWithType: PropertyFilter
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter
  type: Class
  summary: "Tillhandahåller filtreringsfunktioner för en egenskap redigera värd."
  remarks: "Innehåller en lista med strängar som kallas *predikat*, som jämförs med ett namn på målet tills en matchning hittas."
  syntax:
    content: public class PropertyFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})'
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Skapar en ny instans av den <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> klass som innehåller en uppräkning av filtrering strängar, kallas *predikat*, som kan jämföras mot ett mål egenskapsnamn tills en matchning hittas."
  syntax:
    content: public PropertyFilter (System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate> predicates);
    parameters:
    - id: predicates
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}
      description: "En <xref:System.Collections.IEnumerable>lista över predikat eller strängar som används för matchning.</xref:System.Collections.IEnumerable>"
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: PropertyFilter(String)
  nameWithType: PropertyFilter.PropertyFilter(String)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Skapar en ny instans av den <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> klass som innehåller en <xref:System.String>som innehåller en blankstegsavgränsad sekvens med filtrering fraser som kallas *predikat*, som kan jämföras mot ett mål egenskapsnamn tills en matchning hittas.</xref:System.String>"
  syntax:
    content: public PropertyFilter (string filterText);
    parameters:
    - id: filterText
      type: System.String
      description: "En <xref:System.String>som innehåller blankstegsavgränsad predikat för egenskapsfiltrering.</xref:System.String>"
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  id: IsEmpty
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Skrivskyddad egenskap som anger om detta <xref:System.Activities.Design.PropertyEditing.PropertyFilter>har inte några filtrering predikat.</xref:System.Activities.Design.PropertyEditing.PropertyFilter>"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om predikat saknas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  id: Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  langs:
  - csharp
  name: Match(IPropertyFilterTarget)
  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "Matchar predikat strängar för det aktuella filtrering objektet mot egenskapsnamnet angivet mål och returnerar ett booleskt värde som anger om en eller flera av de predikat strängarna matchar målnamnet eller om det här <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> har inte några predikat."
  syntax:
    content: public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);
    parameters:
    - id: target
      type: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
      description: "Namnet på egenskapen som det aktuella filtret som ska jämföras mot när du söker efter en matchning."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det finns en matchning för filter/mål eller om det inte finns något ska användas för jämförelse; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  nameWithType: PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(IEnumerable<PropertyFilterPredicate>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PropertyFilterPredicate>
  nameWithType: IEnumerable<PropertyFilterPredicate>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
    name: PropertyFilterPredicate
    nameWithType: PropertyFilterPredicate
    fullName: PropertyFilterPredicate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter(String)
  nameWithType: PropertyFilter.PropertyFilter(String)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.PropertyFilter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: Match(IPropertyFilterTarget)
  nameWithType: PropertyFilter.Match(IPropertyFilterTarget)
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(IPropertyFilterTarget)
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: IPropertyFilterTarget
  nameWithType: IPropertyFilterTarget
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: PropertyFilter
  nameWithType: PropertyFilter.PropertyFilter
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: IsEmpty
  nameWithType: PropertyFilter.IsEmpty
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter.Match*
  parent: System.Activities.Presentation.PropertyEditing.PropertyFilter
  isExternal: false
  name: Match
  nameWithType: PropertyFilter.Match
