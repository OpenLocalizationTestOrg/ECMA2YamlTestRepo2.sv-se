### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityState
  id: SecurityState
  children:
  - System.Security.SecurityState.#ctor
  - System.Security.SecurityState.EnsureState
  - System.Security.SecurityState.IsStateAvailable
  langs:
  - csharp
  name: SecurityState
  nameWithType: SecurityState
  fullName: System.Security.SecurityState
  type: Class
  summary: "Ger en basklass för att begära säkerhetsstatusen för en åtgärd från den <xref href=&quot;System.AppDomainManager&quot;> </xref> objekt."
  remarks: "Du måste ärva från den här klassen för att tillhandahålla en klass som innehåller en egenskap som anger känsliga åtgärd som ska utföras. SecurityState-objekt som skapas från den härledda klassen har överförts till den <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>metod för att bestämma om värden tillåter den åtgärden som ska utföras.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> Standardimplementering av den <xref:System.AppDomainManager.CheckSecuritySettings%2A>metoden returnerar alltid `false`.</xref:System.AppDomainManager.CheckSecuritySettings%2A>  Metoden måste åsidosättas för att identifiera de åtgärder som är tillåtna.       Till exempel om du vill komma åt en webbkamera i biblioteket koden du skapar en `WebcamSecurityState` objektet och anrop i <xref:System.Security.SecurityState.EnsureState%2A>metod för att bestämma om värden tillåter kamera webbåtkomst, som visas i följande exempel.</xref:System.Security.SecurityState.EnsureState%2A>  (Du hittar koden för `WebcamSecurityState` i avsnittet &quot;Exempel&quot;.)      ```   WebcamSecurityState securityState = new WebcamSecurityState(&quot;Safe access to Webcam&quot;, WebcamSecurityOptions.SafeAccess);   try   {      securityState.EnsureState();      // Allocate memory.      }   catch (ApplicationException e)   {       // Handle any exception that is thrown.       System.Diagnostics.Debug.WriteLine(e.Message);   }   ```Att bearbeta anropet den <xref:System.AppDomainManager>måste bli underrättad om `WebcamSecurityState` via en åsidosättning av den <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>metoden, som visas i följande exempel.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> </xref:System.AppDomainManager>      ```   [SecurityCritical]   public override bool CheckSecuritySettings(System.Security.SecurityState securityState)   {      switch (securityState.ToString())      {         case &quot;WebcamSecurityState&quot;:         {             if ((securityState as WebcamSecurityState).Options == WebcamSecurityOptions.SafeAccess)                 return PromptUser((securityState as WebcamSecurityState).Description);              return false;         }      }         return false;   }   private bool PromptUser(string text)   {      // Replace the OpenFileDialog with a custom user prompt.      OpenFileDialog o = new OpenFileDialog();      o.Title = text;      if (o.ShowDialog() == DialogResult.OK)         return true;      else         return false;   }      ```"
  example:
  - "The following example shows how to override the SecurityState class.  \n  \n```  \n[SecurityCritical]  \npublic enum WebcamSecurityOptions  \n    {  \n        SafeAccess,  \n        FullAccess  \n    }  \n[SecurityCritical]  \npublic class WebcamSecurityState : SecurityState  \n{  \n    public WebcamSecurityState(string description, WebcamSecurityOptions options)  \n    {  \n        Options = options;  \n        Description = description;  \n    }  \n    public WebcamSecurityOptions Options { get; set; }  \n    public string Description { get; set; }  \n    public override void EnsureState()  \n    {  \n       if (!IsStateAvailable())  \n           throw new ApplicationException(\"WebcamSecurityState not available\");  \n    }  \n }  \n  \n```"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SecurityState
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityState.#ctor
  id: '#ctor'
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.SecurityState&quot;> </xref> klass."
  syntax:
    content: protected SecurityState ();
    parameters: []
  overload: System.Security.SecurityState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.EnsureState
  id: EnsureState
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "När åsidosätts i en härledd klass garanterar att tillståndet som representeras av <xref href=&quot;System.Security.SecurityState&quot;> </xref> är tillgängligt på värddatorn."
  remarks: "Implementeringen av den här metoden bör likna följande exempel.      ```   public override void EnsureState()   {       if (!IsStateAvailable())             throw new ApplicationException(&quot;WebcamSecurityState not available&quot;);   }      ```"
  syntax:
    content: public abstract void EnsureState ();
    parameters: []
  overload: System.Security.SecurityState.EnsureState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.IsStateAvailable
  id: IsStateAvailable
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Hämtar ett värde som anger om tillståndet för den här implementeringen av den <xref href=&quot;System.Security.SecurityState&quot;> </xref> klassen är tillgängligt på den aktuella värden."
  remarks: "IsStateAvailable anrop av <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>metod för att bestämma om tillstånd som representeras av den här klassen är tillgängligt på värddatorn.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>       Finns det <xref:System.Security.SecurityState>klass för en exempel-implementering av den <xref:System.AppDomainManager.CheckSecuritySettings%2A>metoden.</xref:System.AppDomainManager.CheckSecuritySettings%2A> </xref:System.Security.SecurityState>"
  syntax:
    content: public bool IsStateAvailable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tillståndet är tillgängliga. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityState.IsStateAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityState.#ctor
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
- uid: System.Security.SecurityState.EnsureState
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
- uid: System.Security.SecurityState.IsStateAvailable
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityState.#ctor*
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState
  nameWithType: SecurityState.SecurityState
- uid: System.Security.SecurityState.EnsureState*
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState
  nameWithType: SecurityState.EnsureState
- uid: System.Security.SecurityState.IsStateAvailable*
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable
  nameWithType: SecurityState.IsStateAvailable
