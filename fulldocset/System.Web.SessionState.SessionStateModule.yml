### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Tillhandahåller tjänster för sessionstillstånd för ett program. Den här klassen kan inte ärvas."
  remarks: "SessionStateModule är ASP. NETS standardprogram för sessionstillstånd. Skriver sessionsdata till och hämtar från sessionstillstånd store och aktiverar den **Session_OnStart** och **Session_OnEnd** händelser. Mer information om hur du använder sessionstillståndet ASP.NET för att lagra och hämta värden för en användarsession finns [översikt över sessionstillståndet ASP.NET](~/add/includes/ajax-current-ext-md.md).       Du kan ersätta SessionStateModule med en anpassad implementering av den <xref:System.Web.IHttpModule>gränssnitt som hanterar sessionstillstånd.</xref:System.Web.IHttpModule> Ett exempel på en anpassad modul för sessionstillstånd, finns det <xref:System.Web.SessionState.SessionStateUtility>Översikt över klassen.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> klass."
  remarks: "Den här konstruktorn är inte avsedd att anropas från programkod.       En <xref:System.Web.HttpApplication>objektet skapas när ett ASP.NET-program startas.</xref:System.Web.HttpApplication> Den <xref:System.Web.HttpApplication>objekt-anrop i <xref:System.Web.SessionState.SessionStateModule>konstruktorn för att skapa den <xref:System.Web.SessionState.SessionStateModule>objekt för programmet.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> Den <xref:System.Web.SessionState.SessionStateModule>har angetts i konfigurationen för ett program.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Kör rensning av slutliga kod innan den <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objekt släpps från minnet."
  remarks: "Den här metoden ska inte anropas från programkod.       En <xref:System.Web.HttpApplication>objektet skapas när ett ASP.NET-program startas.</xref:System.Web.HttpApplication> Den <xref:System.Web.HttpApplication>objektet skapas och initieras den <xref:System.Web.SessionState.SessionStateModule>objekt för programmet och anropar metoden Dispose när objektet släpps.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> Den <xref:System.Web.SessionState.SessionStateModule>har angetts i konfigurationen för ett program.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inträffar när en session avslutas."
  remarks: "End-händelsen visas i slutet av en begäran när den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden har anropats eller när sessionen har upphört.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> En session upphör att gälla när antalet minuter som anges av den <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>egenskapen skickar utan en begäran görs för sessionen.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       Den **Session_OnEnd** händelsen används för att utföra någon rensningsarbete för en session, till exempel av resurser som används av sessionen.       Du kan ange en hanterare för händelsen slutet genom att lägga till en offentlig subrutin med namnet **Session_OnEnd** i filen Global.asax.      > [!NOTE] > Den **Session_OnEnd** händelsen kan endast när sessionstillståndet <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>egenskapsvärdet är <xref:System.Web.SessionState.SessionStateMode>, som är standardvärdet.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Om sessionstillståndet <xref:System.Web.SessionState.HttpSessionState.Mode%2A>anges till <xref:System.Web.SessionState.SessionStateMode>eller <xref:System.Web.SessionState.SessionStateMode>, sedan **Session_OnEnd** händelsen i filen Global.asax ignoreras.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Om sessionens tillstånd <xref:System.Web.SessionState.HttpSessionState.Mode%2A>egenskapsvärdet är <xref:System.Web.SessionState.SessionStateMode>, sedan stöd för den **Session_OnEnd** händelse bestäms av den sessionstillstånd lagerprovidern.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Även om End event är offentlig, kan du bara hantera den genom att lägga till en händelsehanterare i filen Global.asax. Den här begränsningen implementeras eftersom <xref:System.Web.HttpApplication>instanser återanvänds för prestanda.</xref:System.Web.HttpApplication> När en session upphör att gälla, endast den **Session_OnEnd** händelse som anges i filen Global.asax har körts för att förhindra att kod anropar en händelsehanterare för slutet som är associerade med en <xref:System.Web.HttpApplication>-instans som används för närvarande.</xref:System.Web.HttpApplication>       Mer information om filen Global.asax finns [Global.asax Syntax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Anropar initieringen kod när en <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objektet har skapats."
  remarks: "Den här metoden ska inte anropas från programkod.       En <xref:System.Web.HttpApplication>skapas när ett ASP.NET-program startas.</xref:System.Web.HttpApplication> Den <xref:System.Web.HttpApplication>objekt anropar Init-metoden när det skapas den <xref:System.Web.SessionState.SessionStateModule>objekt för programmet.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> Den <xref:System.Web.SessionState.SessionStateModule>klass har angetts i konfigurationen för ett program.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Det aktuella programmet."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attribut i den [sessionState Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) konfigurationselement är inställd på <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> eller <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, och ASP.NET-programmet har mindre än <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> förtroende."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Den <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attribut i den [sessionState Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) konfigurationselement är inställd på <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> och <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> -attributet är tomt eller finns inte.       - eller - <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> attribut i den [sessionState Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) konfigurationselement är inställd på <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> och providern identifieras av namn i den <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> attributet har inte lagts till i [providers Element för sessionState (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) underelement."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Släpper sessionens tillstånd för den angivna <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> som att frigöra sessionens tillstånd."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Asynkront släpper sessionens tillstånd för den angivna <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> som att frigöra sessionens tillstånd."
    return:
      type: System.Threading.Tasks.Task
      description: "En <xref:System.Threading.Tasks.Task>för den asynkrona åtgärden.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Händelsen inträffar när en session skapas."
  remarks: "Starta händelsen visas i början av en begäran när en ny session startas. En ny session har startats om en begäran har gjorts som inte innehåller ett sessions-ID, sessions-ID är ogiltigt eller som är associerade med en sessionsidentifierare sessionen har upphört.       Den **Session_OnStart** händelse används för att göra eventuella initieringen för en session, till exempel ställer in standardvärden för sessionsvariabler.       Du kan ange en hanterare för händelsen Start genom att lägga till en offentlig subrutin med namnet **Session_OnStart** i filen Global.asax.       Mer information om filen Global.asax finns [Global.asax Syntax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
