### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermission
  id: SiteIdentityPermission
  children:
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.SiteIdentityPermission.Copy
  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.Site
  - System.Security.Permissions.SiteIdentityPermission.ToXml
  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission
  fullName: System.Security.Permissions.SiteIdentityPermission
  type: Class
  summary: "Definierar behörigheten identitet för webbplatsen som koden kommer från. Den här klassen kan inte ärvas."
  remarks: "Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> klass med det angivna <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Fullständigt begränsade tillståndet för <xref:System.Security.Permissions.SiteIdentityPermission>matchar inga webbplatser.</xref:System.Security.Permissions.SiteIdentityPermission> Den här konstruktorn ingår konsekvent med andra behörigheter, men är inte användbar i praktiken.      > [!NOTE] > I .NET Framework version 1.0 och 1.1, Identitetsbehörigheter får inte ha en <xref:System.Security.Permissions.PermissionState>behörighet tillståndsvärde.</xref:System.Security.Permissions.PermissionState> Från och med .NET Framework version 2.0, kan Identitetsbehörigheter ha någon behörighet tillståndsvärde. Detta innebär att Identitetsbehörigheter i 2.0 och senare versioner har samma beteende som behörigheter som implementerar det <xref:System.Security.Permissions.IUnrestrictedPermission>gränssnittet.</xref:System.Security.Permissions.IUnrestrictedPermission> Det vill säga lyckas alltid en begäran om en identitet, oavsett identiteten på sammansättningen, om sammansättningen har beviljats fullständigt förtroende.       I .NET Framework-versioner 1.0- och 1.1 fungerar krav på behörigheterna som identitet, även när den anropande sammansättningen är fullständigt betrodd. Även om den anropande sammansättningen har fullständigt förtroende, misslyckas som är en begäran om en identity-behörighet om sammansättningen inte uppfyller kriterierna som behövs. Från och med .NET Framework version 2.0 har är krav på Identitetsbehörigheter ineffektiv om anropa sammansättningen har fullständigt förtroende. Detta säkerställer konsekvent för alla behörigheter, eliminera behandling av Identitetsbehörigheter i specialfall."
  syntax:
    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> värden."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parametern är inte ett giltigt värde för <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> klass för att representera identiteten för den angivna platsen."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public SiteIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "Plats namn eller ett jokertecken uttryck."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> site </code> parameter är inte en giltig sträng eller matchar inte ett giltigt wildcard-platsnamn."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar och returnerar en identisk kopia av den aktuella tillstånd."
  remarks: "En kopia av behörigheten representerar samma åtkomst till resurser eller plats samma identitet som den ursprungliga tillstånd."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopia av den aktuella tillstånd."
  overload: System.Security.Permissions.SiteIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruerar behörighet med ett angivet tillstånd från en XML-kodning."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML-kodning som ska användas för att återskapa behörigheten."
  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> esd </code> parametern är inte ett giltigt behörighetselement.       - eller - <code> esd </code> parameterns versionsnumret är inte giltig."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar och returnerar en behörighet som är skärningspunkten för den aktuella angivna behörigheterna och."
  remarks: "Skärningspunkten för två behörigheter är en behörighet som beskriver de platser som de båda beskriver gemensamma. Skärningspunkten skickar en begäran som passerar både ursprungliga behörigheter. Till exempel skärningspunkten för en behörighet som representerar åtkomst till www.fourthcoffee.com och en som representerar åtkomst till *. fourthcoffee.com beror på behörigheter som representerar åtkomst till www.fourthcoffee.com.       Skärningspunkten för två identiska behörigheter för identitet är samma behörighet. Skärningspunkten för två olika (inte jokertecken) uttryck är en tom behörighet. Skärningspunkten för ett jokerteckenuttryck och en matchande plats är platsen. Skärningspunkten för två jokertecken uttryck som matchar är längre, mer specifikt av två uttryck."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighet till intersect med aktuella tillstånd. Det måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Security.IPermission
      description: "En ny behörighet som representerar skärningspunkten för den aktuella angivna behörigheterna och. Den här nya behörigheten är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om skärningspunkten är tom."
  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Anger om aktuella behörigheten är en delmängd av den angivna behörigheten."
  remarks: "Aktuella behörigheten är en delmängd av den angivna behörigheten om behörigheten aktuella anger en plats som finns helt i den angivna behörigheten.       I följande tabell visas värdet för IsSubsetOf för ett intervall med värden för den aktuella angivna behörigheterna och.      | Aktuella behörighet | Angiven behörighet | IsSubsetOf |   |------------------------|--------------------------|----------------|   | www.fourthcoffee.com | www.fourthcoffee.com | `true`|   | www.fourthcoffee.com | www.tailspintoys.com | `false`|   | www.fourthcoffee.com | *. fourthcoffee.com| `true`|   | www.fourthcoffee.com | *.com| `true`|   | *. fourthcoffee.com| www.fourthcoffee.com | `false`|   | *. fourthcoffee.com| *. fourthcoffee.com| `true`|   | *. fourthcoffee.com| *.com| `true`|   | Anything except `None`|*|`true`|   | `None`| Något |`true`|"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Behörigheter som ska testas för delmängd relationen. Den här behörigheten måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den aktuella behörigheten är en delmängd av den angivna behörigheten; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hämtar eller anger den aktuella platsen."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "Den aktuella platsen."
  overload: System.Security.Permissions.SiteIdentityPermission.Site*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Plats-identitet kan inte hämtas eftersom den har en tvetydig identitet."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar en XML-kodning av behörighet och det aktuella tillståndet."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "En XML-kodning av behörighet, inklusive statusinformation."
  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar en behörighet som är unionen av den aktuella angivna behörigheterna och."
  remarks: "The result of a call to Union is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to \\*.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighet för att kombinera med aktuella tillstånd. Det måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Security.IPermission
      description: "En ny behörighet som representerar unionen av den aktuella angivna behörigheterna och."
  overload: System.Security.Permissions.SiteIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd.       - eller - behörigheterna är inte lika och en är inte en delmängd av de andra."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission.SiteIdentityPermission
- uid: System.Security.Permissions.SiteIdentityPermission.Copy*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: SiteIdentityPermission.Copy
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: SiteIdentityPermission.FromXml
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: SiteIdentityPermission.Intersect
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SiteIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.SiteIdentityPermission.Site*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: SiteIdentityPermission.ToXml
- uid: System.Security.Permissions.SiteIdentityPermission.Union*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union
  nameWithType: SiteIdentityPermission.Union
