### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "Radbryter ett hanterat objekt som innehåller en referens till en resurs som skickas till oförvaltad kod med platform anropa."
  remarks: "> [!IMPORTANT]> Börjar med .NET Framework 2.0, funktionerna i klassen HandleRef har ersatts av den <xref:System.Runtime.InteropServices.SafeHandle>klass och härledda klasser, samt som <xref:System.Runtime.InteropServices.CriticalHandle>klass</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle>       Om du använder plattform anropa för att anropa ett hanterat objekt, och objektet refereras inte till någon annanstans när plattformen anropa anrop, är det möjligt för skräpinsamlingen att slutföra hanterat objekt. Den här åtgärden släpper resursen och upphäver referensen orsakar plattformen anropa anropet att misslyckas. En referens som HandleRef wrapping garanterar att hanterade objektet inte är skräpinsamlats tills plattformen anropa anropet har slutförts. En beskrivning av plattform anropa services, se [förbrukar ohanterad dll-funktioner](~/add/includes/ajax-current-ext-md.md).       HandleRef värdetyp, som <xref:System.Runtime.InteropServices.GCHandle>, är en särskild typ som identifieras av interop-konverteraren.</xref:System.Runtime.InteropServices.GCHandle> En normal nonpinned <xref:System.Runtime.InteropServices.GCHandle>förhindrar du också att arbetsplatsen skräpinsamling ännu HandleRef ger bättre prestanda.</xref:System.Runtime.InteropServices.GCHandle> Även om användning HandleRef för att hålla ett objekt alive under en plattform anropa anrop är att föredra, du kan också använda den <xref:System.GC.KeepAlive%2A?displayProperty=fullName>metoden för samma ändamål.</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       Konstruktorn HandleRef har två parametrar: en <xref:System.Object>som representerar omslutning, och en <xref:System.IntPtr>som representerar ohanterad referens.</xref:System.IntPtr> </xref:System.Object> Interop-konverteraren skickar bara referensen till oförvaltad kod och garanterar att adapterprogram (som den första parametern skickades till konstruktorn för den `HandleRef`) förblir aktiv under anropet."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> klass med objekt till radbrytning och en referens till den resurs som används av ohanterad kod."
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "Returnerar ett hanterat objekt som inte ska slutföras förrän plattformen anropa anrop."
    - id: handle
      type: System.IntPtr
      description: "En <xref:System.IntPtr>som anger en referens till en resurs.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Hämtar en referens till en resurs."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Referensen till en resurs."
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "Som ska läggas till."
    return:
      type: System.IntPtr
      description: "Som ska läggas till."
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Returnerar den interna heltal representationen av en <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objekt."
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "En <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> datorobjektet för att hämta en intern heltal representation från."
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>objekt som representerar en <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objekt.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Hämtar det objekt som håller referensen till en resurs."
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "Det objekt som håller referensen till en resurs."
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
