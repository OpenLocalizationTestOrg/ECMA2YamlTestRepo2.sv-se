### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Definierar utökade funktioner för klientbaserade inställningar programleverantörer."
  remarks: "Inställningar för programarkitektur kan du ange en anpassad lagring mekanism för inställningar för program genom att skapa en provider för anpassade inställningar som är en klass som härleds från <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> Sådana klassen innehåller grundläggande funktioner för att lagra och hämta egenskaper. Du kan dock lägga till ytterligare standardiserad funktionalitet genom att implementera gränssnittet IApplicationSettingsProvider i providern anpassade inställningar. Det här gränssnittet innehåller tre metoder som främst gör inställningar för leverantören att bättre referensen version ändringar i programmet. Normalt inställningsprovidern kommer att lagra programinställningar för olika versioner av ett program separat att förutse följande omständigheter:-sida-vid-sida-körning av olika versioner av ett program.      -Behåller programinställningar när du uppgraderar ett program.      -När du återställer programinställningarna till sina standardvärden för den aktuella versionen.       Den <xref:System.Configuration.LocalFileSettingsProvider>klassen implementerar gränssnittet IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Samma uppsättning metoder som finns i IApplicationSettingsProvider finns också i den <xref:System.Configuration.ApplicationSettingsBase>klass, gör det möjligt för en fördefinierad kommunikationskanalen mellan en Omslutning för inställningar av programmet och dess inställningsprovider.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Det här gränssnittet är valfria. Om en provider inte implementerar gränssnittet misslyckas inställningar infrastruktur utan meddelande om den försöker komma åt någon av metoderna som definieras av det här gränssnittet."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Returnerar värdet på egenskapen angivna inställningarna för den tidigare versionen av samma program."
  remarks: "Du kan använda metoden GetPreviousVersion tillsammans med den <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>metod för att migrera inställningar för program under eller efter installationen av en ny version av ett program.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver den nuvarande användningen av programmet."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "Den <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> vars värde ska returneras."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> som innehåller den angivna egenskapsinställningen värde som senast har angetts i den tidigare versionen av programmet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inställningen inte hittas."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Återställer programinställningar som är associerade med det angivna programmet till sina standardvärden."
  remarks: "Reset-metoden initierar lagrade värdena för den angivna programgruppen inställningar. Däremot <xref:System.Configuration.DefaultSettingValueAttribute>tillhandahåller ett standardvärde för en enskild inställningsegenskapen egenskapen initieras om den inte har något lagrade värde.</xref:System.Configuration.DefaultSettingValueAttribute>       Inställningsprovidern avgör vad rimliga standardvärdena är för den angivna gruppen programinställningarna. Till exempel implementeringen <xref:System.Configuration.LocalFileSettingsProvider>återställer användarspecifika inställningar till standardvärdena i den `application.exe.config` filen; däremot den lämnar de program som definitionsområde inställningar.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver den nuvarande användningen av programmet."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Anger att programmet har uppgraderats till providern. Det ger dig providern möjlighet att uppgradera lagrade inställningarna efter behov."
  remarks: ".NET Framework kan sida-vid-sida-installation och körning av olika versioner av samma program. Programmets inställningsprovider lagrar programinställningar för varje version av ett program separat för att säkra isolering. Du kanske vill migrera inställningar från den tidigare versionen av ett program till det aktuella. För att ge den här funktionen för migrering, använder du metoden uppgradera implementeras i en klass som härleds från <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       Du kan använda metoden uppgradera tillsammans med den <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>metod för att migrera inställningar för program under eller efter installationen av en ny version av ett program.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Den här metoden bör visas för varje programinställning som har det <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>är används, eller hela inställningar wrapper klassen, har härletts från <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som beskriver den nuvarande användningen av programmet."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> som innehåller gruppen inställningar egenskap vars värden som ska hämtas."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
