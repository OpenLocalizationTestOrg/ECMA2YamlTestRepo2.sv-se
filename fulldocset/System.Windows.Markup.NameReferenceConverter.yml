### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.NameReferenceConverter
  id: NameReferenceConverter
  children:
  - System.Windows.Markup.NameReferenceConverter.#ctor
  - System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter
  fullName: System.Windows.Markup.NameReferenceConverter
  type: Class
  summary: "Ger typkonvertering att konvertera ett namn för anslutningssträngen till en objektreferens till objektet med det namnet eller så återgår du namnet på ett objekt från objektdiagrammet."
  remarks: "Den här klassen innehåller en typ konverteraren wrapper runt två tjänster.       Den <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A>implementering använder <xref:System.Xaml.IXamlNameResolver>från kontext för att utföra lösning av ett objekt med namnet i XAML.</xref:System.Xaml.IXamlNameResolver> </xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> Detta är en del av relevanta XAML-läsare och XAML writer implementeringar i .NET Framework XAML-tjänster. Konverteraren korrekta funktion kräver att den <xref:System.Xaml.IXamlNameResolver>-tjänsten är tillgänglig från tjänstkontext.</xref:System.Xaml.IXamlNameResolver>       Den <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A>implementering använder <xref:System.Xaml.IXamlNameProvider>från kontext för att utföra matchning av en Referensnamn för ett objekt under spara-serialisering.</xref:System.Xaml.IXamlNameProvider> </xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> Detta är en del av de relevanta implementeringarna läsare och skrivare och deras kontext. Konverteraren korrekta funktion kräver att det finnas en underliggande <xref:System.Xaml.IXamlNameProvider>tjänsten tillgänglig.</xref:System.Xaml.IXamlNameProvider>       Den här typen konverteraren-implementeringen är ovanlig för den <xref:System.ComponentModel.TypeConverter>bastyp eftersom den inte är begränsade till typen diskreta konvertering.</xref:System.ComponentModel.TypeConverter> Den kan eventuellt konvertera objekt till och från ett refererande namn så länge det objektet kan ha ett namn som tilldelats i XAML och stödjande kontexten har tjänsterna som behövs för att returnera resultat.       Som en del av allmänna services stöder, basera System.Xaml implementeringen av <xref:System.Xaml.XamlObjectWriter>och <xref:System.Xaml.XamlXmlWriter>Ange <xref:System.Xaml.IXamlNameProvider>och <xref:System.Xaml.IXamlNameResolver>tjänster för användning av NameReferenceConverter.</xref:System.Xaml.IXamlNameResolver> </xref:System.Xaml.IXamlNameProvider> </xref:System.Xaml.XamlXmlWriter> </xref:System.Xaml.XamlObjectWriter> Namnet basen för dessa tjänster använder antingen `x:Name` eller en <xref:System.Windows.Markup.RuntimeNamePropertyAttribute>attributet alias egenskap.</xref:System.Windows.Markup.RuntimeNamePropertyAttribute>"
  syntax:
    content: 'public class NameReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Markup.NameReferenceConverter&quot;> </xref> klass."
  syntax:
    content: public NameReferenceConverter ();
    parameters: []
  overload: System.Windows.Markup.NameReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Returnerar om konverteraren kan konvertera ett objekt av en typ till ett annat objekt."
  remarks: "Den här implementeringen kan endast bearbeta en `sourceType` <xref:System.String>.</xref:System.String> Andra typer returnera `false`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: sourceType
      type: System.Type
      description: "En <xref:System.Type>som motsvarar den typ som du vill konvertera från.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här konverteraren kan utföra konverteringen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Returnerar ett värde som anger om konverteraren kan konvertera ett objekt till den angivna måltypen."
  remarks: "En `destinationType` som refererar till den <xref:System.String>skriver returnerar `true`; alla andra `destinationType` värden returnera `false`.</xref:System.String>       Den här metoden returnerar false om `context` är `null`, eller om <xref:System.Xaml.IXamlNameProvider>kan inte hämtas som en tjänst från `context`.</xref:System.Xaml.IXamlNameProvider>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: destinationType
      type: System.Type
      description: "Konvertera till typen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om konverteraren kan utföra konverteringen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Konverterar det angivna objektet till ett annat objekt, med hjälp av angivna kontexten och kultur information."
  remarks: "Endast en <xref:System.String>indata innehåller ett konverteringsresultat.</xref:System.String>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Den <xref:System.Globalization.CultureInfo>ska användas som den aktuella kulturen.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Referens namnsträngen konvertera."
    return:
      type: System.Object
      description: "Det returnerade objektet, vilket kan vara ett objekt som är typen mappas i relevanta stödjande sammansättningar och kunna som deklarerats i XAML med en referens för XAML-namn."
  overload: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>value</code>är en null-sträng eller en tom sträng.       - eller - <xref href=&quot;System.Xaml.IXamlNameResolver&quot;> </xref> tjänsten är ogiltig eller saknas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Konverterar ett objekt till den angivna typen. Detta är avsett att returnera namn för XAML-referens för objekt i ett objektdiagram."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Den <xref:System.Globalization.CultureInfo>ska användas som den aktuella kulturen.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Att hämta referensnamnet på för objektet."
    - id: destinationType
      type: System.Type
      description: "Den typ som ska returneras. Du bör alltid refererar den <xref:System.String>typen.</xref:System.String>"
    return:
      type: System.Object
      description: "För referensnamnet på indata <code> value </code> objekt."
  overload: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xaml.IXamlNameProvider&quot;></xref>tjänsten är ogiltig eller saknas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.NameReferenceConverter.#ctor*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter.NameReferenceConverter
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: NameReferenceConverter.CanConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: NameReferenceConverter.CanConvertTo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: NameReferenceConverter.ConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: NameReferenceConverter.ConvertTo
