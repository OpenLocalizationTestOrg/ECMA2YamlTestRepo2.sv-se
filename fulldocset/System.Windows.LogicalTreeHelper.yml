### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "Innehåller statiska helper-metoder för att fråga efter objekt i det logiska trädet."
  remarks: "LogicalTreeHelper-klassen innehåller metoder som du kan använda för att returnera underordnade samlingar av objekt eller specifika objekt inom underordnade noderna till det logiska trädet. Men visas de flesta objekt trädet åtgärder som man brukar utföra också av liknande metoder eller egenskaper på <xref:System.Windows.FrameworkElement>eller <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Till exempel att testa följande: – i stället för att anropa statiskhet <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>metod som returnerar en uppräknare för den logiska underordnat objekt, använda dedicerade samlingen visas i innehållsmodellen för objektet.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Nästan alla objekt som stöder en innehållsmodellen exponera vissa egenskap som innehåller mängden med underordnade objekt och stöder samling gränssnittet direkt på den samlingen.      – I stället för anropar statiskhet <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>metod för att hämta ett underordnat objekt genom att ange dess namn, anrop av <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>eller <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>metod för specifika objekt.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       LogicalTreeHelper är mest användbara för analys scenarier där du reser uppåt eller nedåt logiska trädet rekursivt genom flera nivåer och vill använda en konsekvent metod för att pröva olika överordnade eller underordnade objekt. I det här fallet kan du komma åt en blandning av innehåll modeller och använder mer innehåll-modellen specifika API: er är för komplex."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Försök att sätta begärt UI-element i vyn och aktiverar den <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> händelse på målet för att rapportera resultatet."
  remarks: "Är normalt mer praktiskt att anropa instans metoderna <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>eller <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>i stället för den här metoden för statisk verktyget.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> Beteendet för Instansmetoder motsvarar beteendet för den statiska metoden.       Även om den `current` UI-element som har en <xref:System.Windows.FrameworkContentElement>, den resulterande händelsen är samma <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>händelse med käll <xref:System.Windows.FrameworkContentElement>identifierbar genom att kontrollera händelsedata för händelsen.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "UI-element som sätta i vyn."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Försöker hitta och returnera ett objekt som har det angivna namnet. Sökningen startas från det angivna objektet och fortsätter in underordnade noderna till det logiska trädet."
  remarks: "Metoderna <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>och <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>liknar Ytligt sett FindLogicalNode men fungerar med olika logik:-sökningen riktningen för FindLogicalNode är mot underordnade objekt (nedåt i trädet); sökriktningen för den `FindName` metoder är mot överordnade objekt (uppåt i trädet).</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      - `FindName` Metoder regleras av konceptet för en XAML-namescope. Med hjälp av `FindName` du garanteras att endast en objektet med det namnet finns, eftersom XAML namescopes genomdriva unikhet. Däremot FindLogicalNode ignorerar XAML namescope och kan passera XAML namescope gränser under sökningen. Därför det är inte säkert att unika den `elementName` namn när gränser passeras. Mer information om XAML namescopes finns [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "Söka från objekt. Det här objektet måste vara antingen en <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> eller en <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "Namnet på objektet som ska söka efter."
    return:
      type: System.Windows.DependencyObject
      description: "Objektet med ett matchande namn, om ett hittas; Returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om ingen matchande namn hittades i det logiska trädet."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerar mängden direkt underordnade objekt för det angivna objektet genom att behandla det logiska trädet."
  remarks: "Använd den här signatur och helper-metoden i första hand när du är osäker på om `current` är en <xref:System.Windows.FrameworkElement>eller <xref:System.Windows.FrameworkContentElement>och är också osäker på om den object-klassen har stöd för en egen samling innehållsmodellen.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Om du kan avgöra vilken typ av objekt du frågar, kontrollera specifika egenskapen content som du vet finns på den aktuella typen. Till exempel om du vet att objektet du frågar är en <xref:System.Windows.Controls.ItemsControl>, kontrollera den <xref:System.Windows.Controls.ItemsControl.Items%2A>egenskapen för att hämta en strikt typkontroll samling som har stöd för samlingen gränssnitt och är förmodligen mer användbar än en uppräknare.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Det objekt som ska börja bearbeta det logiska trädet. Detta förväntas vara antingen en <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> eller <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "Samlingen enumerable direkt underordnade objekt från det logiska trädet för det angivna objektet."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerar mängden direkt underordnade objekt i den angivna <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> genom att behandla det logiska trädet."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "Det objekt som ska börja bearbeta det logiska trädet."
    return:
      type: System.Collections.IEnumerable
      description: "Samlingen enumerable direkt underordnade objekt från <code> current </code> i det logiska trädet."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerar mängden direkt underordnade objekt i den angivna <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> genom att behandla det logiska trädet."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "Det objekt som ska börja bearbeta det logiska trädet."
    return:
      type: System.Collections.IEnumerable
      description: "Samlingen enumerable direkt underordnade objekt från <code> current </code> i det logiska trädet."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Returnerar det överordnade objektet för det angivna objektet genom att behandla det logiska trädet."
  remarks: "Den här metoden är bara en omslutning som hämtar lämplig version (<xref:System.Windows.FrameworkElement> eller <xref:System.Windows.FrameworkContentElement>) av den <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>eller <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>egenskap, så om det inte går att avgöra den `current` typ, du kanske vill kontrollera egenskaperna för respektive instans i stället.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Det objekt som används för att hitta det överordnade objektet för. Detta förväntas vara antingen en <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> eller en <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "Det begärda överordnade objektet."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
