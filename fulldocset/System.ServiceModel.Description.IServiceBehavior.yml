### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IServiceBehavior
  id: IServiceBehavior
  children:
  - System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: IServiceBehavior
  nameWithType: IServiceBehavior
  fullName: System.ServiceModel.Description.IServiceBehavior
  type: Interface
  summary: "Ger möjlighet att ändra eller infoga anpassade tillägg över en hela tjänsten, inklusive den <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>."
  remarks: "Implementerar IServiceBehavior om du vill ändra, undersöka eller utöka någon aspekt av tjänsteomfattande körning på programnivå: – Använd den <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>metod för att ändra egenskapsvärden för körning eller infoga anpassade tillägg objekt, till exempel felhanterare, meddelande eller parametern-interceptorerna, säkerhetstillägg och andra anpassade tillägg-objekt.</xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>      – Använd den <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>metod för att undersöka beskrivningen innan [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] konstruktioner tjänsten körs för att bekräfta att den kan köras korrekt.</xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>      – Använd den <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>metod för att skicka till ett bindningselement anpassad information för tjänsten så att det stöder tjänsten korrekt.</xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>       IServiceBehavior-objekt kan göra för någon av följande metoder, men ofta bara använda en är viktigt. i sådana fall kan oanvända metoder returnerar inget värde.      > [!NOTE] > Alla metoder IServiceBehavior skicka <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>och <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekt som en parametrar.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> Den <xref:System.ServiceModel.Description.ServiceDescription>parameter för endast granskning; om du ändrar de här objekten körningsbeteende är odefinierad.</xref:System.ServiceModel.Description.ServiceDescription>       Om du vill utföra aktiviteten anpassning som den är avsedd IServiceBehavior-objekt måste läggas till i <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>egenskapen innan konstruktionen av tjänsten-körningsmiljön.</xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> Det finns tre sätt att göra detta: – programmatiskt lägga till anpassade tjänstbeteende till den <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>egenskapen före punkten där den <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>metoden anropas för den <xref:System.ServiceModel.ServiceHost?displayProperty=fullName>objekt.</xref:System.ServiceModel.ServiceHost?displayProperty=fullName> </xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>      -Skapa ett anpassat attribut som implementerar IServiceBehavior och använda den för att markera tjänstklasser som ska ändras. När en <xref:System.ServiceModel.ServiceHost>objektet skapas [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] använder reflektion för att identifiera attribut i tjänsttypen.</xref:System.ServiceModel.ServiceHost> Om några attribut implementerar IServiceBehavior, läggs de till beteendesamlingen <xref:System.ServiceModel.Description.ServiceDescription>.</xref:System.ServiceModel.Description.ServiceDescription>      -Utöka den <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>klassen för att stöda specifikation av beteendet i ett program eller datorkonfigurationsfil.</xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName> Se avsnittet exempel mer information.       Exempel på tjänstebeteenden i [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] inkluderar den <xref:System.ServiceModel.ServiceBehaviorAttribute>attribut, den <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=fullName>och <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName>beteende.</xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following IServiceBehavior implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public interface IServiceBehavior
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Ger möjlighet att skicka anpassade data till bindningselement som stöder kontrakt genomförandet."
  remarks: "Använda AddBindingParameters-metoden för att lägga till anpassade dataobjekt till den `parameters` samling som bindningselement kan använda för att hämta extra information att stödja kontraktet.       Den här metoden anropas en gång för varje lyssnings-URI. Till exempel om en tjänst har fyra slutpunkter och två av dem har lyssnar samma-URI, och sedan på den här metoden anropas tre gånger. Anledningen är att den `bindingParameters` målet varje kanal-stacken och det finns en kanal-stack för varje lyssnings-URI. Eftersom varje anrop får dessa slutpunkter på den lyssnar-URI, två anropar varje get en enda <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>, och ett anrop hämtar en samling av två <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>objekt.</xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName>      > [!NOTE] > Alla de <xref:System.ServiceModel.Description.IServiceBehavior>metoder skicka <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>och <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekt som en parametrar.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameter för granskning och infogning av anpassningar endast; om du ändrar de här objekten annars körningsbeteende är odefinierad.</xref:System.ServiceModel.Description.ServiceDescription>"
  syntax:
    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjänstens beskrivning av tjänsten."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Värden för tjänsten."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Service-slutpunkter."
    - id: bindingParameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Anpassade objekt som bindande element har åtkomst till."
  overload: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Ger möjlighet att ändra egenskapsvärden för körning eller infoga anpassade tillägg objekt, till exempel felhanterare, meddelande eller parametern-interceptorerna, säkerhetstillägg och andra anpassade tillägg-objekt."
  remarks: "Implementerar du metoden ApplyDispatchBehavior om du vill granska eller ändra den <xref:System.ServiceModel.ServiceHostBase>objekt som skapas för att stödja vissa anpassad körning scenario.</xref:System.ServiceModel.ServiceHostBase>      > [!NOTE] > Alla de <xref:System.ServiceModel.Description.IServiceBehavior>metoder skicka <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>och <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekt som en parametrar.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameter för granskning och infogning av anpassningar endast; om du ändrar de här objekten annars körningsbeteende är odefinierad.</xref:System.ServiceModel.Description.ServiceDescription>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjänstbeskrivning."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Värden som för närvarande skapas."
  overload: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  langs:
  - csharp
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Ger möjlighet att inspektera tjänstvärden och tjänstbeskrivningen för att bekräfta att tjänsten kan köras."
  remarks: "Använd Validate-metoden för att bekräfta om aktuella tjänsten kan köras korrekt enligt ditt scenario.      > [!NOTE] > Alla de <xref:System.ServiceModel.Description.IServiceBehavior>metoder skicka <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>och <xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName>objekt som en parametrar.</xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.IServiceBehavior> Den <xref:System.ServiceModel.Description.ServiceDescription>parameter för granskning och infogning av anpassningar endast; om du ändrar de här objekten annars körningsbeteende är odefinierad.</xref:System.ServiceModel.Description.ServiceDescription>"
  example:
  - "The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application. In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.  \n  \n The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=fullName> of type `GreetingFault`.  \n  \n [!code-vb[IErrorHandler#7](~/add/codesnippet/visualbasic/ierrorhandler.client/ierrorhandler.vb#7)]\n [!code-cs[IErrorHandler#7](~/add/codesnippet/csharp/ierrorhandler.client/ierrorhandler.cs#7)]  \n  \n In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "Tjänstbeskrivning."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "Värden för tjänsten som skapas för närvarande."
  overload: System.ServiceModel.Description.IServiceBehavior.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: AddBindingParameters
  nameWithType: IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: ApplyDispatchBehavior
  nameWithType: IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.IServiceBehavior.Validate*
  parent: System.ServiceModel.Description.IServiceBehavior
  isExternal: false
  name: Validate
  nameWithType: IServiceBehavior.Validate
