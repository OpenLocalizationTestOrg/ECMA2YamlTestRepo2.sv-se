### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherOperation
  id: DispatcherOperation
  children:
  - System.Windows.Threading.DispatcherOperation.Abort
  - System.Windows.Threading.DispatcherOperation.Aborted
  - System.Windows.Threading.DispatcherOperation.Completed
  - System.Windows.Threading.DispatcherOperation.Dispatcher
  - System.Windows.Threading.DispatcherOperation.GetAwaiter
  - System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  - System.Windows.Threading.DispatcherOperation.Priority
  - System.Windows.Threading.DispatcherOperation.Result
  - System.Windows.Threading.DispatcherOperation.Status
  - System.Windows.Threading.DispatcherOperation.Task
  - System.Windows.Threading.DispatcherOperation.Wait
  - System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  langs:
  - csharp
  name: DispatcherOperation
  nameWithType: DispatcherOperation
  fullName: System.Windows.Threading.DispatcherOperation
  type: Class
  summary: "Representerar ett objekt som används för att interagera med en åtgärd som har publicerats på den <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> kön."
  remarks: "<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>Returnerar ett DispatcherOperation objekt när den anropas.</xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>       DispatcherOperation-objektet kan användas för att interagera med delegaten på den <xref:System.Windows.Threading.Dispatcher>kö, till exempel ändra prioriteten för åtgärden och avbryta åtgärden.</xref:System.Windows.Threading.Dispatcher>       Så här skaffar du returvärdet för det anropade ombudet den <xref:System.Windows.Threading.DispatcherOperation.Result%2A>egenskapen.</xref:System.Windows.Threading.DispatcherOperation.Result%2A>       DispatcherOperation är inte en gräns för undantagshantering. Det innebär att undantag som hanteras av den <xref:System.Windows.Threading.Dispatcher>och bevaras inte under.</xref:System.Windows.Threading.Dispatcher>"
  syntax:
    content: public class DispatcherOperation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Abort
  id: Abort
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Abort()
  nameWithType: DispatcherOperation.Abort()
  fullName: System.Windows.Threading.DispatcherOperation.Abort()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Avbryter åtgärden."
  remarks: "Om en åtgärd pågår redan den här metoden returnerar `false`.       När en åtgärd avbröts, den <xref:System.Windows.Threading.DispatcherOperation.Status%2A>av den <xref:System.Windows.Threading.DispatcherOperation>anges till <xref:System.Windows.Threading.DispatcherOperationStatus>och <xref:System.Windows.Threading.DispatcherOperation.Aborted>händelsen utlöses.</xref:System.Windows.Threading.DispatcherOperation.Aborted> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperation> </xref:System.Windows.Threading.DispatcherOperation.Status%2A>"
  syntax:
    content: public bool Abort ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om åtgärden avbröts; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherOperation.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Aborted
  id: Aborted
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Aborted
  nameWithType: DispatcherOperation.Aborted
  fullName: System.Windows.Threading.DispatcherOperation.Aborted
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inträffar när åtgärden har avbrutits."
  syntax:
    content: public event EventHandler Aborted;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Completed
  id: Completed
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Completed
  nameWithType: DispatcherOperation.Completed
  fullName: System.Windows.Threading.DispatcherOperation.Completed
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inträffar när åtgärden har slutförts."
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher
  id: Dispatcher
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
  fullName: System.Windows.Threading.DispatcherOperation.Dispatcher
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar den <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> där åtgärden anslogs."
  syntax:
    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }
    return:
      type: System.Windows.Threading.Dispatcher
      description: "Dispatcher."
  overload: System.Windows.Threading.DispatcherOperation.Dispatcher*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter
  id: GetAwaiter
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: GetAwaiter()
  nameWithType: DispatcherOperation.GetAwaiter()
  fullName: System.Windows.Threading.DispatcherOperation.GetAwaiter()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Returnerar ett objekt som ska meddelas när den asynkrona åtgärden har slutförts."
  syntax:
    content: public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter
      description: "Ett objekt som ska meddelas när den asynkrona åtgärden har slutförts."
  overload: System.Windows.Threading.DispatcherOperation.GetAwaiter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  id: InvokeDelegateCore
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: InvokeDelegateCore()
  nameWithType: DispatcherOperation.InvokeDelegateCore()
  fullName: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Börjar med åtgärden som är associerad med den här <xref href=&quot;System.Windows.Threading.DispatcherOperation&quot;> </xref>."
  syntax:
    content: protected virtual object InvokeDelegateCore ();
    parameters: []
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Priority
  id: Priority
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Priority
  nameWithType: DispatcherOperation.Priority
  fullName: System.Windows.Threading.DispatcherOperation.Priority
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar eller anger prioriteten för en åtgärd i <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> kön."
  syntax:
    content: public System.Windows.Threading.DispatcherPriority Priority { get; set; }
    return:
      type: System.Windows.Threading.DispatcherPriority
      description: "Prioritet för delegaten kön."
  overload: System.Windows.Threading.DispatcherOperation.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Result
  id: Result
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Result
  nameWithType: DispatcherOperation.Result
  fullName: System.Windows.Threading.DispatcherOperation.Result
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar resultat av åtgärden när den har slutförts."
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: "Resultatet av åtgärden - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om åtgärden inte har slutförts."
  overload: System.Windows.Threading.DispatcherOperation.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Status
  id: Status
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Status
  nameWithType: DispatcherOperation.Status
  fullName: System.Windows.Threading.DispatcherOperation.Status
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar den aktuella statusen för igen..."
  remarks: "Steg i en <xref:System.Windows.Threading.DispatcherOperation>är <xref:System.Windows.Threading.DispatcherOperationStatus>, <xref:System.Windows.Threading.DispatcherOperationStatus>, och <xref:System.Windows.Threading.DispatcherOperationStatus>.</xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperationStatus> </xref:System.Windows.Threading.DispatcherOperation>  När som helst innan åtgärden har slutförts kan status anges till <xref:System.Windows.Threading.DispatcherOperationStatus>.</xref:System.Windows.Threading.DispatcherOperationStatus>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Status { get; }
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "Status för åtgärden."
  overload: System.Windows.Threading.DispatcherOperation.Status*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Task
  id: Task
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Task
  nameWithType: DispatcherOperation.Task
  fullName: System.Windows.Threading.DispatcherOperation.Task
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar en &lt;xref:System.Threading.Tasks.Task%601&gt; som representerar den aktuella åtgärden."
  syntax:
    content: public System.Threading.Tasks.Task Task { get; }
    return:
      type: System.Threading.Tasks.Task
      description: "Ett objekt som representerar den aktuella åtgärden."
  overload: System.Windows.Threading.DispatcherOperation.Task*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Wait
  id: Wait
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Wait()
  nameWithType: DispatcherOperation.Wait()
  fullName: System.Windows.Threading.DispatcherOperation.Wait()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Väntar på att åtgärden har slutförts"
  remarks: "Så här skaffar du returvärdet för det anropade ombudet den <xref:System.Windows.Threading.DispatcherOperation.Result%2A>egenskapen.</xref:System.Windows.Threading.DispatcherOperation.Result%2A>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Wait ();
    parameters: []
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "Status för åtgärden."
  overload: System.Windows.Threading.DispatcherOperation.Wait*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Threading.DispatcherOperation.Status*>är lika med <xref href=&quot;System.Windows.Threading.DispatcherOperationStatus&quot;> </xref>.</xref:System.Windows.Threading.DispatcherOperation.Status*>  Detta kan inträffa när en åtgärd som körs på samma tråd redan väntar."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Windows.Threading.DispatcherOperation
  langs:
  - csharp
  name: Wait(TimeSpan)
  nameWithType: DispatcherOperation.Wait(TimeSpan)
  fullName: System.Windows.Threading.DispatcherOperation.Wait(TimeSpan)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Väntar på att åtgärden ska slutföras i den angivna tidsperioden."
  remarks: "Så här skaffar du returvärdet för det anropade ombudet den <xref:System.Windows.Threading.DispatcherOperation.Result%2A>egenskapen.</xref:System.Windows.Threading.DispatcherOperation.Result%2A>"
  syntax:
    content: public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Den maximala tidsperioden som väntar."
    return:
      type: System.Windows.Threading.DispatcherOperationStatus
      description: "Status för åtgärden."
  overload: System.Windows.Threading.DispatcherOperation.Wait*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Threading.DispatcherOperation.Status*>är lika med <xref href=&quot;System.Windows.Threading.DispatcherOperationStatus&quot;> </xref>.</xref:System.Windows.Threading.DispatcherOperation.Status*>  Detta kan inträffa när en åtgärd som körs på samma tråd redan väntar."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Threading.DispatcherOperation.Abort
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Abort()
  nameWithType: DispatcherOperation.Abort()
  fullName: System.Windows.Threading.DispatcherOperation.Abort()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherOperation.Aborted
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Aborted
  nameWithType: DispatcherOperation.Aborted
  fullName: System.Windows.Threading.DispatcherOperation.Aborted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Threading.DispatcherOperation.Completed
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Completed
  nameWithType: DispatcherOperation.Completed
  fullName: System.Windows.Threading.DispatcherOperation.Completed
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
  fullName: System.Windows.Threading.DispatcherOperation.Dispatcher
- uid: System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  isExternal: false
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: GetAwaiter()
  nameWithType: DispatcherOperation.GetAwaiter()
  fullName: System.Windows.Threading.DispatcherOperation.GetAwaiter()
- uid: System.Runtime.CompilerServices.TaskAwaiter
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: TaskAwaiter
  nameWithType: TaskAwaiter
  fullName: System.Runtime.CompilerServices.TaskAwaiter
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: InvokeDelegateCore()
  nameWithType: DispatcherOperation.InvokeDelegateCore()
  fullName: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore()
- uid: System.Windows.Threading.DispatcherOperation.Priority
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Priority
  nameWithType: DispatcherOperation.Priority
  fullName: System.Windows.Threading.DispatcherOperation.Priority
- uid: System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.DispatcherOperation.Result
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Result
  nameWithType: DispatcherOperation.Result
  fullName: System.Windows.Threading.DispatcherOperation.Result
- uid: System.Windows.Threading.DispatcherOperation.Status
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Status
  nameWithType: DispatcherOperation.Status
  fullName: System.Windows.Threading.DispatcherOperation.Status
- uid: System.Windows.Threading.DispatcherOperationStatus
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherOperationStatus
  nameWithType: DispatcherOperationStatus
  fullName: System.Windows.Threading.DispatcherOperationStatus
- uid: System.Windows.Threading.DispatcherOperation.Task
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Task
  nameWithType: DispatcherOperation.Task
  fullName: System.Windows.Threading.DispatcherOperation.Task
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Windows.Threading.DispatcherOperation.Wait
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait()
  nameWithType: DispatcherOperation.Wait()
  fullName: System.Windows.Threading.DispatcherOperation.Wait()
- uid: System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait(TimeSpan)
  nameWithType: DispatcherOperation.Wait(TimeSpan)
  fullName: System.Windows.Threading.DispatcherOperation.Wait(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Threading.DispatcherOperation.Abort*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Abort
  nameWithType: DispatcherOperation.Abort
- uid: System.Windows.Threading.DispatcherOperation.Dispatcher*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherOperation.Dispatcher
- uid: System.Windows.Threading.DispatcherOperation.GetAwaiter*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: GetAwaiter
  nameWithType: DispatcherOperation.GetAwaiter
- uid: System.Windows.Threading.DispatcherOperation.InvokeDelegateCore*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: InvokeDelegateCore
  nameWithType: DispatcherOperation.InvokeDelegateCore
- uid: System.Windows.Threading.DispatcherOperation.Priority*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Priority
  nameWithType: DispatcherOperation.Priority
- uid: System.Windows.Threading.DispatcherOperation.Result*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Result
  nameWithType: DispatcherOperation.Result
- uid: System.Windows.Threading.DispatcherOperation.Status*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Status
  nameWithType: DispatcherOperation.Status
- uid: System.Windows.Threading.DispatcherOperation.Task*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Task
  nameWithType: DispatcherOperation.Task
- uid: System.Windows.Threading.DispatcherOperation.Wait*
  parent: System.Windows.Threading.DispatcherOperation
  isExternal: false
  name: Wait
  nameWithType: DispatcherOperation.Wait
