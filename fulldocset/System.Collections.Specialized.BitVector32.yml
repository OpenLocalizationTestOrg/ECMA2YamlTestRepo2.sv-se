### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Tillhandahåller en enkel struktur som lagrar booleska värden och liten heltal i 32-bitars minne."
  remarks: "BitVector32 är effektivare än <xref:System.Collections.BitArray>för booleska värden och liten heltal som används internt.</xref:System.Collections.BitArray> En <xref:System.Collections.BitArray>kan växa på obestämd tid efter behov, men den har att minne och prestanda försämras som kräver en klassinstans.</xref:System.Collections.BitArray> En BitVector32 använder däremot endast 32 bitar.       En BitVector32 struktur kan ställas in dig att innehålla avsnitt för små heltal eller bit-flaggor för booleska värden, men inte båda. En <xref:System.Collections.Specialized.BitVector32.Section>är en av BitVector32 och består av det lägsta antalet på varandra följande bitar som kan innehålla det maximala värdet som angetts i <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> </xref:System.Collections.Specialized.BitVector32.Section> Till exempel består ett avsnitt med ett maximalt värde 1 av en bit, medan ett avsnitt med ett maximalt värde på 5 består av tre bits. Du kan skapa en <xref:System.Collections.Specialized.BitVector32.Section>med ett maximalt värde 1 för att fungera som ett booleskt värde, vilket innebär att du lagra heltal och booleska värden i samma BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Vissa medlemmar som kan användas för en BitVector32 som är inställda som avsnitt, medan andra medlemmar som kan användas för ett som har konfigurerats som bit-flaggor. Till exempel den <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>egenskapen är indexerare för en BitVector32 som är inställda som avsnitt och <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>egenskapen är indexerare för en BitVector32 som är inställda som bit-flaggor.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>skapar ett antal masker som kan användas för att få åtkomst till enskilda bitar i en BitVector32 som är inställda som bit-flaggor.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Med hjälp av en mask på en BitVector32 ställs in som avsnitt kan orsaka oväntade resultat."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som innehåller de data som visas i en befintlig <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur."
  remarks: "Den här konstruktorn är en O(1)-åtgärd."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "En <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som innehåller data som ska kopieras."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Initierar en ny instans av den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struktur som innehåller de data som visas i ett heltal."
  remarks: "Den här konstruktorn är en O(1)-åtgärd."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Ett heltal som representerar alla data för den nya <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Skapar den första masken i en serie med masker som kan användas för att hämta enskilda bitar i en <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som har konfigurerats som bit-flaggor."
  remarks: "Använd `CreateMask()` att skapa den första masken i en serie och `CreateMask(int)` för alla efterföljande masker.       Du kan skapa flera masker du vill referera till samma flaggan.       Resulterande masken isolerar flaggan för endast en bit i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Du kan kombinera masker med binär eller igen för att skapa en mask som isolerar flera bitars flaggor i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Med hjälp av en mask på en <xref:System.Collections.Specialized.BitVector32>som ställs in som avsnitt kan orsaka oväntade resultat.</xref:System.Collections.Specialized.BitVector32>       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "En mask som isolerar första flaggan i den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Skapar en ytterligare mask efter den angivna masken i en serie med masker som kan användas för att hämta enskilda bitar i en <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som har konfigurerats som bit-flaggor."
  remarks: "Använd `CreateMask()` att skapa den första masken i en serie och `CreateMask(int)` för alla efterföljande masker.       Du kan skapa flera masker du vill referera till samma flaggan.       Resulterande masken isolerar flaggan för endast en bit i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Du kan kombinera masker med binär eller igen för att skapa en mask som isolerar flera bitars flaggor i <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Med hjälp av en mask på en <xref:System.Collections.Specialized.BitVector32>som ställs in som avsnitt kan orsaka oväntade resultat.</xref:System.Collections.Specialized.BitVector32>       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "Masken som anger tidigare flaggan."
    return:
      type: System.Int32
      description: "En mask som isolerar biten flaggan efter det som <code> previous </code> pekar på i <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>Anger den sista flaggan i den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Skapar först <xref:System.Collections.Specialized.BitVector32.Section>i ett antal avsnitt som innehåller små heltal.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "En <xref:System.Collections.Specialized.BitVector32.Section>är en av <xref:System.Collections.Specialized.BitVector32>och består av det lägsta antalet på varandra följande bitar som kan innehålla det maximala värdet som angetts i CreateSection.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> Till exempel består ett avsnitt med ett maximalt värde 1 av en bit, medan ett avsnitt med ett maximalt värde på 5 består av tre bits. Du kan skapa en <xref:System.Collections.Specialized.BitVector32.Section>med ett maximalt värde 1 för att fungera som ett booleskt värde, vilket innebär att du store heltal och booleska värden i samma <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Om avsnitt finns redan i den <xref:System.Collections.Specialized.BitVector32>, dessa avsnitt är fortfarande tillgängliga; dock överlappande sektioner kan orsaka oväntade resultat.</xref:System.Collections.Specialized.BitVector32>       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Ett 16-bitars heltal som anger det maximala värdet för den nya <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "En <xref:System.Collections.Specialized.BitVector32.Section>som kan innehålla en siffra från noll till <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>är mindre än 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Som ska läggas till."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som ska läggas till."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som ska läggas till."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar värdet för den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som ett heltal."
  remarks: "Använd om du vill komma åt värdet för enskilda avsnitt eller bit flaggor i <xref:System.Collections.Specialized.BitVector32.Item%2A>egenskap.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Hämtar värdet för den här egenskapen är en O(1)-åtgärd."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "Värdet för den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som ett heltal."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Anger om det angivna objektet är lika med den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Objektet `o` anses vara lika med den <xref:System.Collections.Specialized.BitVector32>om vilken typ av `o` är kompatibel med den <xref:System.Collections.Specialized.BitVector32>typ och om värdet för `o` är lika med värdet för <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Den här metoden är en O(1)-åtgärd."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Objektet som ska jämföras med aktuellt <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna objektet är lika med den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Fungerar som en hash-funktionen för den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Hash-koden för en <xref:System.Collections.Specialized.BitVector32>baseras på värdet för <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> Två instanser av <xref:System.Collections.Specialized.BitVector32>med samma värde för <xref:System.Collections.Specialized.BitVector32.Data%2A>kommer också att generera samma hash-kod.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En Hashkod för den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "Som ska läggas till."
    return:
      type: System.Int32
      description: "Som ska läggas till."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Hämtar eller anger tillståndet för flaggan anges av den angivna masken."
  remarks: "Egenskapen Item [avsnitt] är indexerare för en <xref:System.Collections.Specialized.BitVector32>som har konfigurerats som avsnitt och egenskapen Item [int] är indexerare för en <xref:System.Collections.Specialized.BitVector32>som har konfigurerats som bit-flaggor.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Med den här egenskapen på ett <xref:System.Collections.Specialized.BitVector32>som ställs in som avsnitt kan orsaka oväntade resultat.</xref:System.Collections.Specialized.BitVector32>       C#-språk använder nyckelordet för att definiera indexerare i stället för att implementera egenskapen Item. Visual Basic implementerar objektet som en default-egenskap som innehåller samma funktion för indexering.       Hämtar värdet för den här egenskapen är O(1) åtgärd. Egenskapen är också en O(1)-åtgärd."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "En mask som anger bitars att hämta eller ange."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna flaggan finns på (1). Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerar en sträng som representerar aktuellt <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Den här metoden åsidosätter <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Den här metoden är en O(1)-åtgärd."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som representerar aktuellt <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Returnerar en sträng som representerar den angivna <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Den här metoden är en O(1)-åtgärd."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Den <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> som representerar."
    return:
      type: System.String
      description: "En sträng som representerar den angivna <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
