### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.WebClientProtocol
  id: WebClientProtocol
  children:
  - System.Web.Services.Protocols.WebClientProtocol.#ctor
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  langs:
  - csharp
  name: WebClientProtocol
  nameWithType: WebClientProtocol
  fullName: System.Web.Services.Protocols.WebClientProtocol
  type: Class
  summary: "Anger basklass för alla XML-tjänsten klienten webbproxyservrar skapats med hjälp av ASP.NET."
  remarks: "Egenskaper för klassen WebClientProtocol används för att styra beteendet för transporten används för att överföra XML-webbtjänstens begäran och svar. Egenskaper för den här klassen mappa till egenskaperna <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> Instanser av klasser som härleds från <xref:System.Net.WebRequest>, som <xref:System.Net.HttpWebRequest>, används som transportmekanismen för XML-webbtjänster som skapats med hjälp av ASP.NET.</xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest>       För att kommunicera med en XML-webbtjänsten, måste du skapa en proxyklass som härleds indirekt eller direkt från WebClientProtocol för XML-webbtjänsten som du vill anropa. I stället för att skapa proxyklassen manuellt kan använda du verktyget Wsdl.exe för att skapa en proxy för en viss XML-webbtjänsten tjänstens beskrivning. Eftersom WebClientProtocol är basklass för klient-proxy, hittar du egenskaperna för din proxyklasser. De här egenskaperna är användbara för att styra beteendet för begäran för underliggande transport. Till exempel använda den <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A>-egenskapen för anropar autentiserad XML-webbtjänster.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> Många av egenskaperna WebClientProtocol används för att initiera den <xref:System.Net.WebRequest>objekt som används för att göra webbegäran.</xref:System.Net.WebRequest>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_0_1.aspx)]\n [!code-vb[Classic WebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_0_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class WebClientProtocol : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Services.Protocols.WebClientProtocol&quot;> </xref> klass."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_11_1.cs)]
     [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_11_1.cpp)]
     [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_11_1.vb)]
  syntax:
    content: protected WebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  id: Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Avbryter en begäran till en XML-webbtjänstmetoden."
  syntax:
    content: public virtual void Abort ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  id: AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Lägg till en instans av protokollhanteraren klienten till cachen."
  syntax:
    content: protected static void AddToCache (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>På den klienten protokollet hanterare...</xref:System.Type>"
    - id: value
      type: System.Object
      description: "Klienten protokollhanteraren som ska läggas till i cacheminnet."
  overload: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger namnet på gruppen anslutning för begäran."
  remarks: "Egenskapen ConnectionGroupName kan du associera en begäran till en grupp. Mer information finns i <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>"
  syntax:
    content: public string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "Namnet på gruppen anslutning. Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  id: Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger autentiseringsuppgifterna för klientautentisering för XML-webbtjänsten service."
  remarks: "När du använder den `Credentials` egenskapen en XML-webbtjänsten service-klient måste skapa en instans av en klass som implementerar <xref:System.Net.ICredentials>, som <xref:System.Net.NetworkCredential>, och sedan ange klientens autentiseringsuppgifter för autentiseringsmekanism.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials> Den <xref:System.Net.NetworkCredential>klassen kan användas för att ange autentiseringsuppgifter med hjälp av grundläggande, sammanfattad, NTLM och Kerberos-autentiseringsmekanismer.</xref:System.Net.NetworkCredential>       När egenskapen autentiseringsuppgifter har angetts <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>sedan klienten förhandlar om servern för att göra Kerberos eller NTLM-autentiseringen beroende på hur servern har konfigurerats.</xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property. The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see.  \n  \n [!code-vb[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_41_1.aspx)]\n [!code-cs[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_41_1.aspx)]"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Den <xref:System.Net.ICredentials>för XML-webbtjänstklienten.</xref:System.Net.ICredentials>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  id: GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar en instans av en klient protokollhanteraren från cacheminnet."
  syntax:
    content: protected static object GetFromCache (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>klienten protokollhanteraren som ska returneras från cacheminnet.</xref:System.Type>"
    return:
      type: System.Object
      description: "En instans av en klient protokollhanteraren från cacheminnet."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Skapar en <xref:System.Net.WebRequest>-instans för den angivna <code> uri </code>.</xref:System.Net.WebRequest> Den här skyddade metoden anropas av XML-webbtjänsten service klientens infrastruktur för att hämta en ny <xref:System.Net.WebRequest>transportobjekt att överföra XML-webbtjänstens begäran.</xref:System.Net.WebRequest>"
  remarks: "Den här metoden kan åsidosättas om du vill anpassa den <xref:System.Net.WebRequest>objekt innan XML-webbtjänstens begäran görs.</xref:System.Net.WebRequest> Du kan till exempel lägga till en anpassad rubrik på begäran."
  syntax:
    content: protected virtual System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri>Att använda när du skapar <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>instans.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerar ett svar från en synkron begäran till en XML-webbtjänstmetoden."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>svar från.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Ett svar från en synkron begäran till en XML-webbtjänstmetoden."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Om <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>anropas innan du anropar GetWebResponse.</xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>"
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerar ett svar från en asynkron begäran till en XML-webbtjänstmetoden. Den här skyddade metoden anropas av XML-webbtjänsten service klientens infrastruktur för att hämta svaret från en asynkron XML-webbtjänstens begäran."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>svar från.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>ska skickas till <xref:System.Net.HttpWebRequest.EndGetResponse*>när svaret har slutförts.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Ett svar från en asynkron begäran till en XML-webbtjänstmetoden."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Om <> </> *> anropas innan du anropar <> </> *>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  id: PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger om autentisering är aktiverat."
  remarks: "När en klient begär en resurs utan att använda autentiseringsuppgifter, servern anropar begäran och anger vilka autentiseringsmetoder som stöds. Klienten väljer ett autentiseringsschema och skickar en lämplig `WWW-authenticate` sidhuvud till servern. När PreAuthenticate är `true`, `WWW-authenticate` rubriken skickas med alla efterföljande förfrågningar.       När PreAuthenticate är `false`, en begäran skickas till XML-webbtjänstmetoden utan att först försöker autentisera användaren. Om anonym åtkomst tillåts i XML-webbtjänsten körs XML webbtjänstmetoden. Om anonym åtkomst tillåts skickas 401 http-koden tillbaka till klienten. Som svar på <xref:System.Web.Services.Protocols.WebClientProtocol>klassen returnerar autentiseringsuppgifter till webbservern.</xref:System.Web.Services.Protocols.WebClientProtocol> Om klienten är autentiserad och därefter behörighet att komma åt XML-webbtjänsten, körs XML webbtjänstmetod; annars nekas klienten åtkomst."
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>före autentisera begäran. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  id: RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Den <xref:System.Text.Encoding>används för att göra klientbegäran för XML-webbtjänsten.</xref:System.Text.Encoding>"
  remarks: "RequestEncoding anger kodningen för begärandemeddelandet. Den <xref:System.Net.WebRequest.ContentType%2A>begäran ska förses med värdet för kodning.</xref:System.Net.WebRequest.ContentType%2A>       Klasser som härleds från <xref:System.Web.Services.Protocols.WebClientProtocol>som stöd för ett visst protokoll <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>har SOAP, ange i den här egenskapen till kraven kodning för det aktuella protokollet.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol> </xref:System.Web.Services.Protocols.WebClientProtocol> Till exempel den <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>Anger standardkodning till UTF-8.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_59_1.aspx)]\n [!code-cs[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_59_1.aspx)]"
  syntax:
    content: public System.Text.Encoding RequestEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Teckenkodningen för klientbegäran. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, som använder standardkodning för det underliggande transport och protokoll."
  overload: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  id: Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Anger den tid som en XML-webbtjänstklienten väntar på svar till en synkron XML-webbtjänstens begäran ankommer (i millisekunder)."
  remarks: "Egenskapen Timeout <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>anger att begäran har ingen timeout.</xref:System.Threading.Timeout.Infinite?displayProperty=fullName> Även om en XML-webbtjänsten service-klient kan ange Timeout-egenskapen inte timeout, göra webbservern fortfarande begäran timeout på serversidan."
  example:
  - "The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.  \n  \n [!code-cs[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_35_1.cs)]\n [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_35_1.cpp)]\n [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_35_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Tidsgräns i millisekunder för synkrona anrop till XML-webbtjänsten. Standardvärdet är 100000 millisekunder."
  overload: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  id: Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger basen URL för XML-webbtjänsten klienten begär."
  remarks: "Proxyklasser som genereras med hjälp av Wsdl.exe kommer att ange standard Url-egenskapen för att klienten ska använda. Standard-Url bestäms av Platsattributet finns i tjänstbeskrivningen där proxyklassen skapades.       Härledda klasser stöder vissa protokoll som <xref:System.Web.Services.Protocols.HttpGetClientProtocol>och <xref:System.Web.Services.Protocols.HttpPostClientProtocol>kan lägga till extra information i URL: en att göra XML-webbtjänstens begäran.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol>       Url-egenskapen kan ändras om du vill referera till en XML-webbtjänst som implementerar samma tjänstbeskrivningen som proxyklassen skapades från."
  example:
  - "The following example changes the Url property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.  \n  \n [!code-cs[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_49_1.cs)]\n [!code-vb[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_49_1.vb)]\n [!code-cpp[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_49_1.cpp)]"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "Den grundläggande Webbadressen för XML-webbtjänsten klienten begär. Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger ett värde som anger om du vill ange den <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>egenskapen till värdet för den &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; egenskap.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen autentiseringsuppgifter anges till värdet för den &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; egenskapen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol
  nameWithType: WebClientProtocol.WebClientProtocol
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort
  nameWithType: WebClientProtocol.Abort
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache
  nameWithType: WebClientProtocol.AddToCache
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache
  nameWithType: WebClientProtocol.GetFromCache
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: WebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: WebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
- uid: System.Web.Services.Protocols.WebClientProtocol.Url*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
