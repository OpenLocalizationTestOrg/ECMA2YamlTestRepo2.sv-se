### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "Ett objekt i körningsmiljön som refererar till en speech recognition grammatik som ett program kan använda för att definiera villkor för taligenkänning."
  remarks: "En speech recognition grammatik är en uppsättning regler och villkor som definierar en taligenkänningsmotorn kan identifiera som beskrivande indata. Mer information om hur du skapar och använder speech recognition grammatik finns [taligenkänning](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919), [skapa grammatik med XML](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [skapa grammatik med GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), och [skapa grammatik med SrgsGrammar](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906).       När du skapar en grammatik måste du skapa den i en grammatik-objektet som en taligenkänningsmotorn kan läsa in och att ditt program kan använda vid körning för att hantera taligenkänning. Du kan använda en <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktorn för att skapa en instans för grammatik från en <xref:System.Speech.Recognition.GrammarBuilder>eller en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>objektet, eller från en fil eller en <xref:System.IO.Stream>som innehåller en beskrivning av en grammatik i ett format som stöds.</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> Format som stöds omfattar följande:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med en .cfg filen tillägget grammatik konstruktorer som accepterar XML-grammatikfiler i sina argument kompilera XML-grammatik till att optimera dem för inläsning och användning av en taligenkänningsmotor binärt format. Du kan minska den tid som krävs för att konstruera ett grammatik objekt från en grammatik i XML-format genom att kompilera grammatiken i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       Ett program taligenkänning, som hanteras av en <xref:System.Speech.Recognition.SpeechRecognizer>eller <xref:System.Speech.Recognition.SpeechRecognitionEngine>objekt, kan läsa in flera speech recognition grammatik.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> Programmet oberoende av varandra kan aktivera eller inaktivera enskilda grammatik genom att ange den <xref:System.Speech.Recognition.Grammar.Enabled%2A>egenskapen och ändra recognition funktioner via grammatik egenskaper som den <xref:System.Speech.Recognition.Grammar.Priority%2A>och <xref:System.Speech.Recognition.Grammar.Weight%2A>Egenskaper.</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       Grammatiken <xref:System.Speech.Recognition.Grammar.SpeechRecognized>händelsen utlöses när indata matchar en sökväg till grammatik.</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] > Är det en bra idé att kontrollera säkerheten för alla URI eller en DLL-fil som används för att skapa ett objekt för grammatik.   >> Windows och talplattformen ger säkerhet för hur du skapar en grammatik instans från en DLL-fil eller en grammatik som har stöd för skript-program.   >> Skript i grammatik objekt körs alltid som om hämtas från en webbsida i den `Internet Zone`. Den Runtime CLR (Common Language) isolerar alla DLL läses in för att erhålla en grammatik definition."
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Den här konstruktorn vidarebefordra inte alla parametrar till hanteraren initieringen och beskrivningen bör inte definiera en initieringen hanterare som kräver argument.       Den här konstruktorn kan skapa en <xref:System.Speech.Recognition.Grammar>instansen från följande format:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med filnamnstillägget .cfg detta konstruktorn kompilerar XML-grammatikfiler till binärformat att optimera dem för inläsning och användning av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar> Du kan minska den tid som krävs för att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt från en XML-format grammatik genom att kompilera grammatik i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Ett SRGS grammatik kan definiera en rotregel. Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt från en dataström och ange en rotregel som, använda på <xref:System.Speech.Recognition.Grammar.%23ctor%2A>eller <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt från en dataström och ange en bas-URI att använda för att matcha relativa regeln referenser, använder den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataström som beskriver en speech recognition grammatik i ett format som stöds."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Beskriver en grammatik som inte innehåller en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataströmmen innehåller inte en giltig beskrivning av en grammatik eller beskriver en grammatik som innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> objekt."
  remarks: "Mer information om hur du använder den <xref:System.Speech.Recognition.GrammarBuilder>klassen för att definiera en grammatik, se [skapa grammatik med GrammarBuilder](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "En instans av <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> som innehåller begränsningarna för speech recognition grammatik."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objekt."
  remarks: "Den här konstruktorn inte vidarebefordra alla parametrar till initieringen-hanteraren och <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>får inte innehålla en initieringen hanterare som kräver argument.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       En <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>kan ha en rotregel.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt som anger en rotregel, Använd den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>eller <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Så här skapar du en taligenkänning <xref:System.Speech.Recognition.Grammar>från en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>och ange en bas-URI att använda för att matcha relativa regeln referenser, använder den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begränsningarna för speech recognition grammatik."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>innehåller inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en fil."
  remarks: "Den här konstruktorn vidarebefordra inte alla parametrar till hanteraren initieringen och beskrivningen bör inte definiera en initieringen hanterare som kräver argument.       Den här konstruktorn kan skapa en <xref:System.Speech.Recognition.Grammar>instansen från följande format:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med filnamnstillägget .cfg detta konstruktorn kompilerar XML-grammatikfiler till binärformat att optimera dem för inläsning och användning av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar> Du kan minska den tid som krävs för att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt från en XML-format grammatik genom att kompilera grammatik i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Ett SRGS grammatik kan definiera en rotregel. Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt från en sträng och ange en rotregel som, använda den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt som anger en bas-URI att använda för att matcha relativa regeln referenser, öppna filen i en filström och använda den <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till den fil som beskriver en speech recognition grammatik i ett format som stöds."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>innehåller en tom sträng (&quot;&quot;), eller filen beskriver en grammatik som inte innehåller en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Filen innehåller inte en giltig beskrivning eller beskriver en grammatik som innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref:System.IO.Stream>och anger en rotregel.</xref:System.IO.Stream>"
  remarks: "Den här konstruktorn vidarebefordra inte alla parametrar till hanteraren initieringen och beskrivningen bör inte definiera en initieringen hanterare som kräver argument.       Den här konstruktorn kan skapa en <xref:System.Speech.Recognition.Grammar>instansen från följande format:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med filnamnstillägget .cfg detta konstruktorn kompilerar XML-grammatikfiler till binärformat att optimera dem för inläsning och användning av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar> Du kan minska den tid som krävs för att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt från en XML-format grammatik genom att kompilera grammatik i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Så här skapar du en <xref:System.Speech.Recognition.Grammar>från en dataström och ange en bas-URI att använda för att matcha relativa regeln referenser, använder den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataström som beskriver en speech recognition grammatik i ett format som stöds."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan inte matchas eller inte är offentlig, eller <code>ruleName</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och beskrivning för grammatik definierar inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataströmmen innehåller inte en giltig beskrivning eller beskriver en grammatik som innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objekt och anger en rotregel."
  remarks: "Den här konstruktorn inte vidarebefordra alla parametrar till initieringen-hanteraren och <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>får inte innehålla en initieringen hanterare som kräver argument.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Så här skapar du en <xref:System.Speech.Recognition.Grammar>objekt från en <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>och ange en bas-URI att använda för att matcha relativa regeln referenser, använder den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begränsningarna för speech recognition grammatik."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> till Använd standardregel för roten av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan inte matchas eller inte är offentlig, eller <code>ruleName</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och <code>srgsDocument</code> innehåller inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en fil och anger en rotregel."
  remarks: "Den här konstruktorn vidarebefordra inte alla parametrar till hanteraren initieringen och beskrivningen bör inte definiera en initieringen hanterare som kräver argument.       Den här konstruktorn kan skapa en <xref:System.Speech.Recognition.Grammar>instansen från följande format:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med filnamnstillägget .cfg detta konstruktorn kompilerar XML-grammatikfiler till binärformat att optimera dem för inläsning och användning av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar> Du kan minska den tid som krävs för att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt från en XML-format grammatik genom att kompilera grammatik i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Så här skapar du en <xref:System.Speech.Recognition.Grammar>som anger en bas-URI att använda för att lösa relativa regeln referenser, öppna en filström för filen och använda den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktor.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till den fil som beskriver en speech recognition grammatik i ett format som stöds."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan inte matchas eller inte är offentlig, <code>path</code> är en tom sträng (&quot;&quot;), eller <code>ruleName</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och beskrivning för grammatik definierar inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Filen innehåller inte en giltig beskrivning eller beskriver en grammatik som innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref:System.IO.Stream>och anger en rotregel.</xref:System.IO.Stream>"
  remarks: "Parametrar för en hanterare för initiering kan också anges."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>ansluten till ett i/o-objekt (inklusive filer, VisualStudio resurser och DLL-filer) som innehåller en grammatik-specifikation.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas till initieringen hanteraren som har angetts av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>-egenskapen för startpunkten eller rotregeln av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> skapas.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Den här parametern kan vara null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>är ansluten till en grammatik som:-innehåller inte den regel som anges i <code>ruleName</code>       - kräver initieringsparametrar skiljer sig från de som anges i <code>parameters</code>       - innehåller en relativ Regelreferens som inte kan matchas med standard-base <xref:System.Uri> regeln för grammatik"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en dataström anger en rotregel och definierar en grundläggande identifierare URI (Uniform Resource) för att lösa relativa regeln referenser."
  remarks: "Den här konstruktorn vidarebefordra inte alla parametrar till hanteraren initieringen och beskrivningen bör inte definiera en initieringen hanterare som kräver argument.       Den här konstruktorn kan skapa en <xref:System.Speech.Recognition.Grammar>instansen från följande format:-XML-filer som överensstämmer med W3C [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -grammatik har kompilerats till en binär fil med filnamnstillägget .cfg detta konstruktorn kompilerar XML-grammatikfiler till binärformat att optimera dem för inläsning och användning av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar> Du kan minska den tid som krävs för att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt från en XML-format grammatik genom att kompilera grammatik i förväg med någon av de <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metoder.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Den här konstruktorn kan inte valideras `baseUri`. Men den `LoadGrammar` metod för en <xref:System.Speech.Recognition.SpeechRecognitionEngine>eller <xref:System.Speech.Recognition.SpeechRecognizer>objektet genererar ett undantag om den inte kan lösa alla regeln referenser i beskrivningen grammatik.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Om `baseUri` är inte `null`, `LoadGrammar` metoden använder URI: N för att lösa alla regeln referenser som den annars inte kan lösa. Om `baseUri` representerar en fil i `LoadGrammar` använder både den avsedda fil- och filen när den försöker lösa relativa regeln referenser."
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En dataström som beskriver en speech recognition grammatik i ett format som stöds."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: baseUri
      type: System.Uri
      description: "Bas-URI att använda för att lösa alla relativa Regelreferens i beskrivningen grammatik eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan inte matchas eller inte är offentlig, eller <code>ruleName</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och beskrivning för grammatik definierar inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Dataströmmen innehåller inte en giltig beskrivning eller beskriver en grammatik som innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en instans av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, och anger namnet på en regel är startpunkten för att grammatik."
  remarks: "Parametrar för en hanterare för initiering kan också anges."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "En instans av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> som innehåller begränsningarna för speech recognition grammatik."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas till initieringen hanteraren som har angetts av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>-egenskapen för startpunkten eller rotregeln av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> skapas.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Den här parametern kan vara null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Någon av parametrarna innehåller ett ogiltigt värde.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Anges av <code> srgsDocument </code> innehåller inte den regel som anges av <code> ruleName </code>.      -Innehållet i matrisparametrar matchar inte argumenten för någon av regelns initieringen hanterare."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> objekt, anger en rotregel och definierar en grundläggande identifierare URI (Uniform Resource) för att lösa relativa regeln referenser."
  remarks: "Den här konstruktorn inte vidarebefordra alla parametrar till initieringen-hanteraren och <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>får inte innehålla en initieringen hanterare som kräver argument.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Den här konstruktorn kan inte valideras `baseUri`. Men den `LoadGrammar` metod för en <xref:System.Speech.Recognition.SpeechRecognitionEngine>eller <xref:System.Speech.Recognition.SpeechRecognizer>objektet genererar ett undantag om den inte kan lösa alla regeln referenser i beskrivningen grammatik.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Om `baseUri` är inte `null`, `LoadGrammar` metoden använder URI: N för att lösa alla regeln referenser som den annars inte kan lösa. Om `baseUri` representerar en fil i `LoadGrammar` metoden använder både den avsedda fil- och filen när den försöker lösa relativa regeln referenser."
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Begränsningarna för speech recognition grammatik."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> till Använd standardregel för roten av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
    - id: baseUri
      type: System.Uri
      description: "Bas-URI att använda för att lösa alla relativa Regelreferens i den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>kan inte matchas eller inte är offentlig, eller <code>ruleName</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och <code>srgsDocument</code> innehåller inte en rotregel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>innehåller en Regelreferens som inte kan matchas."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en fil som innehåller en definition för grammatik och anger namnet på en regel är startpunkten för att grammatiken..."
  remarks: "Parametrar för en hanterare för initiering kan också anges."
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till en fil, inklusive DLL-filer, som innehåller en grammatik-specifikation."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas till initieringen hanteraren som har angetts av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>-egenskapen för startpunkten eller rotregeln av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> skapas.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Den här parametern kan vara null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Någon av parametrarna innehåller ett ogiltigt värde.      -Filen som anges av <code> path </code> innehåller inte en giltig grammatik eller regel som angetts i <code> ruleName </code>.      -Innehållet i matrisparametrar matchar inte argumenten för någon av regelns initieringen hanterare.      -Grammatiken har en relativ Regelreferens som inte kan matchas med standard-base <xref:System.Uri>regeln för grammatik.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klassen en <xref:System.IO.Stream>och anger en rotregel och en bas-URI att matcha relativa referenser.</xref:System.IO.Stream>"
  remarks: "Parametrar för en hanterare för initiering kan också anges."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>ansluten till ett i/o-objekt (inklusive filer, VisualStudio resurser och DLL-filer) som innehåller en grammatik-specifikation.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: baseUri
      type: System.Uri
      description: "Bas-URI att använda för att lösa alla relativa Regelreferens i beskrivningen grammatik eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas till initieringen hanteraren som har angetts av den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>-egenskapen för startpunkten eller rotregeln av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> skapas.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Den här parametern kan vara null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Någon av parametrarna innehåller ett ogiltigt värde.      - <code> stream </code> Är ansluten till en grammatik som inte innehåller den regel som anges av <code> ruleName </code>.      -Innehållet i matrisparametrar matchar inte argumenten för någon av regelns initieringen hanterare.      -Grammatiken innehåller en relativ Regelreferens som inte kan matchas med standard-base <xref:System.Uri>regeln för grammatik eller URI: N som tillhandahålls av <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klass från en instans av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, och anger namnet på en regel är startpunkten för att grammatiken och en bas-URI att matcha relativa referenser."
  remarks: "Parametrar för en hanterare för initiering kan också anges."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "En instans av <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> som innehåller begränsningarna för speech recognition grammatik."
    - id: ruleName
      type: System.String
      description: "Identifierare för regeln som ska användas som startpunkt för speech recognition grammatik, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda rot Standardregeln för grammatik beskrivning."
    - id: baseUri
      type: System.Uri
      description: "Bas-URI att använda för att lösa alla relativa Regelreferens i beskrivningen grammatik eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas till initieringen hanteraren som anges av egenskapen <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>för startpunkten eller rotregeln av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ska skapas. Den här parametern kan vara null.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Någon av parametrarna innehåller ett ogiltigt värde.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Anges av <code> srgsDocument </code> innehåller inte den regel som anges i <code> ruleName </code>.      -Innehållet i matrisparametrar matchar inte argumenten för någon av regelns initieringen hanterare.      -Grammatiken har en relativ Regelreferens som inte kan matchas med standard-base <xref:System.Uri>regeln för grammatik eller URI: N som tillhandahålls av <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar eller anger ett värde som styr om en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> kan användas av en taligenkänningen för att utföra igenkänning."
  remarks: "En instans av <xref:System.Speech.Recognition.Grammar>kan aktiveras eller inaktiveras oberoende av läses in av en taligenkänningsmotor.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref> egenskapen returnerar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om en taligenkänningen kan utföra bokföring med hjälp av speech recognition grammatik; annars returnerar egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar om en grammatik starkt typbestämd."
  remarks: "En resursklass med strikt typkontroll <xref:System.Speech.Recognition.Grammar>objekt (`IsStg` är lika med `true`) kan returnera strikt typkontroll resultat (objekt, snarare än raw text) till ett klientprogram.</xref:System.Speech.Recognition.Grammar> Till exempel en strikt typad grammatik kan returnera <xref:System.DateTime>objekt i stället för raw tolkade indata.</xref:System.DateTime>       Du kan implementera strikt typkontroll grammatik genom att koppla koden till reglerna för grammatik. När en taligenkänning bearbetar en viss regel, ta som indata aktuella ofullständiga resultat, den associerade koden körs och textinformation blir omfattande objekt. På så sätt kan en klient för enklare att använda utökad semantiska kontrollerar, stöd för flera kulturer och interna grammatik logik.       Instanser av strikt typkontroll <xref:System.Speech.Recognition.Grammar>objekt erhålls vanligtvis från resurser i en sammansättning som en <xref:System.Type>av den Runtime CLR (Common Language).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Lokaliserade typer som används för att stödja olika språk är exempel på sådana <xref:System.Speech.Recognition.Grammar>objekt.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref> egenskapen returnerar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om grammatiken är strikt typkontroll; annars returnerar egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar om en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> har lästs in av en taligenkänningen."
  remarks: "När en <xref:System.Speech.Recognition.Grammar>har lästs in, värdena för <xref:System.Speech.Recognition.Grammar.Weight%2A>, och <xref:System.Speech.Recognition.Grammar.Priority%2A>kan inte ändras.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "Den <xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref> egenskapen returnerar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om refererade speech recognition grammatik är inläst i taligenkänningen; annars returnerar egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Den <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> metoden returnerar en lokaliserad instans av en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objektet härlett från <xref:System.Type>.</xref:System.Type>"
  remarks: "Lokaliserade grammatik som erhålls med `LoadLocalizedGrammarFromType` är vanligtvis strikt typkontroll (se <xref:System.Speech.Recognition.Grammar.IsStg%2A>för mer information om starkt typangivna grammatik).</xref:System.Speech.Recognition.Grammar.IsStg%2A> Om `onInitParameters` är en null-referens (Nothing i Visual Basic) den lokaliserade grammatik ska ha antingen inga initieringsmetod eller en metod som inte tar några argument."
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "I en sammansättning i <xref:System.Type>för ett objekt baserat på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>.</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "Parametrar som ska skickas till en initieringsmetod av localizedobject baserat på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Den här parametern kan vara null."
    return:
      type: System.Speech.Recognition.Grammar
      description: "Den <xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> metoden returnerar ett giltigt objekt baserat på <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det har uppstått ett fel."
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar eller anger namnet på en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> -egenskap Returnerar namnet på den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar eller anger prioritetsvärdet för en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt."
  remarks: "Den `Priority` egenskapen används för att välja en grammatik när mer än en grammatik genererar ett identiska recognition resultat. Om en taligenkänningen har mer än en speech recognition grammatik läses in och aktiverat som matchar angivna indata, och matchningen är det bästa resultat från tolken tolken och använder sedan grammatik som har det högsta `Priority`. Om grammatik som producerar resultatet identiska recognition har samma `Priority` värdet grammatik som använder tolken är odefinierad."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "Den <xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref> -egenskap returnerar ett heltalsvärde som representerar den relativa prioriteten för en specifik <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Intervallet är från-128 till och med 127. Standardvärdet är 0."
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar eller anger ett värde med namnet på en binär resurs som användes för att läsa in aktuellt <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>."
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref> -egenskap Returnerar namnet på den binära resursen som strikt typkontroll-grammatik som används av <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, har lästs in."
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar namnet på rot-regel eller post punkt i en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt."
  remarks: "Att konstruera ett <xref:System.Speech.Recognition.Grammar>objekt och ange namnet för dess rotregeln, Använd en av de <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktorer som tar den `ruleName` parameter.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Om regeln roten av en <xref:System.Speech.Recognition.Grammar>har inget namn returnerar egenskapen `null`.</xref:System.Speech.Recognition.Grammar>       Rot-reglerna för <xref:System.Speech.Recognition.Grammar>instanser som skapats från <xref:System.Speech.Recognition.GrammarBuilder>objekt har vanligtvis ingen namn så att RuleName returnerar `null`.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref> -egenskap returnerar identifieraren för rot-regel för den refererade speech recognition grammatiken. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Utlöses när en taligenkänningen utför recognition med hjälp av den <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt."
  remarks: "Taligenkänningen också genererar en `SpeechRecognized` händelse när den känner igen indata. Den <xref:System.Speech.Recognition.Grammar>objektets SpeechRecognized händelse utlöses innan taligenkänningen `SpeechRecognized` händelse.</xref:System.Speech.Recognition.Grammar> Mer information finns i <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, och <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>händelser.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       Alla uppgifter som är specifika för en viss grammatik alltid ska hanteras av hanterare för den <xref:System.Speech.Recognition.Grammar>objektets SpeechRecognized händelse.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Den <xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref> metod som initierar en strikt typad grammatik."
  remarks: "En resursklass med strikt typkontroll <xref:System.Speech.Recognition.Grammar>objekt (`IsStg` är lika med `true`) kan returnera strikt typkontroll resultat (objekt, snarare än raw text) till ett klientprogram.</xref:System.Speech.Recognition.Grammar> Till exempel en strikt typad grammatik kan returnera <xref:System.DateTime>objekt i stället för raw tolkade indata.</xref:System.DateTime>       Du kan implementera strikt typkontroll grammatik genom att koppla koden till reglerna för grammatik. När en taligenkänning bearbetar en viss regel, ta som indata aktuella ofullständiga resultat, den associerade koden körs och textinformation blir omfattande objekt. På så sätt kan en klient för enklare att använda utökad semantiska kontrollerar, stöd för flera kulturer och interna grammatik logik.       Instanser av strikt typkontroll <xref:System.Speech.Recognition.Grammar>objekt erhålls vanligtvis från resurser i en sammansättning som en <xref:System.Type>av den Runtime CLR (Common Language).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Lokaliserade typer som används för att stödja olika språk är exempel på sådana <xref:System.Speech.Recognition.Grammar>objekt.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Parametrar som ska skickas för att initiera grammatik strikt typkontroll. Den här parametern kan vara null."
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Hämtar eller anger det Viktningsvärdet på en <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> objekt."
  remarks: "Eftersom det är komplicerat för en taligenkänning användning av **vikt**, dess effekt på prestanda för en viss grammatik är inte ha direkt förutsägbart som <xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       Taligenkänning är ett viktat system. Alla möjliga recognition sökvägar baseras på en kombination av vikten för grammatik, vikterna definierad för alternativ inom grammatiken och troliga definieras av tal modeller utvärderas. Taligenkänningsmotorn används en kombination av dessa vikter och sannolikhet att rank potentiella alternativa erkännanden. Grammatik med högre vikter bidrar mer att rangordning recognition alternativ än grammatik med lägre vikter.       Egenskapen vikt inverkan på en taligenkänningen är beroende av implementeringen av tolken. Även om egenskapen vikt kan användas för att finjustera Precision för taligenkänning för ett program, ska det användas förrän du har kontrollerat diagnostiska undersökning av en viss recognition miljö och med fullständig information om taligenkänning under användning."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "Den <xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref> egenskapen returnerar ett flyttal peka värde som anger den relativa vikten som en recognition engine-instansen bör tilldelas grammatik vid bearbetning av tal som indata. Intervallet är från 0,0 till 1,0. Standardvärdet är 1.0."
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
