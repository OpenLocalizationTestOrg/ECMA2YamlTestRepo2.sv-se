### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Rfc2898DeriveBytes
  id: Rfc2898DeriveBytes
  children:
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  - System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  - System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  - System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  langs:
  - csharp
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes
  type: Class
  summary: "Implementerar lösenordsbaserade nyckeln härledning funktioner, PBKDF2, med hjälp av en pseudoslumpmässiga nummer generatorn baserat på <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>."
  remarks: "Rfc2898DeriveBytes tar ett lösenord och en salt ett iterationsantal och genererar nycklar via anrop till den <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>metoden.</xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A>       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Klassen Rfc2898DeriveBytes kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar. I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationen Version 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  example:
  - "The following code example uses the Rfc2898DeriveBytes class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/t-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/t-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/t-system.security.crypto_117_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes
  inheritance:
  - System.Object
  - System.Security.Cryptography.DeriveBytes
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DeriveBytes.Dispose
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen använder ett lösenord och salt för att härleda nyckeln."
  remarks: "Saltstorleken måste vara 8 byte eller större.       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationen Version 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/7aa0756c-8905-4e75-ae9a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/7aa0756c-8905-4e75-ae9a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/7aa0756c-8905-4e75-ae9a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt);
    parameters:
    - id: password
      type: System.String
      description: "Det lösenord som används för att härleda nyckeln."
    - id: salt
      type: System.Byte[]
      description: "Nyckelns salt som används för att härleda nyckeln."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte eller antalet iterationer är mindre än 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lösenordet eller salt är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen använder lösenord och saltstorleken för att härleda nyckeln."
  remarks: "Saltstorleken måste vara 8 byte eller större.       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationen Version 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize);
    parameters:
    - id: password
      type: System.String
      description: "Det lösenord som används för att härleda nyckeln."
    - id: saltSize
      type: System.Int32
      description: "Storleken på slumpmässiga salt som du vill att skapa klassen."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lösenordet eller salt är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen med ett lösenord, salt och antalet upprepningar för att härleda nyckeln."
  remarks: "Saltstorleken måste vara 8 byte eller större och iterationsantal måste vara större än noll. Det minsta rekommenderade antalet iterationer är 1000.       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationen Version 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.Byte[]
      description: "Det lösenord som används för att härleda nyckeln."
    - id: salt
      type: System.Byte[]
      description: "Nyckelns salt som används för att härleda nyckeln."
    - id: iterations
      type: System.Int32
      description: "Antalet upprepningar som krävs för åtgärden."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte eller antalet iterationer är mindre än 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lösenordet eller salt är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen med ett lösenord, salt och antalet upprepningar för att härleda nyckeln."
  remarks: "Saltstorleken måste vara 8 byte eller större och iterationsantal måste vara större än noll. Det minsta rekommenderade antalet iterationer är 1000.       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationen Version 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.  It then encrypts and decrypts some data using the keys.  \n  \n [!code-cs[rfc28981#1](~/add/codesnippet/csharp/8b79aa42-3b6a-4a39-985a-_1.cs)]\n [!code-vb[rfc28981#1](~/add/codesnippet/visualbasic/8b79aa42-3b6a-4a39-985a-_1.vb)]\n [!code-cpp[rfc28981#1](~/add/codesnippet/cpp/8b79aa42-3b6a-4a39-985a-_1.cpp)]"
  syntax:
    content: public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Det lösenord som används för att härleda nyckeln."
    - id: salt
      type: System.Byte[]
      description: "Nyckelns salt som används för att härleda nyckeln."
    - id: iterations
      type: System.Int32
      description: "Antalet upprepningar som krävs för åtgärden."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte eller antalet iterationer är mindre än 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lösenordet eller salt är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen med ett lösenord, en saltstorleken och antalet upprepningar för att härleda nyckeln."
  remarks: "Saltstorleken måste vara 8 byte eller större och iterationsantal måste vara större än noll. Det minsta rekommenderade antalet iterationer är 1000.       RFC 2898 innehåller metoder för att skapa en nyckel och initiering vector (IV) från ett lösenord och salt. Du kan använda PBKDF2, en lösenordsbaserad nyckelhärledning funktion för att härleda nycklar med hjälp av en startvärden funktion som gör att nycklar med nästan obegränsad längd ska genereras. Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen kan användas för att skapa en härledd nyckel från en grundläggande nyckel och andra parametrar.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> I en funktion för lösenordsbaserad nyckelhärledning grundläggande nyckeln är ett lösenord och andra parametrar är ett salt värde och ett iterationsantal.       Mer information om PBKDF2 finns i RFC 2898 &quot;PKCS #5: lösenordsbaserade kryptografi-specifikationsversion 2.0&quot; finns på den [kommentarer webbplatsen Request for](http://go.microsoft.com/fwlink/?LinkID=37119). Fullständig information finns i avsnittet 5.2, &quot;PBKDF2&quot;.      > [!IMPORTANT] > Aldrig hårdkoda ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), med hjälp av en hexadecimal redigerare eller genom att helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  syntax:
    content: public Rfc2898DeriveBytes (string password, int saltSize, int iterations);
    parameters:
    - id: password
      type: System.String
      description: "Det lösenord som används för att härleda nyckeln."
    - id: saltSize
      type: System.Int32
      description: "Storleken på slumpmässiga salt som du vill att skapa klassen."
    - id: iterations
      type: System.Int32
      description: "Antalet upprepningar som krävs för åtgärden."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte eller antalet iterationer är mindre än 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Lösenordet eller salt är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>iterations </code>ligger utanför intervallet. Den här parametern kräver ett icke-negativt tal."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  id: CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar en krypteringsnyckel från den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> objekt."
  remarks: "Den här funktionen är en Omslutning för Crypto API-funktionen CryptDeriveKey() och är avsett att erbjuda samverkan med program med hjälp av Crypto API.       Om den `keySize` parametern anges till 0-bitar, standard nyckelstorleken för den angivna algoritmen används."
  syntax:
    content: public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);
    parameters:
    - id: algname
      type: System.String
      description: "Algoritmnamnet som du vill att härleda nyckeln."
    - id: alghashname
      type: System.String
      description: "Hash-algoritmens namn du använder för att härleda nyckeln."
    - id: keySize
      type: System.Int32
      description: "Storleken på nyckeln i bitar, att härleda."
    - id: rgbIV
      type: System.Byte[]
      description: "Initieringsvektorn (IV) du använder för att härleda nyckeln."
    return:
      type: System.Byte[]
      description: "Den härledda nyckeln."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Den <code> keySize </code> parametern är felaktig.       - eller - det går inte att hämta kryptografiprovider (CSP).       - eller - <code> algname </code> parametern är inte en giltig Algoritmnamn.       - eller - <code> alghashname </code> parametern är inte en giltig hash-algoritmens namn."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Security.Cryptography.Rfc2898DeriveBytes&quot;> </xref> klassen och eventuellt släpper hanterade resurser."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och `Finalize` metod. `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. `Finalize`anropar `Dispose` med `disposing` inställd på `false`.       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Security.Cryptography.Rfc2898DeriveBytes>referenser.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Returnerar den pseudoslumpmässiga nyckeln för det här objektet."
  remarks: "<xref:System.Security.Cryptography.Rfc2898DeriveBytes>Klassen implementerar PBKDF2 funktioner med hjälp av en pseudoslumpvisa nummer generator baserat på <xref:System.Security.Cryptography.HMACSHA1>.</xref:System.Security.Cryptography.HMACSHA1> </xref:System.Security.Cryptography.Rfc2898DeriveBytes> Den <xref:System.Security.Cryptography.Rfc2898DeriveBytes>klassen tar ett lösenord och en salt ett iterationsantal och genererar nycklar via anrop till metoden GetBytes.</xref:System.Security.Cryptography.Rfc2898DeriveBytes> Upprepade anrop till den här metoden kommer inte att generera nyckeln samma. i stället lägga till två anrop av GetBytes-metoden med en `cb` parametervärdet `20` motsvarar GetBytes-metoden anropas en gång med en `cb` parametervärdet `40`."
  example:
  - "The following example shows how to use the GetBytes method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#2](~/add/codesnippet/csharp/m-system.security.crypto_127_1.cs)]\n [!code-vb[rfc28981#2](~/add/codesnippet/visualbasic/m-system.security.crypto_127_1.vb)]\n [!code-cpp[rfc28981#2](~/add/codesnippet/cpp/m-system.security.crypto_127_1.cpp)]"
  syntax:
    content: public override byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Antal startvärden viktiga byte ska genereras."
    return:
      type: System.Byte[]
      description: "En bytematris fylls med startvärden viktiga byte."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>cb </code>ligger utanför intervallet. Den här parametern kräver ett icke-negativt tal."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  id: IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar eller anger antalet upprepningar som krävs för åtgärden."
  remarks: "Iterationsantal är antalet gånger som en åtgärd utförs. Antalet för den här metoden bör vara större än noll. Det minsta rekommenderade antalet iterationer är 1000."
  example:
  - "The following example shows how to use the IterationCount property to display the number of iterations used in the generation of the key. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#3](~/add/codesnippet/csharp/p-system.security.crypto_117_1.cs)]\n [!code-vb[rfc28981#3](~/add/codesnippet/visualbasic/p-system.security.crypto_117_1.vb)]\n [!code-cpp[rfc28981#3](~/add/codesnippet/cpp/p-system.security.crypto_117_1.cpp)]"
  syntax:
    content: public int IterationCount { get; set; }
    return:
      type: System.Int32
      description: "Antalet upprepningar som krävs för åtgärden."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Antalet iterationer är mindre än 1."
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Återställer tillståndet för åtgärden."
  remarks: "Den här metoden anropas automatiskt om antalet salt eller iteration ändras."
  example:
  - "The following example shows how to use the Reset method. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.  \n  \n [!code-cs[rfc28981#5](~/add/codesnippet/csharp/m-system.security.crypto_26_1.cs)]\n [!code-vb[rfc28981#5](~/add/codesnippet/visualbasic/m-system.security.crypto_26_1.vb)]\n [!code-cpp[rfc28981#5](~/add/codesnippet/cpp/m-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  id: Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  langs:
  - csharp
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar eller anger värdet för nyckeln salt för åtgärden."
  remarks: "Salt, en slumpmässig uppsättning byte som används för att obehöriga dekryptering av ett meddelande som är svårare. En ordlisteattack är en attack där angripare försöker att avkryptera ett krypterat meddelande genom att jämföra det krypterade värdet med tidigare beräknade krypterade värden för de mest sannolika nycklarna. Det här angreppet görs mycket svårare genom införandet av salt eller slumpmässiga byte i slutet av lösenord innan nyckelhärledning."
  syntax:
    content: public byte[] Salt { get; set; }
    return:
      type: System.Byte[]
      description: "Salt nyckelvärdet för åtgärden."
  overload: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna saltstorleken är mindre än 8 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Saltet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: System.Security.Cryptography.DeriveBytes
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[])
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(Byte[],Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Byte[],Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Byte[],Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes(String,Int32,Int32)
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Rfc2898DeriveBytes(String,Int32,Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey(String,String,Int32,Byte[])
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Rfc2898DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: Rfc2898DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(Int32)
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: Rfc2898DeriveBytes.Reset()
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Reset()
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
  fullName: System.Security.Cryptography.Rfc2898DeriveBytes.Salt
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.#ctor*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Rfc2898DeriveBytes
  nameWithType: Rfc2898DeriveBytes.Rfc2898DeriveBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: CryptDeriveKey
  nameWithType: Rfc2898DeriveBytes.CryptDeriveKey
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Dispose*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: Rfc2898DeriveBytes.Dispose
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: Rfc2898DeriveBytes.GetBytes
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: IterationCount
  nameWithType: Rfc2898DeriveBytes.IterationCount
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Reset*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: Rfc2898DeriveBytes.Reset
- uid: System.Security.Cryptography.Rfc2898DeriveBytes.Salt*
  parent: System.Security.Cryptography.Rfc2898DeriveBytes
  isExternal: false
  name: Salt
  nameWithType: Rfc2898DeriveBytes.Salt
