### YamlMime:ManagedReference
items:
- uid: System.StackOverflowException
  id: StackOverflowException
  children:
  - System.StackOverflowException.#ctor
  - System.StackOverflowException.#ctor(System.String)
  - System.StackOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: StackOverflowException
  nameWithType: StackOverflowException
  fullName: System.StackOverflowException
  type: Class
  summary: "Undantag som utlöses när stacken flödar över eftersom den innehåller för många kapslade metodanrop. Den här klassen kan inte ärvas."
  remarks: "StackOverflowException genereras för körning dataspillsfel, vanligtvis vid mycket djup eller unbounded rekursion.       StackOverflowException använder HRESULT COR_E_STACKOVERFLOW, som har värdet 0x800703E9. Den <xref:System.Reflection.Emit.OpCodes.Localloc>instruktion i mellanliggande språk (IL) utlöser StackOverflowException.</xref:System.Reflection.Emit.OpCodes.Localloc> En lista över inledande egenskapsvärden för en StackOverflowException objekt, finns det <xref:System.StackOverflowException.%23ctor%2A>konstruktorer.</xref:System.StackOverflowException.%23ctor%2A>      ## Version överväganden i .NET Framework 1.0- och 1.1, kan du fånga ett StackOverflowException-objekt (till exempel att återställa från unbounded rekursion). Från och med .NET Framework 2.0, kan du fånga ett StackOverflowException-objekt med en `try` / `catch` block och motsvarande processen avslutas som standard. Därför bör du skriva koden för att upptäcka och förhindra stackspill. Till exempel om din app är beroende av rekursion, använda en räknare eller ett tillstånd villkor för att avsluta slingan rekursiv. I följande exempel används en räknare för att säkerställa att Antal rekursiva anrop till den `Execute` metoden inte överskrider maximalt definieras av MAX_RECURSIVE_CALLS konstant.       [!code-vb[System.StackOverflowException.Class#1](~/add/codesnippet/visualbasic/t-system.stackoverflowex_1.vb)][!code-cs[System.StackOverflowException.Class#1](~/add/codesnippet/csharp/t-system.stackoverflowex_1.cs) ]       >  [!NOTE] > använder den <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>attributet i en metod som genererar en StackOverflowException har ingen effekt.</xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>   Du kan fortfarande hantera undantag från användarkod.       Om din app är värd för common language runtime (CLR), kan det ange att CLR bör ta bort programdomänen där dataspillsundantag inträffar och att motsvarande processen fortsätter. Mer information finns i [ICLRPolicyManager gränssnittet](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StackOverflowException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor
  id: '#ctor'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klass, ställa in <xref:System.Exception.Message*>egenskapen för den nya instansen till en tillhandahålls av systemet meddelande som anger vilket fel som &quot;den begärda åtgärden orsakade stackspill.&quot;</xref:System.Exception.Message*> Det här meddelandet tar hänsyn till den aktuella systemkulturen."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för en instans av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Värdet |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Den lokaliserade felsträngen meddelande. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException ();
    parameters: []
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klass med ett angivet meddelande."
  remarks: "I följande tabell visas de inledande egenskapsvärdena för en instans av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Värdet |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| En null-referens (`Nothing` i Visual Basic). |   | <xref:System.Exception.Message%2A>| Meddelandet felsträng. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "En <xref:System.String>som beskriver felet.</xref:System.String> Innehållet i meddelandet ska tolkas av människor. Anroparen av den här konstruktorn är behövs för att säkerställa att den här strängen lokaliserade för den aktuella systemkulturen."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.StackOverflowException&quot;> </xref> klass med ett angivet meddelande och en referens till det interna undantaget som är orsaken till det här undantaget."
  remarks: "Ett undantag som utlöses när ett direkt resultat av ett tidigare undantag kan innehålla en referens till det tidigare undantaget i den <xref:System.Exception.InnerException%2A>egenskapen.</xref:System.Exception.InnerException%2A> Den <xref:System.Exception.InnerException%2A>-egenskap returnerar samma värde som överförs till konstruktorn eller en null-referens (`Nothing` i Visual Basic) om den <xref:System.Exception.InnerException%2A>egenskapen tillhandahåller inte värdet i det interna undantaget för konstruktorn.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       I följande tabell visas de inledande egenskapsvärdena för en instans av <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Egenskapen | Värdet |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Referens för inre undantag. |   | <xref:System.Exception.Message%2A>| Meddelandet felsträng. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Felmeddelandet som förklarar orsaken till undantaget."
    - id: innerException
      type: System.Exception
      description: "Undantag som är orsaken till det aktuella undantaget. Om den `innerException` parametern är inte en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic), det aktuella undantaget utlöses i en <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> block som hanterar det interna undantaget."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.StackOverflowException.#ctor
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
- uid: System.StackOverflowException.#ctor(System.String)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.StackOverflowException.#ctor*
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException
  nameWithType: StackOverflowException.StackOverflowException
