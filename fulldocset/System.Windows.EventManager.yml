### YamlMime:ManagedReference
items:
- uid: System.Windows.EventManager
  id: EventManager
  children:
  - System.Windows.EventManager.GetRoutedEvents
  - System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  langs:
  - csharp
  name: EventManager
  nameWithType: EventManager
  fullName: System.Windows.EventManager
  type: Class
  summary: "Ger händelse-relaterade metoder som registrera dirigerade händelser för klassen ägare och lägga till klasshanterare."
  remarks: "Den här klassen används oftast för att registrera en ny routade händelse med <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>       De flesta andra vanliga [!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)] användningen är <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Du kan använda den här metoden för att aktivera klassen hantering av en routade händelse på klassen eller en bifogad händelse. Mer information finns i [märkning dirigerade händelser som hanterade och hantering av klassen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example show how to use this class to register a new routed event as a class member, along with the routed event \"wrapper\" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event.  \n  \n [!code-cs[DPCustom#EventManagerClass](~/add/codesnippet/csharp/DPCustom/default.xaml.cs#eventmanagerclass)]\n [!code-vb[DPCustom#EventManagerClass](~/add/codesnippet/visualbasic/dpcustom/default.xaml.vb#eventmanagerclass)]"
  syntax:
    content: public static class EventManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEvents
  id: GetRoutedEvents
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar identifierare för dirigerade händelser som har registrerats i händelse-systemet."
  remarks: "Flera <xref:System.Windows.RoutedEvent>objekt kan registreras senare.</xref:System.Windows.RoutedEvent> Den här metoden hämtar en ögonblicksbild och mängden dirigerade händelser är skrivbar under hela livslängden för ett program. Den samling som returnerade kan vara ganska stor. Även om bara räknat de händelser som är en del av den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)], samling returneras på hög hundratals."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEvents ();
    parameters: []
    return:
      type: System.Windows.RoutedEvent[]
      description: "En matris av typen <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> som innehåller de registrerade objekt."
  overload: System.Windows.EventManager.GetRoutedEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  id: GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Söker efter alla routade Händelseidentifierare för händelser som har registrerats med den angivna ägare-typen."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Starta sökningen med typ. Basklasser ingår i sökningen."
    return:
      type: System.Windows.RoutedEvent[]
      description: "En matris med matchande dirigeras Händelseidentifierare om en matchning hittas. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.EventManager.GetRoutedEventsForOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerar en klass hanterare för en viss routade händelse."
  remarks: "Klassen är en funktion som är tillgänglig för dirigerade händelser, inklusive bifogade händelser som implementeras med routade händelse säkerhetskopiering. En klass hanterare påminner om en statisk hanterare som finns för alla instanser av klassen. Eftersom hanteraren är statisk, du kan inte ändra instans egenskaper direkt med en hanterare för klass, men du kan komma åt instanser via den `sender` parameter och/eller informationen om händelsen.       Klasshanterare anropas innan instansen hanterare. Du kan implementera en klass hanterare som har beteendet för Markera händelsen som hanteras. Därför anropas instans hanterare för en klass hanteras inte om instansen hanterare registrerar specifikt för hanterade händelser.       Många av de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] baselementet händelser ger klassen som hanterar virtuella metoder. Du kan implementera klassen hantering utan att anropa RegisterClassHandler i statiska konstruktörer genom att åsidosätta dessa metoder i klasser som ärver basklasserna. Dessa metoder för hantering av klassen vanligtvis finns för inkommande händelser och har namn som börjar med &quot;On&quot; och slutar med namnet på händelsen som klass som hanteras.       Läs mer om hantering av klassen [märkning dirigerade händelser som hanterade och hantering av klassen](~/add/includes/ajax-current-ext-md.md).       Med den här signaturen registreras klasshanterare för att anropa endast som svar på händelser som inte hanteras. Du kan också registrera klasshanterare att anropa även om händelseargument markeras hanterade, med hjälp av den <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>signatur, med `handledEventsToo` inställd på `true`.</xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>"
  example:
  - "The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling RegisterClassHandler.  \n  \n [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#staticandregisterclasshandler)]\n [!code-cs[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]"
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: classType
      type: System.Type
      description: "Typ av den klass som deklarera klassen hantering."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Händelsen för att hantera routade händelse-ID."
    - id: handler
      type: System.Delegate
      description: "En referens till klassen hanterare implementering."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerar en klass hanterare för en viss routade händelse med alternativet för att hantera händelser där händelsedata markeras redan hanteras."
  remarks: "Klassen är en funktion som är tillgänglig för dirigerade händelser, inklusive bifogade händelser som implementeras med routade händelse säkerhetskopiering. En klass hanterare påminner om en statisk hanterare som finns för alla instanser av klassen. Eftersom hanteraren är statisk, du kan inte ändra instans egenskaper direkt med en hanterare för klass, men du kan komma åt instanser via den `sender` parameter och/eller informationen om händelsen.       Klasshanterare anropas innan instansen hanterare. Du kan implementera en klass hanterare som har beteendet för Markera händelsen som hanteras. Därför anropas instans hanterare för en klass hanteras inte om instansen hanterare registrerar specifikt för hanterade händelser.       Många av de [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] baselementet händelser ger klassen som hanterar virtuella metoder. Du kan implementera klassen som hanterar utan anropar genom att åsidosätta dessa metoder i klasser som ärver basklasserna <xref:System.Windows.EventManager.RegisterClassHandler%2A>i statiska konstruktorer.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Dessa metoder för hantering av klassen vanligtvis finns för inkommande händelser och har namn som börjar med &quot;On&quot; och slutar med namnet på händelsen som klass som hanteras.       Läs mer om hantering av klassen [märkning dirigerade händelser som hanterade och hantering av klassen](~/add/includes/ajax-current-ext-md.md).       Med den här signaturen klasshanterare kan registreras för att anropa på hanterade händelser genom att ange `handledEventsToo` inställd på `true`. Du bör i allmänhet kan göra detta endast om det är ett känt hantering problem som du försöker lösa, till exempel inkommande system som hanterar från musen eller tangentbordet händelser."
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: classType
      type: System.Type
      description: "Typ av den klass som deklarera klassen hantering."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Händelsen för att hantera routade händelse-ID."
    - id: handler
      type: System.Delegate
      description: "En referens till klassen hanterare implementering."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att anropa den här klassen hanteraren även om argument för händelsen routade har markerats som hanteras; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> behålla standardbeteendet för inte anropar hanteraren på alla händelser som markerats hanteras."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  id: RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Registrerar en ny routade händelse med det [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] händelse system."
  remarks: "Använda returvärdet för den här metoden för att skapa statiska deklarationen för ett unikt <xref:System.Windows.RoutedEvent>identifierare.</xref:System.Windows.RoutedEvent> Det här fältet bör lagras i Ägartypen.       Det finns ett stort antal konventioner och bästa praxis som är associerade med hur dirigerade händelser ska med namnet, registrerad och visas i en klass. Mer information finns i [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den omdirigerade händelsen. Namnet måste vara unika inom Ägartypen och får inte vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng."
    - id: routingStrategy
      type: System.Windows.RoutingStrategy
      description: "Routningsstrategi för händelsen som ett värde för uppräkningen."
    - id: handlerType
      type: System.Type
      description: "Typen av händelsehanterare. Det måste vara en delegeringstyp och får inte vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: ownerType
      type: System.Type
      description: "Klasstyp ägare av routade händelsen. Detta kan inte vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.RoutedEvent
      description: "Identifierare för nyregistrerade routade händelsen. Detta ID-objekt kan nu vara lagras som ett statiskt fält i en klass och används sedan som en parameter för metoder som kopplar hanterare för händelsen. Routade Händelseidentifieraren används också för andra händelsen [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]."
  overload: System.Windows.EventManager.RegisterRoutedEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventManager.GetRoutedEvents
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
- uid: System.Windows.RoutedEvent[]
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent[]
  spec.csharp:
  - uid: System.Windows.RoutedEvent
    name: RoutedEvent
    nameWithType: RoutedEvent
    fullName: RoutedEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.EventManager.GetRoutedEvents*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents
  nameWithType: EventManager.GetRoutedEvents
- uid: System.Windows.EventManager.GetRoutedEventsForOwner*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner
  nameWithType: EventManager.GetRoutedEventsForOwner
- uid: System.Windows.EventManager.RegisterClassHandler*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler
  nameWithType: EventManager.RegisterClassHandler
- uid: System.Windows.EventManager.RegisterRoutedEvent*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent
  nameWithType: EventManager.RegisterRoutedEvent
