### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "Representerar inställningar som används av klienten för att validera certifikatet som presenterades av tjänsten med hjälp av SSL-autentisering. Det innehåller även alla certifikat för tjänsten som uttryckligen har konfigurerats på klienten ska användas för att kryptera meddelanden till tjänsten med hjälp av meddelandesäkerhet."
  remarks: "Den här klassen används av <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>egenskap i <xref:System.ServiceModel.Description.ClientCredentials>klassen.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar inställningar som används för att verifiera servercertifikatet erhållits med SSL-autentisering."
  remarks: "Den <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>klassen representerar inställningarna som används av klienten proxy för att autentisera tjänstcertifikat som hämtas med hjälp av SSL/TLS-förhandlingen.</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "Inställningar som används för att verifiera servercertifikatet erhållits med SSL-autentisering."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar eller anger det standardcertifikatet som ska användas för tjänsten."
  remarks: "Det här certifikatet används för att kryptera meddelanden till tjänsten för bindningar som använder certifikatbaserade meddelandesäkerhet och förväntas användas av tjänsten för att signera svar till klienten."
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Standardcertifikat ska användas för tjänsten."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar begränsade certifikat som ska användas för att representera den tjänst som klienten kommunicerar med."
  remarks: "Den här egenskapen gör att klienten kan konfigurera service-certifikat som ska användas baserat på URL: en för den kommunicerar med tjänsten. Detta är särskilt användbart i utfärdade token scenarier där en klient kommunicerar för flera tjänster (den klienttjänsten samt mellanliggande token säkerhetstjänster). Det här certifikatet för bindningar som använder certifikatbaserade meddelandesäkerhet används för att kryptera meddelanden till tjänsten och förväntas användas av tjänsten för att signera svar till klienten.       Om en bindning kräver ett certifikat för tjänsten och finns inga specifika certifikat för tjänstens Webbadress i den `ScopedCertificates`, standardcertifikatet används."
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Begränsade certifikat som ska användas för att representera den tjänst som klienten kommunicerar med."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Anger standardcertifikat ska användas för tjänsten. Det här certifikatet används för att kryptera meddelanden till tjänsten för bindningar som använder certifikatbaserade meddelandesäkerhet och förväntas användas av tjänsten för att signera svar till klienten."
  remarks: "Den här metoden hämtar ett certifikat från arkivet på den angivna platsen som matchar den `subjectName` parameter.       Värden för `storeLocation` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>uppräkningen:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet tilldelat till den lokala datorn.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet som används av den aktuella användaren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Om programmet körs under ett konto för system, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Om programmet körs under ett användarkonto, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Värden för `storeName` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreName>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "Det unika ämnesnamnet."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Platsen för certifikatarkivet som tjänsten använder för att hämta Tjänstcertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Namnet på X.509-certifikatet lagra för att öppna."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Anger standardcertifikat ska användas för tjänsten. Det här certifikatet används för att kryptera meddelanden till tjänsten för bindningar som använder certifikatbaserade meddelandesäkerhet och förväntas användas av tjänsten för att signera svar till klienten."
  remarks: "Den här metoden hämtar ett certifikat från arkivet på den angivna platsen som matchar den `findType` och `findValue` parametrar.       Värden för `storeLocation` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>uppräkningen:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet tilldelat till den lokala datorn.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet som används av den aktuella användaren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Om programmet körs under ett konto för system, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Om programmet körs under ett användarkonto, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Värden för `storeName` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreName>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Värden för `findType` ingår i den <xref:System.Security.Cryptography.X509Certificates.X509FindType>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       De vanligaste uppräkningen är <xref:System.Security.Cryptography.X509Certificates.X509FindType>, som har en skiftlägesoberoende sökning efter certifikat i arkivet angivna ämnesnamn.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Detta kan vara en inexakt sökning. Om inga certifikat eller flera certifikat som matchar villkoren som påträffas, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException>"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Platsen för certifikatarkivet tjänsten använder för att hämta Tjänstcertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Namnet på X.509-certifikatet lagra för att öppna."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typ av X.509-sökning för att köras."
    - id: findValue
      type: System.Object
      description: "Värde att söka efter i arkivet för X.509-certifikat."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Anger ett certifikat genom ämnesnamn, certifikat-lagringsplatsen och Certifikatarkivets namn och lagrar den i en samling som ska användas för den URL som anger omfånget."
  remarks: "Värden för `storeLocation` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>uppräkningen:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet tilldelat till den lokala datorn.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet som används av den aktuella användaren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Om programmet körs under ett konto för system, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Om programmet körs under ett användarkonto, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Värden för `storeName` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreName>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "Fullständigt kvalificerat ämnesnamnet."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Platsen för certifikatarkivet som tjänsten använder för att hämta Tjänstcertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Namnet på X.509-certifikatet lagra för att öppna."
    - id: targetService
      type: System.Uri
      description: "Den URL som anger omfånget."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Anger en lagringsplats för certifikat med certifikat, Certifikatarkivets namn, typ av X.509-sökningen och värde att söka efter och lagrar den i en samling som ska användas för den URL som anger omfånget."
  remarks: "Värden för `storeLocation` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreLocation>uppräkningen:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet tilldelat till den lokala datorn.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: certifikatarkivet som används av den aktuella användaren (standard).</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Om programmet körs under ett konto för system, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> Om programmet körs under ett användarkonto, sedan är certifikatet vanligtvis <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       Värden för `storeName` ingår i den <xref:System.Security.Cryptography.X509Certificates.StoreName>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.StoreName>       Värden för `findType` ingår i den <xref:System.Security.Cryptography.X509Certificates.X509FindType>uppräkningen.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       De vanligaste uppräkningen är <xref:System.Security.Cryptography.X509Certificates.X509FindType>, som har en skiftlägesoberoende sökning efter certifikat i arkivet angivna ämnesnamn.</xref:System.Security.Cryptography.X509Certificates.X509FindType> Detta kan vara en inexakt sökning. Om inga certifikat eller flera certifikat som matchar villkoren som påträffas, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException>"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "Platsen för certifikatarkivet som tjänsten använder för att hämta Tjänstcertifikatet."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "Namnet på X.509-certifikatet lagra för att öppna."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Typ av X.509-sökning för att köras."
    - id: findValue
      type: System.Object
      description: "Värde att söka efter i arkivet för X.509-certifikat."
    - id: targetService
      type: System.Uri
      description: "Den URL som anger omfånget."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Försökte ange när autentiseringen är skrivskyddad."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar eller anger verifieraren för SSL-certifikat ska användas."
  remarks: "Den här egenskapen kan du använda X509CertificateValidator i WCF för att validera ett certifikat på en WCF-klient."
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "En <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref> instans."
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
