### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  id: DoubleAnimationUsingPath
  children:
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  langs:
  - csharp
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
  type: Class
  summary: "Animeras värdet för en <xref:System.Double>egenskapen mellan två eller flera värden med hjälp av en <xref href=&quot;System.Windows.Media.PathGeometry&quot;> </xref> att ange dessa värden.</xref:System.Double> Den här animeringen kan användas för att flytta ett visuellt objekt längs en sökväg."
  remarks: "DoubleAnimationUsingPath använder linjär interpolerade över en angiven <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A>       DoubleAnimationUsingPath liknar <xref:System.Windows.Media.Animation.DoubleAnimation>förutom att den använder en <xref:System.Windows.Media.PathGeometry>till interpolera över två eller flera värden snarare sedan mellan två värden som <xref:System.Windows.Media.Animation.DoubleAnimation>.</xref:System.Windows.Media.Animation.DoubleAnimation> </xref:System.Windows.Media.PathGeometry> </xref:System.Windows.Media.Animation.DoubleAnimation> Även om <xref:System.Windows.Media.Animation.DoubleAnimation>används för de flesta enkla animeringar som innefattar ett Double-värde, DoubleAnimationUsingPath är särskilt lämplig för animera positionen för ett objekt på skärmen.</xref:System.Windows.Media.Animation.DoubleAnimation>"
  syntax:
    content: 'public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.DoubleAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref> klass."
  remarks: "Det finns inget standardvärde <xref:System.Windows.Media.PathGeometry>så att användaren måste ange en.</xref:System.Windows.Media.PathGeometry>"
  syntax:
    content: public DoubleAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Skapar en ändringsbar kloning av detta <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>, att göra djup kopior av värden för det här objektet. När du kopierar beroendeegenskaper kopierar resurs referenser och data Bindningar (men de inte längre kan lösa) men inte animeringar eller deras aktuella värden."
  remarks: "Den här metoden används för att skapa ändringsbar kopior av fryst <xref:System.Windows.Freezable>objekt (eller någon <xref:System.Windows.Freezable>objekt).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Den här metoden skuggar ärvda version med strikt typkontroll implementering för enkelhetens skull.       Mer information finns i <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.DoubleAnimationUsingPath
      description: "En ändringsbar kloning av det aktuella objektet. Det klonade objektet <> </> *> egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> även om källans <> </> *> egenskapen var<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Implementering av <xref:System.Windows.Freezable.CreateInstanceCore*>.</xref:System.Windows.Freezable.CreateInstanceCore*>"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Den nya <xref href=&quot;System.Windows.Freezable&quot;> </xref> skapas."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Beräknar ett värde som representerar det aktuella värdet för den egenskap som animeras utifrån den <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>."
  remarks: "Om den `defaultOriginValue` är först i kedjan sammansättning värdet anges värdet ögonblicksbild (om en sådan finns) eller grundläggande egenskapsvärdet; annars det här värdet kommer att värdet som returneras av den föregående animeringen i kedjan med en <xref:System.Windows.Media.Animation.AnimationClock>inte <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       Den `defaultDestinationValue` är det grundläggande värdet om animeringen finns i det första lagret sammansättning på animeringarna i en egenskap; annars utdatavärde från det föregående sammansättning säkerhetslagret animeringar för egenskapen anges."
  syntax:
    content: protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Double
      description: "Det föreslagna ursprungsvärde som används om animeringen inte har sin egen explicit inställd startvärdet."
    - id: defaultDestinationValue
      type: System.Double
      description: "Det föreslagna mål-värde som används om animeringen inte har sin egen explicit inställd avslutas värde."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "En <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> som genererar den <> </> *> eller <> </> *> används av animeringen."
    return:
      type: System.Double
      description: "Det beräknade värdet för egenskapen, enligt systemets aktuella animeringen."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Hämtar eller anger ett värde som anger om aktuella värdet för egenskapen target ska läggas till den här animeringen startvärdet."
  remarks: "<a name=&quot;dependencyPropertyInfo_Additive&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|   | Metadata egenskaperna `true`| Ingen |      > [!NOTE] > Denna beroendeegenskap är ovanligt att fältet ID för den kommer från <xref:System.Windows.Media.Animation.AnimationTimeline>, och delas av olika härledda klasser.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen target datorns aktuella ska värde läggas till den här animeringen startvärdet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Hämtar eller anger ett värde som anger om den animering värdet ackumuleras när upprepas."
  remarks: "När den här egenskapen har angetts `true`, animeringen utdata från värden ackumuleras endast när animeringen <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>egenskapen gör att den Upprepa varaktigheten enkla.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> Dess värden inte ackumuleras när den startas om eftersom dess överordnade upprepad eller eftersom dess klocka startades om från en <xref:System.Windows.Media.Animation.ClockController.Begin%2A>anropa.</xref:System.Windows.Media.Animation.ClockController.Begin%2A>      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   | Metadata egenskaperna `true`| Ingen |      > [!NOTE] > Denna beroendeegenskap är ovanligt att fältet ID för den kommer från <xref:System.Windows.Media.Animation.AnimationTimeline>, och delas av olika härledda klasser.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om animeringen ackumulerar dess värden när dess <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>egenskapen gör att den Upprepa varaktigheten enkla.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Anropas när detta <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref> ändras."
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Anger den geometri som används för att skapa den här animeringen utdatavärden."
  remarks: "I [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], du kan använda en särskild förkortade syntax för att beskriva sökvägen.       [!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)][!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml) ] Läs mer om PathGeometry markup syntax [Markup sökvägssyntaxen](~/add/includes/ajax-current-ext-md.md).   Fler exempel på hur du skapar en sökväg med markeringar eller kod finns <xref:System.Windows.Media.PathGeometry>.</xref:System.Windows.Media.PathGeometry>      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "Sökvägen som används för att generera animeringen utdata från värden. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifierar den <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>beroendeegenskap.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  id: Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Hämtar eller anger aspekt av den här animeringen <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>som avgör utdatavärdet.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  remarks: "<a name=&quot;dependencyPropertyInfo_Source&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>"
  syntax:
    content: public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }
    return:
      type: System.Windows.Media.Animation.PathAnimationSource
      description: "Aspekt av den här animeringen <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>som avgör utdatavärdet.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> Standardvärdet är <xref href=&quot;System.Windows.Media.Animation.PathAnimationSource&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  id: SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifierar den <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>beroendeegenskap.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SourceProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.DoubleAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.DoubleAnimationBase
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
- uid: System.Windows.Media.Animation.PathAnimationSource
  parent: System.Windows.Media.Animation
  isExternal: false
  name: PathAnimationSource
  nameWithType: PathAnimationSource
  fullName: System.Windows.Media.Animation.PathAnimationSource
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: DoubleAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: DoubleAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
