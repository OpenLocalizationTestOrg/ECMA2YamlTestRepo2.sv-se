### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  id: DataGridViewCellParsingEventArgs
  children:
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
  type: Class
  summary: "Tillhandahåller data för den <xref href=&quot;System.Windows.Forms.DataGridView.CellParsing&quot;> </xref> händelsen för en <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> kontroll."
  remarks: "Hantera den <xref:System.Windows.Forms.DataGridView.CellParsing>händelsen för att ange anpassat värde konverteringen från ett användardefinierat värde till ett värde i typen som anges i cellen <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>egenskap.</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.DataGridView.CellParsing>       När du hanterar den <xref:System.Windows.Forms.DataGridView.CellParsing>händelse, kan du konvertera värdet själv eller så kan du anpassa standard konverteringen.</xref:System.Windows.Forms.DataGridView.CellParsing> T.ex, du kan konvertera värdet själv med hjälp av cellen <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>metod med typ konverterare du väljer.</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> Alternativt kan du låta standardtypen konverterare parsa värdet men ändra den <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, och <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>Egenskaper för objektet som returnerades av den <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName>egenskapen som har initierats med cellen <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>egenskap.</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> </xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       När du konverterar värdet själv, Ersätt inledande, formaterad värdet för den <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName>egenskapen med det konvertera värdet i typen som anges i cellen <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>egenskap.</xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> För att indikera att inga ytterligare parsning krävs, ange den <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>egenskapen `true`.</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName>       När händelsehanteraren är klar, om den <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>är `null` eller är inte av rätt typ eller <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>egenskapen är `false`, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>analyseras med hjälp av cellen <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>metod med standard typen konverterare.</xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> </xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> </xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Standardimplementering av den här metoden Parsar värde med hjälp av den <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, och <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>egenskaperna för cellformatet skickades in.</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Om värdet inte är lika med <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, är parsa värdet med <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>egenskapen och typ-konverterare skickades in.</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>       Om du vill anpassa konvertering av ett cellvärde till en formaterade värdet för visning, hantera den <xref:System.Windows.Forms.DataGridView.CellFormatting>händelse.</xref:System.Windows.Forms.DataGridView.CellFormatting>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates using DataGridViewCellParsingEventArgs to check the validity of date entries.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/t-system.windows.forms.d_59_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/t-system.windows.forms.d_59_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/t-system.windows.forms.d_59_1.cs)]"
  syntax:
    content: 'public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Forms.ConvertEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  id: '#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)'
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Forms.DataGridViewCellParsingEventArgs&quot;> </xref> klass."
  syntax:
    content: public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "Radindex för cellen som har ändrats."
    - id: columnIndex
      type: System.Int32
      description: "Kolumnindexet i den cellen har ändrats."
    - id: value
      type: System.Object
      description: "Det nya värdet."
    - id: desiredType
      type: System.Type
      description: "Typ av det nya värdet."
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "Det format som tillämpas på cellen har ändrats."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar kolumnindex cell data som kräver parsning."
  remarks: "Använd egenskapen ColumnIndex för att erhålla ett index i <xref:System.Windows.Forms.DataGridView.Columns%2A>egenskap av <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridView.Columns%2A>"
  example:
  - "The following code example demonstrates using ColumnIndex to discover if the changed cell is in the date column.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_44_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_44_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_44_1.cs)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: "Kolumnindexet i den cellen har ändrats."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  id: InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger det format som tillämpas på den redigerade cellen."
  remarks: "Du kan använda den här egenskapen för att avgöra den formatering som tillämpas för cellen. Den här egenskapen eller ändra egenskaperna för det objekt som den här egenskapen returnerar har ingen effekt om inte den <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A>är `false` när händelsehanteraren avslutas.</xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> I det här fallet den <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, och <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>Egenskaper för cellformatet används för att parsa cellvärdet.</xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> </xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_66_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_66_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "En <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;> </xref> som representerar det aktuella formatet i cellen som redigeras. Standardvärdet är värdet för cellen <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>egenskap.</xref:System.Windows.Forms.DataGridViewCell.InheritedStyle*>"
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  id: ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger ett värde som anger om en cells värde har tolkats."
  remarks: "En <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>anger ParsingApplied-egenskap som anger om det nya cellvärdet har parsas och ingen ytterligare konvertering.</xref:System.Windows.Forms.DataGridViewCellParsingEventHandler>"
  example:
  - "The following code example sets ParsingApplied to `true` when the cell's value is successfully parsed.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_1_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/p-system.windows.forms.d_1_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/p-system.windows.forms.d_1_1.cs)]"
  syntax:
    content: public bool ParsingApplied { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om cellens värde har tolkats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar radindexet för cellen som kräver parsning."
  remarks: "Använd egenskapen RowIndex för att erhålla ett index i <xref:System.Windows.Forms.DataGridView.Rows%2A>egenskap av <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridView.Rows%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#303](~/add/codesnippet/csharp/p-system.windows.forms.d_48_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/add/codesnippet/visualbasic/p-system.windows.forms.d_48_1.vb)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: "Radindex för cellen som har ändrats."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: System.Windows.Forms.ConvertEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32,Int32,Object,Type,DataGridViewCellStyle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
