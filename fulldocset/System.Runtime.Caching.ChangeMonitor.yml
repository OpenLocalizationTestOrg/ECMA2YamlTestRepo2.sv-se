### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ChangeMonitor
  id: ChangeMonitor
  children:
  - System.Runtime.Caching.ChangeMonitor.#ctor
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  - System.Runtime.Caching.ChangeMonitor.UniqueId
  langs:
  - csharp
  name: ChangeMonitor
  nameWithType: ChangeMonitor
  fullName: System.Runtime.Caching.ChangeMonitor
  type: Class
  summary: "Ger en basklass för en härledd anpassad typ som övervakar ändringar i tillståndet vilka data som ett cacheobjekt är beroende av."
  remarks: "Klassen ChangeMonitor används som basklass för Övervakare för härledda klasser som är särskilt avsedda för särskilda cache-implementeringar. En instans av ChangeMonitor övervakar ändringar i tillståndet för data som ett cacheobjekt är beroende av. Objektet kan till exempel vara en fil eller entitet vars innehåll cachelagras. Om filen eller entiteten uppdateras, ändras associerade cacheposten också. Vanliga objekt som kan övervakas är data enheter (till exempel databasfält värden, rader eller tabeller), en annan cacheposten och filer och filattribut.       En ändring av beroende är en förändring i tillståndet för ett beroende. I en typisk cache-implementering när en instans av ChangeMonitor meddelar cache som ett beroende har ändrats utför cachen åtgärd, till exempel ogiltigförklara infogade cacheposten.       Härledda klasser för ChangeMonitor kan anpassas för att övervaka ändringar av beroende för specifika annat datalager. Det finns till exempel cache-implementeringar för ett filsystem, fysiskt minne eller en databas. Klassen ChangeMonitor undersöks ändringar som sker utanför cacheminnet och aviseringar cachen förändringar.       Den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] innehåller följande klasser som härleds från klassen ChangeMonitor:- <xref:System.Runtime.Caching.CacheEntryChangeMonitor>- <xref:System.Runtime.Caching.FileChangeMonitor>- <xref:System.Runtime.Caching.HostFileChangeMonitor>- <xref:System.Runtime.Caching.SqlChangeMonitor>dessa klasser fungerar med olika typer av beroenden.</xref:System.Runtime.Caching.SqlChangeMonitor> </xref:System.Runtime.Caching.HostFileChangeMonitor> </xref:System.Runtime.Caching.FileChangeMonitor> </xref:System.Runtime.Caching.CacheEntryChangeMonitor> Till exempel härledda <xref:System.Runtime.Caching.FileChangeMonitor>klassen övervakar ändringar i en cache för system fildata (filer och mappar) som cacheobjekt är beroende.</xref:System.Runtime.Caching.FileChangeMonitor>"
  syntax:
    content: 'public abstract class ChangeMonitor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klass. Den här konstruktorn anropas från konstruktorer i härledda klasser för att initiera basklassen."
  remarks: "Den <xref:System.Runtime.Caching.ChangeMonitor>klass har en standardkonstruktor.</xref:System.Runtime.Caching.ChangeMonitor> Dock klasser som ärver från basen <xref:System.Runtime.Caching.ChangeMonitor>klassen och definiera anpassade ändringen för övervakning beteende initiering måste utföras i konstruktorn.</xref:System.Runtime.Caching.ChangeMonitor> Mer information finns i anteckningar för arvtagare avsnitt."
  syntax:
    content: protected ChangeMonitor ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  id: Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Frigör alla resurser som används av den aktuella instansen av den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klass."
  remarks: "Metoden Dispose anropar den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>-metoden i härledda klasser bara en gång, första gången den anropas.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Efterföljande anrop till metoden Dispose har ingen effekt. När metoden har anropats, den <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>egenskap är inställd på `true`.</xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>       Den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>överlagring måste anropas för att ta bort en <xref:System.Runtime.Caching.ChangeMonitor>instans.</xref:System.Runtime.Caching.ChangeMonitor> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Följande är regler för att anropa metoden dispose:-innan ett objekt har infogats i cachen är anroparens ansvar att avyttra en <xref:System.Runtime.Caching.ChangeMonitor>instans.</xref:System.Runtime.Caching.ChangeMonitor>      -En gång cacheobjektet och <xref:System.Runtime.Caching.ChangeMonitor>instanser som är associerade med den skickas till en cache cache-implementerare som måste se till att <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>kallas även om Infoga misslyckas.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor>      -När ett objekt och dess associerade <xref:System.Runtime.Caching.ChangeMonitor>instanser skickas till en cache, anroparen måste inte bort beroendet eftersom när den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metoden anropas, behandlas anropet som om beroendet har ändrats.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor> Därför kan den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden anropas automatiskt.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      -Hänsyn reglerna, den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metoden måste anropas på något av följande sätt:-användare måste anropa metodöverlagringen Dispose om de inte infoga härledda ändra bildskärmar instans i en cache.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>          -Cache-implementeringen är ansvarig för att anropa överlagringen Dispose om genomförandet försöker infoga instansen ändra Övervakare i ett objekt i cache infogningen misslyckas. När infogning försök orsakar ett undantag, cache-implementering måste ta bort alla associerade beroenden.          -Om cacheposten tas bort måste cache-implementeringen också ta bort beroendet.       Den interna implementeringen av den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metodanrop automatiskt den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metoden när du anropar ett återanrop som har registrerats via den <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metoden.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Den här automatiska dispose under den händelse att inträffar bara om initieringen av den <xref:System.Runtime.Caching.ChangeMonitor>instans som tidigare har slutförts.</xref:System.Runtime.Caching.ChangeMonitor>       När en härledd ändra Övervakare konstruktorn anropar den <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>metoden, om tillståndet för övervakaren ändras redan har ändrats (det vill säga tillståndet som övervakas har redan ändrats när konstruktorn fortfarande var aktiv) sedan <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>metoden kommer automatiskt att ta bort ändra Övervakare.</xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> </xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>      > [!NOTE] > Användare bör inte anropa metoden Dispose. Du kan dock hindra användare från att anropa metoden. Därför, om de gör det <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>-metoden har anropats.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> I så fall meddelas cacheposten som om beroendet har ändrats.       Metoden är inte en implementering av explicit gränssnitt för att förhindra att härledda klasser åsidosätter Dispose metod."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Har inte initierats i klassen härledda ändra Övervakare som kallas basmetoden Dispose."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Frigör alla hanterade och ohanterade resurser och alla referenser till den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> instans. Den här överlagring måste implementeras av klasser härledda ändra Övervakare."
  remarks: "När värdet för `disposing` värdet är `true`, alla hanterade och ohanterade resurser har tagits bort och alla referenser till det här objektet släpps så att härledda ändra bildskärmar instansen kan vara skräpinsamlats. Det är fastställt som bas <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metod ska anropa metoden implementerade Dispose bara en gång.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: protected abstract void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att släppa hanterade och ohanterade resurser och alla referenser till en <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> instansen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras. När <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> skickas Dispose metoden anropas av en <xref uid=&quot;langword_csharp_finalizer&quot; name=&quot;finalizer&quot; href=&quot;&quot;> </xref> tråd och eventuella externa hanterade referenser sannolikt inte längre är giltiga eftersom de redan har skräpinsamlats."
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  id: HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hämtar ett värde som indikerar att det tillstånd som övervakas av den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klass har ändrats."
  remarks: "Du kan kontrollera värdet för den här egenskapen i en härledd <xref:System.Runtime.Caching.ChangeMonitor>klassen för att se om ett beroende har ändrats.</xref:System.Runtime.Caching.ChangeMonitor>       Värdet anges `true` när något beroende ändras (det vill säga när den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden anropas).</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Efter den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden anropas av den härledda klassen blir värdet på egenskapen HasChanged `true`, oavsett om en <xref:System.Runtime.Caching.OnChangedCallback>har blivit underrättade instans av ett anrop till den <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metoden.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Anropare kan kontrollera egenskapen HasChanged om ett beroende har ändrats. I ett flertrådat miljö är en enklare och mer hanterbar metoden dock att infoga data i en cache-implementering utan att kontrollera egenskapen HasChanged. Cache-implementeringar måste kontrollera egenskapen HasChanged och måste inte utföra någon insert eller ange igen om en eller flera associerade beroenden redan har ändrats."
  syntax:
    content: public bool HasChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det tillstånd som övervakas av den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> instans har ändrats, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.HasChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  id: InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Anropas från konstruktorn härledda klasser för att indikera att initialization är slutförd."
  remarks: "Om ett beroende ändras innan har initierats i en härledd klass konstruktören för den härledda klassen måste anropa den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       När den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>-metoden har anropats på <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>automatiskt egenskapen `true` genom att ändra Övervakare.</xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Därför när övervakaren ändra konstruktorn anropar metoden InitializationComplete, basklassen automatiskt anropar den <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metoden.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Om initieringen har slutförts, den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden förfogar automatiskt härledda ändra-monitor-instans.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>"
  syntax:
    content: protected void InitializationComplete ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  id: IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hämtar ett värde som indikerar att den härledda instansen av en <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> klass har tagits bort."
  remarks: "Egenskapen anges till `true` efter basen <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metodanrop på <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metod i en härledd klass ta bort instansen.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om instansen har tagits bort; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  id: NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Anropas av Cache-implementerare att registrera ett återanrop och meddela en <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> instansen via den <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> delegera när ett beroende har ändrats."
  remarks: "Cache implementerare använder den här metoden för att ansluta sig upp till en ändra Övervakare. Om du kopplar en eller flera ändra Övervakare med cacheobjekt, som du skickar en <xref:System.Runtime.Caching.CacheItemPolicy>-instans med en ifylld ändra Övervakare egenskap till cacheobjektet.</xref:System.Runtime.Caching.CacheItemPolicy> En cache-implementerare att stöder ändrar Övervakare ansvarar för att iterera över den <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>egenskapen och registrera den <xref:System.Runtime.Caching.OnChangedCallback>delegater med varje ändra Övervakare som påträffas.</xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>       Eftersom den <xref:System.Runtime.Caching.OnChangedCallback>delegat innehåller ett valfritt steg som parameter, en konkret ändra övervakaren implementering kan skicka information om valfria tillstånd.</xref:System.Runtime.Caching.OnChangedCallback> Cache-implementerare avgör om en explicit beroende på vilken typ av tillstånd som en anpassad ändra Övervakare skickas som en del av återanropet kan tas.      > [!NOTE] > Grundläggande cache-utökningsbarhet API har inga krav på explicit beroende på vilken typ av tillstånd.       Implementeringen av metoden NotifyOnChanged bestämmer automatiskt om tillståndet för övervakaren har redan ändrats när NotifyOnChanged-metoden anropas. Om den <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>egenskapen är `true`, och sedan metoden automatiskt anropar den <xref:System.Runtime.Caching.OnChangedCallback>händelsehanteraren som har registrerats via den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Detta inträffar eftersom det är möjligt att tillståndet för underliggande övervakade har ändrats från den tid som en cache-implementering skapar en Övervakare för ändring till dess att en cache-implementering hämtar övervakaren och dra kablar själva upp till den. Om tillståndet har redan ändrats sedan det objekt som har överförts till den <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metoden är `null`.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       NotifyOnChanged-metod kan anropas bara en gång och genereras ett undantagsfel på efterföljande anrop."
  syntax:
    content: public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);
    parameters:
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "En referens till en metod som anropas när ett beroende har ändrats."
  overload: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Motringningsmetoden har redan anropats."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>onChangedCallback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  id: OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Anropas av härledda klasser för att generera en händelse när en beroende ändras."
  remarks: "OnChanged-metoden anropas vanligtvis när beroende ändringar sker. OnChanged-metoden anropas också när en ändring monitor-instans har tagits bort men avyttring inträffar endast om återanropet inte har redan anropats.       Om OnChanged-metoden anropas innan den <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metoden anropas, systemtillstånd från anrop till metoden OnChanged sparas i cache-implementeringen.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Dessutom återanrop till den <xref:System.Runtime.Caching.OnChangedCallback>-metoden har anropats omedelbart när den <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>-metoden har anropats.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback>"
  syntax:
    content: protected void OnChanged (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Data för ändringshändelsen. Det här värdet kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hämtar ett värde som representerar den <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> instans."
  remarks: "Egenskapsvärdet UniqueId består vanligtvis av beroendedata namn kombineras sträng som unikt identifierare de data som övervakas av en <xref:System.Runtime.Caching.ChangeMonitor>instans.</xref:System.Runtime.Caching.ChangeMonitor> Värdet på egenskapen UniqueId är en sträng. Värdet för strängen som används för att tilldela unika ID för den <xref:System.Runtime.Caching.ChangeMonitor>instans.</xref:System.Runtime.Caching.ChangeMonitor>"
  syntax:
    content: public abstract string UniqueId { get; }
    return:
      type: System.String
      description: "Identifierare för en Övervakare för ändring-instans."
  overload: System.Runtime.Caching.ChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.ChangeMonitor.#ctor*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor
  nameWithType: ChangeMonitor.ChangeMonitor
- uid: System.Runtime.Caching.ChangeMonitor.Dispose*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: ChangeMonitor.Dispose
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete
  nameWithType: ChangeMonitor.InitializationComplete
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged
  nameWithType: ChangeMonitor.NotifyOnChanged
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged
  nameWithType: ChangeMonitor.OnChanged
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
