### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Löser externa XML-resurser med namnet med en identifierare URI (Uniform Resource)."
  remarks: "XmlUrlResolver används för att lösa externa XML-resurser, till exempel enheter, eller scheman för definitioner av dokumentet (DTD: er). Det är också användas för att inkludera och importera element hittades i Extensible StyleSheet Language (XSL) formatmallar eller XML-Schema definition language (XSD) scheman.       XmlUrlResolver är Standardlösaren för alla klasser i den <xref:System.Xml>namnområde.</xref:System.Xml> Stöder den `file://` och `http://` protokoll och förfrågningar från <xref:System.Net.WebRequest>klass.</xref:System.Net.WebRequest>      > [!IMPORTANT] > XmlUrlResolver objekt kan innehålla känslig information, till exempel användarens autentiseringsuppgifter. Du bör vara försiktig när du cachelagrar XmlUrlResolver objekt och inte passerar XmlUrlResolver objekt till en komponent som inte är betrodd.      ## Lösa DTD: er om XML-läsaren (<xref:System.Xml.XmlReader>) läser en XML-fil som innehåller en externa DTD, anropar den <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName>metod för att hämta en stream-representation av DTD.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Om URI för DTD: N är en relativ URI, XML-läsaren anropar den <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName>metoden och returnerar en absolut URI för den angivna `relativeUri` och `baseURi` parametrar.</xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> Om XmlUrlResolver inte kan matcha URI: N, returnerar `null`.       Den <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>metoden använder informationen i den <xref:System.Xml.XmlUrlResolver.Credentials%2A>egenskapen efter behov för att få åtkomst till resursen.</xref:System.Xml.XmlUrlResolver.Credentials%2A> </xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> Det finns inga `get` accessorn för att den här egenskapen av säkerhetsskäl. När du skriver över <xref:System.Xml.XmlResolver>, **GetEntity** är den metod som använder autentiseringsuppgifter i den **autentiseringsuppgifter** egenskap.</xref:System.Xml.XmlResolver>       Matcha alla andra resurser i XML-liknar lösa DTD: er. <xref:System.Xml.XmlResolver>förhandlar anslutningen med den externa resursen och returnerar ett <xref:System.IO.Stream>representation av innehållet.</xref:System.IO.Stream></xref:System.Xml.XmlResolver> Det objekt som har att göra anropet till <xref:System.Xml.XmlResolver>tolkar dataströmmen.</xref:System.Xml.XmlResolver>      ## Att utöka klassen XmlUrlResolver standardbeteendet för klassen XmlUrlResolver är att lösa en resurs med XML-data från dess källa inte från cachen. I vissa fall kan kan lösa en Dataresurs från cache förbättra prestanda för ett program genom att spara en resa till resursen data-servern. Prestandavinster här måste vägas mot behovet av uppdaterade innehållet.       I följande exempel utökar XmlUrlResolver och skapar en ny klass `XmlCachingResolver`, för att hämta resurser från cacheminnet. Detta görs genom att åsidosätta den <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>egenskapen och <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>metod.</xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>       [!code-vb[XmlCachingResolver_ex&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)][!code-cs[XmlCachingResolver_ex&#1;](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs) ] cachelagring beteendet för den `XmlCachingResolver` klass är implementerad i den `GetEntity` metoden.   Detta görs genom att skapa nya <xref:System.Net.WebRequest>och <xref:System.Net.Cache.HttpRequestCachePolicy>objekt.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> Den <xref:System.Net.Cache.HttpRequestCachePolicy>objekt skapas med hjälp av den <xref:System.Net.Cache.HttpRequestCacheLevel>medlem i den <xref:System.Net.Cache.HttpRequestCacheLevel>uppräkningen.</xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCachePolicy>       Den <xref:System.Net.WebRequest.CachePolicy%2A>egenskapen för den <xref:System.Net.WebRequest>objektet har angetts med det <xref:System.Net.Cache.HttpRequestCachePolicy>objektet.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A>       En instans av den `XmlCachingResolver` klassen skapas med den `Boolean``enableHttpCaching`. När det här värdet anges `true`, instansen löser en resurs från standard om möjligt. När `enableHttpCaching` är inställd på `false`, instansen används standardbeteendet och löser resurser från källan.      > [!NOTE] > Det här exemplet använder utökningsbarhet XML-klasser i .NET Framework. Andra klasser kan utökas och anpassas efter behoven i ett visst program."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> klass."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hämtar eller anger cache-principen för den underliggande <xref:System.Net.WebRequest>objektet.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Princip för den underliggande webbegäran."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ställer in autentiseringsuppgifter som används för att autentisera webbegäranden."
  remarks: "Om den virtuella katalogen inte kräver autentisering, behöver den här egenskapen inte anges. Annars måste autentiseringsuppgifterna för användaren anges.       Du kan koppla olika autentiseringsuppgifter till olika URI: er och lägger till dem i ett cacheminne. Du kan sedan använda autentiseringsuppgifter för att kontrollera autentisering för annan URI: er, oavsett den ursprungliga källan till XML.       Följande C#-kod visar hur du ställer in egenskapen autentiseringsuppgifter till ett cacheminne.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Autentiseringsuppgifterna som ska användas för att autentisera webbegäranden. Om den här egenskapen inte har angetts standardvärdet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, det vill säga den <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;> </xref> har inga autentiseringsuppgifter."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Avbildar en URI till ett objekt som innehåller den faktiska resursen."
  remarks: "Den här metoden används när anroparen vill mappa en angivna URI: N till ett objekt som innehåller den resurs som URI representerar.       Den asynkrona versionen av den här metoden finns i <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Tillämpningsprogrammet kan minimera minne DOS-tjänsten hot till metoden GetEntity genom att implementera IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> att begränsa antalet lästa byte.</xref:System.Runtime.InteropServices.ComTypes.IStream> Detta skyddar mot situationer där skadlig kod som försöker skicka en oändlig byte-dataström till metoden GetEntity."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returnerades från <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella implementeringen returnerar bara <xref:System.IO.Stream>objekt.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Stream-objektet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om en annan typ än dataströmmen har angetts."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>är inget <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> typen."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Angiven URI är inte en absolut URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det finns ett körningsfel (till exempel en avbruten serveranslutning)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynkront mappar en URI till ett objekt som innehåller den faktiska resursen."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Den URI som returnerades från <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "För närvarande används inte."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ av objekt ska returnera. Den aktuella implementeringen returnerar bara <xref:System.IO.Stream>objekt.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Stream-objektet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om en annan typ än dataströmmen har angetts."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Hämtar eller anger nätverket proxyn för den underliggande <xref:System.Net.WebRequest>objektet.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "Den <xref:System.Net.IWebProxy>du använder för att få åtkomst till Internet-resursen.</xref:System.Net.IWebProxy>"
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Löser absolut URI från bas och relativ URI."
  remarks: "Absolut URI kan användas som bas-URI för alla efterföljande förfrågningar för entiteter som är i förhållande till den här URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Bas-URI som används för att matcha relativa URI: N."
    - id: relativeUri
      type: System.String
      description: "URI som används för att lösa. URI: N kan vara absolut eller relativ. Om absolut värdet effektivt ersätter den `baseUri` värde. Om relativa kombineras med de `baseUri` att göra en absolut URI."
    return:
      type: System.Uri
      description: "Absolut URI eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om relativ URI kan inte lösas."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
