### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Ger en hanterad representation av ett Win32 `OVERLAPPED` struktur, inklusive metoder för att överföra information från en Overlapped-instans till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  remarks: "Den <xref:System.Threading.Overlapped.Pack%2A>och <xref:System.Threading.Overlapped.UnsafePack%2A>metoder Överför information från ett Overlapped objekt till en <xref:System.Threading.NativeOverlapped>struktur som kan skickas till Win32 API-funktioner för asynkrona i/o-fil.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.Unpack%2A>Metoden Överför information från en <xref:System.Threading.NativeOverlapped>struktur för en instans av klassen Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Egenskaperna för ett objekt Overlapped ändringar som påverkar dess associerade <xref:System.Threading.NativeOverlapped>struktur, och vice versa.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initierar en ny, tom instans av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klass."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klass med den angivna filen position, 32-bitars heltal referensen till en händelse som signaleras när i/o-åtgärden har slutförts och ett gränssnitt som returnerar resultatet av åtgärden."
  remarks: "Använd <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>egenskapen för att hämta referensen för alla hanterade synkroniseringshändelsen som härleds från <xref:System.Threading.WaitHandle>klassen.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       Implementeringen av <xref:System.IAsyncResult>innehåller statusinformation om i/o-åtgärden.</xref:System.IAsyncResult> Överför den till konstruktorn i den `ar` parameter, och hämta den senare med den <xref:System.Threading.Overlapped.AsyncResult%2A>egenskapen.</xref:System.Threading.Overlapped.AsyncResult%2A> Om en metod som har angetts för den <xref:System.Threading.Overlapped.Pack%2A>eller <xref:System.Threading.Overlapped.UnsafePack%2A>metoden återanropet kan hämta din <xref:System.IAsyncResult>genom att packa upp den <xref:System.Threading.NativeOverlapped>struktur som tas emot.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Lågt ord i filen positionen där överföringen."
    - id: offsetHi
      type: System.Int32
      description: "Högt ord i filen positionen där överföringen."
    - id: hEvent
      type: System.Int32
      description: "Referensen till en händelse som signaleras när i/o-åtgärden har slutförts."
    - id: ar
      type: System.IAsyncResult
      description: "Ett objekt som implementerar det <xref:System.IAsyncResult>gränssnitt och innehåller statusinformation om i/o-åtgärden.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Threading.Overlapped&quot;> </xref> klass med den angivna filen position referensen till en händelse som signaleras när i/o-åtgärden har slutförts och ett gränssnitt som returnerar resultatet av åtgärden."
  remarks: "Att hämta referensen till ett hanterat synkroniseringsobjekt som härleds från den <xref:System.Threading.WaitHandle>klassen använder den <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>egenskapen för att hämta en <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objektet och sedan anropa den <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metoden.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       Implementeringen av <xref:System.IAsyncResult>innehåller statusinformation om i/o-åtgärden.</xref:System.IAsyncResult> Överför den till konstruktorn i den `ar` parameter, och hämta den senare med den <xref:System.Threading.Overlapped.AsyncResult%2A>egenskapen.</xref:System.Threading.Overlapped.AsyncResult%2A> Om en metod som har angetts för den <xref:System.Threading.Overlapped.Pack%2A>eller <xref:System.Threading.Overlapped.UnsafePack%2A>metoden återanropet kan hämta din <xref:System.IAsyncResult>genom att packa upp den <xref:System.Threading.NativeOverlapped>struktur som tas emot.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Lågt ord i filen positionen där överföringen."
    - id: offsetHi
      type: System.Int32
      description: "Högt ord i filen positionen där överföringen."
    - id: hEvent
      type: System.IntPtr
      description: "Referensen till en händelse som signaleras när i/o-åtgärden har slutförts."
    - id: ar
      type: System.IAsyncResult
      description: "Ett objekt som implementerar det <xref:System.IAsyncResult>gränssnitt och innehåller statusinformation om i/o-åtgärden.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hämtar eller anger det objekt som innehåller statusinformation om i/o-åtgärden."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Ett objekt som implementerar det <xref:System.IAsyncResult>gränssnittet.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hämtar eller anger 32-bitars heltal referensen till en synkroniseringshändelsen signaleras när i/o-åtgärden har slutförts."
  remarks: "Den här egenskapen kan inte användas på 64-bitars plattformar. Använd den <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>egenskapen i stället.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Använd <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>egenskapen för att hämta referensen för alla hanterade synkroniseringshändelsen som härleds från <xref:System.Threading.WaitHandle>klassen.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>-värde som representerar referensen för synkroniseringshändelsen.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hämtar eller anger referensen till synkroniseringshändelsen signaleras när i/o-åtgärden har slutförts."
  remarks: "Att hämta referensen till ett hanterat synkroniseringsobjekt som härleds från den <xref:System.Threading.WaitHandle>klassen använder den <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>egenskapen för att hämta en <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objektet och sedan anropa den <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metoden.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>som representerar referensen för händelsen.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Frigör det ohanterade minnet som är associerade med en inbyggd överlappad struktur som allokerats av den <xref:System.Threading.Overlapped.Pack*>metoden.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Du måste anropa metoden ledigt exakt en gång på varje <xref:System.Threading.NativeOverlapped>pekaren som du får från den <xref:System.Threading.Overlapped.Pack%2A>metoden.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Om du inte anropa metoden ledigt, kommer du läcker minne. Om du anropar metoden ledigt mer än en gång vara minne skadad."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "En pekare till den <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur att frigöras."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hämtar eller anger det högsta ordet i filen positionen där överföringen. Filpositionen är en byte-förskjutning från början av filen."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>-värde som representerar filpositionen hög ordet.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hämtar eller anger det lägsta ordet i filen positionen där överföringen. Filpositionen är en byte-förskjutning från början av filen."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>-värde som representerar filpositionen låg ordet.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hanteringspaket för den aktuella instansen till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur, ange ombud som anropas när den asynkrona i/o-åtgärden har slutförts."
  remarks: "Ohanterad pekare som returneras av den här metoden kan skickas till operativsystemet i överlappande i/o-åtgärder. Den <xref:System.Threading.NativeOverlapped>struktur är fast i det fysiska minnet tills <xref:System.Threading.Overlapped.Unpack%2A>kallas.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > Anroparen ansvarar för att fästa bufferten. Om programdomänen tas bort, men referensen till Fäst bufferten förstörs och bufferten släpps, lämnar i/o-åtgärden för att skriva till frigjort adressen. Därför är det bättre att använda den <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metodöverlagringen där körningen PIN-bufferten.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegat som representerar callback-metoden anropas när den asynkrona i/o-åtgärden har slutförts."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Ohanterad pekare till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuellt <xref href=&quot;System.Threading.Overlapped&quot;> </xref> har redan packats."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hanteringspaket för den aktuella instansen till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur, ange en delegat som anropas när den asynkrona i/o-åtgärden har slutförts och ett hanterat objekt som fungerar som en buffert."
  remarks: "Ohanterad pekare som returneras av den här metoden kan skickas till operativsystemet i överlappande i/o-åtgärder. Den <xref:System.Threading.NativeOverlapped>struktur är fast i det fysiska minnet tills <xref:System.Threading.Overlapped.Unpack%2A>kallas.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufferten eller buffertar som anges i `userData` måste vara samma som de som skickas till funktionen ohanterade operativsystemet som utför asynkrona i/o.      > [!NOTE] > Körningsmiljön PIN-bufferten eller buffertar som anges i `userData` under i/o-åtgärden. Om programdomänen tas bort, behålls körningsmiljön minne Fäst tills i/o-åtgärden har slutförts."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegat som representerar callback-metoden anropas när den asynkrona i/o-åtgärden har slutförts."
    - id: userData
      type: System.Object
      description: "Ett objekt eller en matris med-objekt som representerar den inkommande eller utgående bufferten för åtgärden. Alla objekt som representerar en buffert, till exempel en matris med byte."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Ohanterad pekare till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuellt <xref href=&quot;System.Threading.Overlapped&quot;> </xref> har redan packats."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Packar upp den angivna ohanterade <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> strukturen i en hanterad <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objekt."
  remarks: "Den <xref:System.Threading.NativeOverlapped>struktur inte har frigjorts från det fysiska minnet tills du anropar den <xref:System.Threading.Overlapped.Free%2A>metoden.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Ohanterad pekare till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
    return:
      type: System.Threading.Overlapped
      description: "En <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objekt som innehåller information ska packas upp från den interna strukturen."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hanteringspaket för den aktuella instansen till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur anger delegaten att anropa när den asynkrona i/o-åtgärden har slutförts. Inte att sprida anropa stacken."
  remarks: "Ohanterad pekare som returneras av den här metoden kan skickas till operativsystemet i överlappande i/o-åtgärder. Den <xref:System.Threading.NativeOverlapped>struktur är fast i det fysiska minnet tills <xref:System.Threading.Overlapped.Unpack%2A>kallas.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Anroparen ansvarar för att fästa bufferten. Om programdomänen tas bort, men referensen till Fäst bufferten förstörs och bufferten släpps, lämnar i/o-åtgärden för att skriva till frigjort adressen. Därför är det bättre att använda den <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metodöverlagringen där körningen PIN-bufferten.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Med hjälp av den <xref:System.Threading.Overlapped.UnsafePack%2A>metoden oavsiktligt kan öppna ett säkerhetshål.</xref:System.Threading.Overlapped.UnsafePack%2A> Kodåtkomstsäkerhet baserar behörigheterna för alla anropare behörighet kontrollen på stacken. Den <xref:System.Threading.Overlapped.UnsafePack%2A>metoden inte spridas anropa stack.</xref:System.Threading.Overlapped.UnsafePack%2A> Skadlig kod kanske kan utnyttja detta för att undvika behörighet kontroller."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegat som representerar callback-metoden anropas när den asynkrona i/o-åtgärden har slutförts."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Ohanterad pekare till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuellt <xref href=&quot;System.Threading.Overlapped&quot;> </xref> har redan packats."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Hanteringspaket för den aktuella instansen till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur, ange delegaten att anropa när den asynkrona i/o-åtgärden är klar och den hanterade objekt som fungerar som en buffert. Inte att sprida anropa stacken."
  remarks: "Ohanterad pekare som returneras av den här metoden kan skickas till operativsystemet i överlappande i/o-åtgärder. Den <xref:System.Threading.NativeOverlapped>struktur är fast i det fysiska minnet tills <xref:System.Threading.Overlapped.Unpack%2A>kallas.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Bufferten eller buffertar som anges i `userData` måste vara samma som de som skickas till funktionen ohanterade operativsystemet som utför asynkrona i/o.       PIN-körningsmiljön bufferten eller buffertar som anges i`userData` under i/o-åtgärden. Om programdomänen tas bort, behålls körningsmiljön minne Fäst tills i/o-åtgärden har slutförts.      > [!CAUTION] > Med hjälp av UnsafePack metod kan oavsiktligt öppna ett säkerhetshål. Kodåtkomstsäkerhet baserar behörigheterna för alla anropare behörighet kontrollen på stacken. Metoden UnsafePack inte att sprida anropa stacken. Skadlig kod kanske kan utnyttja detta för att undvika behörighet kontroller."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "En <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegat som representerar callback-metoden anropas när den asynkrona i/o-åtgärden har slutförts."
    - id: userData
      type: System.Object
      description: "Ett objekt eller en matris med-objekt som representerar den inkommande eller utgående bufferten för åtgärden. Alla objekt som representerar en buffert, till exempel en matris med byte."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Ohanterad pekare till en <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktur."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuellt <xref href=&quot;System.Threading.Overlapped&quot;> </xref> är redan fullt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
