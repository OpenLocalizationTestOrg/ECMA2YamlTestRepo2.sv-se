### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent
  id: WebAuthenticationSuccessAuditEvent
  children:
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  - System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent
  type: Class
  summary: "Innehåller information om händelser för lyckad autentisering."
  remarks: "Övervaka ASP.NET-hälsa kan produktions- och personal för att hantera distribuerade webbprogram. Den <xref:System.Web.Management>namnområde innehåller ansvarar för att paketera hälsostatus programdata och vilka provider ansvarar för bearbetning av dessa data hälsohändelse typer.</xref:System.Web.Management> Den innehåller också stödjande typer som hjälp vid hantering av hälsotillstånd händelser.       I följande lista beskrivs de funktioner som ASP.NET genererar händelser av typen WebAuthenticationSuccessAuditEvent.      > [!NOTE] > Som standard ASP.NET har konfigurerats för att logga audit feltillstånd endast som loggning av lyckade villkor kan kraftigt stam systemresurser.  Du kan alltid konfigurera systemet för att logga lyckade villkor.      -Formulär för autentisering. Lyckad villkor som ska granskas. Lyckade inkludera namnet på användaren som autentiserades. Misslyckade försök ingår i stället, inte användarnamnet, eftersom de vanligtvis beror på en tjänstbiljett som inte kunde dekrypteras eller validering. Innehåller båda klientens IP-adress. Relaterade audit händelsekoden är <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>      -Medlemskap. Lyckad villkor som ska granskas. Både lyckade och misslyckade granskningar innehålla användarnamnet som gjordes. Varken formuläret för granskningsloggar innehåller det lösenord som gjordes, eftersom som riskerar att spara ett giltigt lösenord i loggen. Relaterade audit händelsekoden är <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>       När en WebAuthenticationSuccessAuditEvent aktiveras som standard uppdateras prestandaräknaren autentisering lyckades händelser aktiveras. Visa den här prestandaräknaren i Systemövervakaren (PerfMon) i den **Lägg till räknare** fönstret Välj **ASP.NET** i den **prestandaobjekt** listrutan, Välj prestandaräknaren autentisering lyckades händelser inträffar och klicka på den **Lägg till** knappen. Mer information finns i [med Systemövervakaren (PerfMon) med ASP.NET-program](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) på MSDN.      > [!NOTE] > I de flesta fall kommer du att kunna använda ASP.NET-hälsoövervakning typer som implementeras och du kommer att styra system för övervakning av hälsotillstånd genom att ange värden i den `healthMonitoring` konfigurationsavsnittet. Du kan också vara härledd från övervakning av hälsotillstånd-typer för att skapa dina egna anpassade händelser och leverantörer. Ett exempel på härleds från den <xref:System.Web.Management.WebBaseEvent>klassen, se exemplet i det här avsnittet.</xref:System.Web.Management.WebBaseEvent>"
  example:
  - "This code example has two parts: a configuration-file excerpt, followed by code that shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n This following is an excerpt of the configuration file's `provider` and `eventMappings` sections. They are already set by default. The only thing you need to do is to provide the setup for the `rules` element in the `healthMonitoring` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <providers>  \n      // Configure the provider to process   \n      // the health events.  \n      <add name=\"EventLogProvider\"  \n         type=\"System.Web.Management.EventLogWebEventProvider,  \n         System.Web,Version=2.0.3600.0,Culture=neutral,  \n         PublicKeyToken=b03f5f7f11d50a3a\"/>  \n    </providers>  \n  \n    <eventMappings>  \n       <clear />  \n       // Configure the custom event   \n       // to handle the audit events.   \n        <add name=\"SampleWebAuthenticationSuccessAuditEvent\"   \n          type=\"SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  \n          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   \n          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL\" />  \n  \n     </eventMappings>  \n     <rules>  \n       <clear/>  \n       // Establish the connection between custom event   \n       // and the provider that must process it.  \n      <add name=\"Log Authentication Success Audits\"   \n        eventName=\"SampleWebAuthenticationFailureAuditEvent\"  \n        provider=\"EventLogProvider\"   \n        profile=\"Custom\" />\\  \n     </rules>  \n  \n</healthMonitoring>  \n```  \n  \n The following code shows how to customize the WebAuthenticationSuccessAuditEvent event.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._10_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._10_1.cs)]"
  syntax:
    content: 'public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  - System.Web.Management.WebSuccessAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initierar den <xref href=&quot;System.Web.Management.WebAuthenticationSuccessAuditEvent&quot;> </xref> klassen med hjälp av de angivna parametrarna."
  remarks: "Den här konstruktorn används internt av ASP.NET-övervakning av hälsotillstånd system. Du använda aldrig den för att skapa en instans av ett <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>objekt, men du kan anropa den här konstruktorn när du implementerar din egen händelsetyp som ärver från den här klassen.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > I WebAuthenticationSuccessAuditEvent konstruktorn är inte avsedd att användas direkt från din kod. Den anropas av ASP.NET. Du kan anropa konstruktorn WebAuthenticationSuccessAuditEvent när den härleds från <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>klassen.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/visualbasic/f06e0196-5c99-4ca7-a77b-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/add/codesnippet/csharp/f06e0196-5c99-4ca7-a77b-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "Händelsebeskrivning."
    - id: eventSource
      type: System.Object
      description: "Det objekt som är källa för händelsen."
    - id: eventCode
      type: System.Int32
      description: "Den kod som associeras med händelsen. När du implementerar en anpassad händelse händelsekoden måste vara större än <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: nameToAuthenticate
      type: System.String
      description: "Namnet på den autentiserade användaren."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)'
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initierar den <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> klassen med hjälp av de angivna parametrarna."
  remarks: "Den här konstruktorn används internt av ASP.NET-övervakning av hälsotillstånd system. Du använda aldrig den för att skapa en instans av ett <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>objekt, men du kan anropa den här konstruktorn när du implementerar din egen händelsetyp som ärver från den här klassen.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      > [!NOTE] > I WebAuthenticationSuccessAuditEvent konstruktorn är inte avsedd att användas direkt från din kod. Den anropas av ASP.NET. Du kan anropa konstruktorn WebAuthenticationSuccessAuditEvent när den härleds från <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>klassen.</xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>"
  example:
  - "The following code example shows how to customize this constructor.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/afac7708-6243-4126-b8c9-_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/afac7708-6243-4126-b8c9-_1.cs)]"
  syntax:
    content: protected WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);
    parameters:
    - id: message
      type: System.String
      description: "Händelsebeskrivning."
    - id: eventSource
      type: System.Object
      description: "Det objekt som är källa för händelsen."
    - id: eventCode
      type: System.Int32
      description: "Den kod som associeras med händelsen. När du implementerar en anpassad händelse händelsekoden måste vara större än <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "Den <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> värde som anger detaljerade identifierare för händelsen."
    - id: nameToAuthenticate
      type: System.String
      description: "Namnet på den autentiserade användaren."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  id: NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  langs:
  - csharp
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hämtar namnet på den autentiserade användaren."
  remarks: "Endast lyckade inkludera namnet på den autentiserade användaren. Misslyckade försök ta inte med användarnamnet, eftersom de vanligtvis fås misslyckade dekryptering eller validering."
  example:
  - "The following code example shows how to use the NameToAuthenticate property.  \n  \n [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/visualbasic/p-system.web.management._21_1.vb)]\n [!code-cs[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/add/codesnippet/csharp/p-system.web.management._21_1.cs)]"
  syntax:
    content: public string NameToAuthenticate { get; }
    return:
      type: System.String
      description: "Namnet på den autentiserade användaren."
  overload: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: System.Web.Management.WebSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent(String,Object,Int32,Int32,String)
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
  fullName: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: WebAuthenticationSuccessAuditEvent
  nameWithType: WebAuthenticationSuccessAuditEvent.WebAuthenticationSuccessAuditEvent
- uid: System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate*
  parent: System.Web.Management.WebAuthenticationSuccessAuditEvent
  isExternal: false
  name: NameToAuthenticate
  nameWithType: WebAuthenticationSuccessAuditEvent.NameToAuthenticate
