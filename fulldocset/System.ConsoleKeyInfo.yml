### YamlMime:ManagedReference
items:
- uid: System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  summary: "Beskriver konsolen nyckeln som har tryckts ned den bokstav som representeras av nyckeln konsolen och tillståndet för Skift, ALT och CTRL modifieraren för."
  remarks: "ConsoleKeyInfo-typen är inte avsedd att skapas av användare. I stället returneras till användaren som svar på anropar den <xref:System.Console.ReadKey%2A?displayProperty=fullName>metoden.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       Objektet ConsoleKeyInfo beskriver den <xref:System.ConsoleKey>konstant och Unicode-tecken, eventuella som motsvarar den intryckta konsol nyckeln.</xref:System.ConsoleKey> Objektet ConsoleKeyInfo beskriver också, i en binär kombination av <xref:System.ConsoleModifiers>värden, om en eller flera SKIFT, ALT eller CTRL modifieraren nycklar har trycks ned samtidigt med konsolen nyckel.</xref:System.ConsoleModifiers>"
  example:
  - "The following example demonstrates using a ConsoleKeyInfo object in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/t-system.consolekeyinfo_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/t-system.consolekeyinfo_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/t-system.consolekeyinfo_1.vb)]"
  syntax:
    content: public struct ConsoleKeyInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> struktur med angivna tecknet, konsolen nyckel och modifierare nycklar."
  remarks: "Den här typen är inte avsedd att skapas av användare. I stället returneras till användaren som svar på anropar den <xref:System.Console.ReadKey%2A?displayProperty=fullName>metoden.</xref:System.Console.ReadKey%2A?displayProperty=fullName>       Den <xref:System.ConsoleKeyInfo>typen anger inte om den vänster- eller SKIFT, ALT eller CTRL låstangenten var trycks ned.</xref:System.ConsoleKeyInfo>"
  syntax:
    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Unicode-tecknet som motsvarar den `key` parameter."
    - id: key
      type: System.ConsoleKey
      description: "Konsolen nyckeln som motsvarar den `keyChar` parameter."
    - id: shift
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ange att har en SKIFT-tangenten nedtryckt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: alt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ange att har en ALT-tangenten nedtryckt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ange att har en CTRL-tangenten nedtryckt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det numeriska värdet för den <code> key </code> parametern är mindre än 0 eller fler än 255 tecken."
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar ett värde som anger om den angivna <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt är lika med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  remarks: "Två <xref:System.ConsoleKeyInfo>objekt är lika om motsvarande <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, och <xref:System.ConsoleKeyInfo.Modifiers%2A>Egenskaper är lika.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>       Metoden är lika med utför något bättre än den <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>metoden eftersom den inte har att konvertera `obj` till ett objekt.</xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public bool Equals (ConsoleKeyInfo obj);
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
      description: "Ett objekt för att jämföra med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> obj </code> är lika med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar ett värde som anger om det angivna objektet är lika med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  remarks: "Två <xref:System.ConsoleKeyInfo>objekt är lika om motsvarande <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, och <xref:System.ConsoleKeyInfo.Modifiers%2A>Egenskaper är lika.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  example:
  - "The following example demonstrates the Equals method.  \n  \n [!code-cpp[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._0_1.cpp)]\n [!code-cs[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._0_1.cs)]\n [!code-vb[system.ConsoleKeyInfo.Equals#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Ett objekt för att jämföra med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> value </code> är en <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt och är lika med aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ConsoleKeyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar hash-koden för aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  remarks: "Värdet som returneras av metoden GetHashCode lämpar sig inte för att skilja ett <xref:System.ConsoleKeyInfo>objekt från en annan.</xref:System.ConsoleKeyInfo> Om ditt program behöver ett unikt hash-kod, kan du åsidosätta metoden GetHashCode med en egen metod."
  example:
  - "The following example demonstrates the GetHashCode method.  \n  \n [!code-cpp[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/cpp/m-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/visualbasic/m-system.consolekeyinfo._1_1.vb)]\n [!code-cs[System.ConsoleKeyInfo.GetHashCode#1](~/add/codesnippet/csharp/m-system.consolekeyinfo._1_1.cs)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-bitars heltal hash-kod."
  overload: System.ConsoleKeyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar nyckeln konsolen som representeras av aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example demonstrates using a Key property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._0_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._0_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._0_1.vb)]"
  syntax:
    content: public ConsoleKey Key { get; }
    return:
      type: System.ConsoleKey
      description: "Ett värde som identifierar konsolen nyckeln som har trycks ned."
  overload: System.ConsoleKeyInfo.Key*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar Unicode-tecken som representeras av aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  remarks: "Om tangent trycks ned inte mappas till ett Unicode-tecken (till exempel om användaren trycker på **F1** nyckel eller **Start** nyckel), värdet för egenskapen KeyChar är \\U0000."
  example:
  - "The following example uses the KeyChar property to add the characters input by the user into a string. The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.  \n  \n [!code-cs[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._2_1.cs)]\n [!code-vb[System.ConsoleKeyInfo.KeyChar#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._2_1.vb)]"
  syntax:
    content: public char KeyChar { get; }
    return:
      type: System.Char
      description: "Ett objekt som motsvarar konsolen nyckel som representeras av aktuellt <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt."
  overload: System.ConsoleKeyInfo.KeyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar en binär kombination av <xref href=&quot;System.ConsoleModifiers&quot;> </xref> värden som anger en eller flera nycklar för modifieraren trycks ned samtidigt med konsolen nyckel."
  remarks: ''
  example:
  - "The following example demonstrates using a Modifiers property in a read operation.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.consolekeyinfo._1_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.consolekeyinfo._1_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.consolekeyinfo._1_1.vb)]"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    return:
      type: System.ConsoleModifiers
      description: "En binär kombination av uppräkningsvärdena. Det finns inget standardvärde."
  overload: System.ConsoleKeyInfo.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger om den angivna <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt är lika."
  remarks: "Två <xref:System.ConsoleKeyInfo>objekt är lika om motsvarande <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, och <xref:System.ConsoleKeyInfo.Modifiers%2A>Egenskaper är lika.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Det första objektet ska jämföras."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Det andra objektet ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger om den angivna <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> objekt som inte är lika."
  remarks: "Två <xref:System.ConsoleKeyInfo>objekt är lika om motsvarande <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, och <xref:System.ConsoleKeyInfo.Modifiers%2A>Egenskaper är lika.</xref:System.ConsoleKeyInfo.Modifiers%2A> </xref:System.ConsoleKeyInfo.Key%2A> </xref:System.ConsoleKeyInfo.KeyChar%2A> </xref:System.ConsoleKeyInfo>"
  syntax:
    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: "Det första objektet ska jämföras."
    - id: b
      type: System.ConsoleKeyInfo
      description: "Det andra objektet ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ConsoleKeyInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ConsoleKeyInfo.GetHashCode
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ConsoleKeyInfo.Key
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  nameWithType: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.ConsoleKeyInfo.#ctor*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals
  nameWithType: ConsoleKeyInfo.Equals
- uid: System.ConsoleKeyInfo.GetHashCode*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: ConsoleKeyInfo.GetHashCode
- uid: System.ConsoleKeyInfo.Key*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
- uid: System.ConsoleKeyInfo.KeyChar*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
- uid: System.ConsoleKeyInfo.Modifiers*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
- uid: System.ConsoleKeyInfo.op_Equality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality
  nameWithType: ConsoleKeyInfo.op_Equality
- uid: System.ConsoleKeyInfo.op_Inequality*
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality
  nameWithType: ConsoleKeyInfo.op_Inequality
