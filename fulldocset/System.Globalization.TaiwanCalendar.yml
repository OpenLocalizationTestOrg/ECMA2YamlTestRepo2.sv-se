### YamlMime:ManagedReference
items:
- uid: System.Globalization.TaiwanCalendar
  id: TaiwanCalendar
  children:
  - System.Globalization.TaiwanCalendar.#ctor
  - System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.TaiwanCalendar.AlgorithmType
  - System.Globalization.TaiwanCalendar.Eras
  - System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  - System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  - System.Globalization.TaiwanCalendar.MinSupportedDateTime
  - System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.TaiwanCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: TaiwanCalendar
  nameWithType: TaiwanCalendar
  fullName: System.Globalization.TaiwanCalendar
  type: Class
  summary: "Taiwan-kalender."
  remarks: "Taiwan kalendern fungerar precis som gregoriansk kalender, förutom att år och era är olika. Klassen TaiwanCalendar identifierar endast den aktuella era.      > [!NOTE] > Information om hur du använder klassen TaiwanCalendar och andra klasser i kalendern i .NET Framework finns [arbeta med kalendrar](~/add/includes/ajax-current-ext-md.md).       Skottår i kalendern Taiwan motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       Taiwan kalendern har 12 månader med 28 till 31 dagar: | Värdet för GetMonth | Månad | Dagar i vanliga år | Dagar i skottår |   |--------------------|-----------|--------------------------|------------------------|   | 1 | 1月 (januari) | 31 | 31 |   | 2 | 2月 (februari) | 28 | 29 |   | 3 | 3月 (mars) | 31 | 31 |   | 4 | 4月 (April) | 30 | 30 |   | 5 | 5月 (maj) | 31 | 31 |   | 6 | 6月 (juni) | 30 | 30 |   | 7 | 7月 (juli) | 31 | 31 |   | 8 | 8月 (augusti) | 31 | 31 |   | 9 | 9月 (September) | 30 | 30 |   | 10 | 10月 (oktober) | 31 | 31 |   | 11 | 11月 (November) | 30 | 30 |   | 12 | 12月 (December) | 31 | 31 |       Februari har 29 dagar under skottår och 28 under vanliga år.       Datumet 1 januari 2001 C.E. i gregoriansk kalender motsvarar den första dagen i januari år 90 av den aktuella era i Taiwan kalendern.       Varje <xref:System.Globalization.CultureInfo>stöder en uppsättning kalendrar.</xref:System.Globalization.CultureInfo> Den <xref:System.Globalization.CultureInfo.Calendar%2A>-egenskap returnerar standardkalender för kulturen, och <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>egenskapen returnerar en matris som innehåller alla kalendrar som stöds av kulturen.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Så här ändrar du den kalender som används av en <xref:System.Globalization.CultureInfo>genom att programmet ska ange <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen för <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>till en ny <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TaiwanCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: TaiwanCalendar()
  nameWithType: TaiwanCalendar.TaiwanCalendar()
  fullName: System.Globalization.TaiwanCalendar.TaiwanCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> klass."
  syntax:
    content: public TaiwanCalendar ();
    parameters: []
  overload: System.Globalization.TaiwanCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Det gick inte att initiera en <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> objektet på grund av kulturen information saknas."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är angivet antal månader från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. År tillhör den resulterande <xref:System.DateTime>påverkas om den resulterande månaden är utanför året i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel om den angivna månaden oktober som har 31 dagar, den angivna dagen är den 31: a dagen i månaden och värdet för den `months` parameter är 6, resulterande året är en mer än det angivna året, månaden resulterande April, och den resulterande dagen 30: e dag, vilket är den sista dagen i April.       Om värdet för den `months` parameter är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.t_6_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.t_6_1.cs)]"
  example:
  - "The following code example demonstrates the use of the AddMonths method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_6_2.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_6_2.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_6_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till månader.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Antalet månader att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet månader till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>är mindre än-120000.       - eller - <code>months</code> är större än 120000."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar ett <xref:System.DateTime>som är det angivna antalet år från den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Den dag-delen av den resulterande <xref:System.DateTime>påverkas om den resulterande dagen inte är en giltig dag i den resulterande månaden resulterande.</xref:System.DateTime> Den har ändrats till den sista giltiga dagen i den resulterande månaden resulterande. Den månad delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Den här implementeringen stöder endast den aktuella era. Därför <xref:System.ArgumentException>genereras om resulterande året ligger utanför era inom den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Den tid på dag delen av den resulterande <xref:System.DateTime>är densamma som den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Till exempel har februari 28 dagar utom under skottår när det har 29 dagar. Om det angivna datumet är den 29 dagen i februari under ett skottår och värdet för `years` är 1, resulterande datumet är 28 dagen i februari följande år.       Om `years` är negativ, den resulterande som <xref:System.DateTime>är äldre än den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Egenskapen för det returnerade <xref:System.DateTime>värdet alltid är lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Du kan behålla den <xref:System.DateTime.Kind%2A>-egenskapen för den `time` parameter genom att anropa den <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metoden som visas i följande exempel.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.t_12_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.t_12_1.cs)]"
  example:
  - "The following code example displays the use of the AddYears method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_12_2.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_12_2.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_12_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>som ska läggas till år.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Antalet år för att lägga till."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>De resultat från att lägga till det angivna antalet år till den angivna <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det resulterande <xref:System.DateTime>ligger utanför det tillåtna intervallet.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
  fullName: System.Globalization.TaiwanCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar ett värde som anger om den aktuella kalendern är sol-baserade, lunar-baserad eller en kombination av båda."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.t_2_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.t_2_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Returnerar alltid <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.Eras
  id: Eras
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: TaiwanCalendar.Eras
  fullName: System.Globalization.TaiwanCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar listan över epoker i den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref>."
  remarks: "Värdena i matrisen som returneras av den här egenskapen är tal som ska vara mellan 1 och det största antalet era. Det största antalet era returneras i det första matriselementet och det minsta värdet i era returneras i det sista elementet."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "En matris som består av ett element som värdet är alltid den aktuella era."
  overload: System.Globalization.TaiwanCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen i månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDayOfMonth method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_2_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_2_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_2_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen i månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar veckodagen i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "<xref:System.DayOfWeek>-Värdena är följande: | Värdet för DayOfWeek | som anger |   |---------------------|---------------------|   | Söndag | 星期日 |   | Måndag | 星期一 |   | Tisdag | 星期二 |   | Onsdag | 星期三 |   | Torsdag | 星期四 |   | Fredag | 星期五 |   | Lördag | 星期六 |</xref:System.DayOfWeek>"
  example:
  - "The following code example demonstrates the use of the GetDayOfWeek method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_16_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_16_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_16_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Ett <xref:System.DayOfWeek>värde som representerar dag i veckan i angivet <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.TaiwanCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar dagen på året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Dag på året definieras som antalet dagar från den första dagen på året. Till exempel GetDayOfYear för den första dagen i den första månaden returnerar 1 och GetDayOfYear för den sista dagen i den senaste månaden returnerar det totala antalet dagar i det aktuella året. Det totala antalet är detsamma som värdet som returneras av <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example demonstrates the use of the GetDayOfYear method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_13_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_13_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_13_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 366 som representerar dagen på året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar i den angivna månaden i det angivna året angivna era."
  remarks: "Den här metoden returnerar exempelvis 28 eller 29 för februari (`month` = 2), beroende på om `year` är ett skottår."
  example:
  - "The following example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/1aa062ee-33c0-43ad-963f-_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/1aa062ee-33c0-43ad-963f-_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/1aa062ee-33c0-43ad-963f-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar i den angivna månaden i det angivna året angivna era."
  overload: System.Globalization.TaiwanCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet dagar under det angivna året angivna era."
  remarks: "Den här metoden returnerar till exempel 365 eller 366, beroende på om `year` är ett skottår."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.t_1_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.t_1_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_1_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet dagar under den angivna era angivna året."
  overload: System.Globalization.TaiwanCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: TaiwanCalendar.GetEra(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar era i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Den <xref:System.Globalization.TaiwanCalendar>klassen identifierar endast den aktuella era.</xref:System.Globalization.TaiwanCalendar>"
  example:
  - "The following code example demonstrates the use of the GetEra method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_8_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_8_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_8_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar era i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: TaiwanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Beräknar leap månad för ett år och era."
  remarks: "I en kalender som stöder begreppet leap månaden kan leap månaden inträffa efter en viss månad eller efter en månad i ett år. Till exempel den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar ett tal mellan 1 och 13 som anger den månad som är associerad med ett visst datum.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Om det finns en leap månad mellan åttonde och nionde månader år, den <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metoden returnerar 8 för den åttonde månaden, 9 för leap åttonde månad och 10 för den nionde månaden.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett år."
    - id: era
      type: System.Int32
      description: "En tidsperiod."
    return:
      type: System.Int32
      description: "Det returnera värdet är alltid 0 eftersom den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> klassen stöder inte begreppet leap i månaden."
  overload: System.Globalization.TaiwanCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: TaiwanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetMonth method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_15_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_15_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_15_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar antalet månader under det angivna året angivna era."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_7_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.t_7_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.t_7_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Int32
      description: "Antalet månader under det angivna året angivna era."
  overload: System.Globalization.TaiwanCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar veckan på året som innehåller datum i den angivna <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Den här metoden kan användas för att bestämma antalet veckor år genom att ange den `time` parametern till den sista dagen på året.       Den <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>egenskapen innehåller kultur-specifika värden som kan användas för den `rule` och `firstDayOfWeek` parametrar.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>Egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>innehåller som standard <xref:System.DayOfWeek>värdet som representerar den första dagen i veckan för en specifik kultur, använda kalendern som anges i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>Egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>innehåller som standard <xref:System.Globalization.CalendarWeekRule>värdet som definierar en kalendervecka för en specifik kultur, använda kalendern som anges i <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>egenskapen <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Till exempel i <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A>metod för den 1 januari returnerar 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/f44eb65b-9f5c-464b-9830-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/f44eb65b-9f5c-464b-9830-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/f44eb65b-9f5c-464b-9830-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "En av de <xref:System.Globalization.CalendarWeekRule>värden som definierar en kalendervecka.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "En av de <xref:System.DayOfWeek>värden som representerar den första dagen i veckan.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "Ett positivt heltal som representerar veckan på året som innehåller datum i den <code> time </code> parameter."
  overload: System.Globalization.TaiwanCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>eller <code>firstDayOfWeek</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>rule</code> är inte ett giltigt <xref:System.Globalization.CalendarWeekRule> värde."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: TaiwanCalendar.GetYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetYear method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_5_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_5_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_5_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Den <xref:System.DateTime>att läsa.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Ett heltal som representerar året i angivet <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna datumet i den angivna era är ett skottår dag."
  remarks: "Skottår i kalendern Taiwan motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap dag är en dag som uppstår endast i ett skottår. Den 29 dagen i februari är till exempel endast leap dagen."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/2b9d593e-4675-4408-97f3-_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/cpp/2b9d593e-4675-4408-97f3-_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/csharp/2b9d593e-4675-4408-97f3-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna dagen är leap om dagen. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om den angivna månaden i det angivna året angivna era är ett skottår månad."
  remarks: "Skottår i kalendern Taiwan motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar.       En leap månad är en hel månad som sker endast under ett skottår. Kalenderns Taiwan saknar leap månader."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/04a1c248-535f-415d-ac02-_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/04a1c248-535f-415d-ac02-_1.vb)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/04a1c248-535f-415d-ac02-_1.cs)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "Den här metoden returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, såvida inte åsidosätts av en härledd klass."
  overload: System.Globalization.TaiwanCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna året angivna era är ett skottår."
  remarks: "Skottår i kalendern Taiwan motsvarar samma skottår i gregoriansk kalender. Ett skottår i gregoriansk kalender definieras som ett gregorianskt år som är jämnt delbart av fyra utom är delbart med 100. Gregorianskt år som delbart med 400 är dock skottår. Ett vanligt år har 365 dagar och ett skottår har 366 dagar."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.t_14_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_14_1.vb)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.t_14_1.cs)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna året är ett skottår; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det senaste datum och tidpunkt som stöds av den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> klass."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_0_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_0_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Senaste datum och tid som stöds av den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> -klassen, som motsvarar den senaste tidpunkt då den 31 December 9999 C.E. i gregoriansk kalender."
  overload: System.Globalization.TaiwanCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar det tidigaste datum och tid som stöds av den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> klass."
  remarks: "Microsoft Visual Basic representerar den tid på dagen som den angivna tiden på det tidigaste datum som stöds av <xref:System.DateTime>, vilket är den 1 januari 0001 C.E.</xref:System.DateTime> Men den <xref:System.Globalization.TaiwanCalendar>klassen stöder inte det tidigaste datumet.</xref:System.Globalization.TaiwanCalendar> Därför om programmet anropar en metod för att formatera tid på dagen som använder den aktuella kalendern men anger inte en Formatspecificeraren, formateringen i ISO 8601 sorterbar (&quot;s&quot;) som används i tidsvärdet mönster Formatspecificeraren i stället för standard Allmänt (&quot;G&quot;) tidsvärdet mönster formatidentifierare. Mer information finns i [standarddatum och tid formatsträngar](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_1_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_1_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Det tidigaste datum och tid som stöds av den <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> -klassen, som motsvarar det första och med 1 januari 1912 C.E. i gregoriansk kalender."
  overload: System.Globalization.TaiwanCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar en <xref:System.DateTime>som har angetts till angivet datum och tid i den angivna era.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett heltal som representerar året."
    - id: month
      type: System.Int32
      description: "Ett heltal mellan 1 och 12 som representerar månaden."
    - id: day
      type: System.Int32
      description: "Ett heltal mellan 1 och 31 som representerar dagen."
    - id: hour
      type: System.Int32
      description: "Ett heltal mellan 0 och 23 som representerar timmen."
    - id: minute
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar minut."
    - id: second
      type: System.Int32
      description: "Ett heltal mellan 0 och 59 som representerar sekund."
    - id: millisecond
      type: System.Int32
      description: "Ett heltal mellan 0 och 999 som representerar millisekunder."
    - id: era
      type: System.Int32
      description: "Ett heltal som representerar era."
    return:
      type: System.DateTime
      description: "Den <xref:System.DateTime>som har angetts till angivet datum och tid i den aktuella era.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern.       - eller - <code>month</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>day</code> ligger utanför det intervall som stöds i kalendern.       - eller - <code>hour</code> är mindre än noll eller större än 23.       - eller - <code>minute</code> är mindre än noll eller större än 59.       - eller - <code>second</code> är mindre än noll eller större än 59.       - eller - <code>millisecond</code> är mindre än noll eller större än 999.       - eller - <code>era</code> ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: TaiwanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.TaiwanCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konverterar år till ett årtal med hjälp av den <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax*>egenskapen fastställa lämpliga talet.</xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax*>"
  remarks: "Den här metoden implementerar <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Eftersom året i Taiwan kalendern är vanligtvis mindre än fyra siffror lång, den här implementeringen alltid returnerar värdet för den `year` parameter.       ToFourDigitYear stöder ett årtal eller ett fyrsiffriga år. Skicka ett årtal värde (mindre än 100) medför metoden att konvertera värdet till ett fyrsiffrigt värde enligt den <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A>-värde som representerar på lämplig talet.</xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> Om programmet tillhandahåller ett årtal-värde som ligger inom intervallet kalender som stöds till ToFourDigitYear, returnerar metoden faktiska indatavärdet. Om programmet tillhandahåller ett fyrsiffrigt-värde som är utanför intervallet som stöds kalender, eller om det finns ett negativt värde, genereras metoden ett undantag."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Ett två siffror eller fyra siffror heltal som representerar året ska konverteras."
    return:
      type: System.Int32
      description: "Ett heltal som innehåller fyra siffror representation av <code> year </code>."
  overload: System.Globalization.TaiwanCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ligger utanför det intervall som stöds i kalendern."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
  fullName: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar eller anger det senaste året för ett urval av 100 år som representeras av ett 2 årtal."
  remarks: "Den här egenskapen implementerar <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Eftersom året i Taiwan kalendern är vanligtvis mindre än fyra siffror lång, den här implementeringen returnerar 99 som standard och påverkar inte returvärdet för <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Det senaste året för ett intervall om 100 år som representeras av ett 2 årtal."
  overload: System.Globalization.TaiwanCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet som anges i en set-åtgärd är mindre än 99.       - eller - värdet som anges i en set-åtgärd är större än <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den aktuella instansen är skrivskyddad i set-åtgärd."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.TaiwanCalendar.#ctor
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TaiwanCalendar()
  nameWithType: TaiwanCalendar.TaiwanCalendar()
  fullName: System.Globalization.TaiwanCalendar.TaiwanCalendar()
- uid: System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.TaiwanCalendar.AlgorithmType
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
  fullName: System.Globalization.TaiwanCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.TaiwanCalendar.Eras
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: Eras
  nameWithType: TaiwanCalendar.Eras
  fullName: System.Globalization.TaiwanCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: TaiwanCalendar.GetEra(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetEra(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: TaiwanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: TaiwanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetMonth(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: TaiwanCalendar.GetYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetYear(DateTime)
- uid: System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MinSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: TaiwanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.TaiwanCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
  fullName: System.Globalization.TaiwanCalendar.TwoDigitYearMax
- uid: System.Globalization.TaiwanCalendar.#ctor*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TaiwanCalendar
  nameWithType: TaiwanCalendar.TaiwanCalendar
- uid: System.Globalization.TaiwanCalendar.AddMonths*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddMonths
  nameWithType: TaiwanCalendar.AddMonths
- uid: System.Globalization.TaiwanCalendar.AddYears*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddYears
  nameWithType: TaiwanCalendar.AddYears
- uid: System.Globalization.TaiwanCalendar.AlgorithmType*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
- uid: System.Globalization.TaiwanCalendar.Eras*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: Eras
  nameWithType: TaiwanCalendar.Eras
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: TaiwanCalendar.GetDayOfMonth
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: TaiwanCalendar.GetDayOfWeek
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: TaiwanCalendar.GetDayOfYear
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: TaiwanCalendar.GetDaysInMonth
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: TaiwanCalendar.GetDaysInYear
- uid: System.Globalization.TaiwanCalendar.GetEra*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetEra
  nameWithType: TaiwanCalendar.GetEra
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: TaiwanCalendar.GetLeapMonth
- uid: System.Globalization.TaiwanCalendar.GetMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonth
  nameWithType: TaiwanCalendar.GetMonth
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: TaiwanCalendar.GetMonthsInYear
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: TaiwanCalendar.GetWeekOfYear
- uid: System.Globalization.TaiwanCalendar.GetYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetYear
  nameWithType: TaiwanCalendar.GetYear
- uid: System.Globalization.TaiwanCalendar.IsLeapDay*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: TaiwanCalendar.IsLeapDay
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: TaiwanCalendar.IsLeapMonth
- uid: System.Globalization.TaiwanCalendar.IsLeapYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: TaiwanCalendar.IsLeapYear
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.ToDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: TaiwanCalendar.ToDateTime
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: TaiwanCalendar.ToFourDigitYear
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
