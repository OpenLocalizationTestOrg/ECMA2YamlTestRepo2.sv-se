### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "Representerar en rad med data i en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "DataRow och <xref:System.Data.DataColumn>objekt är primära komponenterna i en <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> Använd DataRow-objektet och dess egenskaper och metoder för att hämta och utvärdera; Infoga, ta bort och uppdatera värden i <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Den <xref:System.Data.DataRowCollection>representerar de faktiska DataRow-objekt i den <xref:System.Data.DataTable>, och som <xref:System.Data.DataColumnCollection>innehåller <xref:System.Data.DataColumn>objekt som beskriver schemat i <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> Använd den överlagrade <xref:System.Data.DataRow.Item%2A>egenskapen returnerar eller anger värdet för ett <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.DataRow.Item%2A>       Använd <xref:System.Data.DataRow.HasVersion%2A>och <xref:System.Data.DataRow.IsNull%2A>Egenskaper för att avgöra status för en viss rad-värdet och <xref:System.Data.DataRow.RowState%2A>egenskapen för att avgöra tillståndet för raden i förhållande till dess överordnade <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.IsNull%2A> </xref:System.Data.DataRow.HasVersion%2A>       Så här skapar du en ny DataRow den <xref:System.Data.DataTable.NewRow%2A>metod för den <xref:System.Data.DataTable>objekt.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> När du har skapat ett nytt DataRow-objekt använder du <xref:System.Data.DataRowCollection.Add%2A>metoden för att lägga till nya DataRow till <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Add%2A> Slutligen anropa den <xref:System.Data.DataRow.AcceptChanges%2A>metod för den <xref:System.Data.DataTable>objekt för att bekräfta att lägga.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> Mer information om att lägga till data till en <xref:System.Data.DataTable>, se [att lägga till Data till en DataTable](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       Du kan ta bort en DataRow från den <xref:System.Data.DataRowCollection>genom att anropa den <xref:System.Data.DataRowCollection.Remove%2A>metod för den <xref:System.Data.DataRowCollection>, eller genom att anropa den <xref:System.Data.DataRow.Delete%2A>-metoden i DataRow-objektet.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> Den <xref:System.Data.DataRowCollection.Remove%2A>metoden tar bort raden från samlingen.</xref:System.Data.DataRowCollection.Remove%2A> Däremot <xref:System.Data.DataRow.Delete%2A>markerar DataRow för borttagning.</xref:System.Data.DataRow.Delete%2A> Den faktiska borttagningen inträffar när du anropar <xref:System.Data.DataRow.AcceptChanges%2A>metod.</xref:System.Data.DataRow.AcceptChanges%2A> Genom att anropa <xref:System.Data.DataRow.Delete%2A>, kan via programmering du vilka rader som har markerats för borttagning innan du tar bort dem faktiskt.</xref:System.Data.DataRow.Delete%2A> Mer information finns i [DataRow borttagning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av DataRow. Skapar en rad från tillverkaren. Endast för intern användning..."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "Builder"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genomför alla ändringar som gjorts i den här raden sedan du senast AcceptChanges anropades."
  remarks: "När du anropar AcceptChanges, den <xref:System.Data.DataRow.EndEdit%2A>metoden anropas implicit om du vill avsluta redigeringar.</xref:System.Data.DataRow.EndEdit%2A> Om den <xref:System.Data.DataRow.RowState%2A>av raden har lagts till eller ändrade den <xref:System.Data.DataRow.RowState%2A>blir oförändrade.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Om den <xref:System.Data.DataRow.RowState%2A>har tagits bort, tas bort raden.</xref:System.Data.DataRow.RowState%2A>       Finns det <xref:System.Data.DataRow.BeginEdit%2A>metod för mer information.</xref:System.Data.DataRow.BeginEdit%2A>       Den <xref:System.Data.DataTable>klassen har också en <xref:System.Data.DataTable.AcceptChanges%2A>metod som påverkar ändringar som gjorts i hela tabellen.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> Mer information och ett exempel som visar hur du godkänna eller avvisa ändringar till enskilda datarader finns [AcceptChanges och RejectChanges](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Startar en edit-åtgärd på en <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt."
  remarks: "Använd metoden BeginEdit för att placera en <xref:System.Data.DataRow>i redigeringsläge.</xref:System.Data.DataRow> I det här läget är händelser tillfälligt, så att användaren ändrar mer än en rad utan att starta valideringsregler. Om du måste se till att värdet för kolumnen för en totala är lika med värdena för debiteringen och kredit kolumner i en rad kan placera du varje rad i redigeringsläge för att inaktivera validering av radvärdena tills användaren försöker genomföra värdena.       BeginEdit-metoden anropas implicit när användaren ändrar värdet för en databunden kontroll. den <xref:System.Data.DataRow.EndEdit%2A>metoden anropas implicit när du anropar den <xref:System.Data.DataTable.AcceptChanges%2A>metod för den <xref:System.Data.DataTable>objekt.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> I den här redigeringsläge i <xref:System.Data.DataRow>lagrar representationer av den ursprungliga och nya föreslagna värden.</xref:System.Data.DataRow> Därför så länge den <xref:System.Data.DataRow.EndEdit%2A>metoden har inte anropats, du kan hämta den ursprungliga eller föreslagna versionen genom att skicka antingen `DataRowVersion.Original` eller `DataRowVersion.Proposed` för den `version` parameter för den <xref:System.Data.DataRow.Item%2A>egenskapen.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> Du kan också avbryta alla ändringar nu genom att anropa den <xref:System.Data.DataRow.CancelEdit%2A>metoden.</xref:System.Data.DataRow.CancelEdit%2A>       För att se om raden innehåller en ursprungliga eller föreslagna värdet, anropa den <xref:System.Data.DataRow.HasVersion%2A>metoden.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > I BeginEdit metoden upphäver tillfälligt <xref:System.Data.DataTable.RowChanging>händelser, men `delete` åtgärden inte.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoden anropades i den <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> händelse."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Metoden anropades på en borttagen rad."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avbryter den aktuella redigeringen på raden."
  remarks: "Finns det <xref:System.Data.DataRow.BeginEdit%2A>metod för mer information.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoden anropades i den <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> händelse."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort fel för raden. Detta inkluderar den <> </> *> och fel med <> </> *>."
  remarks: "Använd <xref:System.Data.DataRow.SetColumnError%2A>och <xref:System.Data.DataRow.GetColumnError%2A>att ställa in och returnerar fel för enskilda kolumner.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       Ange den <xref:System.Data.DataRow.RowError%2A>egenskapen anges ett fel som gäller för hela raden.</xref:System.Data.DataRow.RowError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Om den <xref:System.Data.DataRow.RowState%2A>av raden har lagts till i <xref:System.Data.DataRow.RowState%2A>blir `Detached` och raden tas bort från tabellen när du anropar <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       Den <xref:System.Data.DataRow.RowState%2A>blir `Deleted` när du använder Delete-metoden i en befintlig <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Den förblir `Deleted` förrän du anropar <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> Just nu är den <xref:System.Data.DataRow>tas bort från tabellen.</xref:System.Data.DataRow>       Ta bort ska inte anropas i en slinga foreach när söka igenom en <xref:System.Data.DataRowCollection>objektet.</xref:System.Data.DataRowCollection> Ta bort ändrar tillstånd i mängden.       En borttagen rad kan vara återställda genom att anropa <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A>      > [!NOTE] > Den <xref:System.Data.DataRow.BeginEdit%2A>metoden upphäver tillfälligt <xref:System.Data.DataTable.RowChanging>händelser, men borttagningen inte.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Den <xref href=&quot;System.Data.DataRow&quot;> </xref> har redan tagits bort."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Slutar redigera pågår på raden."
  remarks: "När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.RowChanging>händelse.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoden anropades i den <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> händelse."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Redigera bröt mot ett villkor."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Raden tillhör tabellen och redigera ett försök gjordes att ändra värdet för en skrivskyddad kolumn."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Redigera ett försök gjordes att placera ett null-värde i en kolumn där <xref:System.Data.DataColumn.AllowDBNull*>är false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar underordnat rader i det här <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returneras av den <xref:System.Data.DataTable.ChildRelations%2A>egenskapen.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relationen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den här versionen av data."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar underordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returneras av den <xref:System.Data.DataTable.ChildRelations%2A>egenskapen.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "Den <xref:System.Data.DataRelation.RelationName*>av den <xref href=&quot;System.Data.DataRelation&quot;> </xref> ska användas.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar underordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returneras av den <xref:System.Data.DataTable.ChildRelations%2A>egenskapen.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Om <xref:System.Data.DataRowVersion>anges vilken version som används beror på den <xref:System.Data.DataRow.RowState%2A>för rad där `GetChildRows` har anropats.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Om raden som `GetChildRows` anropas har en `RowState` av `Modified`, `New`, eller `Unchanged`, <xref:System.Data.DataRowVersion>version av raden som ska användas för hämtning av underordnade rader med matchande värdena i aktuell version.</xref:System.Data.DataRowVersion> Om raden som `GetChildRows` anropas har en `RowState` av `Deleted`, <xref:System.Data.DataRowVersion>version av raden som ska användas för hämtning av underordnade rader med matchande värdena i de ursprungliga versionerna.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av data som ska hämtas. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den begärda <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar underordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returneras av den <xref:System.Data.DataTable.ChildRelations%2A>egenskapen.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Om <xref:System.Data.DataRowVersion>anges vilken version som används beror på den <xref:System.Data.DataRow.RowState%2A>för rad där `GetChildRows` har anropats.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Om raden som `GetChildRows` anropas har en `RowState` av `Modified`, `New`, eller `Unchanged`, <xref:System.Data.DataRowVersion>version av raden som ska användas för hämtning av underordnade rader med matchande värdena i aktuell version.</xref:System.Data.DataRowVersion> Om raden som `GetChildRows` anropas har en `RowState` av `Deleted`, <xref:System.Data.DataRowVersion>version av raden som ska användas för hämtning av underordnade rader med matchande värdena i de ursprungliga versionerna.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "Den <xref:System.Data.DataRelation.RelationName*>av den <xref href=&quot;System.Data.DataRelation&quot;> </xref> ska användas.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av data som ska hämtas. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den begärda <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar felbeskrivningen av den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Använd den <xref:System.Data.DataRow.SetColumnError%2A>metod för att ange kolumnen fel.</xref:System.Data.DataRow.SetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A> Du kan också den <xref:System.Data.DataTable.GetErrors%2A>metod för den <xref:System.Data.DataTable>returnerar alla rader med fel.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "Texten i felbeskrivningen."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar felbeskrivningen för kolumnen anges av indexet."
  remarks: "Använd den <xref:System.Data.DataRow.SetColumnError%2A>metod för att ange kolumnen fel.</xref:System.Data.DataRow.SetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Det nollbaserade indexet för kolumnen."
    return:
      type: System.String
      description: "Texten i felbeskrivningen."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Den <code> columnIndex </code> argumentet är utanför giltigt intervall."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar felbeskrivningen för en kolumn som anges i namnet."
  remarks: "Använd den <xref:System.Data.DataRow.SetColumnError%2A>metod för att ange kolumnen fel.</xref:System.Data.DataRow.SetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen."
    return:
      type: System.String
      description: "Texten i felbeskrivningen."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar en matris med kolumner som innehåller fel."
  remarks: "GetColumnsInError kan du minska antalet <xref:System.Data.DataColumn>objekt som måste bearbetas för fel genom att endast de kolumner som har ett fel.</xref:System.Data.DataColumn> Fel kan anges till enskilda kolumner med den <xref:System.Data.DataRow.SetColumnError%2A>metoden.</xref:System.Data.DataRow.SetColumnError%2A> För att ytterligare minska antalet bearbetning, granska den <xref:System.Data.DataRow.HasErrors%2A>egenskapen för den <xref:System.Data.DataRow>klassen för att avgöra om en <xref:System.Data.DataRow>har fel innan du anropar GetColumnsInError.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       Använd den <xref:System.Data.DataRow.ClearErrors%2A>metod för att rensa alla fel på raden.</xref:System.Data.DataRow.ClearErrors%2A> Detta inkluderar <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "En matris med <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekt som innehåller fel."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "Överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref> för den aktuella raden."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> relation </code> tillhör inte den <xref href=&quot;System.Data.DataTable&quot;> </xref>.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "En underordnad rad har flera överordnade."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Den här raden tillhör inte den underordnade tabellen för den <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte en tabell."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "Överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref> för den aktuella raden."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "En underordnad rad har flera överordnade."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av data som ska hämtas."
    return:
      type: System.Data.DataRow
      description: "Överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref> för den aktuella raden."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       Den <code> relation </code> tillhör inte den här tabellen överordnade relationer."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "En underordnad rad har flera överordnade."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationens underordnad tabell är inte tabellen raden tillhör."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte en tabell."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den här versionen av data."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden."
    return:
      type: System.Data.DataRow
      description: "Överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref> för den aktuella raden."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "En underordnad rad har flera överordnade."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den begärda <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar överordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref href=&quot;System.Data.DataRelation&quot;> </xref> tillhör inte den här raden <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationens underordnad tabell är inte tabellen raden tillhör."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar överordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av metoden GetParentRows.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar överordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av data som ska hämtas."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref href=&quot;System.Data.DataRelation&quot;> </xref> tillhör inte den här raden <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationens underordnad tabell är inte tabellen raden tillhör."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den begärda <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar överordnat rader i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med hjälp av den angivna <xref:System.Data.DataRelation.RelationName*>av en <xref href=&quot;System.Data.DataRelation&quot;> </xref>, och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "I en <xref:System.Data.DataSet>, insamling av alla överordnade <xref:System.Data.DataRelation>objekt för datamängden som returneras av den <xref:System.Data.DataRow.GetParentRows%2A>metoden.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Den <xref:System.Data.DataTable>innehåller också en uppsättning <xref:System.Data.DataRelation>objekt som returnerats av den <xref:System.Data.DataTable.ParentRelations%2A>egenskapen.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Använd den <xref:System.Data.DataRow.HasVersion%2A>egenskapen för att avgöra om den <xref:System.Data.DataRowVersion>som du vill finns.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av data som ska hämtas. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "En matris med <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt eller en matris med längden noll."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen och raden hör inte till samma tabell."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den begärda <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om det finns fel i en rad."
  remarks: "`HasErrors`Returnerar `true` eventuella <xref:System.Data.DataColumn>objektet på raden innehåller ett fel, eller om den <xref:System.Data.DataRow.RowError%2A>egenskapen för den <xref:System.Data.DataRow>är inte en tom sträng.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       När du validerar data, kan du ange ett fel på någon kolumn i en rad. En kolumn, när den visas i den <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>styra, markeras med ett rött utropstecken att meddela användaren att kolumnen är fel.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       Använd <xref:System.Data.DataRow.SetColumnError%2A>Så här anger du ett fel på någon kolumn.</xref:System.Data.DataRow.SetColumnError%2A>       Använd den <xref:System.Data.DataRow.GetColumnError%2A>och `GetColumnsInError` metoder för att returnera kolumner med fel.</xref:System.Data.DataRow.GetColumnError%2A>       Den <xref:System.Data.DataRow.ClearErrors%2A>metoden rensar alla fel för raden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om raden innehåller ett fel. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om en angiven version finns."
  remarks: "Finns det <xref:System.Data.DataRow.BeginEdit%2A>metod för mer information.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av raden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om versionen finns; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref> innehåller ett null-värde."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kolumnen innehåller ett null-värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om kolumnen med det angivna indexet innehåller ett null-värde."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Det nollbaserade indexet för kolumnen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kolumnen innehåller ett null-värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om namngiven kolumn innehåller ett null-värde."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kolumnen innehåller ett null-värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref> och <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> innehåller ett null-värde."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av raden. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kolumnen innehåller ett null-värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger data som lagras i den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en omedelbar redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "En <xref href=&quot;System.Data.DataColumn&quot;> </xref> som innehåller data."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumnen tillhör inte den här tabellen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Ett försök gjordes att ange ett värde för en borttagen rad."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Datatyperna för värdet och kolumnen matchar inte."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger de data som lagras i kolumnen som anges av indexet."
  remarks: "När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Det nollbaserade indexet för kolumnen."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Inträffar när du försöker ange ett värde för en borttagen rad."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Den <code> columnIndex </code> argumentet är utanför giltigt intervall."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Inträffar när du ställer in värdet och det nya värdet <xref:System.Type>inte matchar <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger de data som lagras i kolumnen som anges."
  remarks: "När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en omedelbar redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumnen som anges av <code> columnName </code> kan inte hittas."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Inträffar när du försöker ange ett värde för en borttagen rad."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Inträffar när du anger ett värde och dess <xref:System.Type>matchar inte <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Inträffar när du försöker infoga ett null-värde i en kolumn där <xref:System.Data.DataColumn.AllowDBNull*>är inställd på <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den angivna versionen av data som lagras i den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Den `version` ska inte förväxlas med den <xref:System.Data.DataRow.RowState%2A>egenskapen.</xref:System.Data.DataRow.RowState%2A> Den `version` argumentet beskriver tillståndet för de data som finns i kolumnen i förhållande till den ursprungliga kolumnvärde.       När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en omedelbar redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "En <xref href=&quot;System.Data.DataColumn&quot;> </xref> som innehåller information om kolumnen."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av raden som du vill. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumnen tillhör inte tabellen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> column </code> argumentet innehåller null."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den här versionen av data."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar data som lagras i kolumnen som anges av index och versionen av data som ska hämtas."
  remarks: "Du kan bara skapa eller uppdatera en rad när du anropar den <xref:System.Data.DataRow.BeginEdit%2A>metoden; på samma sätt <xref:System.Data.DataRow.EndEdit%2A>metoden måste anropas för att genomföra redigera</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> När du anropar den <xref:System.Data.DataRow.EndEdit%2A>metoden och innan du anropar den <xref:System.Data.DataRow.AcceptChanges%2A>metoden interna framställningar av ursprungligt och nya föreslagna värdena lagras.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> Därför förrän du anropar den <xref:System.Data.DataRow.AcceptChanges%2A>, du kan använda den `version` argumentet att ange vilken version av ett kolumnvärde du behöver, antingen i `DataRowVersion.Original` eller `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> Men så fort du anropar den <xref:System.Data.DataRow.AcceptChanges%2A>metoden version av kolumnen återgår till `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> Om raden är ny, du kan också skicka `DataRowVersion.Default` för parametern för att hämta kolumnens standardvärdet. Vid sändning av `DataRowVersion.Current`, egenskapen returnerar aktuellt värde, oavsett dess version kan vara.      > [!NOTE] > Den <xref:System.Data.DataRow.BeginEdit%2A>metoden anropas implicit när du ändrar du värdet för en databunden kontroll eller när en <xref:System.Data.DataRow>objektet läggs till i <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A>metoden anropas implicit när du anropar följande metoder: den <xref:System.Data.DataRow.AcceptChanges%2A>metod för den <xref:System.Data.DataRow>objekt, den <xref:System.Data.DataTable.AcceptChanges%2A>metod för den <xref:System.Data.DataTable>objektet, eller <xref:System.Data.DataRow.CancelEdit%2A>metoden.</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       Däremot kommer den <xref:System.Data.DataRowVersion>uppräkningen `Current` returnerar version av data efter den <xref:System.Data.DataRow.EndEdit%2A>metoden har anropats.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       Den `version` argumentet ska inte förväxlas med den <xref:System.Data.DataRow.RowState%2A>egenskapen.</xref:System.Data.DataRow.RowState%2A> Den `version` argumentet beskriver tillståndet för de data som finns i kolumnen i förhållande till den ursprungliga kolumnvärde. <xref:System.Data.DataRow.RowState%2A>Egenskapen beskriver tillståndet för hela raden i förhållande till dess överordnade <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en omedelbar redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Det nollbaserade indexet för kolumnen."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av raden som du vill. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Den <code> columnIndex </code> argumentet är utanför giltigt intervall."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Datatyperna för värdet och kolumnen matchar inte."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den här versionen av data."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Ett försök gjordes att ange ett värde för en borttagen rad."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den angivna versionen av data som lagras i kolumnen med namnet."
  remarks: "Versionen ska inte förväxlas med den <xref:System.Data.DataRow.RowState%2A>egenskapen.</xref:System.Data.DataRow.RowState%2A> Den `version` argumentet beskriver tillståndet för de data som finns i kolumnen i förhållande till den ursprungliga kolumnvärde. <xref:System.Data.DataRow.RowState%2A>Egenskapen beskriver tillståndet för hela raden i förhållande till dess överordnade <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       När du anger egenskapen ett undantag genereras om ett undantag som uppstår i den <xref:System.Data.DataTable.ColumnChanging>händelse.</xref:System.Data.DataTable.ColumnChanging>       Om det här är en omedelbar redigering finns <xref:System.Data.DataRow.EndEdit%2A>för undantag som kan genereras.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen."
    - id: version
      type: System.Data.DataRowVersion
      description: "En av de <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> värden som anger vilken version av raden som du vill. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller data.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumnen som anges av <code> columnName </code> kan inte hittas."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Datatyperna för värdet och kolumnen matchar inte."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Raden har inte den här versionen av data."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Raden har tagits bort."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger alla värden för den här raden via en matris."
  remarks: "Du kan använda den här egenskapen för att ange eller hämta värden för den här raden via en matris. Om du använder den här egenskapen ange värden för måste matrisen ha samma storlek och ordning som kolumnen samling. Skicka `null` ItemArray anger att inget värde har angetts.       Användare kan skapa undantag i den <xref:System.Data.DataTable.ColumnChanging>händelse eller <xref:System.Data.DataTable.RowChanging>händelse.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "En matris av typen <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Matrisen är större än antalet kolumner i tabellen."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Ett värde i matrisen matchar inte dess <xref:System.Data.DataColumn.DataType*>i dess respektive <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Redigera bröt mot ett villkor."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Redigera försökte ändra värdet för en skrivskyddad kolumn."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Redigera försökt lägga till ett null-värde i en kolumn där <xref:System.Data.DataColumn.AllowDBNull*>av den <xref href=&quot;System.Data.DataColumn&quot;> </xref> objektet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Raden har tagits bort."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avvisar alla ändringar som gjorts till raden eftersom <xref:System.Data.DataRow.AcceptChanges*>senast anropades.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "När du anropar metoden RejectChanges den <xref:System.Data.DataRow.CancelEdit%2A>metoden anropas implicit om du vill avbryta alla ändringar.</xref:System.Data.DataRow.CancelEdit%2A> Om <xref:System.Data.DataRow.RowState%2A>har tagits bort eller ändrats, raden återgår till sina föregående värden och <xref:System.Data.DataRow.RowState%2A>blir oförändrade.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Om den <xref:System.Data.DataRow.RowState%2A>har lagts till i raden har tagits bort.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Raden tillhör inte tabellen."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger anpassade felbeskrivningen för en rad."
  remarks: "Använder den <xref:System.Data.DataRow.HasErrors%2A>egenskapen för att först ta reda på om en <xref:System.Data.DataRow>innehåller fel.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "Den text som beskriver ett fel."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar det aktuella tillståndet för raden avseende dess relation till den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: 'Värdet för RowState beror på två faktorer: typ av åtgärden har utförts på raden och huruvida <xref:System.Data.DataRow.AcceptChanges%2A>har anropats för <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "En av de <xref href=&quot;System.Data.DataRowState&quot;> </xref> värden."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Ändringar av <xref:System.Data.DataRow.RowState%2A>av en <xref:System.Data.DataRow>till `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Om inte den aktuella raden är antingen en `Unchanged` eller en `Added` tillstånd, den utlöser en <xref:System.InvalidOperationException>med meddelandet som `SetAdded` kan endast anropas på en `DataRow` -instans där den `RowState` är `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger felbeskrivningen för en kolumn har angetts som en <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Om du vill kontrollera felbeskrivningar använder den <xref:System.Data.DataRow.GetColumnError%2A>metoden.</xref:System.Data.DataRow.GetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>egenskap.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>       Om `null` eller en tom sträng skickades som den `error` parameter, den <xref:System.Data.DataRow>fungerar som om inga fel har angetts och <xref:System.Data.DataRow.HasErrors%2A>egenskapen returneras false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Ange en beskrivning för anpassade fel på raden hela den <xref:System.Data.DataRow.RowError%2A>egenskapen.</xref:System.Data.DataRow.RowError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Den <xref href=&quot;System.Data.DataColumn&quot;> </xref> ange felbeskrivningen för."
    - id: error
      type: System.String
      description: "Felbeskrivning."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger felbeskrivningen för en kolumn som anges av indexet."
  remarks: "Metoden som används för att ange anpassade felbeskrivningar för angivna kolumner. Du kan använda den <xref:System.Windows.Forms.ErrorProvider>Visa texten för felet.</xref:System.Windows.Forms.ErrorProvider>       Om du vill kontrollera felbeskrivningar använder den <xref:System.Data.DataRow.GetColumnError%2A>metoden.</xref:System.Data.DataRow.GetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>egenskap.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>       Om `null` eller en tom sträng skickades som den `error` parameter, den <xref:System.Data.DataRow>fungerar som om inga fel har angetts och <xref:System.Data.DataRow.HasErrors%2A>egenskapen returneras false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Ange en beskrivning för anpassade fel på raden hela den <xref:System.Data.DataRow.RowError%2A>egenskapen.</xref:System.Data.DataRow.RowError%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>       Att ställa in som gäller för hela raden den <xref:System.Data.DataRow.RowError%2A>egenskapen.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Det nollbaserade indexet för kolumnen."
    - id: error
      type: System.String
      description: "Felbeskrivning."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Den <code> columnIndex </code> argumentet är utanför intervallet"
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger felbeskrivningen för en kolumn som anges i namnet."
  remarks: "Namnet på en kolumn har angetts med <xref:System.Data.DataColumn.ColumnName%2A>egenskapen för <xref:System.Data.DataColumn>klassen.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A>       Om du vill kontrollera felbeskrivningar använder den <xref:System.Data.DataRow.GetColumnError%2A>metoden.</xref:System.Data.DataRow.GetColumnError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>egenskap.</xref:System.Data.DataRow.HasErrors%2A> Därför kan du använda den <xref:System.Data.DataRow.GetColumnsInError%2A>metod för att hämta alla kolumner med fel.</xref:System.Data.DataRow.GetColumnsInError%2A>       Om `null` eller en tom sträng skickades som den `error` parameter, den <xref:System.Data.DataRow>fungerar som om inga fel har angetts och <xref:System.Data.DataRow.HasErrors%2A>egenskapen returneras false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Ange en beskrivning för anpassade fel på raden hela den <xref:System.Data.DataRow.RowError%2A>egenskapen.</xref:System.Data.DataRow.RowError%2A>       Använd för att fastställa om det finns några fel för columns-samlingen i <xref:System.Data.DataRow.HasErrors%2A>metod.</xref:System.Data.DataRow.HasErrors%2A>       Om du vill rensa alla fel för columns-samlingen använder den <xref:System.Data.DataRow.ClearErrors%2A>metoden.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen."
    - id: error
      type: System.String
      description: "Felbeskrivning."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Ändringar av <xref:System.Data.DataRow.Rowstate%2A>av en <xref:System.Data.DataRow>till `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> Om inte den aktuella raden är antingen en `Unchanged` eller en `Added` tillstånd, den utlöser en <xref:System.InvalidOperationException>med meddelandet som `SetModified` kan endast anropas på en `DataRow` -instans där den `RowState` är `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger värdet för den angivna <xref href=&quot;System.Data.DataColumn&quot;> </xref> till null."
  remarks: "Använd den <xref:System.Data.DataRow.IsNull%2A>metod för att avgöra om en kolumn innehåller ett null-värde.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med angivna ny överordnad <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Den nya överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger den överordnade raden i en <xref href=&quot;System.Data.DataRow&quot;> </xref> med angivna ny överordnad <xref href=&quot;System.Data.DataRow&quot;> </xref> och <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Den nya överordnat <xref href=&quot;System.Data.DataRow&quot;> </xref>."
    - id: relation
      type: System.Data.DataRelation
      description: "Relationen <xref href=&quot;System.Data.DataRelation&quot;> </xref> ska användas."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "En av raderna hör inte till en tabell"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En av raderna är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör inte den <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> av den <xref href=&quot;System.Data.DataSet&quot;> </xref> objekt."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationens underordnade <xref href=&quot;System.Data.DataTable&quot;> </xref> är inte den tabell som den här raden tillhör."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataTable&quot;> </xref> som den här raden har ett schema."
  remarks: "En <xref:System.Data.DataRow>nödvändigtvis tillhör inte någon tabell mängd rader.</xref:System.Data.DataRow> Det här problemet uppstår när den <xref:System.Data.DataRow>har skapats men inte har lagts till i <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> Om den <xref:System.Data.DataRow.RowState%2A>egenskapen returnerar `DataRowState.Detached`, raden finns inte i en samling.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "Den <xref href=&quot;System.Data.DataTable&quot;> </xref> som den här raden tillhör."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
