### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  langs:
  - csharp
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  summary: "Innehåller metoder som hjälper dig använda v.3 X.509-certifikat."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.       För de flesta fall bör du använda den <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>klassen i stället.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Från och med den [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]använder den här skriver du implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>   >> För appar som är riktade till den [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] och tidigare versioner X509Certificate-klassen implementerar inte det <xref:System.IDisposable>gränssnitt och därför inte har en `Dispose` metod.</xref:System.IDisposable>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/t-system.security.crypto_76_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/t-system.security.crypto_76_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/t-system.security.crypto_76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klass."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen."
  syntax:
    content: public X509Certificate ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassdefinition från en sekvens med byte som representerar ett X.509v3-certifikat."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `data`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/b1e21656-448f-470a-baa1-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/b1e21656-448f-470a-baa1-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/b1e21656-448f-470a-baa1-_1.cpp)]"
  syntax:
    content: public X509Certificate (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med en referens till en ohanterad <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  remarks: "Den här konstruktorn skapar en ny <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med en referens för certifikatkontext Microsoft kryptografiska API `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>      > [!IMPORTANT] > Skapar en kopia av certifikatkontexten för den här konstruktorn. Inte förutsätter att kontexten struktur du överförs till konstruktorn är ogiltig. Det kan ha släppts. Du kan hämta en kopia av aktuellt `PCCERT_CONTEXT` struktur från den <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>egenskapen, men det är giltigt endast under livslängden för den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "En referens till en ohanterad <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Parametern referensen representerar inte ett giltigt <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen använder en annan <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klass."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen."
  syntax:
    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klass som du vill starta den här klassen."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Värdet för den <code> cert </code> parametern är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med namnet på en PKCS7 signerade filen."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/8a4791ef-477c-432d-b12d-_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/8a4791ef-477c-432d-b12d-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/8a4791ef-477c-432d-b12d-_1.vb)]"
  syntax:
    content: public X509Certificate (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en signerad PKCS7-fil."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med hjälp av en bytematris och ett lösenord."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med hjälp av en bytematris och ett lösenord."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med hjälp av en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt och en <xref:System.Runtime.Serialization.StreamingContext>struktur.</xref:System.Runtime.Serialization.StreamingContext>"
  syntax:
    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "En <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objekt som beskriver serialisering."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>struktur som beskriver hur serialisering ska utföras.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med ett filnamn för certifikatet och lösenordet."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.  Anropar den här konstruktorn med rätt lösenord dekrypterar den privata nyckeln och sparar det på en nyckelbehållare.      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en certifikatfil."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med namnet på en PKCS7 signerade fil- och ett lösenord för åtkomst till certifikatet."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.  Anropar den här konstruktorn med rätt lösenord dekrypterar den privata nyckeln och sparar det på en nyckelbehållare.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en signerad PKCS7-fil."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med en byte-matris, ett lösenord och en nyckellagring flagga."
  remarks: "Anropar den här konstruktorn med rätt lösenord dekrypterar den privata nyckeln och sparar den till en Microsoft kryptografiska API kryptografiprovider (CSP).       ASN.1 DER är det enda certifikat format som stöds av den här klassen.      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med en byte-matris, ett lösenord och en nyckellagring flagga."
  remarks: "Den här konstruktorn skapar en ny <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med en byte-matris, ett lösenord som krävs för att komma åt certifikatdata och en nyckellagring flagga.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>  Anropar den här konstruktorn med rätt lösenord dekrypterar den privata nyckeln och sparar den till en Microsoft kryptografiska API kryptografiprovider (CSP).       Den <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>värde kan användas för att styra hur och den privata nyckeln har importerats.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       ASN.1 DER är det enda certifikat format som stöds av den här klassen.      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe.       Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med ett certifikat-filnamn, ett lösenord och en nyckellagring flagga."
  remarks: "Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en certifikatfil."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klassen med hjälp av namnet på en PKCS7 signerade fil, ett lösenord för att få åtkomst till certifikatet och en nyckellagring flagga."
  remarks: "Om du skapar en <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certifikat genom att ange en signerad filarkivet PKCS7 för `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>skapas för certifikatet som signerade arkivet inte för några av certifikat i arkivet.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en signerad PKCS7-fil."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  id: CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Skapar ett X.509v3-certifikat från den angivna PKCS7 signera filen."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen.      > [!NOTE] > Certifikatfilen är inte begränsat till .cerfiles. Alla PKCS7 signerade filen kan användas, inklusive ett Authenticode signerade .pfx-fil."
  example:
  - "The following example creates an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> from a specified certification file.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/676668f7-2ee9-45c0-8357-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/676668f7-2ee9-45c0-8357-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/676668f7-2ee9-45c0-8357-_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Sökvägen till PKCS7 signerade fil som du kan skapa X.509-certifikat."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Det nyligen skapade X.509-certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  id: CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Skapar ett X.509v3-certifikat från den angivna signera filen."
  remarks: "ASN.1 DER är det enda certifikat format som stöds av den här klassen."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Sökvägen till den signerade filen som du vill skapa X.509-certifikat."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Det nyligen skapade X.509-certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Frigör alla resurser som används av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Frigör alla ohanterade resurser som används av det här <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> och släpper du de hantera resurserna."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Jämför två <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt sinsemellan."
  remarks: "Två objekt som identiska om de är <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt och de har samma utfärdare och serienummer.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/f47485e7-2fcd-4cb5-8c02-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/f47485e7-2fcd-4cb5-8c02-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/f47485e7-2fcd-4cb5-8c02-_1.vb)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt för att jämföra till det aktuella objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt är lika med objekt som angetts av den <code> other </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Jämför två <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt sinsemellan."
  remarks: "Två <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt som identiska om de har samma utfärdare och serienummer.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/a7eacb37-7527-4d28-91b5-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/a7eacb37-7527-4d28-91b5-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/a7eacb37-7527-4d28-91b5-_1.vb)]"
  syntax:
    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt för att jämföra till det aktuella objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt är lika med objekt som angetts av den <code> other </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exportera aktuell <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt till en bytematris i ett format som definieras av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> värden."
  remarks: 'Den `contentType` parametern accepterar endast följande värden för den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>uppräkningen: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, och <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Skicka andra värdet orsakar en <xref:System.Security.Cryptography.CryptographicException>positionsundantagsfel.</xref:System.Security.Cryptography.CryptographicException>'
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/7086c90a-cfa4-4cab-9c75-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/7086c90a-cfa4-4cab-9c75-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/7086c90a-cfa4-4cab-9c75-_1.cpp)]"
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "En av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> värden som beskriver hur du formatera utdata."
    return:
      type: System.Byte[]
      description: "En matris med byte som representerar aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ett annat värde än <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> skickades till den <code> contentType </code> parameter.       - eller - det gick inte att exportera certifikatet."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exportera aktuell <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt som en bitmatris med det angivna formatet och lösenordet."
  remarks: "Den `contentType` parametern accepterar endast följande värden för den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>uppräkningen: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, och <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Skicka andra värdet orsakar en <xref:System.Security.Cryptography.CryptographicException>positionsundantagsfel.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "En av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> värden som beskriver hur du formatera utdata."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    return:
      type: System.Byte[]
      description: "En bytematris som representerar aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ett annat värde än <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> skickades till den <code> contentType </code> parameter.       - eller - det gick inte att exportera certifikatet."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exportera aktuell <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt till en bytematris i ett format som definieras av den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> värden, och använder det angivna lösenordet."
  remarks: "Den `contentType` parametern accepterar endast följande värden för den <xref:System.Security.Cryptography.X509Certificates.X509ContentType>uppräkningen: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, och <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Skicka andra värdet orsakar en <xref:System.Security.Cryptography.CryptographicException>positionsundantagsfel.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Aldrig hård code ett lösenord i källkoden.  Hårdkodade lösenord kan hämtas från en sammansättning med hjälp av den [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), en hexadecimal redigerare eller helt enkelt öppna sammansättningen i en textredigerare, till exempel Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "En av de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> värden som beskriver hur du formatera utdata."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    return:
      type: System.Byte[]
      description: "En matris med byte som representerar aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ett annat värde än <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, eller <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> skickades till den <code> contentType </code> parameter.       - eller - det gick inte att exportera certifikatet."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  id: FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Konverterar angivet datum och tid till en sträng."
  remarks: "Vissa kulturer kan inte konvertera framtida datum till strängar. Om ett X.509-certifikat upphör att gälla är utanför intervallet för kulturen, använder FormatDate till en kalender som kan express datumet. Om <xref:System.Globalization.CultureInfo.Calendar%2A>värdet är <xref:System.Globalization.UmAlQuraCalendar>, kalendern ändras till den <xref:System.Globalization.HijriCalendar>klass; Annars ändras till <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A> </xref:System.Globalization.HijriCalendar> </xref:System.Globalization.UmAlQuraCalendar> </xref:System.Globalization.CultureInfo.Calendar%2A>"
  syntax:
    content: protected static string FormatDate (DateTime date);
    parameters:
    - id: date
      type: System.DateTime
      description: "Datum och tid att konvertera."
    return:
      type: System.String
      description: "En strängrepresentation av värdet för den <xref:System.DateTime>objekt.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar det hash-värdet för X.509v3-certifikat som en matris med byte."
  remarks: ''
  example:
  - "The following example uses the GetCertHash method to fill an array of bytes with the hash value for an X.509 certificate.  \n  \n [!code-cs[X509Certificate.GetCertHash Method#1](~/add/codesnippet/csharp/m-system.security.crypto_52_1.cs)]\n [!code-vb[X509Certificate.GetCertHash Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_52_1.vb)]\n [!code-cpp[X509Certificate.GetCertHash Method#1](~/add/codesnippet/cpp/m-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public virtual byte[] GetCertHash ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Hash-värdet för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  id: GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar SHA1-hash-värdet för X.509v3-certifikat som en hexadecimal sträng."
  remarks: ''
  example:
  - "The following example uses the GetCertHashString method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  \n  \n [!code-cpp[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/cpp/91428cb0-40b3-45b2-8ef3-_1.cpp)]\n [!code-cs[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/csharp/91428cb0-40b3-45b2-8ef3-_1.cs)]\n [!code-vb[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/visualbasic/91428cb0-40b3-45b2-8ef3-_1.vb)]"
  syntax:
    content: public virtual string GetCertHashString ();
    parameters: []
    return:
      type: System.String
      description: "Den hexadecimala strängrepresentationen av X.509 certifikatets hash-värde."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  id: GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar datumet för den här X.509v3-certifikat."
  remarks: "Det effektiva datumet är det datum då X.509-certifikatet ska vara giltigt.       Metoden GetEffectiveDateString returnerar en sträng som visar datumet formaterad kort datum mönster följt av den tid som är formaterade i mönstret för lång tid.  Datum och tid är formaterade med hjälp av den aktuella kulturen och tidszon."
  example:
  - "The following example uses the GetEffectiveDateString method to get the effective date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/visualbasic/5a69884a-4857-43c9-9b1e-_1.vb)]\n [!code-cpp[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/cpp/5a69884a-4857-43c9-9b1e-_1.cpp)]\n [!code-cs[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/csharp/5a69884a-4857-43c9-9b1e-_1.cs)]"
  syntax:
    content: public virtual string GetEffectiveDateString ();
    parameters: []
    return:
      type: System.String
      description: "Det effektiva datumet för den här X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  id: GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar den här X.509v3-certifikat upphör att gälla."
  remarks: "Utgångsdatumet är det datum då X.509-certifikatet inte längre anses vara giltigt.       Metoden GetExpirationDateString returnerar en sträng som visar datumet formaterad kort datum mönster följt av den tid som är formaterade i mönstret för lång tid.  Datum och tid är formaterade med hjälp av den aktuella kulturen och tidszon.      > [!NOTE] > Den här metoden kan returnera olika strängformat på Macintosh-datorer, även om den underliggande <xref:System.DateTime>objektet representerar samma värde.</xref:System.DateTime>"
  example:
  - "The following example uses the GetExpirationDateString method to get the expiration date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/visualbasic/76048adf-be4c-432a-8c57-_1.vb)]\n [!code-cpp[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/cpp/76048adf-be4c-432a-8c57-_1.cpp)]\n [!code-cs[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/csharp/76048adf-be4c-432a-8c57-_1.cs)]"
  syntax:
    content: public virtual string GetExpirationDateString ();
    parameters: []
    return:
      type: System.String
      description: "Förfallodatum för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar namnet på formatet för den här X.509v3-certifikat."
  remarks: "Formatet X.509 returneras alltid i den här implementeringen."
  example:
  - "The following example uses the GetFormat method to get the format of a certificate and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetFormat Method#1](~/add/codesnippet/cpp/m-system.security.crypto_96_1.cpp)]\n [!code-cs[X509Certificate.GetFormat Method#1](~/add/codesnippet/csharp/m-system.security.crypto_96_1.cs)]\n [!code-vb[X509Certificate.GetFormat Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_96_1.vb)]"
  syntax:
    content: public virtual string GetFormat ();
    parameters: []
    return:
      type: System.String
      description: "Formatet för den här X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar den hashkoden för X.509v3-certifikat som ett heltal."
  remarks: "Om hash för X.509-certifikatet är en matris med mer än 4 byte, visas inte alla byte efter den fjärde byten i den här heltal-representation."
  example:
  - "The following example uses the GetHashCode method to return an integer representation of a certificate's hash code and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetHashCode Method#1](~/add/codesnippet/csharp/m-system.security.crypto_37_1.cs)]\n [!code-cpp[X509Certificate.GetHashCode Method#1](~/add/codesnippet/cpp/m-system.security.crypto_37_1.cpp)]\n [!code-vb[X509Certificate.GetHashCode Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_37_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden för X.509-certifikat som ett heltal."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  id: GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar namnet på den certifikatutfärdare som utfärdade X.509v3-certifikat."
  remarks: ''
  example:
  - "The following example uses the GetIssuerName method to return the certificate issuer's name and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_90_1.cpp)]\n [!code-vb[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_90_1.vb)]\n [!code-cs[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_90_1.cs)]"
  syntax:
    content: public virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Namnet på den certifikatutfärdare som utfärdade X.509-certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Det uppstår ett fel med certifikatet. Till exempel:-certifikatfilen finns inte.      -Certifikatet är ogiltigt.      -Lösenord för certifikatet är felaktigt."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar nyckelalgoritm informationen för den här X.509v3-certifikat som en sträng."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithm method to get a certificate's key algorithm in string format and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/cpp/m-system.security.crypto_21_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/csharp/m-system.security.crypto_21_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_21_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithm ();
    parameters: []
    return:
      type: System.String
      description: "Algoritm-information för den här X.509-certifikat som en sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar nyckelalgoritm parametrar för X.509v3-certifikat som en matris med byte."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParameters method to return a certificate's key algorithm parameters as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/cpp/50ee38f2-6fab-4f27-b38b-_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/csharp/50ee38f2-6fab-4f27-b38b-_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/visualbasic/50ee38f2-6fab-4f27-b38b-_1.vb)]"
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Nyckelalgoritm parametrar för X.509-certifikat som en matris med byte."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar nyckelalgoritm parametrar för X.509v3-certifikat som en hexadecimal sträng."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParametersString method to return a certificate's key algorithm parameters in string format and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/csharp/a22806f0-c945-45f8-bbd4-_1.cs)]\n [!code-cpp[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/cpp/a22806f0-c945-45f8-bbd4-_1.cpp)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/visualbasic/a22806f0-c945-45f8-bbd4-_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString ();
    parameters: []
    return:
      type: System.String
      description: "Nyckelalgoritm parametrar för X.509-certifikat som en hexadecimal sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  id: GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar namnet för säkerhetsobjekt som certifikatet har utfärdats."
  remarks: ''
  example:
  - "The following example uses the GetName method to return the name of a certificate's principal and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_133_1.cs)]\n [!code-cpp[X509Certificate.GetName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_133_1.cpp)]\n [!code-vb[X509Certificate.GetName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_133_1.vb)]"
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: "Namnet på objektet som certifikatet har utfärdats."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar den offentliga nyckeln för X.509v3-certifikat som en matris med byte."
  remarks: ''
  example:
  - "The following example uses the GetPublicKey method to return a certificate's public key as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/cpp/m-system.security.crypto_13_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/csharp/m-system.security.crypto_13_1.cs)]\n [!code-vb[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_13_1.vb)]"
  syntax:
    content: public virtual byte[] GetPublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Den offentliga nyckeln för X.509-certifikat som en matris med byte."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  id: GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar den offentliga nyckeln för X.509v3-certifikat som en hexadecimal sträng."
  remarks: ''
  example:
  - "The following example uses the GetPublicKeyString method to return a certificate's public key as a string and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/cpp/32662298-b286-4db7-b0c3-_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/csharp/32662298-b286-4db7-b0c3-_1.cs)]\n [!code-vb[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/visualbasic/32662298-b286-4db7-b0c3-_1.vb)]"
  syntax:
    content: public virtual string GetPublicKeyString ();
    parameters: []
    return:
      type: System.String
      description: "Den offentliga nyckeln för X.509-certifikat som en hexadecimal sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  id: GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar rådata för hela X.509v3-certifikat som en matris med byte."
  remarks: ''
  example:
  - "The following example uses the GetRawCertData method to return a certificate's raw data as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/csharp/m-system.security.crypto_8_1.cs)]\n [!code-vb[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_8_1.vb)]\n [!code-cpp[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/cpp/m-system.security.crypto_8_1.cpp)]"
  syntax:
    content: public virtual byte[] GetRawCertData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "En bytematris som innehåller data för X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  id: GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar rådata för hela X.509v3-certifikat som en hexadecimal sträng."
  remarks: ''
  example:
  - "The following example uses the GetRawCertDataString method to return a certificate's raw data as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/csharp/7093e757-0c91-4543-9e38-_1.cs)]\n [!code-cpp[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/cpp/7093e757-0c91-4543-9e38-_1.cpp)]\n [!code-vb[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/visualbasic/7093e757-0c91-4543-9e38-_1.vb)]"
  syntax:
    content: public virtual string GetRawCertDataString ();
    parameters: []
    return:
      type: System.String
      description: "X.509-certifikatdata som en hexadecimal sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar serienumret för X.509v3-certifikat som en matris med byte."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumber method to return a certificate's serial number as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/csharp/m-system.security.crypto_4_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/cpp/m-system.security.crypto_4_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_4_1.vb)]"
  syntax:
    content: public virtual byte[] GetSerialNumber ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Serienumret för X.509-certifikatet som en matris med byte."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikatkontexten är ogiltig."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  id: GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar serienumret för X.509v3-certifikat som en hexadecimal sträng."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumberString method to return a certificate's serial number as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/csharp/68e809e1-8785-4578-8a1f-_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/cpp/68e809e1-8785-4578-8a1f-_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/visualbasic/68e809e1-8785-4578-8a1f-_1.vb)]"
  syntax:
    content: public virtual string GetSerialNumberString ();
    parameters: []
    return:
      type: System.String
      description: "Serienumret för X.509-certifikat som en hexadecimal sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Hämtar en referens till en Microsoft kryptografiska API certifikatkontext beskrivs av en ohanterad <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur."
  remarks: "Referensen är giltig endast för livslängden för den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>struktur som representerar en ohanterad <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> struktur.</xref:System.IntPtr>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med data från en byte-matris."
  remarks: "Den här metoden kan användas för att ta rå byte-matris med ett X.509-certifikat och fylla i <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med associerade värden.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public virtual void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med information från en certifikatfil."
  remarks: "Den här metoden använder en certifikatfil (till exempel en fil med tillägget .cer) som representerar ett X.509-certifikat och fyller den <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objektet med det certifikat som innehåller filen.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/csharp/9f89a581-a9e3-4157-bfa5-_1.cs)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/cpp/9f89a581-a9e3-4157-bfa5-_1.cpp)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/visualbasic/9f89a581-a9e3-4157-bfa5-_1.vb)]"
  syntax:
    content: public virtual void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en certifikatfil som representeras som en sträng."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med data från en byte-matris, ett lösenord och en nyckellagring flagga."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt med data från en byte-matris, ett lösenord och flaggor för att bestämma hur den privata nyckeln har importerats."
  remarks: "Den här metoden kan användas för att fylla i ett <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objekt med ett lösenord för det certifikat som representeras av Bytematrisen.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> Den <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>värde kan användas för att styra hur och den privata nyckeln har importerats.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>"
  syntax:
    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "En bytematris som innehåller data från ett X.509-certifikat."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - längden på den <code> rawData </code> parametern är 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt vars information från en certifikatfil, ett lösenord och en nyckellagring flagga."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en certifikatfil."
    - id: password
      type: System.Security.SecureString
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Fyller på <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt vars information från en certifikatfil, ett lösenord och en <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> värde."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på en certifikatfil som representeras som en sträng."
    - id: password
      type: System.String
      description: "Det lösenord som krävs för att komma åt data för X.509-certifikat."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "En binär kombination av uppräkningen värden som styr hur och importera certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Hämtar namnet på den certifikatutfärdare som utfärdade X.509v3-certifikat."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "Namnet på den certifikatutfärdare som utfärdade X.509v3-certifikat."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikat-handtaget är ogiltigt."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Återställer tillståndet för den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objekt."
  remarks: "Använd metoden återställning återställa tillståndet för certifikatet. Den här metoden Frigör även alla resurser som är associerade med certifikatet."
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Hämtar det unika ämnesnamnet från certifikatet."
  syntax:
    content: public string Subject { get; }
    return:
      type: System.String
      description: "Det unika ämnesnamnet från certifikatet."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Certifikat-handtaget är ogiltigt."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Implementerar den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> gränssnitt och anropas av händelsen deserialisering när deserialisering är klar."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen deserialisering."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Hämtar serialiseringsinformation med alla data som behövs för att skapa en instans av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Objekt att fylla i med serialiseringsinformation."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Mål-kontexten för serialisering."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar en strängrepresentation av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example uses the ToString method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/m-system.security.crypto_128_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/m-system.security.crypto_128_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_128_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strängrepresentation av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Returnerar en strängrepresentation av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt om anges med extra information."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/7bb8ae2b-24f8-4b21-80b2-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/7bb8ae2b-24f8-4b21-80b2-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/7bb8ae2b-24f8-4b21-80b2-_1.vb)]"
  syntax:
    content: public virtual string ToString (bool fVerbose);
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att skapa utförlig form av strängrepresentation; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En strängrepresentation av aktuellt <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objekt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile
  nameWithType: X509Certificate.CreateFromCertFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile
  nameWithType: X509Certificate.CreateFromSignedFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose
  nameWithType: X509Certificate.Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals
  nameWithType: X509Certificate.Equals
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export
  nameWithType: X509Certificate.Export
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate
  nameWithType: X509Certificate.FormatDate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash
  nameWithType: X509Certificate.GetCertHash
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString
  nameWithType: X509Certificate.GetCertHashString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString
  nameWithType: X509Certificate.GetEffectiveDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString
  nameWithType: X509Certificate.GetExpirationDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat
  nameWithType: X509Certificate.GetFormat
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode
  nameWithType: X509Certificate.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName
  nameWithType: X509Certificate.GetIssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm
  nameWithType: X509Certificate.GetKeyAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters
  nameWithType: X509Certificate.GetKeyAlgorithmParameters
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName
  nameWithType: X509Certificate.GetName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey
  nameWithType: X509Certificate.GetPublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString
  nameWithType: X509Certificate.GetPublicKeyString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData
  nameWithType: X509Certificate.GetRawCertData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString
  nameWithType: X509Certificate.GetRawCertDataString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber
  nameWithType: X509Certificate.GetSerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString
  nameWithType: X509Certificate.GetSerialNumberString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import
  nameWithType: X509Certificate.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset
  nameWithType: X509Certificate.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString
  nameWithType: X509Certificate.ToString
