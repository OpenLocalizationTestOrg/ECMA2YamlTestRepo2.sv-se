### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.AceEnumerator
  id: AceEnumerator
  children:
  - System.Security.AccessControl.AceEnumerator.Current
  - System.Security.AccessControl.AceEnumerator.MoveNext
  - System.Security.AccessControl.AceEnumerator.Reset
  - System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: AceEnumerator
  nameWithType: AceEnumerator
  fullName: System.Security.AccessControl.AceEnumerator
  type: Class
  summary: "Ger möjlighet att gå igenom åtkomstkontrollposter (ACE) i en åtkomstkontrollista (ACL)."
  syntax:
    content: 'public sealed class AceEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.AccessControl.AceEnumerator.Current
  id: Current
  parent: System.Security.AccessControl.AceEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: AceEnumerator.Current
  fullName: System.Security.AccessControl.AceEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar det aktuella elementet i den <xref href=&quot;System.Security.AccessControl.GenericAce&quot;> </xref> samling. Den här egenskapen hämtar typen eget version av objektet."
  syntax:
    content: public System.Security.AccessControl.GenericAce Current { get; }
    return:
      type: System.Security.AccessControl.GenericAce
      description: "Det aktuella elementet i den <xref href=&quot;System.Security.AccessControl.GenericAce&quot;> </xref> samling."
  overload: System.Security.AccessControl.AceEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.AceEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.AccessControl.AceEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: AceEnumerator.MoveNext()
  fullName: System.Security.AccessControl.AceEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Avancerar uppräknaren till nästa element i den <xref href=&quot;System.Security.AccessControl.GenericAce&quot;> </xref> samling."
  remarks: "När du har skapat en uppräknare eller efter ett anrop till den <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>metoden en uppräknare är placerad före det första elementet i mängden och det första anropet till metoden MoveNext flyttar uppräknaren över det första elementet i mängden.</xref:System.Security.AccessControl.AceEnumerator.Reset%2A>       När slutet av samlingen skickas tillbaka efterföljande anrop till MoveNext `false` tills <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>kallas.</xref:System.Security.AccessControl.AceEnumerator.Reset%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om, till exempel att lägga till, ändra eller ta bort element, ändringar i samlingen, uppräknaren är blir inaktuella och nästa anrop till MoveNext eller <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>utlöser <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Security.AccessControl.AceEnumerator.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om uppräknaren har avancerade till nästa element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om uppräknaren har passerat slutet av samlingen."
  overload: System.Security.AccessControl.AceEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats efter att uppräknaren skapades."
  platform:
  - net462
- uid: System.Security.AccessControl.AceEnumerator.Reset
  id: Reset
  parent: System.Security.AccessControl.AceEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: AceEnumerator.Reset()
  fullName: System.Security.AccessControl.AceEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Anger uppräknaren till sin ursprungliga position är före det första elementet i den <xref href=&quot;System.Security.AccessControl.GenericAce&quot;> </xref> samling."
  remarks: "En uppräknare är giltig så länge samlingen förblir oförändrad. Om du till exempel lägga till, ändra eller ta bort element, görs samlingen, uppräknaren är blir inaktuella och nästa anrop till den <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>eller Återställ metoden genererar ett <xref:System.InvalidOperationException></xref:System.InvalidOperationException> </xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.AccessControl.AceEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats efter att uppräknaren skapades."
  platform:
  - net462
- uid: System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.AccessControl.AceEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: AceEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.AccessControl.AceEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar det aktuella elementet i mängden."
  remarks: "När du har skapat en uppräknare eller efter ett anrop till den <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>metoden, måste du anropa den <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>metod för att gå vidare uppräknaren till det första elementet i mängden innan du läser värdet för IEnumerator.Current; annars IEnumerator.Current är odefinierad.</xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A> </xref:System.Security.AccessControl.AceEnumerator.Reset%2A>       IEnumerator.Current också genererar ett undantag om senast anropet till <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>returnerade `false`, vilket anger slutet av samlingen.</xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>       IEnumerator.Current inte flytta positionen för uppräknaren och efterföljande anrop till IEnumerator.Current returnera samma objekt förrän antingen <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>eller <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>kallas.</xref:System.Security.AccessControl.AceEnumerator.Reset%2A> </xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om, till exempel att lägga till, ändra eller ta bort element, ändringar i samlingen, uppräknaren blir inaktuella och nästa anropa eller <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A> <xref:System.Security.AccessControl.AceEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Security.AccessControl.AceEnumerator.Reset%2A> </xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>och IEnumerator.Current, IEnumerator.Current returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Returnerar det aktuella elementet i mängden."
  overload: System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Samlingen har ändrats efter att uppräknaren skapades."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.AccessControl.AceEnumerator.Current
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: Current
  nameWithType: AceEnumerator.Current
  fullName: System.Security.AccessControl.AceEnumerator.Current
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.AceEnumerator.MoveNext
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: AceEnumerator.MoveNext()
  fullName: System.Security.AccessControl.AceEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.AceEnumerator.Reset
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: Reset()
  nameWithType: AceEnumerator.Reset()
  fullName: System.Security.AccessControl.AceEnumerator.Reset()
- uid: System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: AceEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.AccessControl.AceEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.AccessControl.AceEnumerator.Current*
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: Current
  nameWithType: AceEnumerator.Current
- uid: System.Security.AccessControl.AceEnumerator.MoveNext*
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: AceEnumerator.MoveNext
- uid: System.Security.AccessControl.AceEnumerator.Reset*
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: Reset
  nameWithType: AceEnumerator.Reset
- uid: System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.AccessControl.AceEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: AceEnumerator.System.Collections.IEnumerator.Current
