### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageStore
  id: PackageStore
  children:
  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  langs:
  - csharp
  name: PackageStore
  nameWithType: PackageStore
  fullName: System.IO.Packaging.PackageStore
  type: Class
  summary: "Representerar en samling av programspecifika <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> instanser som används i kombination med <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
  remarks: "PackageStore definierar en referens samlingar av paket som är öppna och aktiv i programmet.  Paket som lagts till i PackageStore som är öppnas av deras viktiga URI-värde.  PackageStore stöder tre vanliga användningsområden: 1.  Åtkomst till <xref:System.IO.Packaging.PackagePart>data via <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart>      2.  Programmet att erhålla en instans av en <xref:System.IO.Packaging.Package>angivna paketets URI.</xref:System.IO.Packaging.Package>      3.  Åtkomst till paket som skapas och lagras i <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream>       För att förbättra prestanda och minimera arbetet med att öppna/stänga av upprepad filåtgärder, PackageStore som används för att hantera instanser av paket som används av <xref:System.IO.Packaging.PackWebRequest>och direkt av programmet.</xref:System.IO.Packaging.PackWebRequest>  Vid åtkomst till data i ett paket i <xref:System.IO.Packaging.Package>-adressen för en begärd <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A>kontrolleras först för att se om paketet är redan definierat och öppna i PackageStore.</xref:System.IO.Packaging.PackagePart.Uri%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  Om paketet har definierats som öppnats i PackageStore kan begärda delar nås direkt utan inledande och avslutande paketet för varje begäran upprepade gånger.       Om ditt program öppnas ett paket med <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A>kan användas för att lägga till paketet i PackageStore.</xref:System.IO.Packaging.PackageStore.AddPackage%2A> </xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>senare måste användas för att ta bort paketet från PackageStore innan du anropar <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.</xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName></xref:System.IO.Packaging.PackageStore.RemovePackage%2A>       XPS-paket som har öppnats med en <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>konstruktorn automatiskt läggs till och tas bort från PackageStore när dokumentet har skapats och tagits bort.</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>  (Du behöver inte att anropa <xref:System.IO.Packaging.PackageStore.AddPackage%2A>eller <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>separat för XPS-paket som har öppnats med <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>konstruktorer.)</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> </xref:System.IO.Packaging.PackageStore.RemovePackage%2A> </xref:System.IO.Packaging.PackageStore.AddPackage%2A>       I/o behörigheterna för ett paket som nås via PackageStore förblir densamma som i/o behörigheter på paketet när den öppnas.  PackageStore endast innehåller referenser till de paket som har lagts till arkivet.  Det är programmet att öppna, uppdatera och stänga varje paket på rätt sätt.       Paket som lagts till i PackageStore kan nås i flertrådsmiljöer när de används tillsammans med en [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser, till exempel <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>  När en flertrådsmiljö kan låsa programmet paketet innan åtkomst."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public static class PackageStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  id: AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Lägger till en <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> till arkivet."
  remarks: "`packageUri`definierar paketets nyckeln URI som jämförs när du anropar <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest>       Om den `packageUri` matchar <xref:System.IO.Packaging.PackagePart.Uri%2A>för en <xref:System.IO.Packaging.PackagePart>i ett <xref:System.IO.Packaging.PackWebRequest>anrop som definierats i som <xref:System.IO.Packaging.PackageStore>används för att komma åt den begärda part.</xref:System.IO.Packaging.PackageStore> paketet</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       Om den `packageUri` matchar inte <xref:System.IO.Packaging.PackagePart.Uri%2A>för en <xref:System.IO.Packaging.PackagePart>i ett <xref:System.IO.Packaging.PackWebRequest>paket med angiven URI-anrop har öppnats för att komma åt den begärda skulle hämtas.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       **Säkerhetsmeddelande** den här metoden kräver <xref:System.Security.Permissions.EnvironmentPermission>för alla anpassade <xref:System.IO.Packaging.Package>(icke -<xref:System.IO.Packaging.ZipPackage>) typer.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the AddPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]"
  syntax:
    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);
    parameters:
    - id: uri
      type: System.Uri
      description: "Nyckeln [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] av den `package` att jämföra i en <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
    - id: package
      type: System.IO.Packaging.Package
      description: "Paketet som du lägger till i arkivet."
  overload: System.IO.Packaging.PackageStore.AddPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>är ett ogiltigt paket [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett paket med det angivna <code> packageUri </code> finns redan i arkivet."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  id: GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Returnerar den <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> med en angiven [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] från store."
  remarks: "`packageUri`matchas mot URI anges i den <xref:System.IO.Packaging.PackageStore.AddPackage%2A>metodanrop.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Säkerhetsmeddelande** den här metoden kräver <xref:System.Security.Permissions.EnvironmentPermission>för alla anpassade <xref:System.IO.Packaging.Package>(icke -<xref:System.IO.Packaging.ZipPackage>) typer.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the GetPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]"
  syntax:
    content: public static System.IO.Packaging.Package GetPackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] i paketet ska returnera."
    return:
      type: System.IO.Packaging.Package
      description: "Paketet med en angiven <code> packageUri </code>; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om ett paket med det angivna <code> packageUri </code> är inte i arkivet."
  overload: System.IO.Packaging.PackageStore.GetPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>är ett ogiltigt paket [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  id: RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Tar bort den <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> med en angiven [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] från store."
  remarks: "`packageUri`matchas mot URI anges i den <xref:System.IO.Packaging.PackageStore.AddPackage%2A>metodanrop.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Säkerhetsmeddelande** den här metoden kräver <xref:System.Security.Permissions.EnvironmentPermission>för alla anpassade <xref:System.IO.Packaging.Package>(icke -<xref:System.IO.Packaging.ZipPackage>) typer.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the RemovePackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]"
  syntax:
    content: public static void RemovePackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Den [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] av paketet ska tas bort."
  overload: System.IO.Packaging.PackageStore.RemovePackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>är ett ogiltigt paket [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
- uid: System.IO.Packaging.PackageStore.AddPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage
  nameWithType: PackageStore.AddPackage
- uid: System.IO.Packaging.PackageStore.GetPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage
  nameWithType: PackageStore.GetPackage
- uid: System.IO.Packaging.PackageStore.RemovePackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage
  nameWithType: PackageStore.RemovePackage
