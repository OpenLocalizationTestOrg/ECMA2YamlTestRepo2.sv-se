### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Tillhandahåller en mekanism för att räkna upp alla tillgängliga OLE DB-leverantörer i det lokala nätverket."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Skapar en instans av den <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klass."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar en <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller information om alla synliga OLE DB-provider."
  remarks: "Tabellen som returneras av den här metoden innehåller följande kolumner som innehåller strängar: | Kolumnordningstal | Kolumnen | Beskrivning |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Invariabelt namnet på inbyggda OLE DB-datakälla eller uppräknare. |   |&1; | SOURCES_PARSENAME | Ett läsbart namn som kan konverteras till en moniker med hjälp av inbyggda COM-gränssnittet IParseDisplayName. Motsvarar kolumnen SOURCES_PARSENAME som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&2; | SOURCES_DESCRIPTION | Beskrivning av den inbyggda OLE DB-datakällan. Motsvarar kolumnen SOURCES_DESCRIPTION som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&3; | SOURCES_TYPE | En av följande Uppräkningsmedlemmar: Binder (0), DataSource_MDP (1), DataSource_TDP (2), uppräknare (3). De motsvarar de värden som returneras i kolumnen SOURCES_TYPE i den inbyggda OLE DB-raduppsättningen för källor. |   |&4; | SOURCES_ISPARENT | Gäller endast uppräknare. Om `true`, anger att transaktionen gäller samma uppräknaren som GetSourcesRowset anropades, innebär att det ingår också i uppräkningen underordnade. Motsvarar kolumnen SOURCES_ISPARENT för den inbyggda OLE DB-raduppsättningen för källor |   |&5; | SOURCES_CLSID | Ett läsbart namn, som kan konverteras till en moniker med hjälp av inbyggda COM-gränssnittet IParseDisplayName. Motsvarar kolumnen SOURCES_CLSID som returneras av den inbyggda OLE DB-raduppsättningen för källor. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Returnerar en <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller information om synliga OLE DB-provider."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Providern stöder inte ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Undantag har inträffat i den underliggande providern."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Använder en specifik OLE DB-uppräknaren för att returnera ett <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> som innehåller information om installerade OLE DB-providrar utan en instans av den <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klass."
  remarks: "Läsaren som returneras av den här metoden innehåller följande kolumner som innehåller strängar: | Kolumnordningstalet | Kolumnen | Beskrivning |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Invariabelt namnet på inbyggda OLE DB-datakälla eller uppräknare. |   |&1; | SOURCES_PARSENAME | Ett läsbart namn som kan konverteras till en moniker med hjälp av inbyggda COM-gränssnittet **IParseDisplayName**. Motsvarar kolumnen SOURCES_PARSENAME som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&2; | SOURCES_DESCRIPTION | Beskrivning av den inbyggda OLE DB-datakällan. Motsvarar kolumnen SOURCES_DESCRIPTION som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&3; | SOURCES_TYPE | En av följande Uppräkningsmedlemmar: Binder (0), DataSource_MDP (1), DataSource_TDP (2), uppräknare (3). De motsvarar de värden som returneras i kolumnen SOURCES_TYPE i den inbyggda OLE DB-raduppsättningen för källor. |   |&4; | SOURCES_ISPARENT | Gäller endast uppräknare. Om `true`, anger att transaktionen gäller samma uppräknaren där **GetSourcesRowset** anropades innebär att det ingår också i uppräkningen underordnade. Motsvarar kolumnen SOURCES_ISPARENT för den inbyggda OLE DB-raduppsättningen för källor |       OLE DB innehåller flera uppräknare komponenter, inklusive MSDAENUM, MSDASQL uppräknare, SQLNCLI uppräknare, SQLOLEDB uppräknare och andra. Mer information om uppräknare komponenterna och hur de används finns i [OLE DB Programmeringsreferens](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Returnerar en <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> som innehåller information om de begärda OLE DB-provider med hjälp av den angivna OLE DB-uppräknaren."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Providern stöder inte **ISourcesRowset**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Ett undantag inträffade i den underliggande providern."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returnerar en <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> som innehåller information om installerade OLE DB-providrar utan en instans av den <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> klass."
  remarks: "Läsaren som returneras av den här metoden innehåller följande kolumner som innehåller strängar: | Kolumnordningstal | Kolumnen | Beskrivning |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | Invariabelt namnet på inbyggda OLE DB-datakälla eller uppräknare. |   |&1; | SOURCES_PARSENAME | Ett läsbart namn som kan konverteras till en moniker med hjälp av inbyggda COM-gränssnittet IParseDisplayName. Motsvarar kolumnen SOURCES_PARSENAME som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&2; | SOURCES_DESCRIPTION | Beskrivning av den inbyggda OLE DB-datakällan. Motsvarar kolumnen SOURCES_DESCRIPTION som returneras av den inbyggda OLE DB-raduppsättningen för källor. |   |&3; | SOURCES_TYPE | En av följande Uppräkningsmedlemmar: Binder (0), DataSource_MDP (1), DataSource_TDP (2), uppräknare (3). De motsvarar de värden som returneras i kolumnen SOURCES_TYPE i den inbyggda OLE DB-raduppsättningen för källor. |   |&4; | SOURCES_ISPARENT | Gäller endast uppräknare. Om `true`, anger att transaktionen gäller samma uppräknaren som GetSourcesRowset anropades, innebär att det ingår också i uppräkningen underordnade. Motsvarar kolumnen SOURCES_ISPARENT för den inbyggda OLE DB-raduppsättningen för källor |   |&5; | SOURCES_CLSID | Ett läsbart namn, som kan konverteras till en moniker med hjälp av inbyggda COM-gränssnittet IParseDisplayName. Motsvarar kolumnen SOURCES_CLSID som returneras av den inbyggda OLE DB-raduppsättningen för källor. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Returnerar en <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> som innehåller information om synliga OLE DB-provider."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Providern stöder inte ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Undantag har inträffat i den underliggande providern."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
