### YamlMime:ManagedReference
items:
- uid: System.Windows.ContentElement
  id: ContentElement
  children:
  - System.Windows.ContentElement.#ctor
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.AllowDrop
  - System.Windows.ContentElement.AllowDropProperty
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.AreAnyTouchesCaptured
  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.ContentElement.AreAnyTouchesOver
  - System.Windows.ContentElement.AreAnyTouchesOverProperty
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.CaptureMouse
  - System.Windows.ContentElement.CaptureStylus
  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.CommandBindings
  - System.Windows.ContentElement.DragEnter
  - System.Windows.ContentElement.DragEnterEvent
  - System.Windows.ContentElement.DragLeave
  - System.Windows.ContentElement.DragLeaveEvent
  - System.Windows.ContentElement.DragOver
  - System.Windows.ContentElement.DragOverEvent
  - System.Windows.ContentElement.Drop
  - System.Windows.ContentElement.DropEvent
  - System.Windows.ContentElement.Focus
  - System.Windows.ContentElement.Focusable
  - System.Windows.ContentElement.FocusableChanged
  - System.Windows.ContentElement.FocusableProperty
  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.ContentElement.GetUIParentCore
  - System.Windows.ContentElement.GiveFeedback
  - System.Windows.ContentElement.GiveFeedbackEvent
  - System.Windows.ContentElement.GotFocus
  - System.Windows.ContentElement.GotFocusEvent
  - System.Windows.ContentElement.GotKeyboardFocus
  - System.Windows.ContentElement.GotKeyboardFocusEvent
  - System.Windows.ContentElement.GotMouseCapture
  - System.Windows.ContentElement.GotMouseCaptureEvent
  - System.Windows.ContentElement.GotStylusCapture
  - System.Windows.ContentElement.GotStylusCaptureEvent
  - System.Windows.ContentElement.GotTouchCapture
  - System.Windows.ContentElement.GotTouchCaptureEvent
  - System.Windows.ContentElement.HasAnimatedProperties
  - System.Windows.ContentElement.InputBindings
  - System.Windows.ContentElement.IsEnabled
  - System.Windows.ContentElement.IsEnabledChanged
  - System.Windows.ContentElement.IsEnabledCore
  - System.Windows.ContentElement.IsEnabledProperty
  - System.Windows.ContentElement.IsFocused
  - System.Windows.ContentElement.IsFocusedProperty
  - System.Windows.ContentElement.IsInputMethodEnabled
  - System.Windows.ContentElement.IsKeyboardFocused
  - System.Windows.ContentElement.IsKeyboardFocusedChanged
  - System.Windows.ContentElement.IsKeyboardFocusedProperty
  - System.Windows.ContentElement.IsKeyboardFocusWithin
  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  - System.Windows.ContentElement.IsMouseCaptured
  - System.Windows.ContentElement.IsMouseCapturedChanged
  - System.Windows.ContentElement.IsMouseCapturedProperty
  - System.Windows.ContentElement.IsMouseCaptureWithin
  - System.Windows.ContentElement.IsMouseCaptureWithinChanged
  - System.Windows.ContentElement.IsMouseCaptureWithinProperty
  - System.Windows.ContentElement.IsMouseDirectlyOver
  - System.Windows.ContentElement.IsMouseDirectlyOverChanged
  - System.Windows.ContentElement.IsMouseDirectlyOverProperty
  - System.Windows.ContentElement.IsMouseOver
  - System.Windows.ContentElement.IsMouseOverProperty
  - System.Windows.ContentElement.IsStylusCaptured
  - System.Windows.ContentElement.IsStylusCapturedChanged
  - System.Windows.ContentElement.IsStylusCapturedProperty
  - System.Windows.ContentElement.IsStylusCaptureWithin
  - System.Windows.ContentElement.IsStylusCaptureWithinChanged
  - System.Windows.ContentElement.IsStylusCaptureWithinProperty
  - System.Windows.ContentElement.IsStylusDirectlyOver
  - System.Windows.ContentElement.IsStylusDirectlyOverChanged
  - System.Windows.ContentElement.IsStylusDirectlyOverProperty
  - System.Windows.ContentElement.IsStylusOver
  - System.Windows.ContentElement.IsStylusOverProperty
  - System.Windows.ContentElement.KeyDown
  - System.Windows.ContentElement.KeyDownEvent
  - System.Windows.ContentElement.KeyUp
  - System.Windows.ContentElement.KeyUpEvent
  - System.Windows.ContentElement.LostFocus
  - System.Windows.ContentElement.LostFocusEvent
  - System.Windows.ContentElement.LostKeyboardFocus
  - System.Windows.ContentElement.LostKeyboardFocusEvent
  - System.Windows.ContentElement.LostMouseCapture
  - System.Windows.ContentElement.LostMouseCaptureEvent
  - System.Windows.ContentElement.LostStylusCapture
  - System.Windows.ContentElement.LostStylusCaptureEvent
  - System.Windows.ContentElement.LostTouchCapture
  - System.Windows.ContentElement.LostTouchCaptureEvent
  - System.Windows.ContentElement.MouseDown
  - System.Windows.ContentElement.MouseDownEvent
  - System.Windows.ContentElement.MouseEnter
  - System.Windows.ContentElement.MouseEnterEvent
  - System.Windows.ContentElement.MouseLeave
  - System.Windows.ContentElement.MouseLeaveEvent
  - System.Windows.ContentElement.MouseLeftButtonDown
  - System.Windows.ContentElement.MouseLeftButtonDownEvent
  - System.Windows.ContentElement.MouseLeftButtonUp
  - System.Windows.ContentElement.MouseLeftButtonUpEvent
  - System.Windows.ContentElement.MouseMove
  - System.Windows.ContentElement.MouseMoveEvent
  - System.Windows.ContentElement.MouseRightButtonDown
  - System.Windows.ContentElement.MouseRightButtonDownEvent
  - System.Windows.ContentElement.MouseRightButtonUp
  - System.Windows.ContentElement.MouseRightButtonUpEvent
  - System.Windows.ContentElement.MouseUp
  - System.Windows.ContentElement.MouseUpEvent
  - System.Windows.ContentElement.MouseWheel
  - System.Windows.ContentElement.MouseWheelEvent
  - System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.ContentElement.OnCreateAutomationPeer
  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.ContentElement.PreviewDragEnter
  - System.Windows.ContentElement.PreviewDragEnterEvent
  - System.Windows.ContentElement.PreviewDragLeave
  - System.Windows.ContentElement.PreviewDragLeaveEvent
  - System.Windows.ContentElement.PreviewDragOver
  - System.Windows.ContentElement.PreviewDragOverEvent
  - System.Windows.ContentElement.PreviewDrop
  - System.Windows.ContentElement.PreviewDropEvent
  - System.Windows.ContentElement.PreviewGiveFeedback
  - System.Windows.ContentElement.PreviewGiveFeedbackEvent
  - System.Windows.ContentElement.PreviewGotKeyboardFocus
  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewKeyDown
  - System.Windows.ContentElement.PreviewKeyDownEvent
  - System.Windows.ContentElement.PreviewKeyUp
  - System.Windows.ContentElement.PreviewKeyUpEvent
  - System.Windows.ContentElement.PreviewLostKeyboardFocus
  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewMouseDown
  - System.Windows.ContentElement.PreviewMouseDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonDown
  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonUp
  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseMove
  - System.Windows.ContentElement.PreviewMouseMoveEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonDown
  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonUp
  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseUp
  - System.Windows.ContentElement.PreviewMouseUpEvent
  - System.Windows.ContentElement.PreviewMouseWheel
  - System.Windows.ContentElement.PreviewMouseWheelEvent
  - System.Windows.ContentElement.PreviewQueryContinueDrag
  - System.Windows.ContentElement.PreviewQueryContinueDragEvent
  - System.Windows.ContentElement.PreviewStylusButtonDown
  - System.Windows.ContentElement.PreviewStylusButtonDownEvent
  - System.Windows.ContentElement.PreviewStylusButtonUp
  - System.Windows.ContentElement.PreviewStylusButtonUpEvent
  - System.Windows.ContentElement.PreviewStylusDown
  - System.Windows.ContentElement.PreviewStylusDownEvent
  - System.Windows.ContentElement.PreviewStylusInAirMove
  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  - System.Windows.ContentElement.PreviewStylusInRange
  - System.Windows.ContentElement.PreviewStylusInRangeEvent
  - System.Windows.ContentElement.PreviewStylusMove
  - System.Windows.ContentElement.PreviewStylusMoveEvent
  - System.Windows.ContentElement.PreviewStylusOutOfRange
  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  - System.Windows.ContentElement.PreviewStylusSystemGesture
  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  - System.Windows.ContentElement.PreviewStylusUp
  - System.Windows.ContentElement.PreviewStylusUpEvent
  - System.Windows.ContentElement.PreviewTextInput
  - System.Windows.ContentElement.PreviewTextInputEvent
  - System.Windows.ContentElement.PreviewTouchDown
  - System.Windows.ContentElement.PreviewTouchDownEvent
  - System.Windows.ContentElement.PreviewTouchMove
  - System.Windows.ContentElement.PreviewTouchMoveEvent
  - System.Windows.ContentElement.PreviewTouchUp
  - System.Windows.ContentElement.PreviewTouchUpEvent
  - System.Windows.ContentElement.QueryContinueDrag
  - System.Windows.ContentElement.QueryContinueDragEvent
  - System.Windows.ContentElement.QueryCursor
  - System.Windows.ContentElement.QueryCursorEvent
  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.ReleaseAllTouchCaptures
  - System.Windows.ContentElement.ReleaseMouseCapture
  - System.Windows.ContentElement.ReleaseStylusCapture
  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.ShouldSerializeCommandBindings
  - System.Windows.ContentElement.ShouldSerializeInputBindings
  - System.Windows.ContentElement.StylusButtonDown
  - System.Windows.ContentElement.StylusButtonDownEvent
  - System.Windows.ContentElement.StylusButtonUp
  - System.Windows.ContentElement.StylusButtonUpEvent
  - System.Windows.ContentElement.StylusDown
  - System.Windows.ContentElement.StylusDownEvent
  - System.Windows.ContentElement.StylusEnter
  - System.Windows.ContentElement.StylusEnterEvent
  - System.Windows.ContentElement.StylusInAirMove
  - System.Windows.ContentElement.StylusInAirMoveEvent
  - System.Windows.ContentElement.StylusInRange
  - System.Windows.ContentElement.StylusInRangeEvent
  - System.Windows.ContentElement.StylusLeave
  - System.Windows.ContentElement.StylusLeaveEvent
  - System.Windows.ContentElement.StylusMove
  - System.Windows.ContentElement.StylusMoveEvent
  - System.Windows.ContentElement.StylusOutOfRange
  - System.Windows.ContentElement.StylusOutOfRangeEvent
  - System.Windows.ContentElement.StylusSystemGesture
  - System.Windows.ContentElement.StylusSystemGestureEvent
  - System.Windows.ContentElement.StylusUp
  - System.Windows.ContentElement.StylusUpEvent
  - System.Windows.ContentElement.TextInput
  - System.Windows.ContentElement.TextInputEvent
  - System.Windows.ContentElement.TouchDown
  - System.Windows.ContentElement.TouchDownEvent
  - System.Windows.ContentElement.TouchEnter
  - System.Windows.ContentElement.TouchEnterEvent
  - System.Windows.ContentElement.TouchesCaptured
  - System.Windows.ContentElement.TouchesCapturedWithin
  - System.Windows.ContentElement.TouchesDirectlyOver
  - System.Windows.ContentElement.TouchesOver
  - System.Windows.ContentElement.TouchLeave
  - System.Windows.ContentElement.TouchLeaveEvent
  - System.Windows.ContentElement.TouchMove
  - System.Windows.ContentElement.TouchMoveEvent
  - System.Windows.ContentElement.TouchUp
  - System.Windows.ContentElement.TouchUpEvent
  langs:
  - csharp
  name: ContentElement
  nameWithType: ContentElement
  fullName: System.Windows.ContentElement
  type: Class
  summary: "Tillhandahåller en basklass för WPF-core-nivå för innehållselement. Innehållselement utformade för presentation av flödet-format, med hjälp av en intuitiv markup indatavärdena layout-modell och en enkel avsiktligt objektmodell."
  remarks: "ContentElement definierar följande gemensamma egenskaper för innehåll: - indata: alla ContentElement härledda klasser ger stöd för grundläggande inkommande avbildning från tangentbord, mus, dra och släpp-åtgärder, från pennan kontroller och acceleratorer.      -Fokus: Alla ContentElement härledda klasser är potentiellt tabbindexvärden. (Tabbindexvärden standardläget för basklassen ContentElement är dock `false`. Mer information om hur du skapar en ContentElement tabbindexvärden finns <xref:System.Windows.ContentElement.Focusable%2A>.)</xref:System.Windows.ContentElement.Focusable%2A> Den här klassen innehåller dessutom [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] som du kan använda för att gå igenom fokus över relaterade element.      -Händelser: ContentElement innefattar händelser som är relaterade till indata och fokus; Det inbegriper även händelser för ändringar i tillstånd. I många fall är ContentElement händelser dirigerade händelser. I vissa fall kan har dirigerade händelser både tunneling och genomströmning routning strategier, aktiveras som separata händelser som svar på samma läge eller villkor. Dessutom ContentElement definierar [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] att du kan finns rera dirigerade händelser och som kan lägga till eller ta bort hanterare händelser.       ContentElement delar många gemensamma [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] med <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> Dessa vanliga [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] inte kommer från en delad klassarv. Men de delar vanliga namnge, liknande problem och liknande interna implementering av [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)] i varje klass. I likhet är eftersom ContentElement och <xref:System.Windows.UIElement>är varje klasser som är ett element som grundläggande, även om varje har olika avsikter för dess markup modellen beteende.</xref:System.Windows.UIElement>       I synnerhet <xref:System.Windows.UIElement>härrör från <xref:System.Windows.Media.Visual>, som ger lägre nivå grafik för återgivning en ContentElement till ett rektangulärt område i sammansatta fönster, medan ContentElement skjuts upp återgivning så att begrepp som är vanligare att dokumentet scenarier, till exempel trafikflöde och radbrytning, stöds enklare.</xref:System.Windows.Media.Visual> </xref:System.Windows.UIElement> Dessa två relaterade klasser också implementera vanliga gränssnitt <xref:System.Windows.IInputElement>och <xref:System.Windows.Media.Animation.IAnimatable>.</xref:System.Windows.Media.Animation.IAnimatable> </xref:System.Windows.IInputElement>"
  syntax:
    content: 'public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements:
  - System.Windows.IInputElement
  - System.Windows.Media.Animation.IAnimatable
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.ContentElement.#ctor
  id: '#ctor'
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ContentElement()
  nameWithType: ContentElement.ContentElement()
  fullName: System.Windows.ContentElement.ContentElement()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.ContentElement&quot;> </xref> klass."
  syntax:
    content: public ContentElement ();
    parameters: []
  overload: System.Windows.ContentElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: ContentElement.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.ContentElement.AddHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Lägger till en routade händelsehanterare för en angiven routade händelse, lägger du till hanteraren i mängden hanterare på det aktuella elementet."
  remarks: "Du kan lägga till samma hanteraren för samma händelse flera gånger utan att ett undantag. Hanteraren är faktiskt anropas flera gånger när händelsen hanteras. Bör du hur problemet kan ha sidoeffekter som redovisas i implementeringen hanterare.       Du använder vanligtvis den här metoden för att ge implementering av &quot;Lägg till&quot;-accessor för den [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] händelse åtkomstmönstret för en anpassad routade händelse."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "En identifierare för händelsen routade som ska hanteras."
    - id: handler
      type: System.Delegate
      description: "En referens till hanteraren implementeringen."
  overload: System.Windows.ContentElement.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: ContentElement.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.ContentElement.AddHandler(RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Lägger till en routade händelsehanterare för en angiven routade händelse, lägger du till hanteraren i mängden hanterare på det aktuella elementet. Ange <code> handledEventsToo </code> som <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> har angivna hanteraren anropas för routade händelse som hade redan markerats som hanteras av ett annat element längs vägen händelse."
  remarks: "Bearbetningen av låg nivå inkommande händelser på ett praktiskt sätt är en komplicerad uppgift. Många kontroller implementera beteende där en viss händelse har markerats som hanteras och har ersatts av en annan intuitivt händelse. En kontroll ska i allmänhet kan bara markera en plattformshändelse för inkommande som hanteras om det finns vissa design avsikt för att göra det. I vissa fall kanske inte dessa design avsikter din viss hantering av inkommande händelse kräver. För dessa scenarier är att registrera hanterare med `handledEventsToo` som `true` är lämpligt. Men du göra inte detta regelbundet. Anropa hanterare som svar på alla händelser även om hanteras ska göra det svårare att egna händelse bearbetning av logik. Du kan se en försämring av prestanda om hanteraren logiken är betydande. Du bör reservera användningen av kopplar hanterare för redan hanteras händelser för situationer där du redan har identifierats under utvecklingsprocessen som vissa kontroller hantera händelser som du vill hantera med programlogik.       En annan metod för att undvika klassen som hanterar beteendet för vissa kombinationer av händelse-kontroll är att använda att händelsen preview alternativ. Till exempel om <xref:System.Windows.ContentElement.MouseLeftButtonDown>markeras som hanterad av klassen hantering, du kan lägga till hanterare för <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>i stället.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> </xref:System.Windows.ContentElement.MouseLeftButtonDown>       Du kan lägga till samma hanteraren för samma händelse flera gånger utan att ett undantag. Hanteraren är faktiskt anropas flera gånger när händelsen hanteras. Bör du hur problemet kan ha sidoeffekter som redovisas i implementeringen hanterare.       Du använder vanligtvis den här metoden för att ge implementering av &quot;Lägg till&quot;-accessor för den [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] händelse åtkomstmönstret för en anpassad routade händelse."
  example:
  - "The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`. This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.  \n  \n [!code-cs[EventOvwSupport#AddHandlerHandledToo](~/add/codesnippet/csharp/EventOvwSupport/page2.xaml.cs#addhandlerhandledtoo)]\n [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/add/codesnippet/visualbasic/eventovwsupport/page2.xaml.vb#addhandlerhandledtoo)]"
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "En identifierare för the.routed händelse som ska hanteras."
    - id: handler
      type: System.Delegate
      description: "En referens till hanteraren implementeringen."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om du vill registrera hanteraren så att den anropas även när händelsen routade har markerats som hanteras i dess händelsedata; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att registrera hanteraren med standard-villkor som inte kommer att anropas om routade händelsen har redan markerats hanterade.       Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Regelbundet fråga inte till rehandle routade händelse. Mer information finns i Anmärkningar."
  overload: System.Windows.ContentElement.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  id: AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: ContentElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.ContentElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Lägger till hanterare till den angivna <xref href=&quot;System.Windows.EventRoute&quot;> </xref> för aktuellt <xref href=&quot;System.Windows.ContentElement&quot;> </xref> hanterare händelseinsamling."
  remarks: "Använd den här metoden för innehållsvärden element (oavsett om de implementera <xref:System.Windows.IContentHost>) för att lägga till en hanterare för innehållsvärden underordnade element till värden <xref:System.Windows.EventRoute>.</xref:System.Windows.EventRoute> </xref:System.Windows.IContentHost>"
  syntax:
    content: public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);
    parameters:
    - id: route
      type: System.Windows.EventRoute
      description: "Händelsen vägen som hanterare läggs till."
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "De händelsedata som används för att lägga till en hanterare. Den här metoden använder den <xref:System.Windows.RoutedEventArgs.RoutedEvent*>egenskapen argument till skapa hanterare.</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  overload: System.Windows.ContentElement.AddToEventRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AllowDrop
  id: AllowDrop
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AllowDrop
  nameWithType: ContentElement.AllowDrop
  fullName: System.Windows.ContentElement.AllowDrop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om det här elementet kan användas som mål för dra och släppa."
  remarks: "Dra och släpp-åtgärder är inte aktiverad som standard och måste aktiveras avsiktligt genom att ange AllowDrop `true`. Utöver den här enkla inställningen dra och släpp är helt implementationen och har inte definierats eller <xref:System.Windows.ContentElement>andra baselementet-klass</xref:System.Windows.ContentElement> Vissa kontroller, till exempel <xref:System.Windows.Controls.RichTextBox>, har en standardmetod, men inte <xref:System.Windows.ContentElement>härledda klasser har en sådan funktion.</xref:System.Windows.ContentElement> </xref:System.Windows.Controls.RichTextBox> Mer information om dra och släpp finns [dra och släppa översikt](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.FrameworkContentElement>åsidosätter metadata för den här beroendeegenskap dess implementering.</xref:System.Windows.FrameworkContentElement> Mer specifikt <xref:System.Windows.FrameworkContentElement>betyder att den här egenskapen gör att värdet egenskapsarv (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> är `true` i metadata).</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkContentElement> Egenskapsarv värde i den här kontexten innebär att om det finns underordnade element utan värde för AllowDrop som tilldelats via lokala värden eller format, värdet för det närmaste överordnade elementet med det här värdet som tilldelats (igen, antingen i formatet, av standardvärdena eller ett lokalt värde) och sedan värdet från det överordnade elementet har tilldelats till alla otilldelade underordnade element av egenskapen systemet. Det innebär att du kan ange om du vill tillåta släpp-åtgärder vid rotelementet och sedan spridas till alla värdet <xref:System.Windows.FrameworkContentElement>underordnade element som inte uttryckligen tilldelats det värdet `false`.</xref:System.Windows.FrameworkContentElement>      <a name=&quot;dependencyPropertyInfo_AllowDrop&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.AllowDropProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.AllowDropProperty>"
  example:
  - "The following example sets AllowDrop in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].  \n  \n [!code-xml[ContentElementsSmorgasbord#AllowDrop](~/add/codesnippet/xaml/ContentElementsSmorgasbord/page1.xaml#allowdrop)]"
  syntax:
    content: public bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det här elementet kan användas som mål för en dra och släpp-åtgärd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AllowDropProperty
  id: AllowDropProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AllowDropProperty
  nameWithType: ContentElement.AllowDropProperty
  fullName: System.Windows.ContentElement.AllowDropProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.AllowDrop*>beroendeegenskap.</xref:System.Windows.ContentElement.AllowDrop*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AllowDropProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Använd en animering till en angiven beroendeegenskap på det här elementet. Befintliga animeringar stoppas och ersätts med ny animering."
  remarks: "Anger identifieraren för den egenskapen som du vill ta bort en animering från en egenskap `dp` och ange `clock` som `null`. Detta tar bort animeringen och animerade egenskapen anges till värdet bas. Ursprungligen associerade animering klocka har inte stoppats. Andra animeringar som tilldelats den klockan fortsätter att köras."
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Identifierare att animera egenskapen."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "Animeringen klockan som styr och deklarerar animeringen."
  overload: System.Windows.ContentElement.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gäller en animering för en angiven beroendeegenskap på det här elementet, möjlighet att ange vad som händer om egenskapen har redan en aktiv animering."
  remarks: "Anger identifieraren för den egenskapen som du vill ta bort en animering från en egenskap `dp` och ange `clock` som `null`. Detta tar bort animeringen och animerade egenskapen anges till värdet bas. Ursprungligen associerade animering klocka har inte stoppats. Andra animeringar som tilldelats den klockan fortsätter att köras."
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Att animera egenskapen."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "Animeringen klockan som styr och deklarerar animeringen."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "Ett värde för uppräkningen. Standardvärdet är <xref href=&quot;System.Windows.Media.Animation.HandoffBehavior&quot;> </xref>, som stoppas alla befintliga animering och Ersätt med en ny."
  overload: System.Windows.ContentElement.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesCaptured
  id: AreAnyTouchesCaptured
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesCaptured
  nameWithType: ContentElement.AreAnyTouchesCaptured
  fullName: System.Windows.ContentElement.AreAnyTouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om minst en touch avbildas till det här elementet."
  syntax:
    content: public bool AreAnyTouchesCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om minst en touch avbildas till det här elementet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.AreAnyTouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  id: AreAnyTouchesCapturedProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedProperty
  nameWithType: ContentElement.AreAnyTouchesCapturedProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.AreAnyTouchesCaptured*>beroendeegenskap.</xref:System.Windows.ContentElement.AreAnyTouchesCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  id: AreAnyTouchesCapturedWithin
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithin
  nameWithType: ContentElement.AreAnyTouchesCapturedWithin
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om minst en touch avbildas till det här elementet eller till alla underordnade element i dess visuella träd."
  syntax:
    content: public bool AreAnyTouchesCapturedWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om minst en touch avbildas till det här elementet eller alla underordnade element i dess visuella träd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.AreAnyTouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  id: AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: ContentElement.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.AreAnyTouchesCapturedWithin*>beroendeegenskap.</xref:System.Windows.ContentElement.AreAnyTouchesCapturedWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  id: AreAnyTouchesDirectlyOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOver
  nameWithType: ContentElement.AreAnyTouchesDirectlyOver
  fullName: System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om minst en touch trycks över det här elementet."
  syntax:
    content: public bool AreAnyTouchesDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om minst en touch trycks ned över det här elementet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.AreAnyTouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  id: AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: ContentElement.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.AreAnyTouchesDirectlyOver*>beroendeegenskap.</xref:System.Windows.ContentElement.AreAnyTouchesDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesOver
  id: AreAnyTouchesOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesOver
  nameWithType: ContentElement.AreAnyTouchesOver
  fullName: System.Windows.ContentElement.AreAnyTouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om minst en touch trycks över det här elementet och alla underordnade element i dess visuella träd."
  syntax:
    content: public bool AreAnyTouchesOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om minst en touch trycks ned över det här elementet och alla underordnade element i dess visuella träd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.AreAnyTouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.AreAnyTouchesOverProperty
  id: AreAnyTouchesOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: AreAnyTouchesOverProperty
  nameWithType: ContentElement.AreAnyTouchesOverProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.AreAnyTouchesOver*>beroendeegenskap.</xref:System.Windows.ContentElement.AreAnyTouchesOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Startar en animering för en angiven animerade egenskap på det här elementet."
  remarks: "När du markerar en egenskap som är animerade Observera att animeringen ska börja och anses animerade när den första bildrutan utöver icke-animerade startpunkten återges.       Om den <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>för `animation` är `null`, aktuella animeringar tas bort och det aktuella värdet på egenskapen hålls.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       Om hela `animation` värdet är `null`, alla animeringar tas bort från egenskapen och egenskapsvärdet återgår till dess grundläggande värde. Ursprungligen associerade animering tidslinjen har inte stoppats. Andra animeringar som tilldelats den tidslinjen fortsätter att köras."
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Egenskapen att animera, som anges som ett beroende egenskapsvärde."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "Tidslinje för animeringen ska börja."
  overload: System.Windows.ContentElement.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Startar en specifik animering för en angiven animerade egenskap för detta element med alternativet för att ange vad händer om egenskapen har redan en aktiv animering."
  remarks: "När du markerar en egenskap som är animerade Observera att animeringen ska börja och anses animerade när den första bildrutan utöver icke-animerade startpunkten återges.       Om den <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>för `animation` är `null`, aktuella animeringar tas bort och det aktuella värdet på egenskapen hålls.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       Om hela `animation` värdet är `null`, alla animeringar tas bort från egenskapen och egenskapsvärdet återgår till dess grundläggande värde. Ursprungligen associerade animering tidslinjen har inte stoppats. Andra animeringar som tilldelats den tidslinjen fortsätter att köras."
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Egenskapen att animera, som har angetts som beroende egenskapsvärde."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "Tidslinje för animeringen ska tillämpas."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "Ett värde för uppräkning som anger hur ny animering samverkar med aktuella (körs) animeringar som redan påverkar egenskapens värde."
  overload: System.Windows.ContentElement.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.CaptureMouse
  id: CaptureMouse
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: CaptureMouse()
  nameWithType: ContentElement.CaptureMouse()
  fullName: System.Windows.ContentElement.CaptureMouse()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försök att tvinga insamlingen av musen till det här elementet."
  remarks: "Om du vill kan avbildas, aktiveras ett element. Kontrollera om <xref:System.Windows.ContentElement.IsEnabled%2A>är `true` innan du anropar CaptureMouse.</xref:System.Windows.ContentElement.IsEnabled%2A>       Om anropar CaptureMouse returnerar `true`, sedan <xref:System.Windows.ContentElement.IsMouseCaptured%2A>är också `true`.</xref:System.Windows.ContentElement.IsMouseCaptured%2A>       Om anropar CaptureMouse returnerar `true`, sedan <xref:System.Windows.ContentElement.GotMouseCapture>och <xref:System.Windows.ContentElement.IsMouseCapturedChanged>händelser aktiveras med <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>i data rapporteras som elementet där CaptureMouse-metoden anropas.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> </xref:System.Windows.ContentElement.IsMouseCapturedChanged> </xref:System.Windows.ContentElement.GotMouseCapture> Om du tvingar avbildning kan du störa befintliga insamlingar, särskilt med insamlingar som relaterar till dra och släpp med musen.       Om du vill rensa musinfångningen från alla element anropa <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>med den `element` som angetts för parametern `null`.</xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>"
  example:
  - "The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element. Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=fullName> method. Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>. The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>. This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.  \n  \n [!code-cs[ContentElementsSmorgasbord#IsMouseCaptured](~/add/codesnippet/csharp/ContentElementsSmorgasbord/page1.xaml.cs#ismousecaptured)]\n [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/add/codesnippet/visualbasic/contentelementssmorgasbord/page1.xaml.vb#ismousecaptured)]"
  syntax:
    content: public bool CaptureMouse ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om musen är har avbildats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.CaptureMouse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.CaptureStylus
  id: CaptureStylus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: CaptureStylus()
  nameWithType: ContentElement.CaptureStylus()
  fullName: System.Windows.ContentElement.CaptureStylus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försök att tvinga insamlingen av pennan till det här elementet."
  remarks: "Standardimplementering baserat på underliggande från pennan standardenheten alltid returnerar `true`. Om du utökar de inkommande enheter som ger enheten implementering för inkommande system, går det att skapa ett system med en implementering av alternativa från pennan enhet som kan returnera olika resultat.       När ett element samlar in pennan, får indata från pennan även om pennan är utanför dess gränser. Pennan fångas vanligtvis endast under dra och släpp-åtgärder.       Den här metoden anropas anropar en underliggande statisk <xref:System.Windows.Input.Stylus>metod <xref:System.Windows.Input.Stylus.Capture%2A>.</xref:System.Windows.Input.Stylus.Capture%2A> </xref:System.Windows.Input.Stylus> Beteendet faktiska avbildningen implementeras av aktiva från pennan enheten implementering.       Om du vill kan avbildas, aktiveras ett element. Kontrollera om <xref:System.Windows.ContentElement.IsEnabled%2A>är `true` returnera innan du anropar CaptureStylus.</xref:System.Windows.ContentElement.IsEnabled%2A>       Om anropar CaptureStylus returnerar `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A>är också `true`.</xref:System.Windows.ContentElement.IsStylusCaptured%2A>"
  syntax:
    content: public bool CaptureStylus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om pennan är har avbildats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.CaptureStylus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  id: CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: CaptureTouch(TouchDevice)
  nameWithType: ContentElement.CaptureTouch(TouchDevice)
  fullName: System.Windows.ContentElement.CaptureTouch(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försök att tvinga infångandet av en touch till det här elementet."
  remarks: "Returnerar CaptureTouch `false` om den <xref:System.Windows.Input.TouchDevice>fångades till ett annat element.</xref:System.Windows.Input.TouchDevice>       Om CaptureTouch returnerar `true`, sedan <xref:System.Windows.ContentElement.GotTouchCapture>händelsen utlöses.</xref:System.Windows.ContentElement.GotTouchCapture>       Släpp infångandet av en enda knapptryckning från det här elementet genom att använda den <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A>metod och ange touch-enheten för att frigöra.</xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> Släpp alla finputsningen från det här elementet genom att använda den <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A>metoden.</xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A>"
  syntax:
    content: public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Enheten att avbilda."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna touch fångas in till det här elementet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.CaptureTouch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.ContentElement.CommandBindings
  id: CommandBindings
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: CommandBindings
  nameWithType: ContentElement.CommandBindings
  fullName: System.Windows.ContentElement.CommandBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar en samling <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> objekt som är associerade med det här elementet."
  remarks: "En <xref:System.Windows.Input.CommandBinding>aktiverar Kommandohantering av ett visst kommando för det här elementet och deklarerar kopplingen mellan ett kommando, händelser och hanterare som är kopplade av det här elementet.</xref:System.Windows.Input.CommandBinding>       Ett annat vanligt sätt att fylla i samlingen CommandBindings är att använda <xref:System.Windows.Input.CommandManager>metoder programmässigt.</xref:System.Windows.Input.CommandManager>      <a name=&quot;xamlPropertyElementUsage_CommandBindings&quot;></a>## XAML egenskapen Elementsyntax ```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings  </object.CommandBindings>   </object>   ``` <a name=&quot;xamlValues_CommandBindings&quot;> </a> ## XAML värden *oneOrMoreCommandBindings* en eller flera <xref:System.Windows.Input.CommandBinding>element.</xref:System.Windows.Input.CommandBinding>       Var och en av dessa bör ha en <xref:System.Windows.Input.CommandBinding.Command%2A>-attributet inställt på ett känt kommando och attribut som angetts för den <xref:System.Windows.Input.CommandBinding.CanExecute>och <xref:System.Windows.Input.CommandBinding.Executed>hanterare implementeringar.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.Command%2A> Mer information finns i <xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding>"
  syntax:
    content: public System.Windows.Input.CommandBindingCollection CommandBindings { get; }
    return:
      type: System.Windows.Input.CommandBindingCollection
      description: "Insamling av alla <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> objekt."
  overload: System.Windows.ContentElement.CommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragEnter
  id: DragEnter
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragEnter
  nameWithType: ContentElement.DragEnter
  fullName: System.Windows.ContentElement.DragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet som dra mål."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>kopplade händelsen för den här klassen, så att DragEnter är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen DragEnter är kopplade till den underliggande <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragEnter&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.DragEnterEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewDragEnter>.</xref:System.Windows.ContentElement.PreviewDragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.DragEnterEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnDragEnter%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragEnterEvent
  id: DragEnterEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragEnterEvent
  nameWithType: ContentElement.DragEnterEvent
  fullName: System.Windows.ContentElement.DragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.DragEnter&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragLeave
  id: DragLeave
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragLeave
  nameWithType: ContentElement.DragLeave
  fullName: System.Windows.ContentElement.DragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet dra startpunkt."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>kopplade händelsen för den här klassen så att DragLeave är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen DragLeave är kopplade till den underliggande <xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragLeave&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.DragLeaveEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.DragDrop.PreviewDragLeave>.</xref:System.Windows.DragDrop.PreviewDragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.DragLeaveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnDragLeave%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragLeaveEvent
  id: DragLeaveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragLeaveEvent
  nameWithType: ContentElement.DragLeaveEvent
  fullName: System.Windows.ContentElement.DragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.DragLeave&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragOver
  id: DragOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragOver
  nameWithType: ContentElement.DragOver
  fullName: System.Windows.ContentElement.DragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet som potentiella målet."
  remarks: "Den här händelsen inträffar även om dra har sitt ursprung i elementet gränser. Om dra startas utanför det giltiga intervallet och flyttar sedan inuti den här händelsen utlöses också samt <xref:System.Windows.ContentElement.DragEnter>och relaterade händelser för förhandsgranskning.</xref:System.Windows.ContentElement.DragEnter>       Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>kopplade händelsen för den här klassen så att DragOver är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.DragOver?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen DragOver är kopplade till den underliggande <xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>      <a name=&quot;routedEventInfo_DragOver&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.DragOverEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.DragDrop.PreviewDragOver>.</xref:System.Windows.DragDrop.PreviewDragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.DragOverEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnDragOver%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler DragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DragOverEvent
  id: DragOverEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DragOverEvent
  nameWithType: ContentElement.DragOverEvent
  fullName: System.Windows.ContentElement.DragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.DragOver&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.Drop
  id: Drop
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: Drop
  nameWithType: ContentElement.Drop
  fullName: System.Windows.ContentElement.Drop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar en underliggande släpp-händelse med det här elementet som målet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>bifogad händelse för den här klassen så att släppa är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.Drop?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen släpp är kopplade till den underliggande <xref:System.Windows.DragDrop.Drop?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.Drop?displayProperty=fullName>      <a name=&quot;routedEventInfo_Drop&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.DropEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewDrop>.</xref:System.Windows.ContentElement.PreviewDrop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.DropEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnDrop%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler Drop;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.DropEvent
  id: DropEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: DropEvent
  nameWithType: ContentElement.DropEvent
  fullName: System.Windows.ContentElement.DropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.Drop&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.Focus
  id: Focus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: Focus()
  nameWithType: ContentElement.Focus()
  fullName: System.Windows.ContentElement.Focus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försöker att fokusera på det här elementet."
  remarks: "Ska tabbindexvärden, <xref:System.Windows.ContentElement.Focusable%2A>och <xref:System.Windows.ContentElement.IsEnabled%2A>måste båda vara `true`.</xref:System.Windows.ContentElement.IsEnabled%2A> </xref:System.Windows.ContentElement.Focusable%2A> Observera att nästan alla <xref:System.Windows.ContentElement>härledda klasser är inte <xref:System.Windows.ContentElement.Focusable%2A>som standard.</xref:System.Windows.ContentElement.Focusable%2A> </xref:System.Windows.ContentElement>       Även om ett element tabbindexvärden och aktiverad, händelsehantering i en specifik trädet, (till exempel för en sammansatt kontroll) kan svara på fokus förhandsgranskningshändelserna genom att inte tillåta fokus, vilket den här metoden returnerar `false`.       Fokus i allmänhet styrs av två separata begrepp: tangentbord fokus och logiska fokus alltid inte är identiska. Den här metoden anger logiska fokus. Det finns inga programmässiga sätt att ange fokus specifikt; tangentbordsfokus bestäms av indata från användaren. Mer information finns i [fokus översikt](~/add/includes/ajax-current-ext-md.md) och [indata översikt](~/add/includes/ajax-current-ext-md.md).       Om du anropar fokus returnerar `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A>och <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A>är också `true`.</xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> </xref:System.Windows.ContentElement.IsKeyboardFocused%2A>       Om relaterade egenskaper inte redan `true`, när du anropar fokus, en eller flera av följande händelser aktiveras i följande ordning: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>(källa är den nya fokus mål), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus>(källa är den nya fokus mål).</xref:System.Windows.ContentElement.GotKeyboardFocus> </xref:System.Windows.ContentElement.LostKeyboardFocus> </xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> </xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> </xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> </xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>"
  example:
  - "The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it. Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.  \n  \n [!code-cs[ContentElementsSmorgasbord#Focus](~/add/codesnippet/csharp/ContentElementsSmorgasbord/page1.xaml.cs#focus)]\n [!code-vb[ContentElementsSmorgasbord#Focus](~/add/codesnippet/visualbasic/contentelementssmorgasbord/page1.xaml.vb#focus)]"
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tangentbordsfokus kan anges till det här elementet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om det här metodanropet inte att tvinga fram fokus."
  overload: System.Windows.ContentElement.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.Focusable
  id: Focusable
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: Focusable
  nameWithType: ContentElement.Focusable
  fullName: System.Windows.ContentElement.Focusable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om elementet kan ta emot fokus."
  remarks: "Endast fokuserad element får tangentbordet.       Vissa härledda klasser kan åsidosätta metadata för den här beroendeegenskap så att den härledda klassen är tabbindexvärden som standard.       När ärvs av <xref:System.Windows.Documents.Hyperlink>eller dess härledda klasser <xref:System.Windows.Documents.Hyperlink>åsidosätter metadata för den här beroendeegenskap och omdefinierar standardvärdet för den här egenskapen ska `true`.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.Documents.Hyperlink>      <a name=&quot;dependencyPropertyInfo_Focusable&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.FocusableProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.FocusableProperty>"
  example:
  - "The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.  \n  \n [!code-xml[ContentElementsSmorgasbord#Focusable](~/add/codesnippet/xaml/ContentElementsSmorgasbord/page1.xaml#focusable)]"
  syntax:
    content: public bool Focusable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet är tabbindexvärden; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, men se anmärkning."
  overload: System.Windows.ContentElement.Focusable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.FocusableChanged
  id: FocusableChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: FocusableChanged
  nameWithType: ContentElement.FocusableChanged
  fullName: System.Windows.ContentElement.FocusableChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.Focusable*>egenskapsändringar.</xref:System.Windows.ContentElement.Focusable*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.FocusableProperty
  id: FocusableProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: FocusableProperty
  nameWithType: ContentElement.FocusableProperty
  fullName: System.Windows.ContentElement.FocusableProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.Focusable*>beroendeegenskap.</xref:System.Windows.ContentElement.Focusable*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusableProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  id: GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: ContentElement.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.ContentElement.GetAnimationBaseValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar grundläggande egenskapsvärdet för den angivna egenskapen för detta element, oberoende av eventuella animerade värde från en körs eller stoppas animering."
  remarks: "Om några animationer är kopplade till egenskapen och sedan GetAnimationBaseValue returvärde alltid är identisk med den <xref:System.Windows.DependencyObject.GetValue%2A>returvärde.</xref:System.Windows.DependencyObject.GetValue%2A> Om animeringar som är kopplade sedan alla möjliga animering härledda värden inklusive start och stopp ignoreras egenskapsvärdet bestäms baserat på andra möjliga indata. Mer information finns i [beroende egenskapen värdet prioritet](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "The.Dependency-egenskapen för att kontrollera."
    return:
      type: System.Object
      description: "Egenskapen värdet som om några animationer är kopplade till den angivna beroendegenskapen."
  overload: System.Windows.ContentElement.GetAnimationBaseValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GetUIParentCore
  id: GetUIParentCore
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GetUIParentCore()
  nameWithType: ContentElement.GetUIParentCore()
  fullName: System.Windows.ContentElement.GetUIParentCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar ett alternativ när åsidosätts i en härledd klass [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] överordnade för det här elementet om det finns ingen visuell överordnad."
  remarks: "Virtuella standardimplementering av den här metoden returnerar `null`. <xref:System.Windows.FrameworkContentElement>ger praktiska implementeringen.</xref:System.Windows.FrameworkContentElement>       Alternativa överordnade används för händelsen routning i fall där ett element skapar en alternativ överordnad struktur så att dess händelser är routade på ett sätt som skiljer sig från standard mönstret för routning upp det visuella trädet standard överordnade eller nedåt i preview-routningsstrategi."
  syntax:
    content: protected virtual System.Windows.DependencyObject GetUIParentCore ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "Ett objekt, om implementering av en härledd klass har en alternativ överordnad anslutning till rapporten."
  overload: System.Windows.ContentElement.GetUIParentCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: ContentElement.GiveFeedback
  fullName: System.Windows.ContentElement.GiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar en underliggande dra och släpp-händelse som innebär att det här elementet."
  remarks: "Händelsen GiveFeedback kan källan för en dra händelse att ändra utseendet på muspekaren för att ge feedback från visual användare under dra och släppa. Den visuella feedbacken förstärker att dra och släppa pågår.       Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>kopplade händelsen för den här klassen så att GiveFeedback är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen GiveFeedback är kopplade till den underliggande <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>      <a name=&quot;routedEventInfo_GiveFeedback&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GiveFeedbackEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.GiveFeedbackEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</xref:System.Windows.ContentElement.PreviewGiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.ContentElement.GiveFeedbackEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnGiveFeedback%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GiveFeedbackEvent
  id: GiveFeedbackEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GiveFeedbackEvent
  nameWithType: ContentElement.GiveFeedbackEvent
  fullName: System.Windows.ContentElement.GiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GiveFeedback&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotFocus
  id: GotFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotFocus
  nameWithType: ContentElement.GotFocus
  fullName: System.Windows.ContentElement.GotFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet fokusering logiska."
  remarks: "Logiska fokus skiljer sig från tangentbordsfokus om fokus avsiktligt tvingas med hjälp av ett metodanrop men föregående tangentbordsfokus finns i ett annat omfång. I det här scenariot förblir tangentbordsfokus där det är och elementet där en <xref:System.Windows.ContentElement.Focus%2A>metoden anropas fortfarande hämtar logiska fokus.</xref:System.Windows.ContentElement.Focus%2A>       En mer exakt tolkning av den här händelsen är att den aktiveras när värdet för den <xref:System.Windows.ContentElement.IsFocused%2A>egenskapen för ett element i flödet har ändrats från `false` till `true`.</xref:System.Windows.ContentElement.IsFocused%2A>       Eftersom den här händelsen använder genomströmning routning, kanske elementet som får fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>      <a name=&quot;routedEventInfo_GotFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GotFocusEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.RoutedEventHandler>|      -Det finns ingen motsvarande tunneling händelse.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.ContentElement.GotFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnGotFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGotFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler GotFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: ContentElement.GotFocusEvent
  fullName: System.Windows.ContentElement.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GotFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotKeyboardFocus
  id: GotKeyboardFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotKeyboardFocus
  nameWithType: ContentElement.GotKeyboardFocus
  fullName: System.Windows.ContentElement.GotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när tangentbordet fokuserar på det här elementet."
  remarks: "<xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>är en liknande händelse som spårar status ändras i en egenskap som upprätthåller fokus tillstånd för ett element. händelsen GotKeyboardFocus visas i många av samma omständigheter.</xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>       Eftersom den här händelsen använder genomströmning routning, kanske elementet som har fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som har fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>kopplade händelsen för den här klassen så att GotKeyboardFocus är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen GotKeyboardFocus är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotKeyboardFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.ContentElement.GotKeyboardFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotKeyboardFocusEvent
  id: GotKeyboardFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotKeyboardFocusEvent
  nameWithType: ContentElement.GotKeyboardFocusEvent
  fullName: System.Windows.ContentElement.GotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GotKeyboardFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotMouseCapture
  id: GotMouseCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotMouseCapture
  nameWithType: ContentElement.GotMouseCapture
  fullName: System.Windows.ContentElement.GotMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet fångar musen."
  remarks: "När ett element samlar in musen, får musaktiviteter även om muspekaren är utanför dess gränser. Musen fångas vanligtvis bara under dra och släpp-åtgärder och förblir avbildade tills släpp-åtgärden dra och släpp-åtgärden utförs.       Eftersom den här händelsen använder genomströmning routning, kanske element som har avbildning ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i att fastställa den faktiska element med musen datainsamling.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>kopplade händelsen för den här klassen så att GotMouseCapture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen GotMouseCapture är kopplade till den underliggande <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotMouseCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GotMouseCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Det finns inga definierade motsvarande tunneling händelse.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.GotMouseCaptureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnGotMouseCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGotMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler GotMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotMouseCaptureEvent
  id: GotMouseCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotMouseCaptureEvent
  nameWithType: ContentElement.GotMouseCaptureEvent
  fullName: System.Windows.ContentElement.GotMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GotMouseCapture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotStylusCapture
  id: GotStylusCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotStylusCapture
  nameWithType: ContentElement.GotStylusCapture
  fullName: System.Windows.ContentElement.GotStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet fångar pennan."
  remarks: "När ett element samlar in pennan, får indata från pennan även om visaren är utanför dess gränser. Pennan fångas vanligtvis bara under dra och släpp-åtgärder och behåller avbilda tills släpp-åtgärden dra och släpp-åtgärden utförs.       Eftersom den här händelsen använder genomströmning routning, kanske element som har avbildning ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som har avbildning.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den bifogade händelsen för den här klassen så att GotStylusCapture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> Händelsehanterare som är kopplade till händelsen GotStylusCapture är kopplade till den underliggande <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_GotStylusCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GotStylusCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Det finns inga definierade motsvarande tunneling händelse.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.GotStylusCaptureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnGotStylusCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGotStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler GotStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotStylusCaptureEvent
  id: GotStylusCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotStylusCaptureEvent
  nameWithType: ContentElement.GotStylusCaptureEvent
  fullName: System.Windows.ContentElement.GotStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GotStylusCapture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotTouchCapture
  id: GotTouchCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotTouchCapture
  nameWithType: ContentElement.GotTouchCapture
  fullName: System.Windows.ContentElement.GotTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en touch avbildas till det här elementet."
  remarks: "<a name=&quot;routedEventInfo_GotTouchCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.GotTouchCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Åsidosätt <xref:System.Windows.ContentElement.OnGotTouchCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnGotTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.GotTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> GotTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.GotTouchCaptureEvent
  id: GotTouchCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: GotTouchCaptureEvent
  nameWithType: ContentElement.GotTouchCaptureEvent
  fullName: System.Windows.ContentElement.GotTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.GotTouchCapture&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.HasAnimatedProperties
  id: HasAnimatedProperties
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: HasAnimatedProperties
  nameWithType: ContentElement.HasAnimatedProperties
  fullName: System.Windows.ContentElement.HasAnimatedProperties
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om det här elementet har animerade egenskaper."
  remarks: "Den här egenskapen returnerar `true` antingen för beständig animeringar för (unclocked, alltid körs) eller för animeringar som har en specifik tidslinje."
  syntax:
    content: public bool HasAnimatedProperties { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det här elementet har animeringar som är kopplad till någon av dess egenskaper. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.HasAnimatedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.InputBindings
  id: InputBindings
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: InputBindings
  nameWithType: ContentElement.InputBindings
  fullName: System.Windows.ContentElement.InputBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar mängden inkommande bindningar som är associerade med det här elementet."
  remarks: "Inkommande bindningar stöd för bindning av kommandon för att ange enheter. Till exempel <xref:System.Windows.Input.MouseBinding>implementerar indata bindningar som innehåller egenskaper som är specifika för möss.</xref:System.Windows.Input.MouseBinding>       Insamling av inkommande bindningar innehåller både inkommande bindningar som hör till typen och även inkommande bindningar som deklareras på-instansen.       En relaterad egenskap <xref:System.Windows.ContentElement.CommandBindings%2A>, upprätthåller en samling med kommandot bindningar.</xref:System.Windows.ContentElement.CommandBindings%2A> Dessa bindningar skiljer sig från inkommande bindningar eftersom de representerar nästa nivå av kommandot bearbetning - åtgärder som är knutna till kända kommandon och klass-specifika hanterare för dessa.      <a name=&quot;xamlPropertyElementUsage_InputBindings&quot;></a>## XAML egenskapen Elementsyntax ```   <object>     <object.InputBindings>       oneOrMoreInputBindings  </object.InputBindings>   </object>   ``` <a name=&quot;xamlValues_InputBindings&quot;> </a> ## XAML värden *oneOrMoreInputBindings* en eller flera <xref:System.Windows.Input.InputBinding>element (vanligtvis den <xref:System.Windows.Input.KeyBinding>eller <xref:System.Windows.Input.MouseBinding>härledda klasser).</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.InputBinding>       Var och en av dessa förväntas ha en <xref:System.Windows.Input.InputBinding.Command%2A>och <xref:System.Windows.Input.InputBinding.Gesture%2A>attributet set.</xref:System.Windows.Input.InputBinding.Gesture%2A> </xref:System.Windows.Input.InputBinding.Command%2A>"
  syntax:
    content: public System.Windows.Input.InputBindingCollection InputBindings { get; }
    return:
      type: System.Windows.Input.InputBindingCollection
      description: "Mängden inkommande bindningar."
  overload: System.Windows.ContentElement.InputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsEnabled
  id: IsEnabled
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsEnabled
  nameWithType: ContentElement.IsEnabled
  fullName: System.Windows.ContentElement.IsEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar eller anger ett värde som anger om det här elementet har aktiverats i den [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsEnabled&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsEnabledProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsEnabledProperty>"
  example:
  - "The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to IsEnabled `false`.  \n  \n [!code-xml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/add/codesnippet/xaml/ContentElementsSmorgasbord/page1.xaml#isenabledismouseover)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsEnabledChanged
  id: IsEnabledChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsEnabledChanged
  nameWithType: ContentElement.IsEnabledChanged
  fullName: System.Windows.ContentElement.IsEnabledChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsEnabled*>egenskapen på det här elementet ändringar.</xref:System.Windows.ContentElement.IsEnabled*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: ContentElement.IsEnabledCore
  fullName: System.Windows.ContentElement.IsEnabledCore
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som blir returvärdet för <xref:System.Windows.ContentElement.IsEnabled*>i härledda klasser.</xref:System.Windows.ContentElement.IsEnabled*>"
  syntax:
    content: protected virtual bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: ContentElement.IsEnabledProperty
  fullName: System.Windows.ContentElement.IsEnabledProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsEnabled*>beroendeegenskap.</xref:System.Windows.ContentElement.IsEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsFocused
  id: IsFocused
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsFocused
  nameWithType: ContentElement.IsFocused
  fullName: System.Windows.ContentElement.IsFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som avgör om det här elementet har logiska fokus."
  remarks: "Logiska fokus kan skilja sig från tangentbordsfokus om ett program har flera fokus avdelningar som mellan menyn innehållet och resten av programmet. I det här scenariot tangentbordsfokus kan bara finnas på ett program UI-element, men vissa element i andra avdelningar fokus fortfarande behålla logiska fokus. Mer information om logiska fokus finns [indata översikt](~/add/includes/ajax-current-ext-md.md) och [fokus översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsFocused&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsFocusedProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsFocusedProperty>"
  example:
  - "The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.  \n  \n [!code-xml[ContentElementsSmorgasbord#Focusable](~/add/codesnippet/xaml/ContentElementsSmorgasbord/page1.xaml#focusable)]"
  syntax:
    content: public bool IsFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det här elementet har logiska fokus; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsFocusedProperty
  id: IsFocusedProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsFocusedProperty
  nameWithType: ContentElement.IsFocusedProperty
  fullName: System.Windows.ContentElement.IsFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsFocused*>beroendeegenskap.</xref:System.Windows.ContentElement.IsFocused*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsInputMethodEnabled
  id: IsInputMethodEnabled
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsInputMethodEnabled
  nameWithType: ContentElement.IsInputMethodEnabled
  fullName: System.Windows.ContentElement.IsInputMethodEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om ett indatametoden system som en [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)], är aktiverad för bearbetningen av indata till det här elementet."
  remarks: "Den här egenskapen returnerar värdet som returneras av den bifogade egenskapen <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>för tillfället aktiverade inmatningsmetoder (tangentbord, tal och andra enheter).</xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInputMethodEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en indatametoden är aktiv. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet för den underliggande bifogade egenskapen är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, men det här värdet påverkas av tillståndet för inmatningsmetoder vid körning."
  overload: System.Windows.ContentElement.IsInputMethodEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocused
  id: IsKeyboardFocused
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocused
  nameWithType: ContentElement.IsKeyboardFocused
  fullName: System.Windows.ContentElement.IsKeyboardFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om det här elementet har fokus."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsKeyboardFocused&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>"
  syntax:
    content: public bool IsKeyboardFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det här elementet har tangentbordsfokus; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsKeyboardFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocusedChanged
  id: IsKeyboardFocusedChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocusedChanged
  nameWithType: ContentElement.IsKeyboardFocusedChanged
  fullName: System.Windows.ContentElement.IsKeyboardFocusedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsKeyboardFocused*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsKeyboardFocused*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocusedProperty
  id: IsKeyboardFocusedProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocusedProperty
  nameWithType: ContentElement.IsKeyboardFocusedProperty
  fullName: System.Windows.ContentElement.IsKeyboardFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsKeyboardFocused*>beroendeegenskap.</xref:System.Windows.ContentElement.IsKeyboardFocused*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocusWithin
  id: IsKeyboardFocusWithin
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocusWithin
  nameWithType: ContentElement.IsKeyboardFocusWithin
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om fokus är var som helst inom elementet eller underordnade element."
  remarks: "Ändringar av värdet på egenskapen ökar vanligtvis den <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>händelse, såvida inte en härledd klass har åsidosatt <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A>att ignorera händelsen.</xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> </xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>       Du anger inte den här egenskapen direkt, men du kan ange fokus till elementet genom att anropa <xref:System.Windows.ContentElement.Focus%2A>, eller genom att göra en <xref:System.Windows.ContentElement.MoveFocus%2A>begäran.</xref:System.Windows.ContentElement.MoveFocus%2A> </xref:System.Windows.ContentElement.Focus%2A> Något av dessa metodanrop kan ändra den här egenskapens värde.      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocusWithin&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>"
  syntax:
    content: public bool IsKeyboardFocusWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tangentbordsfokus finns på elementet eller dess underordnade element. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsKeyboardFocusWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  id: IsKeyboardFocusWithinChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocusWithinChanged
  nameWithType: ContentElement.IsKeyboardFocusWithinChanged
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet på egenskapen IsKeyboardFocusWithinChanged ändras på det här elementet."
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  id: IsKeyboardFocusWithinProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsKeyboardFocusWithinProperty
  nameWithType: ContentElement.IsKeyboardFocusWithinProperty
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsKeyboardFocusWithin*>beroendeegenskap.</xref:System.Windows.ContentElement.IsKeyboardFocusWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCaptured
  id: IsMouseCaptured
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCaptured
  nameWithType: ContentElement.IsMouseCaptured
  fullName: System.Windows.ContentElement.IsMouseCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om musen avbildas av det här elementet."
  remarks: "Avbilda musstatus är relaterad till dra och släpp-åtgärder i processen.      <a name=&quot;dependencyPropertyInfo_IsMouseCaptured&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsMouseCapturedProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsMouseCapturedProperty>"
  example:
  - "The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.  \n  \n [!code-cs[ContentElementsSmorgasbord#IsMouseCaptured](~/add/codesnippet/csharp/ContentElementsSmorgasbord/page1.xaml.cs#ismousecaptured)]\n [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/add/codesnippet/visualbasic/contentelementssmorgasbord/page1.xaml.vb#ismousecaptured)]"
  syntax:
    content: public bool IsMouseCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet har musinfångningen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsMouseCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCapturedChanged
  id: IsMouseCapturedChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCapturedChanged
  nameWithType: ContentElement.IsMouseCapturedChanged
  fullName: System.Windows.ContentElement.IsMouseCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsMouseCaptured*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsMouseCaptured*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCapturedProperty
  id: IsMouseCapturedProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCapturedProperty
  nameWithType: ContentElement.IsMouseCapturedProperty
  fullName: System.Windows.ContentElement.IsMouseCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsMouseCaptured*>beroendeegenskap.</xref:System.Windows.ContentElement.IsMouseCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCaptureWithin
  id: IsMouseCaptureWithin
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCaptureWithin
  nameWithType: ContentElement.IsMouseCaptureWithin
  fullName: System.Windows.ContentElement.IsMouseCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som avgör om musinfångningen hålls av det här elementet eller genom att underordnade element i dess element-trädet."
  remarks: "<a name=&quot;dependencyPropertyInfo_IsMouseCaptureWithin&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>"
  syntax:
    content: public bool IsMouseCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det här elementet eller ett inkluderat element har musinfångningen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsMouseCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCaptureWithinChanged
  id: IsMouseCaptureWithinChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCaptureWithinChanged
  nameWithType: ContentElement.IsMouseCaptureWithinChanged
  fullName: System.Windows.ContentElement.IsMouseCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref href=&quot;System.Windows.ContentElement.IsMouseCaptureWithinProperty&quot;> </xref> ändringar på det här elementet."
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseCaptureWithinProperty
  id: IsMouseCaptureWithinProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseCaptureWithinProperty
  nameWithType: ContentElement.IsMouseCaptureWithinProperty
  fullName: System.Windows.ContentElement.IsMouseCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsMouseCaptureWithin*>beroendeegenskap.</xref:System.Windows.ContentElement.IsMouseCaptureWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseDirectlyOver
  id: IsMouseDirectlyOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseDirectlyOver
  nameWithType: ContentElement.IsMouseDirectlyOver
  fullName: System.Windows.ContentElement.IsMouseDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om positionen för muspekaren motsvarar träffar testresultaten vilket ta elementet sammansättning i beräkningen."
  remarks: "Till skillnad från <xref:System.Windows.ContentElement.IsMouseOver%2A>, den här egenskapen är endast `true` om muspekaren är över literal element, som för ett träffar test.</xref:System.Windows.ContentElement.IsMouseOver%2A> Om muspekaren är i stället över ett underordnat element, särskilt över element som ingår i ett elements djupare mallen och sammansättning, den här egenskapen inte `false`. Om du inte vet hur en kontroll är sammansatta (till exempel du använder den här egenskapen i en anpassad kontroll-mall för en kontroll som du definierar), den här egenskapen kan returnera oväntade resultat. De flesta scenarier där du inte redigerar kontroller använder <xref:System.Windows.ContentElement.IsMouseOver%2A>i stället.</xref:System.Windows.ContentElement.IsMouseOver%2A>       Om musen avbildas av det här elementet och den här egenskapen är `true` vid tidpunkten för insamlingen fortsätter den här egenskapen att returnera `true` tills musinfångningen går förlorad och pekaren är inte över dess gränser.      <a name=&quot;dependencyPropertyInfo_IsMouseDirectlyOver&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>"
  syntax:
    content: public bool IsMouseDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om muspekaren är över detta element träffar test; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsMouseDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseDirectlyOverChanged
  id: IsMouseDirectlyOverChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseDirectlyOverChanged
  nameWithType: ContentElement.IsMouseDirectlyOverChanged
  fullName: System.Windows.ContentElement.IsMouseDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsMouseDirectlyOver*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsMouseDirectlyOver*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseDirectlyOverProperty
  id: IsMouseDirectlyOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseDirectlyOverProperty
  nameWithType: ContentElement.IsMouseDirectlyOverProperty
  fullName: System.Windows.ContentElement.IsMouseDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsMouseDirectlyOver*>beroendeegenskap.</xref:System.Windows.ContentElement.IsMouseDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseOver
  id: IsMouseOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseOver
  nameWithType: ContentElement.IsMouseOver
  fullName: System.Windows.ContentElement.IsMouseOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om muspekaren befinner sig i det här elementet (inklusive visual underordnade element eller dess sammansättning kontroll)."
  remarks: "Även om en liknande händelse &quot;IsMouseOverChanged&quot; inte finns, göra flera liknande händelser. Du kan till exempel använda <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, och <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> </xref:System.Windows.ContentElement.MouseMove> </xref:System.Windows.ContentElement.MouseEnter>       Om det här elementet fångar musen, förblir den här egenskapen `true` tills musinfångningen går förlorad och muspekaren lämnar i elementet gränser.      <a name=&quot;dependencyPropertyInfo_IsMouseOver&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsMouseOverProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsMouseOverProperty>"
  example:
  - "The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports IsMouseOver `true`.  \n  \n [!code-xml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/add/codesnippet/xaml/ContentElementsSmorgasbord/page1.xaml#isenabledismouseover)]"
  syntax:
    content: public bool IsMouseOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om muspekaren är över elementet eller dess underordnade element. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsMouseOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsMouseOverProperty
  id: IsMouseOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsMouseOverProperty
  nameWithType: ContentElement.IsMouseOverProperty
  fullName: System.Windows.ContentElement.IsMouseOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsMouseOver*>beroendeegenskap.</xref:System.Windows.ContentElement.IsMouseOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCaptured
  id: IsStylusCaptured
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCaptured
  nameWithType: ContentElement.IsStylusCaptured
  fullName: System.Windows.ContentElement.IsStylusCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om pennan avbildas till det här elementet."
  remarks: "Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptured&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsStylusCapturedProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsStylusCapturedProperty>"
  syntax:
    content: public bool IsStylusCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet har inspelningen från pennan. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsStylusCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCapturedChanged
  id: IsStylusCapturedChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCapturedChanged
  nameWithType: ContentElement.IsStylusCapturedChanged
  fullName: System.Windows.ContentElement.IsStylusCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsStylusCaptured*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsStylusCaptured*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCapturedProperty
  id: IsStylusCapturedProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCapturedProperty
  nameWithType: ContentElement.IsStylusCapturedProperty
  fullName: System.Windows.ContentElement.IsStylusCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsStylusCaptured*>beroendeegenskap.</xref:System.Windows.ContentElement.IsStylusCaptured*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCaptureWithin
  id: IsStylusCaptureWithin
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCaptureWithin
  nameWithType: ContentElement.IsStylusCaptureWithin
  fullName: System.Windows.ContentElement.IsStylusCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som avgör om från pennan avbilda hålls av det här elementet, inklusive underordnade element och kontroll-sammansättning."
  remarks: "Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusCaptureWithin&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>"
  syntax:
    content: public bool IsStylusCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om från pennan avbilda utförs inom det här elementet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsStylusCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCaptureWithinChanged
  id: IsStylusCaptureWithinChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCaptureWithinChanged
  nameWithType: ContentElement.IsStylusCaptureWithinChanged
  fullName: System.Windows.ContentElement.IsStylusCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsStylusCaptureWithin*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsStylusCaptureWithin*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusCaptureWithinProperty
  id: IsStylusCaptureWithinProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusCaptureWithinProperty
  nameWithType: ContentElement.IsStylusCaptureWithinProperty
  fullName: System.Windows.ContentElement.IsStylusCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsStylusCaptureWithin*>beroendeegenskap.</xref:System.Windows.ContentElement.IsStylusCaptureWithin*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusDirectlyOver
  id: IsStylusDirectlyOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusDirectlyOver
  nameWithType: ContentElement.IsStylusDirectlyOver
  fullName: System.Windows.ContentElement.IsStylusDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om positionen från pennan motsvarar träffar testresultaten vilket ta elementet sammansättning i beräkningen."
  remarks: "Till skillnad från <xref:System.Windows.ContentElement.IsStylusOver%2A>, den här egenskapen är endast `true` om pennan elementet.</xref:System.Windows.ContentElement.IsStylusOver%2A> Om pennan är i stället via ett underordnat element eller element som ingår i ett elements djupare sammansättning, att den här egenskapen `false`.       Om du inte vet hur en kontroll är sammansatta (till exempel du använder den här egenskapen i en anpassad kontroll-mall för en kontroll som du definierar), den här egenskapen kan returnera oväntade resultat. De flesta scenarier där du inte redigerar kontroller använder <xref:System.Windows.ContentElement.IsStylusOver%2A>i stället.</xref:System.Windows.ContentElement.IsStylusOver%2A>       Om det här elementet har från pennan avbildning och den här egenskapen är `true` vid tidpunkten för insamlingen egenskapen förblir `true` tills från pennan avbilda går förlorad och pennan är inte över dess gränser.       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusDirectlyOver&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>"
  syntax:
    content: public bool IsStylusDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om pennan samma element träffar test; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsStylusDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusDirectlyOverChanged
  id: IsStylusDirectlyOverChanged
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusDirectlyOverChanged
  nameWithType: ContentElement.IsStylusDirectlyOverChanged
  fullName: System.Windows.ContentElement.IsStylusDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när värdet för den <xref:System.Windows.ContentElement.IsStylusDirectlyOver*>egenskapsändringar på det här elementet.</xref:System.Windows.ContentElement.IsStylusDirectlyOver*>"
  remarks: "Den här medlemmen är en [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] händelse, inte en routade händelse."
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusDirectlyOverProperty
  id: IsStylusDirectlyOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusDirectlyOverProperty
  nameWithType: ContentElement.IsStylusDirectlyOverProperty
  fullName: System.Windows.ContentElement.IsStylusDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsStylusDirectlyOver*>beroendeegenskap.</xref:System.Windows.ContentElement.IsStylusDirectlyOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusOver
  id: IsStylusOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusOver
  nameWithType: ContentElement.IsStylusOver
  fullName: System.Windows.ContentElement.IsStylusOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar ett värde som anger om pennan kan nås via det här elementet (inklusive visual underordnade element)."
  remarks: "Om det här elementet har från pennan avbildning, förblir den här egenskapen `true` tills från pennan avbilda går förlorad och muspekaren är utanför dess gränser.       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_IsStylusOver&quot;></a>## Beroendeegenskapsinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.IsStylusOverProperty>|   | Metadata egenskaperna `true`| Ingen |</xref:System.Windows.ContentElement.IsStylusOverProperty>"
  syntax:
    content: public bool IsStylusOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om pennan elementet eller dess underordnade element. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.IsStylusOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.IsStylusOverProperty
  id: IsStylusOverProperty
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: IsStylusOverProperty
  nameWithType: ContentElement.IsStylusOverProperty
  fullName: System.Windows.ContentElement.IsStylusOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.ContentElement.IsStylusOver*>beroendeegenskap.</xref:System.Windows.ContentElement.IsStylusOver*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.KeyDown
  id: KeyDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: KeyDown
  nameWithType: ContentElement.KeyDown
  fullName: System.Windows.ContentElement.KeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en tangent trycks ned och fokus ligger på det här elementet."
  remarks: "Hantering av nycklar samverkar med andra funktioner, till exempel sammansättning drar till sig och text. Händelsen KeyDown är en lägre nivå text inkommande händelse som inte kanske fungerar som förväntat på vissa kontroller. Detta beror på att vissa kontroller har kontrollen sammansättning eller klassen hantering som ger en högre version av text indata hantering och relaterade händelser.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>kopplade händelsen för den här klassen så att tangent är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen KeyDown är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>      <a name=&quot;routedEventInfo_KeyDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.KeyDownEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.KeyEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewKeyDown>.</xref:System.Windows.ContentElement.PreviewKeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.ContentElement.KeyDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnKeyDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.KeyDownEvent
  id: KeyDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: KeyDownEvent
  nameWithType: ContentElement.KeyDownEvent
  fullName: System.Windows.ContentElement.KeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.KeyDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.KeyUp
  id: KeyUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: KeyUp
  nameWithType: ContentElement.KeyUp
  fullName: System.Windows.ContentElement.KeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en tangent släpps när fokus ligger på det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>kopplade händelsen för den här klassen så att Tangent upp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelserna som är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>      <a name=&quot;routedEventInfo_KeyUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.KeyUpEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.KeyEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewKeyUp>.</xref:System.Windows.ContentElement.PreviewKeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.ContentElement.KeyUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnKeyUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.KeyUpEvent
  id: KeyUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: KeyUpEvent
  nameWithType: ContentElement.KeyUpEvent
  fullName: System.Windows.ContentElement.KeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.KeyUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostFocus
  id: LostFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostFocus
  nameWithType: ContentElement.LostFocus
  fullName: System.Windows.ContentElement.LostFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när logiska fokus flyttas från det här elementet."
  remarks: "Logiska fokus skiljer sig från tangentbordsfokus om fokus avsiktligt tvingas direkt med hjälp av ett metodanrop men föregående tangentbordsfokus finns i ett annat omfång. I det här scenariot, tangentbord fokus kvar där det är och elementet där en <xref:System.Windows.ContentElement.Focus%2A>metoden anropas fortfarande hämtar logiska fokus.</xref:System.Windows.ContentElement.Focus%2A>       En mer exakt tolkning av den här händelsen är att den aktiveras när värdet för den <xref:System.Windows.ContentElement.IsFocused%2A>egenskapen för ett element i vägen ändras från `true` till `false`.</xref:System.Windows.ContentElement.IsFocused%2A>       Eftersom den här händelsen använder genomströmning routning, kanske elementet som förlorar fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>      <a name=&quot;routedEventInfo_LostFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.LostFocusEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.RoutedEventHandler>|      -Det finns ingen motsvarande tunneling händelse.</xref:System.Windows.RoutedEventHandler> </xref:System.Windows.ContentElement.LostFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnLostFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnLostFocus%2A>"
  syntax:
    content: public event System.Windows.RoutedEventHandler LostFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: ContentElement.LostFocusEvent
  fullName: System.Windows.ContentElement.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostKeyboardFocus
  id: LostKeyboardFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostKeyboardFocus
  nameWithType: ContentElement.LostKeyboardFocus
  fullName: System.Windows.ContentElement.LostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när tangentbordet längre fokuserar på det här elementet."
  remarks: "Eftersom den här händelsen använder genomströmning routning, kanske elementet som tappas bort fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som förlorad fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>kopplade händelsen för den här klassen, så att LostKeyboardFocus är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen LostKeyboardFocus är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostKeyboardFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.ContentElement.LostKeyboardFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostKeyboardFocusEvent
  id: LostKeyboardFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostKeyboardFocusEvent
  nameWithType: ContentElement.LostKeyboardFocusEvent
  fullName: System.Windows.ContentElement.LostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.LostKeyboardFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostMouseCapture
  id: LostMouseCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostMouseCapture
  nameWithType: ContentElement.LostMouseCapture
  fullName: System.Windows.ContentElement.LostMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet förlorar musinfångningen."
  remarks: "När ett element samlar in musen, får musaktiviteter även om visaren är utanför dess gränser. Musen är vanligtvis hämtats endast under dra och släpp-åtgärder.       Eftersom den här händelsen använder genomströmning routning, kanske elementet som förlorar avbildning ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som förlorad avbildning.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>kopplade händelsen för den här klassen, så att LostMouseCapture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen LostMouseCapture är kopplade till den underliggande <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostMouseCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.LostMouseCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Det finns inga definierade motsvarande tunneling händelse.</xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.LostMouseCaptureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnLostMouseCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnLostMouseCapture%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler LostMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostMouseCaptureEvent
  id: LostMouseCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostMouseCaptureEvent
  nameWithType: ContentElement.LostMouseCaptureEvent
  fullName: System.Windows.ContentElement.LostMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.LostMouseCapture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostStylusCapture
  id: LostStylusCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostStylusCapture
  nameWithType: ContentElement.LostStylusCapture
  fullName: System.Windows.ContentElement.LostStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet förlorar från pennan avbildning."
  remarks: "När ett element samlar in pennan, får indata från pennan även om visaren är utanför dess gränser. Pennan fångas vanligtvis endast under dra och släpp-åtgärder.       Eftersom den här händelsen använder genomströmning routning, kanske elementet som förlorar fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som förlorad fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>kopplade händelsen för den här klassen, så att LostStylusCapture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen LostStylusCapture är kopplade till den underliggande <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>      <a name=&quot;routedEventInfo_LostStylusCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.LostStylusCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Det finns inga definierade motsvarande tunneling händelse.</xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.LostStylusCaptureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnLostStylusCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnLostStylusCapture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler LostStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostStylusCaptureEvent
  id: LostStylusCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostStylusCaptureEvent
  nameWithType: ContentElement.LostStylusCaptureEvent
  fullName: System.Windows.ContentElement.LostStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.LostStylusCapture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostTouchCapture
  id: LostTouchCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostTouchCapture
  nameWithType: ContentElement.LostTouchCapture
  fullName: System.Windows.ContentElement.LostTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet förlorar en touch-avbildning."
  remarks: "<a name=&quot;routedEventInfo_LostTouchCapture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.LostTouchCaptureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Åsidosätt <xref:System.Windows.ContentElement.OnLostTouchCapture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnLostTouchCapture%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.LostTouchCaptureEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> LostTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.LostTouchCaptureEvent
  id: LostTouchCaptureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: LostTouchCaptureEvent
  nameWithType: ContentElement.LostTouchCaptureEvent
  fullName: System.Windows.ContentElement.LostTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.LostTouchCapture&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseDown
  id: MouseDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseDown
  nameWithType: ContentElement.MouseDown
  fullName: System.Windows.ContentElement.MouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>kopplade händelsen för den här klassen så att musknapp ned är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen Musknapp ned är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Händelsen Musknapp ned visas ofta tillsammans med antingen <xref:System.Windows.ContentElement.MouseLeftButtonDown>eller <xref:System.Windows.ContentElement.MouseRightButtonDown>, som motsvarar ett tryck på något av två standard musknapp.</xref:System.Windows.ContentElement.MouseRightButtonDown> </xref:System.Windows.ContentElement.MouseLeftButtonDown> <xref:System.Windows.ContentElement.MouseLeftButtonDown>och <xref:System.Windows.ContentElement.MouseRightButtonDown>är också dirigerade händelser, men de är direkt dirigerade händelser och knappen-specifika händelsen utlöses när den <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelsen når det här elementet längs vägen händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseRightButtonDown></xref:System.Windows.ContentElement.MouseLeftButtonDown> Se anmärkning för <xref:System.Windows.ContentElement.MouseLeftButtonDown>eller <xref:System.Windows.ContentElement.MouseRightButtonDown>.</xref:System.Windows.ContentElement.MouseRightButtonDown> </xref:System.Windows.ContentElement.MouseLeftButtonDown>      > [!IMPORTANT] > Några <xref:System.Windows.ContentElement>härledda klasser som har kontroll-liknande beteende, till exempel <xref:System.Windows.Documents.Hyperlink>, kanske har inbyggd klass hantering för mus knappen händelser.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.ContentElement> Vänster musknapp ned händelse är den mest sannolika händelsen har klassen hantering i en kontroll. Klassen som hanterar ofta markerar den underliggande <xref:System.Windows.Input.Mouse>klassen händelse som hanteras.</xref:System.Windows.Input.Mouse> När händelsen har markerats hanterade är hanterare för andra instans som är kopplade till elementet normalt aktiverades inte. Alla andra klass- eller instansnamn hanterare som är kopplade till element i bubbling riktning mot roten i trädet UI aktiveras också inte normalt.       Du kan lösa problemet som beskrivs i föregående viktigt och fortfarande tar emot musknapp för vänster musknapp ned händelser i en härledd klass som har klassen som hanterar med någon av dessa lösningar:-Anslut hanterare för den <xref:System.Windows.ContentElement.PreviewMouseDown>händelsen, som inte har markerats som hanteras av kontroller.</xref:System.Windows.ContentElement.PreviewMouseDown> Observera att eftersom detta är en förhandsversion händelse flödet startar i roten och tunnlar till kontrollen.      -Registrera en hanterare på kontrollen formellt genom att anropa <xref:System.Windows.ContentElement.AddHandler%2A>och välja alternativet signatur som möjliggör hanterare att lyssna efter händelser även om de redan har markerats som hanteras i routade händelsedata.</xref:System.Windows.ContentElement.AddHandler%2A>      <a name=&quot;routedEventInfo_MouseDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseDownEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewMouseDown>.</xref:System.Windows.ContentElement.PreviewMouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseDownEvent
  id: MouseDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseDownEvent
  nameWithType: ContentElement.MouseDownEvent
  fullName: System.Windows.ContentElement.MouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseEnter
  id: MouseEnter
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseEnter
  nameWithType: ContentElement.MouseEnter
  fullName: System.Windows.ContentElement.MouseEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när muspekaren lämnar gränserna för det här elementet."
  remarks: "Aktivera händelserna MouseEnter är en [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) som använder direkt routningsstrategi för händelsehantering. Direkt dirigerade händelser aktiveras inte längs vägen; i stället hanteras de på samma element där de aktiveras. Dock gör de andra aspekter av routade händelse beteende, till exempel händelseutlösare format.       Även om händelserna MouseEnter spårar när muspekaren går in i det giltiga intervallet för ett element, den här händelsen mer bokstavligt rapporterar att den <xref:System.Windows.ContentElement.IsMouseOver%2A>egenskapsvärdet har ändrats från `false` till `true` på det här elementet.</xref:System.Windows.ContentElement.IsMouseOver%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>kopplade händelsen för den här klassen så att händelserna MouseEnter är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen händelserna MouseEnter är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseEnter&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseEnterEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseEnter%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseEnter%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.MouseEnterEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseEnter;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseEnterEvent
  nameWithType: ContentElement.MouseEnterEvent
  fullName: System.Windows.ContentElement.MouseEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseEnter&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeave
  id: MouseLeave
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeave
  nameWithType: ContentElement.MouseLeave
  fullName: System.Windows.ContentElement.MouseLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när muspekaren lämnar gränserna för det här elementet."
  remarks: "MouseLeave är en [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) som använder direkt routningsstrategi för händelsehantering. Direkt dirigerade händelser aktiveras inte längs vägen; i stället hanteras de på samma element där de aktiveras. Dock gör de andra aspekter av routade händelse beteende, till exempel händelseutlösare format.       Även om MouseLeave spårar när musen lämnar ett element, den här händelsen mer bokstavligt rapporterar att den <xref:System.Windows.ContentElement.IsMouseOver%2A>egenskapsvärdet har ändrats från `true` till `false` på det här elementet.</xref:System.Windows.ContentElement.IsMouseOver%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>kopplade händelsen för den här klassen, så att MouseLeave är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen MouseLeave är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseLeave&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseLeaveEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseLeave%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseLeave%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.MouseLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseLeave;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeaveEvent
  nameWithType: ContentElement.MouseLeaveEvent
  fullName: System.Windows.ContentElement.MouseLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseLeave&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeftButtonDown
  id: MouseLeftButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeftButtonDown
  nameWithType: ContentElement.MouseLeftButtonDown
  fullName: System.Windows.ContentElement.MouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när vänster musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en bubbling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      > [!IMPORTANT] > Några <xref:System.Windows.ContentElement>härledda klasser som har kontroll-liknande beteende, till exempel <xref:System.Windows.Documents.Hyperlink>, kanske har inbyggd klass hantering för mus knappen händelser.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.ContentElement> Vänster musknapp ned händelse är den mest sannolika händelsen har klassen hantering i en kontroll. Klassen som hanterar ofta markerar den underliggande <xref:System.Windows.Input.Mouse>klassen händelse som hanteras.</xref:System.Windows.Input.Mouse> När händelsen har markerats hanterade är hanterare för andra instans som är kopplade till elementet normalt aktiverades inte. Alla andra klass- eller instansnamn hanterare som är kopplade till element i bubbling riktning mot roten i trädet UI aktiveras också inte normalt.       Du kan lösa problemet som beskrivs i föregående viktigt och fortfarande tar emot MouseLeftButtonDown händelser för vänster musknapp ned händelser i en härledd klass som har klassen som hanterar med någon av dessa lösningar:-Anslut hanterare för den <xref:System.Windows.ContentElement.PreviewMouseDown>händelsen, som inte har markerats som hanteras av kontroller.</xref:System.Windows.ContentElement.PreviewMouseDown> Observera att eftersom detta är en förhandsversion händelse flödet startar i roten och tunnlar till kontrollen.      -Registrera en hanterare på kontrollen formellt genom att anropa <xref:System.Windows.ContentElement.AddHandler%2A>och välja alternativet signatur som möjliggör hanterare att lyssna efter händelser även om de redan har markerats som hanteras i routade händelsedata.</xref:System.Windows.ContentElement.AddHandler%2A>      <a name=&quot;routedEventInfo_MouseLeftButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeftButtonDownEvent
  id: MouseLeftButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeftButtonDownEvent
  nameWithType: ContentElement.MouseLeftButtonDownEvent
  fullName: System.Windows.ContentElement.MouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseLeftButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeftButtonUp
  id: MouseLeftButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeftButtonUp
  nameWithType: ContentElement.MouseLeftButtonUp
  fullName: System.Windows.ContentElement.MouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när du släpper vänster musknapp medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en bubbling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_MouseLeftButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseLeftButtonUpEvent
  id: MouseLeftButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseLeftButtonUpEvent
  nameWithType: ContentElement.MouseLeftButtonUpEvent
  fullName: System.Windows.ContentElement.MouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseLeftButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseMove
  id: MouseMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseMove
  nameWithType: ContentElement.MouseMove
  fullName: System.Windows.ContentElement.MouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när muspekaren rör sig medan över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>kopplade händelsen för den här klassen så att MouseMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName> Händelsehanterare som är kopplade till Musflyttning är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseMoveEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewMouseMove>.</xref:System.Windows.ContentElement.PreviewMouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.MouseMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseMoveEvent
  nameWithType: ContentElement.MouseMoveEvent
  fullName: System.Windows.ContentElement.MouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseRightButtonDown
  id: MouseRightButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseRightButtonDown
  nameWithType: ContentElement.MouseRightButtonDown
  fullName: System.Windows.ContentElement.MouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när höger musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en bubbling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>       Höger musknapp händelser har ofta inbyggda hantering i Programscenarier. Exempelvis kan en höger musknapp ned visas en snabbmeny. Se [ContextMenu översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_MouseRightButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseRightButtonDownEvent
  id: MouseRightButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseRightButtonDownEvent
  nameWithType: ContentElement.MouseRightButtonDownEvent
  fullName: System.Windows.ContentElement.MouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseRightButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseRightButtonUp
  id: MouseRightButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseRightButtonUp
  nameWithType: ContentElement.MouseRightButtonUp
  fullName: System.Windows.ContentElement.MouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när du släpper höger musknapp medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en bubbling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_MouseRightButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseRightButtonUpEvent
  id: MouseRightButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseRightButtonUpEvent
  nameWithType: ContentElement.MouseRightButtonUpEvent
  fullName: System.Windows.ContentElement.MouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseRightButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseUp
  id: MouseUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseUp
  nameWithType: ContentElement.MouseUp
  fullName: System.Windows.ContentElement.MouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när alla musknappen släpps över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>kopplade händelsen för den här klassen så att musknapp upp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen Musknapp upp är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>       Händelsen Musknapp upp visas ofta tillsammans med antingen <xref:System.Windows.ContentElement.MouseLeftButtonUp>eller <xref:System.Windows.ContentElement.MouseRightButtonUp>, som motsvarar en version av en av två standard musknapp.</xref:System.Windows.ContentElement.MouseRightButtonUp> </xref:System.Windows.ContentElement.MouseLeftButtonUp> <xref:System.Windows.ContentElement.MouseLeftButtonUp>och <xref:System.Windows.ContentElement.MouseRightButtonUp>är också dirigerade händelser, men de är direkt dirigerade händelser och knappen-specifika händelsen utlöses när den <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>händelsen når det här elementet längs vägen händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement.MouseRightButtonUp></xref:System.Windows.ContentElement.MouseLeftButtonUp> Se anmärkning för <xref:System.Windows.ContentElement.MouseLeftButtonUp>eller <xref:System.Windows.ContentElement.MouseRightButtonUp>.</xref:System.Windows.ContentElement.MouseRightButtonUp> </xref:System.Windows.ContentElement.MouseLeftButtonUp>      <a name=&quot;routedEventInfo_MouseUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseUpEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewMouseUp>.</xref:System.Windows.ContentElement.PreviewMouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.MouseUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseUpEvent
  id: MouseUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseUpEvent
  nameWithType: ContentElement.MouseUpEvent
  fullName: System.Windows.ContentElement.MouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseWheel
  id: MouseWheel
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseWheel
  nameWithType: ContentElement.MouseWheel
  fullName: System.Windows.ContentElement.MouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren roterar mushjulet medan muspekaren är över det här elementet."
  remarks: "Fokus eller musen avbilda företräde framför där muspekaren är; Om du får händelsen mushjul från elementet fokuserad eller avbildade kan muspekaren faktiskt därför via ett annat element.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>kopplade händelsen för den här klassen så att mushjul är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en baselementet.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen mushjul är kopplade till den underliggande <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>      <a name=&quot;routedEventInfo_MouseWheel&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.MouseWheelEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.MouseWheelEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewMouseWheel>.</xref:System.Windows.ContentElement.PreviewMouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.ContentElement.MouseWheelEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnMouseWheel%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler MouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MouseWheelEvent
  id: MouseWheelEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MouseWheelEvent
  nameWithType: ContentElement.MouseWheelEvent
  fullName: System.Windows.ContentElement.MouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.MouseWheel&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  id: MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: MoveFocus(TraversalRequest)
  nameWithType: ContentElement.MoveFocus(TraversalRequest)
  fullName: System.Windows.ContentElement.MoveFocus(TraversalRequest)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försök att flytta fokus från det här elementet till ett annat element. Riktning för att flytta fokus anges av riktningen vägledning tolkas inom organisationen för visuell överordnad för det här elementet."
  remarks: "Kontrollera returvärdet för den här metoden. Returvärdet för `false` kan returneras om övergången som körs i ett tabbstopp som definieras av en kontroll sammansättning och traversal begäran inte har begärt för att omsluta."
  syntax:
    content: public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "En traversal-begäran som innehåller en egenskap som anger antingen ett läge för att bläddra i befintliga tabbordning eller en riktning för att flytta visuellt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den begärda traversal utfördes; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.MoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: ContentElement.OnCreateAutomationPeer()
  fullName: System.Windows.ContentElement.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar klass-specifika <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementeringar för den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastruktur."
  syntax:
    content: protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "Typ-specifika <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> implementering."
  overload: System.Windows.ContentElement.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  id: OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: ContentElement.OnDragEnter(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  id: OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnDragLeave(DragEventArgs)
  nameWithType: ContentElement.OnDragLeave(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  id: OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: ContentElement.OnDragOver(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  id: OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnDrop(DragEventArgs)
  nameWithType: ContentElement.OnDrop(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "Den <xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  id: OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: ContentElement.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.ContentElement.OnGotFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Genererar den <xref href=&quot;System.Windows.ContentElement.GotFocus&quot;> </xref> dirigerade händelser med hjälp av händelsedata som angavs."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes. The OnGotFocus implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event."
  syntax:
    content: protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "En <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> som innehåller händelsedata. Den här informationen om händelsen måste innehålla identifieraren för den <xref href=&quot;System.Windows.ContentElement.GotFocus&quot;> </xref> händelse."
  overload: System.Windows.ContentElement.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: ContentElement.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnGotMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnGotMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: ContentElement.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnGotStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnGotStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: ContentElement.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnGotTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.GotTouchCapture&quot;> </xref> routade händelse som inträffar när en touch avbildas till det här elementet."
  remarks: "Metoden OnGotTouchCapture har ingen standardimplementering. Åsidosätt OnGotTouchCapture i en härledd klass för att hantera den <xref:System.Windows.ContentElement.GotTouchCapture>händelse.</xref:System.Windows.ContentElement.GotTouchCapture> Glöm inte att anropa metoden i klassen base OnGotTouchCapture så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnGotTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsKeyboardFocusedChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsKeyboardFocused%2A>beroende egenskapsändringar.</xref:System.Windows.ContentElement.IsKeyboardFocused%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> Observera att den <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>händelsen är inte en routade händelse.</xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsKeyboardFocusedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas precis före den <xref href=&quot;System.Windows.ContentElement.IsKeyboardFocusWithinChanged&quot;> </xref> händelse utlöses av det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> Observera att den <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>händelsen är inte en routade händelse.</xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "En <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsMouseCapturedChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsMouseCaptured%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsMouseCaptured%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsMouseCapturedChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsMouseCapturedChanged> Observera att den <xref:System.Windows.ContentElement.IsMouseCapturedChanged>händelsen är inte en routade händelse.</xref:System.Windows.ContentElement.IsMouseCapturedChanged> Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsMouseCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsMouseCaptureWithinChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  syntax:
    content: protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "En <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsMouseDirectlyOverChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> Observera att den <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>händelsen är inte en routade händelse.</xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsStylusCapturedChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsStylusCaptured%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsStylusCaptured%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsStylusCapturedChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsStylusCapturedChanged> Observera att händelsen inte är en routade händelse. Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "En <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsStylusCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsStylusCaptureWithinChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> Observera att händelsen inte är en routade händelse. Därför kan kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.IsStylusDirectlyOverChanged&quot;> </xref> händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här virtuella metoden aktiveras när värdet för den <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A>beroendeegenskap ändras dess värde.</xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> Virtuell metod aktiveras först och kan ändra informationen om händelsen efter behov. Sedan <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged>händelsen inträffar med den samma instansen av händelsedata.</xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> Observera att händelsen inte är en routade händelse. Därför kan inte du markeras som hanteras i klassen-hanteraren.       Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav."
  syntax:
    content: protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: ContentElement.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyDown is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: ContentElement.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyUp is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  id: OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: ContentElement.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.ContentElement.OnLostFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Genererar den <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> dirigerade händelser med hjälp av informationen om händelsen som har angetts."
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes. This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event."
  syntax:
    content: protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "En <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> som innehåller händelsedata. Den här informationen om händelsen måste innehålla identifieraren för den <xref href=&quot;System.Windows.ContentElement.LostFocus&quot;> </xref> händelse."
  overload: System.Windows.ContentElement.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> som innehåller händelsedata."
  overload: System.Windows.ContentElement.OnLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: ContentElement.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnLostMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller händelsedata."
  overload: System.Windows.ContentElement.OnLostMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: ContentElement.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnLostStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller händelsedata."
  overload: System.Windows.ContentElement.OnLostStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: ContentElement.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnLostTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.LostTouchCapture&quot;> </xref> routade händelse som inträffar när det här elementet förlorar en touch-avbildning."
  remarks: "Metoden OnLostTouchCapture har ingen standardimplementering. Åsidosätt OnLostTouchCapture i en härledd klass för att hantera den <xref:System.Windows.ContentElement.LostTouchCapture>händelse.</xref:System.Windows.ContentElement.LostTouchCapture> Glöm inte att anropa metoden i klassen base OnLostTouchCapture så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnLostTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event as handled, OnMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Den här händelsedata rapporterar information om var trycks ned musknappen och hanterade tillstånd."
  overload: System.Windows.ContentElement.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: ContentElement.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseEnter(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt; bifogad händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav.       Syftet med den här metoden liknar den [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] händelse mönstret på * metoder: den här metoden kan användas för att hantera den matchande händelsen från härledda klasser genom att skapa en klass hanterare i stället för en instans-hanterare. I det här fallet är matchande händelsen en routade händelse med en direkt routningsstrategi. Markera händelsen som hanteras är användbar för att förhindra vanliga instans-hanterare (de som inte anger `handledEventsToo`) anropas."
  syntax:
    content: protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: ContentElement.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeave(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt; bifogad händelse genereras i det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav.       Syftet med den här metoden liknar den [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] händelse mönstret på * metoder: den här metoden kan användas för att hantera den matchande händelsen från härledda klasser genom att skapa en klass hanterare i stället för en instans-hanterare. I det här fallet är matchande händelsen en routade händelse med en direkt routningsstrategi. Markera händelsen som hanteras är användbar för att förhindra vanliga instans-hanterare (de som inte anger `handledEventsToo`) anropas."
  syntax:
    content: protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.MouseLeftButtonDown&quot;> </xref> routade händelsen höjs vid det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.MouseLeftButtonDown>händelsen verkar reser ett bubbling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.MouseLeftButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>den underliggande händelse som vidarebefordras bubblans och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</xref:System.Windows.ContentElement.MouseLeftButtonDown> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.MouseLeftButtonDown>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.MouseLeftButtonDown> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnMouseLeftButtonDown.</xref:System.Windows.ContentElement>       Alternativt kan du åsidosätta den här metoden för att kunna ändra händelsehantering för en specifik musstatus. Om du vill anropa Basimplementationen beror på ditt scenario. Inte att anropa grundläggande inaktiverar standard inkommande hantering för händelsen musen på överordnad klasser också förväntar dig att anropa OnMouseLeftButtonDown. Du kan till exempel vara härledd från <xref:System.Windows.Controls.Button>och åsidosätta OnMouseLeftButtonDown i den härledda klassen utan att anropa Basimplementationen; dock åsidosätta detta inaktiverar de <xref:System.Windows.Controls.Primitives.ButtonBase.Click>händelse.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>"
  syntax:
    content: protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att vänster musknapp var trycks ned."
  overload: System.Windows.ContentElement.OnMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.MouseLeftButtonUp&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.MouseLeftButtonUp>händelsen verkar reser ett bubbling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.MouseLeftButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>den underliggande händelse som vidarebefordras bubblans och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</xref:System.Windows.ContentElement.MouseLeftButtonUp> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.MouseLeftButtonUp>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.MouseLeftButtonUp> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnMouseLeftButtonUp.</xref:System.Windows.ContentElement>"
  syntax:
    content: protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att vänster musknapp släpptes."
  overload: System.Windows.ContentElement.OnMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: ContentElement.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.MouseRightButtonDown&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.MouseRightButtonDown>händelsen verkar reser ett bubbling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.MouseRightButtonDown> <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>den underliggande händelse som vidarebefordras bubblans och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.MouseRightButtonDown>.</xref:System.Windows.ContentElement.MouseRightButtonDown> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.MouseRightButtonDown>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.MouseRightButtonDown> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnMouseRightButtonDown.</xref:System.Windows.ContentElement>       Alternativt kan du åsidosätta den här metoden för att kunna ändra händelsehantering för en specifik musstatus. Om du vill anropa Basimplementationen beror på ditt scenario. Inte att anropa grundläggande inaktiverar standard inkommande hantering för händelsen musen på överordnad klasser också förväntar dig att anropa OnMouseRightButtonDown. Du kan till exempel vara härledd från <xref:System.Windows.Controls.Control>och åsidosätta OnMouseRightButtonDown i den härledda klassen utan att anropa base; men den här åsidosättningen inaktiverar kontexten menyn tjänster på din kontroll som är en del av den <xref:System.Windows.Controls.Control>standardbeteende.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att högerklicka var trycks ned."
  overload: System.Windows.ContentElement.OnMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.MouseRightButtonUp&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.MouseRightButtonUp>händelsen verkar reser ett bubbling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.MouseRightButtonUp> <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>den underliggande händelse som vidarebefordras bubblans och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.MouseRightButtonUp>.</xref:System.Windows.ContentElement.MouseRightButtonUp> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.MouseRightButtonUp>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.MouseRightButtonUp> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnMouseRightButtonUp.</xref:System.Windows.ContentElement>"
  syntax:
    content: protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att höger musknapp släpptes."
  overload: System.Windows.ContentElement.OnMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt; routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event as handled, OnMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att musknappen släpptes."
  overload: System.Windows.ContentElement.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: ContentElement.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.ContentElement.OnMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  id: OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  id: OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  id: OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  id: OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "Den <xref href=&quot;System.Windows.DragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "Den <xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: ContentElement.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: ContentElement.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt; bifogade routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event as handled, OnPreviewMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att en eller flera musknapp har trycks ned."
  overload: System.Windows.ContentElement.OnPreviewMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.PreviewMouseLeftButtonDown&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>händelsen verkar reser ett tunneling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>den underliggande händelse som är tunnel dirigeras och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnPreviewMouseLeftButtonDown.</xref:System.Windows.ContentElement>       Alternativt kan du åsidosätta den här metoden för att kunna ändra händelsehantering för en specifik musstatus. Om du vill anropa Basimplementationen beror på ditt scenario. Inte att anropa grundläggande inaktiverar standard inkommande hantering för händelsen musen på överordnad klasser också förväntar dig att anropa OnPreviewMouseLeftButtonDown. Du kan till exempel vara härledd från <xref:System.Windows.Controls.Button>och åsidosätta OnPreviewMouseLeftButtonDown i den härledda klassen utan att anropa Basimplementationen; dock åsidosätta detta inaktiverar de <xref:System.Windows.Controls.Primitives.ButtonBase.Click>händelse.</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button>"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att vänster musknapp var trycks ned."
  overload: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.PreviewMouseLeftButtonUp&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>händelsen verkar reser ett tunneling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>den underliggande händelse som är tunnel dirigeras och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnPreviewMouseLeftButtonUp.</xref:System.Windows.ContentElement>"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att vänster musknapp släpptes."
  overload: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: ContentElement.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.PreviewMouseRightButtonDown&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>händelsen verkar reser ett tunneling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>den underliggande händelse som är tunnel dirigeras och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.MouseRightButtonDown>.</xref:System.Windows.ContentElement.MouseRightButtonDown> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnPreviewMouseRightButtonDown.</xref:System.Windows.ContentElement>       Alternativt kan du åsidosätta den här metoden för att kunna ändra händelsehantering för en specifik musstatus. Om du vill anropa Basimplementationen beror på ditt scenario. Inte att anropa grundläggande inaktiverar standard inkommande hantering för händelsen musen på överordnad klasser också förväntar dig att anropa OnPreviewMouseRightButtonDown. Du kan till exempel vara härledd från <xref:System.Windows.Controls.Control>och åsidosätta OnPreviewMouseRightButtonDown i den härledda klassen utan att anropa base; men den här åsidosättningen inaktiverar kontexten menyn tjänster på din kontroll som är en del av den <xref:System.Windows.Controls.Control>standardbeteende.</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att högerklicka var trycks ned."
  overload: System.Windows.ContentElement.OnPreviewMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat <xref href=&quot;System.Windows.ContentElement.PreviewMouseRightButtonUp&quot;> </xref> routade händelsen når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>händelsen verkar reser ett tunneling flöde men faktiskt färdas ett indirekt sätt.</xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>den underliggande händelse som är tunnel dirigeras och varje <xref:System.Windows.ContentElement>längs händelsen vägen använder identiska hantering för att höja direkt routade händelsen <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> </xref:System.Windows.ContentElement></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Även om du kan markera de <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>händelse som hanteras för det här elementet hanterade tillstånd inte visa till andra element längs vägen händelse.</xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Men du kanske vill markera händelsen som hanteras för att förhindra att allmänna instans hanterare (de som inte har angett `handledEventsToo`) anropas.       Standardimplementering för allmän musen händelsehantering i <xref:System.Windows.ContentElement>lyssnar efter <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>och konverterar den till en lämplig lokala händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.ContentElement> Om du vill åsidosätta denna logik måste du skapa en härledd klass. Registrera en annan klass hanterare för <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> i den härledda klassen statiska-konstruktorn Du kan inte ändra musen hantera beteendet för <xref:System.Windows.ContentElement>genom att åsidosätta OnPreviewMouseRightButtonUp.</xref:System.Windows.ContentElement>"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att höger musknapp släpptes."
  overload: System.Windows.ContentElement.OnPreviewMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event as handled, OnPreviewMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen. Händelsedata som rapporterar att en eller flera musknapp publicerades."
  overload: System.Windows.ContentElement.OnPreviewMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "Den <xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: ContentElement.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: ContentElement.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked."
  syntax:
    content: protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.PreviewTouchDown&quot;> </xref> routade händelse som inträffar när en touch trycker på det här elementet."
  remarks: "Metoden OnPreviewTouchDown har ingen standardimplementering. Åsidosätt OnPreviewTouchDown i en härledd klass för att hantera den <xref:System.Windows.ContentElement.PreviewTouchDown>händelse.</xref:System.Windows.ContentElement.PreviewTouchDown> Glöm inte att anropa metoden i klassen base OnPreviewTouchDown så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.PreviewTouchMove&quot;> </xref> routade händelse som inträffar när en touch flyttar medan i det här elementet."
  remarks: "Metoden OnPreviewTouchMove har ingen standardimplementering. Åsidosätt OnPreviewTouchMove i en härledd klass för att hantera den <xref:System.Windows.ContentElement.PreviewTouchMove>händelse.</xref:System.Windows.ContentElement.PreviewTouchMove> Glöm inte att anropa metoden i klassen base OnPreviewTouchMove så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.PreviewTouchUp&quot;> </xref> dirigerade händelser som inträffar när en touch släpps i det här elementet."
  remarks: "Metoden OnPreviewTouchUp har ingen standardimplementering. Åsidosätt OnPreviewTouchUp i en härledd klass för att hantera den <xref:System.Windows.ContentElement.PreviewTouchUp>händelse.</xref:System.Windows.ContentElement.PreviewTouchUp> Glöm inte att anropa metoden i klassen base OnPreviewTouchUp så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnPreviewTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "Den <xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  id: OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: ContentElement.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.ContentElement.OnQueryCursor(QueryCursorEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.QueryCursorEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.QueryCursorEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnQueryCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: ContentElement.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: ContentElement.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: ContentElement.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.ContentElement.OnStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  id: OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: ContentElement.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusEnter(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt; bifogade händelse utlöses av det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav.       Syftet med den här metoden liknar [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] händelse mönstret på * metoder: den här metoden kan användas för att hantera den matchande händelsen från härledda klasser genom att skapa en klass hanterare i stället för en instans-hanterare. I det här fallet är matchande händelsen en routade händelse. Markera händelsen som hanteras är användbar för att förhindra vanliga instans hanterare (de som inte anger `handledEventsToo`) anropas."
  syntax:
    content: protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: ContentElement.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: ContentElement.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  id: OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: ContentElement.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusLeave(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt; bifogade händelse utlöses av det här elementet. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "Den här metoden har ingen standardimplementering. Eftersom en mellanliggande klass i ärvda kan implementera den här metoden, rekommenderar vi att du anropa Basimplementationen i din implementering. Du kan anropa grundläggande före eller efter en särskild hantering, beroende på dina krav.       Syftet med den här metoden liknar [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] händelse mönstret på * metoder: den här metoden kan användas för att hantera den matchande händelsen från härledda klasser genom att skapa en klass hanterare i stället för en instans-hanterare. I det här fallet är matchande händelsen en routade händelse. Markera händelsen som hanteras är användbar för att förhindra vanliga instans hanterare (de som inte anger `handledEventsToo`) anropas."
  syntax:
    content: protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusMove(StylusEventArgs)
  nameWithType: ContentElement.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: ContentElement.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnStylusUp(StylusEventArgs)
  nameWithType: ContentElement.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: ContentElement.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.ContentElement.OnTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Anropas när ett ohanterat &lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt; bifogad händelse når ett element i vägen som härleds från den här klassen. Implementera den här metoden för att lägga till klassen som hanterar för den här händelsen."
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled."
  syntax:
    content: protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "Den <xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTouchDown(TouchEventArgs)
  nameWithType: ContentElement.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.TouchDown&quot;> </xref> dirigerade händelser som inträffar när en touch klickar i det här elementet."
  remarks: "Metoden OnTouchDown har ingen standardimplementering. Åsidosätt OnTouchDown i en härledd klass för att hantera den <xref:System.Windows.ContentElement.TouchDown>händelse.</xref:System.Windows.ContentElement.TouchDown> Glöm inte att anropa metoden i klassen base OnTouchDown så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  id: OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: ContentElement.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchEnter(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.TouchEnter&quot;> </xref> routade händelse som inträffar när en touch flyttas från utanför till inom gränserna för det här elementet."
  remarks: "Metoden OnTouchEnter har ingen standardimplementering. Åsidosätt OnTouchEnter i en härledd klass för att hantera den <xref:System.Windows.ContentElement.TouchEnter>händelse.</xref:System.Windows.ContentElement.TouchEnter> Glöm inte att anropa metoden i klassen base OnTouchEnter så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTouchEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  id: OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: ContentElement.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchLeave(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.TouchLeave&quot;> </xref> routade händelse som inträffar när en touch flyttas från innanför till utanför gränserna för det här elementet."
  remarks: "Metoden OnTouchLeave har ingen standardimplementering. Åsidosätt OnTouchLeave i en härledd klass för att hantera den <xref:System.Windows.ContentElement.TouchLeave>händelse.</xref:System.Windows.ContentElement.TouchLeave> Glöm inte att anropa metoden i klassen base OnTouchLeave så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTouchLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTouchMove(TouchEventArgs)
  nameWithType: ContentElement.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.TouchMove&quot;> </xref> routade händelse som inträffar när en touch flyttar medan i det här elementet."
  remarks: "Metoden OnTouchMove har ingen standardimplementering. Åsidosätt OnTouchMove i en härledd klass för att hantera den <xref:System.Windows.ContentElement.TouchMove>händelse.</xref:System.Windows.ContentElement.TouchMove> Glöm inte att anropa metoden i klassen base OnTouchMove så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: OnTouchUp(TouchEventArgs)
  nameWithType: ContentElement.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tillhandahåller klassen hantering för den <xref href=&quot;System.Windows.ContentElement.TouchUp&quot;> </xref> dirigerade händelser som inträffar när en touch släpps i det här elementet."
  remarks: "Metoden OnTouchUp har ingen standardimplementering. Åsidosätt OnTouchUp i en härledd klass för att hantera den <xref:System.Windows.ContentElement.TouchUp>händelse.</xref:System.Windows.ContentElement.TouchUp> Glöm inte att anropa metoden i klassen base OnTouchUp så att basklasser tar emot händelsen."
  syntax:
    content: protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "En <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Windows.ContentElement.OnTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: ContentElement.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.ContentElement.PredictFocus(FocusNavigationDirection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar det element som ska få fokus för en angiven fokusera traversal riktning, utan att faktiskt flytta fokus till elementet när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden i den här klassen är ofullständig och returnerar alltid `null`."
  syntax:
    content: public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);
    parameters:
    - id: direction
      type: System.Windows.Input.FocusNavigationDirection
      description: "Begärda fokus traversal riktning."
    return:
      type: System.Windows.DependencyObject
      description: "Elementet som skulle ha emot fokus om <xref:System.Windows.ContentElement.MoveFocus*>faktiskt har påbörjats.</xref:System.Windows.ContentElement.MoveFocus*>"
  overload: System.Windows.ContentElement.PredictFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragEnter
  id: PreviewDragEnter
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragEnter
  nameWithType: ContentElement.PreviewDragEnter
  fullName: System.Windows.ContentElement.PreviewDragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet som dra mål."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewDragEnter är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewDragEnter är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragEnter&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewDragEnterEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.DragEnter>.</xref:System.Windows.ContentElement.DragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.PreviewDragEnterEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewDragEnter%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragEnterEvent
  id: PreviewDragEnterEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragEnterEvent
  nameWithType: ContentElement.PreviewDragEnterEvent
  fullName: System.Windows.ContentElement.PreviewDragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewDragEnter&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragLeave
  id: PreviewDragLeave
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragLeave
  nameWithType: ContentElement.PreviewDragLeave
  fullName: System.Windows.ContentElement.PreviewDragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet dra startpunkt."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewDragLeave är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewDragLeave är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragLeave&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.DragLeave>.</xref:System.Windows.ContentElement.DragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.PreviewDragLeaveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewDragLeave%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragLeaveEvent
  id: PreviewDragLeaveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragLeaveEvent
  nameWithType: ContentElement.PreviewDragLeaveEvent
  fullName: System.Windows.ContentElement.PreviewDragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewDragLeave&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragOver
  id: PreviewDragOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragOver
  nameWithType: ContentElement.PreviewDragOver
  fullName: System.Windows.ContentElement.PreviewDragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar underliggande dra händelse med det här elementet som potentiella målet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewDragOver är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewDragOver är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDragOver&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewDragOverEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.DragOver>.</xref:System.Windows.ContentElement.DragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.PreviewDragOverEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewDragOver%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewDragOver%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDragOverEvent
  id: PreviewDragOverEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDragOverEvent
  nameWithType: ContentElement.PreviewDragOverEvent
  fullName: System.Windows.ContentElement.PreviewDragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewDragOver&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDrop
  id: PreviewDrop
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDrop
  nameWithType: ContentElement.PreviewDrop
  fullName: System.Windows.ContentElement.PreviewDrop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när inkommande systemet rapporterar en underliggande släpp-händelse med det här elementet som målet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewDrop är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewDrop är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewDrop&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewDropEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.DragEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.Drop>.</xref:System.Windows.ContentElement.Drop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.ContentElement.PreviewDropEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewDrop%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewDrop%2A>"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDrop;
    return:
      type: System.Windows.DragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewDropEvent
  id: PreviewDropEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewDropEvent
  nameWithType: ContentElement.PreviewDropEvent
  fullName: System.Windows.ContentElement.PreviewDropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewDrop&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewGiveFeedback
  id: PreviewGiveFeedback
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewGiveFeedback
  nameWithType: ContentElement.PreviewGiveFeedback
  fullName: System.Windows.ContentElement.PreviewGiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en dra och släpp-åtgärden har startats."
  remarks: "Händelsen PreviewGiveFeedback kan källan för en dra händelse att ändra utseendet på muspekaren för att ge feedback från visual användare under dra och släppa.       Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewGiveFeedback är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewGiveFeedback är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewGiveFeedback&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.GiveFeedbackEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.GiveFeedback>.</xref:System.Windows.ContentElement.GiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A>"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewGiveFeedbackEvent
  id: PreviewGiveFeedbackEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewGiveFeedbackEvent
  nameWithType: ContentElement.PreviewGiveFeedbackEvent
  fullName: System.Windows.ContentElement.PreviewGiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewGiveFeedback&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewGotKeyboardFocus
  id: PreviewGotKeyboardFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewGotKeyboardFocus
  nameWithType: ContentElement.PreviewGotKeyboardFocus
  fullName: System.Windows.ContentElement.PreviewGotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när tangentbordet fokuserar på det här elementet."
  remarks: "Eftersom den här händelsen använder tunneltrafik routning, kanske elementet som har fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som har fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewGotKeyboardFocus är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewGotKeyboardFocus är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewGotKeyboardFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.GotKeyboardFocus>.</xref:System.Windows.ContentElement.GotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  id: PreviewGotKeyboardFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewGotKeyboardFocusEvent
  nameWithType: ContentElement.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewGotKeyboardFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: ContentElement.PreviewKeyDown
  fullName: System.Windows.ContentElement.PreviewKeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en tangent trycks ned och tangentbordet fokuserar på det här elementet."
  remarks: "Hantering av nycklar samverkar med andra funktioner, till exempel sammansättning drar till sig och text. Den <xref:System.Windows.ContentElement.KeyDown>händelse är en lägre nivå text inkommande händelse som inte kanske fungerar som förväntat på vissa kontroller.</xref:System.Windows.ContentElement.KeyDown> Detta beror på att vissa kontroller har kontrollen sammansättning eller klassen hantering som ger en högre version av text indata hantering och relaterade händelser.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewKeyDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewKeyDown är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewKeyDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewKeyDownEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.KeyEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.KeyDown>.</xref:System.Windows.ContentElement.KeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.ContentElement.PreviewKeyDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewKeyDown%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewKeyDownEvent
  id: PreviewKeyDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewKeyDownEvent
  nameWithType: ContentElement.PreviewKeyDownEvent
  fullName: System.Windows.ContentElement.PreviewKeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewKeyDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewKeyUp
  id: PreviewKeyUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewKeyUp
  nameWithType: ContentElement.PreviewKeyUp
  fullName: System.Windows.ContentElement.PreviewKeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en tangent släpps medan tangentbordet fokuserar på det här elementet."
  remarks: "Hantering av nycklar samverkar med andra funktioner, till exempel sammansättning drar till sig och text. Den <xref:System.Windows.ContentElement.KeyUp>händelse är en lägre nivå text inkommande händelse som inte kanske fungerar som förväntat på vissa kontroller.</xref:System.Windows.ContentElement.KeyUp> Detta beror på att vissa kontroller har kontrollen sammansättning eller klassen hantering som ger en högre version av text indata hantering och relaterade händelser. Mer information finns i dokumentationen för enskilda kontroller.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewKeyUp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewKeyUp är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewKeyUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewKeyUpEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.KeyEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.KeyUp>.</xref:System.Windows.ContentElement.KeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.ContentElement.PreviewKeyUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewKeyUp%2A>"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewKeyUpEvent
  id: PreviewKeyUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewKeyUpEvent
  nameWithType: ContentElement.PreviewKeyUpEvent
  fullName: System.Windows.ContentElement.PreviewKeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewKeyUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewLostKeyboardFocus
  id: PreviewLostKeyboardFocus
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewLostKeyboardFocus
  nameWithType: ContentElement.PreviewLostKeyboardFocus
  fullName: System.Windows.ContentElement.PreviewLostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när tangentbordet längre fokuserar på det här elementet."
  remarks: "Eftersom den här händelsen använder tunneltrafik routning, kanske elementet som tappas bort fokus ett underordnat element i stället för elementet där händelsehanteraren faktiskt är ansluten. Kontrollera den <xref:System.Windows.RoutedEventArgs.Source%2A>i händelsedata för att fastställa den faktiska element som förlorad fokus.</xref:System.Windows.RoutedEventArgs.Source%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewLostKeyboardFocus är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewLostKeyboardFocus är kopplade till den underliggande <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewLostKeyboardFocus&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.LostKeyboardFocus>.</xref:System.Windows.ContentElement.LostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A>"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  id: PreviewLostKeyboardFocusEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewLostKeyboardFocusEvent
  nameWithType: ContentElement.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewLostKeyboardFocus&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseDown
  id: PreviewMouseDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseDown
  nameWithType: ContentElement.PreviewMouseDown
  fullName: System.Windows.ContentElement.PreviewMouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>ansluten händelsen för den här klassen, så att PreviewMouseDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewMouseDown är kopplade till den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Händelsen PreviewMouseDown visas ofta tillsammans med antingen <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>eller <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, som motsvarar ett tryck på något av två standard musknapp.</xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>och <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>är också dirigerade händelser, men de är direkt dirigerade händelser och knappen-specifika händelsen utlöses när den <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>händelsen når det här elementet längs vägen händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewMouseRightButtonDown></xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Se anmärkning för <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>eller <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>      <a name=&quot;routedEventInfo_PreviewMouseDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseDownEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.MouseDown>.</xref:System.Windows.ContentElement.MouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseDownEvent
  id: PreviewMouseDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseDownEvent
  nameWithType: ContentElement.PreviewMouseDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDown
  id: PreviewMouseLeftButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonDown
  nameWithType: ContentElement.PreviewMouseLeftButtonDown
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när vänster musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en tunneling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  id: PreviewMouseLeftButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: ContentElement.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseLeftButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUp
  id: PreviewMouseLeftButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonUp
  nameWithType: ContentElement.PreviewMouseLeftButtonUp
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när du släpper vänster musknapp medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en tunneling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  id: PreviewMouseLeftButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: ContentElement.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseLeftButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseMove
  id: PreviewMouseMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseMove
  nameWithType: ContentElement.PreviewMouseMove
  fullName: System.Windows.ContentElement.PreviewMouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när muspekaren rör sig när muspekaren är över det här elementet."
  remarks: "Den här händelsen inträffar både när muspekaren först träder i elementet gränser, och även när muspekaren rör sig vid fortfarande är kvar inom gränserna för elementet.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewMouseMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewMouseMove är kopplade till den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewMouseMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.MouseEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.MouseMove>.</xref:System.Windows.ContentElement.MouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.ContentElement.PreviewMouseMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseMove%2A>"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler PreviewMouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseMoveEvent
  id: PreviewMouseMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseMoveEvent
  nameWithType: ContentElement.PreviewMouseMoveEvent
  fullName: System.Windows.ContentElement.PreviewMouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseRightButtonDown
  id: PreviewMouseRightButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseRightButtonDown
  nameWithType: ContentElement.PreviewMouseRightButtonDown
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när höger musknapp trycks ned medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en tunneling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseRightButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  id: PreviewMouseRightButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseRightButtonDownEvent
  nameWithType: ContentElement.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseRightButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseRightButtonUp
  id: PreviewMouseRightButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseRightButtonUp
  nameWithType: ContentElement.PreviewMouseRightButtonUp
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när du släpper höger musknapp medan muspekaren är över det här elementet."
  remarks: "Även om detta [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) verkar följa en tunneling väg genom ett element i trädet är faktiskt en direkt routade händelse som aktiveras och reraised längs trädet element av varje <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement>       Den här händelsen är en av flera relaterade händelser som rapporterar musknappen egenskaperna för en underliggande <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>händelsen, som är en bifogad händelse som bearbetas av varje element längs vägen en händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Argumenten i den här händelsen exponera argumenten i den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Om händelsen har markerats som hanteras längs vägen händelse kan aktiveras fortfarande musknappen specifika händelser; dock hanterare av musknappen specifika händelser måste läggas till genom att explicit anropa <xref:System.Windows.ContentElement.AddHandler%2A>, med alternativet för att hantera händelser som redan har markerats som hanteras, för att en lyssnare på händelsen.</xref:System.Windows.ContentElement.AddHandler%2A>       Begreppsmässigt tror att den här händelsen (och andra musknappen händelser på <xref:System.Windows.ContentElement>) ska vara en mus &quot;tjänst&quot; (med tjänstdefinitionen av som tillhandahålls av den <xref:System.Windows.Input.Mouse>klassen).</xref:System.Windows.Input.Mouse> </xref:System.Windows.ContentElement> Händelsen lägger du till att underlätta för att inte behöva kontrollera musen knappen tillstånd (vänster-höger, upp och ned) ursprungliga musen händelser i informationen om händelsen. För mer avancerade scenarier, till exempel söker efter tillstånd som inte är standard knappar kanske du behöver använda den [!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)] på den <xref:System.Windows.Input.Mouse>klass i stället för de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse>      <a name=&quot;routedEventInfo_PreviewMouseRightButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  id: PreviewMouseRightButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseRightButtonUpEvent
  nameWithType: ContentElement.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseRightButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseUp
  id: PreviewMouseUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseUp
  nameWithType: ContentElement.PreviewMouseUp
  fullName: System.Windows.ContentElement.PreviewMouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när du släpper en musknapp medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewMouseUp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewMouseUp är kopplade till den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>       Händelsen PreviewMouseUp visas ofta tillsammans med antingen <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>eller <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, som motsvarar ett tryck på något av två standard musknapp.</xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>och <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>är också dirigerade händelser, men de är direkt dirigerade händelser och knappen-specifika händelsen utlöses när den <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>händelsen når det här elementet längs vägen händelse.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewMouseRightButtonUp></xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Se anmärkning för <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>eller <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> </xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>      <a name=&quot;routedEventInfo_PreviewMouseUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseUpEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.MouseButtonEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.MouseUp>.</xref:System.Windows.ContentElement.MouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.ContentElement.PreviewMouseUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseUpEvent
  id: PreviewMouseUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseUpEvent
  nameWithType: ContentElement.PreviewMouseUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseWheel
  id: PreviewMouseWheel
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseWheel
  nameWithType: ContentElement.PreviewMouseWheel
  fullName: System.Windows.ContentElement.PreviewMouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren roterar mushjulet medan muspekaren är över det här elementet."
  remarks: "Fokus eller musen avbilda företräde framför där muspekaren är; Om du får den här händelsen från elementet fokuserad eller avbildade kan muspekaren faktiskt därför via ett annat element.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>kopplade händelsen för den här klassen så att <xref:System.Windows.ContentElement.PreviewMouseMove>är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.PreviewMouseMove> </xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> Händelsehanterare som är kopplade till den <xref:System.Windows.ContentElement.PreviewMouseMove>händelse är kopplade till den underliggande <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewMouseMove>      <a name=&quot;routedEventInfo_PreviewMouseWheel&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.MouseWheelEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.MouseWheel>.</xref:System.Windows.ContentElement.MouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.ContentElement.PreviewMouseWheelEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A>"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewMouseWheelEvent
  id: PreviewMouseWheelEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewMouseWheelEvent
  nameWithType: ContentElement.PreviewMouseWheelEvent
  fullName: System.Windows.ContentElement.PreviewMouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewMouseWheel&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewQueryContinueDrag
  id: PreviewQueryContinueDrag
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewQueryContinueDrag
  nameWithType: ContentElement.PreviewQueryContinueDrag
  fullName: System.Windows.ContentElement.PreviewQueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en ändring i tillståndet tangentbordet eller musen knappen under dra och släppa."
  remarks: "Händelsen PreviewQueryContinueDrag kan källan för dragåtgärden att deklarera om dra och släpp ska avbrytas.       Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewQueryContinueDrag är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewQueryContinueDrag är kopplade till den underliggande <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewQueryContinueDrag&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.QueryContinueDragEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.QueryContinueDrag>.</xref:System.Windows.ContentElement.QueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewQueryContinueDragEvent
  id: PreviewQueryContinueDragEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewQueryContinueDragEvent
  nameWithType: ContentElement.PreviewQueryContinueDragEvent
  fullName: System.Windows.ContentElement.PreviewQueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewQueryContinueDrag&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusButtonDown
  id: PreviewStylusButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusButtonDown
  nameWithType: ContentElement.PreviewStylusButtonDown
  fullName: System.Windows.ContentElement.PreviewStylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när från pennan knappen är nedtryckt medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusButtonDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusButtonDown är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusButtonEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusButtonDown>.</xref:System.Windows.ContentElement.StylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusButtonDownEvent
  id: PreviewStylusButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusButtonDownEvent
  nameWithType: ContentElement.PreviewStylusButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewStylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusButtonUp
  id: PreviewStylusButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusButtonUp
  nameWithType: ContentElement.PreviewStylusButtonUp
  fullName: System.Windows.ContentElement.PreviewStylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när knappen från pennan släpps medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusButtonUp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusButtonUp är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusButtonEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusButtonUp>.</xref:System.Windows.ContentElement.StylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusButtonUpEvent
  id: PreviewStylusButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusButtonUpEvent
  nameWithType: ContentElement.PreviewStylusButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewStylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusDown
  id: PreviewStylusDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusDown
  nameWithType: ContentElement.PreviewStylusDown
  fullName: System.Windows.ContentElement.PreviewStylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan vidrör digitizer när den är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusDown är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusDownEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusDownEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusDown>.</xref:System.Windows.ContentElement.StylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.ContentElement.PreviewStylusDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusDownEvent
  id: PreviewStylusDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusDownEvent
  nameWithType: ContentElement.PreviewStylusDownEvent
  fullName: System.Windows.ContentElement.PreviewStylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusInAirMove
  id: PreviewStylusInAirMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusInAirMove
  nameWithType: ContentElement.PreviewStylusInAirMove
  fullName: System.Windows.ContentElement.PreviewStylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan flyttas över ett element utan att faktiskt röra digitizer."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusInAirMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusInAirMove är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInAirMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusInAirMove>.</xref:System.Windows.ContentElement.StylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  id: PreviewStylusInAirMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusInAirMoveEvent
  nameWithType: ContentElement.PreviewStylusInAirMoveEvent
  fullName: System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusInAirMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusInRange
  id: PreviewStylusInRange
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusInRange
  nameWithType: ContentElement.PreviewStylusInRange
  fullName: System.Windows.ContentElement.PreviewStylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan tillräckligt nära digitizer ska identifieras medan över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusInRange är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusInRange är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusInRange&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusInRange>.</xref:System.Windows.ContentElement.StylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusInRangeEvent
  id: PreviewStylusInRangeEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusInRangeEvent
  nameWithType: ContentElement.PreviewStylusInRangeEvent
  fullName: System.Windows.ContentElement.PreviewStylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusInRange&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusMove
  id: PreviewStylusMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusMove
  nameWithType: ContentElement.PreviewStylusMove
  fullName: System.Windows.ContentElement.PreviewStylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan flyttar medan över elementet. Pennan måste flytta samtidigt som identifieras av digitizer att aktivera den här händelsen, annars <xref href=&quot;System.Windows.ContentElement.PreviewStylusInAirMove&quot;> </xref> aktiveras i stället."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusMove är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusMove>.</xref:System.Windows.ContentElement.StylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.PreviewStylusMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusMoveEvent
  id: PreviewStylusMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusMoveEvent
  nameWithType: ContentElement.PreviewStylusMoveEvent
  fullName: System.Windows.ContentElement.PreviewStylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusOutOfRange
  id: PreviewStylusOutOfRange
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusOutOfRange
  nameWithType: ContentElement.PreviewStylusOutOfRange
  fullName: System.Windows.ContentElement.PreviewStylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan är för långt från digitizer ska identifieras."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusOutOfRange är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusOutOfRange är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>ansluten händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusOutOfRange&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusOutOfRange>.</xref:System.Windows.ContentElement.StylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  id: PreviewStylusOutOfRangeEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusOutOfRangeEvent
  nameWithType: ContentElement.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusOutOfRange&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusSystemGesture
  id: PreviewStylusSystemGesture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusSystemGesture
  nameWithType: ContentElement.PreviewStylusSystemGesture
  fullName: System.Windows.ContentElement.PreviewStylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren utför en av flera från pennan gester."
  remarks: "Information om från pennan gester finns <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewStylusSystemGesture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewStylusSystemGesture är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusSystemGesture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusSystemGesture>.</xref:System.Windows.ContentElement.StylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  id: PreviewStylusSystemGestureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusSystemGestureEvent
  nameWithType: ContentElement.PreviewStylusSystemGestureEvent
  fullName: System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusSystemGesture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusUp
  id: PreviewStylusUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusUp
  nameWithType: ContentElement.PreviewStylusUp
  fullName: System.Windows.ContentElement.PreviewStylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren genererar pennan av digitizer medan pennan är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>kopplade händelsen för den här klassen så att <xref:System.Windows.ContentElement.PreviewStylusDown>är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.PreviewStylusDown> </xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> Händelsehanterare som är kopplade till den <xref:System.Windows.ContentElement.PreviewStylusDown>händelse är kopplade till den underliggande <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewStylusDown>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_PreviewStylusUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewStylusUpEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.StylusUp>.</xref:System.Windows.ContentElement.StylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.PreviewStylusUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewStylusUpEvent
  id: PreviewStylusUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewStylusUpEvent
  nameWithType: ContentElement.PreviewStylusUpEvent
  fullName: System.Windows.ContentElement.PreviewStylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewStylusUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTextInput
  id: PreviewTextInput
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTextInput
  nameWithType: ContentElement.PreviewTextInput
  fullName: System.Windows.ContentElement.PreviewTextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet hämtar text i ett enhetsoberoende sätt."
  remarks: "Händelsen PreviewTextInput kan en komponent eller ett program att lyssna efter textinmatning på ett enhetsoberoende sätt. Tangentbordet är primärt PreviewTextInput; men kan också generera PreviewTextInput tal, handskrift och andra enheter.       På grund av kombinationer av – antingen i standardtangentbord eller via input method Editor – flera viktiga händelser kan ge upphov till ett enda text händelse.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>kopplade händelsen för den här klassen, så att PreviewTextInput är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen PreviewTextInput är kopplade till den underliggande <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>      <a name=&quot;routedEventInfo_PreviewTextInput&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewTextInputEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.Windows.Input.TextCompositionEventHandler>|      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.TextInput>.</xref:System.Windows.ContentElement.TextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.ContentElement.PreviewTextInputEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewTextInput%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTextInputEvent
  id: PreviewTextInputEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTextInputEvent
  nameWithType: ContentElement.PreviewTextInputEvent
  fullName: System.Windows.ContentElement.PreviewTextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewTextInput&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchDown
  id: PreviewTouchDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchDown
  nameWithType: ContentElement.PreviewTouchDown
  fullName: System.Windows.ContentElement.PreviewTouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare vidrör skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "Som standard PreviewTouchDown och <xref:System.Windows.ContentElement.TouchDown>händelser sker inte förrän en fingeravtrycksläsare vidrör skärmen och flyttar.</xref:System.Windows.ContentElement.TouchDown> Att hålla en fingeravtrycksläsare på skärmen ned den utan att flytta den orsakar tryck och håll beteendet för ett <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Tryck och håll beteendet motsvarar en mus genom att högerklicka.       Kan orsaka PreviewTouchDown och <xref:System.Windows.ContentElement.TouchDown>händelser inträffar när en fingeravtrycksläsare vidrör skärmen, ange den <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>anslutna egenskapen `false` för det här elementet.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.ContentElement.TouchDown>      <a name=&quot;routedEventInfo_PreviewTouchDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewTouchDownEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.TouchDown>.</xref:System.Windows.ContentElement.TouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.PreviewTouchDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchDownEvent
  id: PreviewTouchDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchDownEvent
  nameWithType: ContentElement.PreviewTouchDownEvent
  fullName: System.Windows.ContentElement.PreviewTouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewTouchDown&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchMove
  id: PreviewTouchMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchMove
  nameWithType: ContentElement.PreviewTouchMove
  fullName: System.Windows.ContentElement.PreviewTouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare flyttas på skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.TouchMove>.</xref:System.Windows.ContentElement.TouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.PreviewTouchMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchMoveEvent
  id: PreviewTouchMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchMoveEvent
  nameWithType: ContentElement.PreviewTouchMoveEvent
  fullName: System.Windows.ContentElement.PreviewTouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewTouchMove&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchUp
  id: PreviewTouchUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchUp
  nameWithType: ContentElement.PreviewTouchUp
  fullName: System.Windows.ContentElement.PreviewTouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare utlöses från skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.PreviewTouchUpEvent>|   | Routningsstrategi | Tunneltrafik |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Motsvarande bubbling händelse är <xref:System.Windows.ContentElement.TouchUp>.</xref:System.Windows.ContentElement.TouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.PreviewTouchUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnPreviewTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.PreviewTouchUpEvent
  id: PreviewTouchUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: PreviewTouchUpEvent
  nameWithType: ContentElement.PreviewTouchUpEvent
  fullName: System.Windows.ContentElement.PreviewTouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.PreviewTouchUp&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: ContentElement.QueryContinueDrag
  fullName: System.Windows.ContentElement.QueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en ändring i tillståndet tangentbordet eller musen knappen under dra och släppa."
  remarks: "Händelsen QueryContinueDrag kan dra källan för att avgöra om dra och släpp ska avbrytas.       Den här händelsen skapas ett alias för den <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>kopplade händelsen för den här klassen, så att QueryContinueDrag är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen QueryContinueDrag är kopplade till den underliggande <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>      <a name=&quot;routedEventInfo_QueryContinueDrag&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.QueryContinueDragEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.QueryContinueDragEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</xref:System.Windows.ContentElement.PreviewQueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.ContentElement.QueryContinueDragEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnQueryContinueDrag%2A>"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.QueryContinueDragEvent
  id: QueryContinueDragEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: QueryContinueDragEvent
  nameWithType: ContentElement.QueryContinueDragEvent
  fullName: System.Windows.ContentElement.QueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.QueryContinueDrag&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.QueryCursor
  id: QueryCursor
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: QueryCursor
  nameWithType: ContentElement.QueryCursor
  fullName: System.Windows.ContentElement.QueryCursor
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när markören har begärts ska visas. Den här händelsen inträffar på ett element varje gång som muspekaren flyttas till en ny plats, vilket betyder att objektet markören kan behöva ändras baserat på den nya platsen."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>kopplade händelsen för den här klassen, så att QueryCursor är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen QueryCursor är kopplade till den underliggande <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>       Markören som det hänvisas till av den här händelsenamn är inte nödvändigtvis textmarkören (kallas ibland för insättningspunkten). I stället markören i den här kontexten är det objekt som deklarerar på skärmen grafiskt visa som rör flera möjliga indata-relaterade enheter eller begrepp i [!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)] programmering. Objektet som representeras av den <xref:System.Windows.Input.Cursor>klassen i [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Input.Cursor> Den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] inkommande system kan du ändra den här pekaren när den representerar muspekaren på skärmen position. Du kan använda fördefinierade värden från den <xref:System.Windows.Input.Cursors>uppräkningen, eller så kan deklarera en anpassad markör som en bildfil.</xref:System.Windows.Input.Cursors>       Lyssna efter händelsen QueryCursor är inte en effektiv metod för hantering av markör. I stället bör varje element definiera egna markören med <xref:System.Windows.FrameworkContentElement.Cursor%2A>och <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</xref:System.Windows.FrameworkContentElement.ForceCursor%2A> </xref:System.Windows.FrameworkContentElement.Cursor%2A> Du bör endast lita på QueryCursor om du inte använder WPF framework nivå grundläggande element eller i extraordinära omständigheter där definierar markören på grundval av per element inte uppfyller dina behov. Mer information om hur du implementerar markören som svar på QueryCursor finns <xref:System.Windows.Input.QueryCursorEventHandler>.</xref:System.Windows.Input.QueryCursorEventHandler>      <a name=&quot;routedEventInfo_QueryCursor&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.QueryCursorEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.QueryCursorEventHandler>|      -Det finns inga definierade motsvarande tunneling händelse.</xref:System.Windows.Input.QueryCursorEventHandler> </xref:System.Windows.ContentElement.QueryCursorEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnQueryCursor%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnQueryCursor%2A>"
  syntax:
    content: public event System.Windows.Input.QueryCursorEventHandler QueryCursor;
    return:
      type: System.Windows.Input.QueryCursorEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.QueryCursorEvent
  id: QueryCursorEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: QueryCursorEvent
  nameWithType: ContentElement.QueryCursorEvent
  fullName: System.Windows.ContentElement.QueryCursorEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.QueryCursor&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  id: RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: ContentElement.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.ContentElement.RaiseEvent(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Genererar en routade händelse. Den <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> höjas identifieras inom den <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> instans som har angetts (som den <xref:System.Windows.RoutedEventArgs.RoutedEvent*>egenskapen för händelsedata).</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  remarks: "Den `e` parameter har angetts som bastyp för alla routade händelsedata vanliga; men informationen om händelsen ska få som mest specifika händelsen datatyp som är tillgänglig för den händelse som aktiveras eftersom <xref:System.Windows.RoutedEventArgs>härledda klasser innehåller egenskaper för faktiska specifika data som är avsedda för händelsen när den utlöses.</xref:System.Windows.RoutedEventArgs>       <xref:System.Windows.RoutedEventArgs>är inte bara egenskaper läge för händelsen. du identifierar även vilka dirigerade händelser att öka.</xref:System.Windows.RoutedEventArgs> Den här händelsen höja mönstret och den omdirigerade händelsedata både skiljer sig från [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] händelser och data klasser, som vanligtvis innehåller egenskaper som är relaterade till händelsen."
  example:
  - "The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.  \n  \n [!code-cs[ContentElementsSmorgasbord#RaiseEvent](~/add/codesnippet/csharp/ContentElementsSmorgasbord/page1.xaml.cs#raiseevent)]\n [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/add/codesnippet/visualbasic/contentelementssmorgasbord/page1.xaml.vb#raiseevent)]"
  syntax:
    content: public void RaiseEvent (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "En <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref> som innehåller informationen om händelsen och identifierar också händelsen för att öka."
  overload: System.Windows.ContentElement.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ReleaseAllTouchCaptures
  id: ReleaseAllTouchCaptures
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ReleaseAllTouchCaptures()
  nameWithType: ContentElement.ReleaseAllTouchCaptures()
  fullName: System.Windows.ContentElement.ReleaseAllTouchCaptures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Frigör alla avbildade touch-enheter från det här elementet."
  syntax:
    content: public void ReleaseAllTouchCaptures ();
    parameters: []
  overload: System.Windows.ContentElement.ReleaseAllTouchCaptures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ReleaseMouseCapture
  id: ReleaseMouseCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ReleaseMouseCapture()
  nameWithType: ContentElement.ReleaseMouseCapture()
  fullName: System.Windows.ContentElement.ReleaseMouseCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Frigör musinfångningen, om det här elementet lagras avbildningen."
  remarks: "Om det här elementet inte håller avbildningen, har anropar den här metoden ingen effekt. Kontrollera värdet för <xref:System.Windows.ContentElement.IsMouseCaptured%2A>innan du anropar den här metoden.</xref:System.Windows.ContentElement.IsMouseCaptured%2A>"
  example:
  - "The following handler captures or releases mouse capture according to mouse button states. The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  \n  \n [!code-cs[ContentElementsSmorgasbord#UIElementMouseCapture](~/add/codesnippet/csharp/ContentElementsSmorgasbord/Trackball.cs#uielementmousecapture)]\n [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/add/codesnippet/visualbasic/contentelementssmorgasbord/trackball.vb#uielementmousecapture)]"
  syntax:
    content: public void ReleaseMouseCapture ();
    parameters: []
  overload: System.Windows.ContentElement.ReleaseMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ReleaseStylusCapture
  id: ReleaseStylusCapture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ReleaseStylusCapture()
  nameWithType: ContentElement.ReleaseStylusCapture()
  fullName: System.Windows.ContentElement.ReleaseStylusCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Frigör från pennan enheten avbildning, om det här elementet lagras avbildningen."
  remarks: "Om det här elementet inte håller avbildningen, har anropar den här metoden ingen effekt. Kontrollera värdet för <xref:System.Windows.ContentElement.IsStylusCaptured%2A>innan du anropar den här metoden.</xref:System.Windows.ContentElement.IsStylusCaptured%2A>"
  syntax:
    content: public void ReleaseStylusCapture ();
    parameters: []
  overload: System.Windows.ContentElement.ReleaseStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  id: ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: ContentElement.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.ContentElement.ReleaseTouchCapture(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Försök att frigöra den angivna touch-enheten från det här elementet."
  syntax:
    content: public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "Enheten att släppa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om enheten touch släpps; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ContentElement.ReleaseTouchCapture*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: ContentElement.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.ContentElement.RemoveHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Tar bort den angivna händelsehanteraren routade från det här elementet."
  remarks: "Det vanligaste scenariot för att använda detta [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)] är när du implementerar den [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] &quot;wrapper&quot; händelse som är associerad med en anpassad routade händelse, särskilt när du implementerar &quot;Ta bort&quot; logiken för hanterare på den [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] nivå. Följande detta exempel anmärkningar avsnitt visar det här scenariot.       Anropar den här metoden har ingen effekt om det fanns ingen hanterare som registrerats med villkor som matchar indataparametrarna för metodanropet.       Om mer än en hanterare är ansluten som matchade kriterierna endast den första hanteraren om hanteraren store tas bort. Det här beteendet är konsekvent med [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] beteendet för den `-=` operator.       Varken `routedEvent` eller `handler` kan vara `null`. Försök att ange antingen värde som `null` ska generera ett undantag.       Ignorerar den här metoden den `handledEventsToo` parameterinformation, vilket tillhandahålls om hanteraren först läggas till med den <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>signatur som möjliggör hantering av händelser som redan hanteras.</xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Båda typerna av hanteraren tas bort."
  syntax:
    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Identifierare för the.routed händelse som hanteraren är ansluten."
    - id: handler
      type: System.Delegate
      description: "Implementeringen viss hanterare ska tas bort från hanteraren händelseinsamling på det här elementet."
  overload: System.Windows.ContentElement.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ShouldSerializeCommandBindings
  id: ShouldSerializeCommandBindings
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ShouldSerializeCommandBindings()
  nameWithType: ContentElement.ShouldSerializeCommandBindings()
  fullName: System.Windows.ContentElement.ShouldSerializeCommandBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar om serialisering processer ska ordna innehållet för <xref:System.Windows.ContentElement.CommandBindings*>egenskapen på instanser av den här klassen.</xref:System.Windows.ContentElement.CommandBindings*>"
  remarks: "Detta returnerar `true` om <xref:System.Windows.ContentElement.CommandBindings%2A>anges lokalt.</xref:System.Windows.ContentElement.CommandBindings%2A>       Detta `ShouldSerialize` anges eftersom den <xref:System.Windows.UIElement.CommandBindings%2A>egenskapen inte har ett enkelt standardvärde.</xref:System.Windows.UIElement.CommandBindings%2A> Den här metoden anger om egenskapen har ändrats från sitt standardvärde. Du vanligtvis anropa den här metoden om du antingen utveckla en designer eller utveckla en egen kontroll införliva <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement>       Mer information finns i [definiera standardvärden med ShouldSerialize och återställa metoder](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeCommandBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Windows.ContentElement.CommandBindings*>egenskapsvärdet måste vara serialiserade, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.ContentElement.CommandBindings*>"
  overload: System.Windows.ContentElement.ShouldSerializeCommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.ShouldSerializeInputBindings
  id: ShouldSerializeInputBindings
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: ShouldSerializeInputBindings()
  nameWithType: ContentElement.ShouldSerializeInputBindings()
  fullName: System.Windows.ContentElement.ShouldSerializeInputBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returnerar om serialisering processer ska ordna innehållet för <xref:System.Windows.ContentElement.InputBindings*>egenskapen på instanser av den här klassen.</xref:System.Windows.ContentElement.InputBindings*>"
  remarks: "Detta returnerar `true` om <xref:System.Windows.ContentElement.InputBindings%2A>anges lokalt.</xref:System.Windows.ContentElement.InputBindings%2A>       Detta `ShouldSerialize` anges eftersom den <xref:System.Windows.UIElement.InputBindings%2A>egenskapen inte har ett enkelt standardvärde.</xref:System.Windows.UIElement.InputBindings%2A> Den här metoden anger om egenskapen har ändrats från sitt standardvärde. Du vanligtvis anropa den här metoden om du antingen utveckla en designer eller utveckla en egen kontroll införliva <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement>       Mer information finns i [definiera standardvärden med ShouldSerialize och återställa metoder](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ShouldSerializeInputBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Windows.ContentElement.InputBindings*>egenskapsvärdet måste vara serialiserade, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.ContentElement.InputBindings*>"
  overload: System.Windows.ContentElement.ShouldSerializeInputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusButtonDown
  id: StylusButtonDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusButtonDown
  nameWithType: ContentElement.StylusButtonDown
  fullName: System.Windows.ContentElement.StylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när från pennan knappen är nedtryckt medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusButtonDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusButtonDown är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusButtonDownEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusButtonEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</xref:System.Windows.ContentElement.PreviewStylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.ContentElement.StylusButtonDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusButtonDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusButtonDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusButtonDownEvent
  id: StylusButtonDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusButtonDownEvent
  nameWithType: ContentElement.StylusButtonDownEvent
  fullName: System.Windows.ContentElement.StylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusButtonDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusButtonUp
  id: StylusButtonUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusButtonUp
  nameWithType: ContentElement.StylusButtonUp
  fullName: System.Windows.ContentElement.StylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när knappen från pennan släpps medan muspekaren är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusButtonUp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusButtonUp är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusButtonUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusButtonUpEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusButtonEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</xref:System.Windows.ContentElement.PreviewStylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.ContentElement.StylusButtonUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusButtonUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusButtonUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusButtonUpEvent
  id: StylusButtonUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusButtonUpEvent
  nameWithType: ContentElement.StylusButtonUpEvent
  fullName: System.Windows.ContentElement.StylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusButtonUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusDown
  id: StylusDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusDown
  nameWithType: ContentElement.StylusDown
  fullName: System.Windows.ContentElement.StylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan vidrör digitizer medan pennan är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusDown är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusDown är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>ansluten händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusDownEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusDownEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusDown>.</xref:System.Windows.ContentElement.PreviewStylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.ContentElement.StylusDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusDown%2A>"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler StylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusDownEvent
  id: StylusDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusDownEvent
  nameWithType: ContentElement.StylusDownEvent
  fullName: System.Windows.ContentElement.StylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusDown&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusEnter
  id: StylusEnter
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusEnter
  nameWithType: ContentElement.StylusEnter
  fullName: System.Windows.ContentElement.StylusEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan lämnar gränserna för det här elementet."
  remarks: "StylusEnter är en [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) som använder direkt routningsstrategi för händelsehantering. Direkt dirigerade händelser aktiveras inte längs vägen; i stället hanteras de på samma element där de aktiveras. Dock gör de andra aspekter av routade händelse beteende, till exempel händelseutlösare format.       Även om StylusEnter spårar när pennan anger gränserna för ett element, den här händelsen mer bokstavligt rapporterar att den <xref:System.Windows.ContentElement.IsStylusOver%2A>egenskapsvärdet har ändrats från `false` till `true` på det här elementet.</xref:System.Windows.ContentElement.IsStylusOver%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusEnter är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusEnter är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusEnter&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusEnterEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusEnter%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusEnter%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusEnterEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusEnter;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusEnterEvent
  id: StylusEnterEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusEnterEvent
  nameWithType: ContentElement.StylusEnterEvent
  fullName: System.Windows.ContentElement.StylusEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusEnter&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusInAirMove
  id: StylusInAirMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusInAirMove
  nameWithType: ContentElement.StylusInAirMove
  fullName: System.Windows.ContentElement.StylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan flyttas över ett element utan att faktiskt röra digitizer."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusInAirMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusInAirMove är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInAirMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusInAirMoveEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</xref:System.Windows.ContentElement.PreviewStylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusInAirMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusInAirMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusInAirMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusInAirMoveEvent
  id: StylusInAirMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusInAirMoveEvent
  nameWithType: ContentElement.StylusInAirMoveEvent
  fullName: System.Windows.ContentElement.StylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusInAirMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusInRange
  id: StylusInRange
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusInRange
  nameWithType: ContentElement.StylusInRange
  fullName: System.Windows.ContentElement.StylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan tillräckligt nära digitizer ska identifieras medan över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusInRange är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusInRange är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusInRange&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusInRangeEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusInRange>.</xref:System.Windows.ContentElement.PreviewStylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusInRangeEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusInRange%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusInRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusInRangeEvent
  id: StylusInRangeEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusInRangeEvent
  nameWithType: ContentElement.StylusInRangeEvent
  fullName: System.Windows.ContentElement.StylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusInRange&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusLeave
  id: StylusLeave
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusLeave
  nameWithType: ContentElement.StylusLeave
  fullName: System.Windows.ContentElement.StylusLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan lämnar gränserna för elementet."
  remarks: "StylusLeave är en [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md) som använder direkt routningsstrategi för händelsehantering. Direkt dirigerade händelser aktiveras inte längs vägen; i stället hanteras de på samma element där de aktiveras. Dock gör de andra aspekter av routade händelse beteende, till exempel händelseutlösare format.       Även om StylusLeave spårar när pennan lämnar gränserna för ett element, den här händelsen mer bokstavligt rapporterar att den <xref:System.Windows.ContentElement.IsStylusOver%2A>egenskapsvärdet har ändrats från `true` till `false` på det här elementet.</xref:System.Windows.ContentElement.IsStylusOver%2A>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusLeave är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusLeave är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>ansluten händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusLeave&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusLeaveEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusLeave%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusLeave%2A> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusLeaveEvent>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusLeave;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusLeaveEvent
  id: StylusLeaveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusLeaveEvent
  nameWithType: ContentElement.StylusLeaveEvent
  fullName: System.Windows.ContentElement.StylusLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusLeave&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusMove
  id: StylusMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusMove
  nameWithType: ContentElement.StylusMove
  fullName: System.Windows.ContentElement.StylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan flyttas över det här elementet. Pennan måste flytta på digitizer att aktivera den här händelsen. Annars <xref href=&quot;System.Windows.ContentElement.StylusInAirMove&quot;> </xref> aktiveras i stället."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusMove är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusMove är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusMoveEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusMove>.</xref:System.Windows.ContentElement.PreviewStylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusMove%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusMoveEvent
  id: StylusMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusMoveEvent
  nameWithType: ContentElement.StylusMoveEvent
  fullName: System.Windows.ContentElement.StylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusMove&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusOutOfRange
  id: StylusOutOfRange
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusOutOfRange
  nameWithType: ContentElement.StylusOutOfRange
  fullName: System.Windows.ContentElement.StylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när pennan är för långt från digitizer ska identifieras medan över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusOutOfRange är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusOutOfRange är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusOutOfRange&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</xref:System.Windows.ContentElement.PreviewStylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusOutOfRangeEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusOutOfRange%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusOutOfRangeEvent
  id: StylusOutOfRangeEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusOutOfRangeEvent
  nameWithType: ContentElement.StylusOutOfRangeEvent
  fullName: System.Windows.ContentElement.StylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusOutOfRange&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusSystemGesture
  id: StylusSystemGesture
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusSystemGesture
  nameWithType: ContentElement.StylusSystemGesture
  fullName: System.Windows.ContentElement.StylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren utför en av flera från pennan gester."
  remarks: "Mer information om från pennan gester finns <xref:System.Windows.Input.SystemGesture>.</xref:System.Windows.Input.SystemGesture>       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusSystemGesture är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusSystemGesture är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusSystemGesture&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusSystemGestureEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusSystemGestureEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</xref:System.Windows.ContentElement.PreviewStylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.ContentElement.StylusSystemGestureEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusSystemGesture%2A>"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusSystemGestureEvent
  id: StylusSystemGestureEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusSystemGestureEvent
  nameWithType: ContentElement.StylusSystemGestureEvent
  fullName: System.Windows.ContentElement.StylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusSystemGesture&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusUp
  id: StylusUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusUp
  nameWithType: ContentElement.StylusUp
  fullName: System.Windows.ContentElement.StylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när användaren genererar pennan av digitizer när den är över det här elementet."
  remarks: "Den här händelsen skapas ett alias för den <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>kopplade händelsen för den här klassen, så att StylusUp är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName> Händelsehanterare som är kopplade till händelsen StylusUp är kopplade till den underliggande <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>       Touch, mus och indata från pennan finns i en viss relation. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;routedEventInfo_StylusUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.StylusUpEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.StylusEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewStylusUp>.</xref:System.Windows.ContentElement.PreviewStylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.ContentElement.StylusUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnStylusUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnStylusUp%2A>"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.StylusUpEvent
  id: StylusUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: StylusUpEvent
  nameWithType: ContentElement.StylusUpEvent
  fullName: System.Windows.ContentElement.StylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.StylusUp&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TextInput
  id: TextInput
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TextInput
  nameWithType: ContentElement.TextInput
  fullName: System.Windows.ContentElement.TextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när det här elementet hämtar text i ett enhetsoberoende sätt."
  remarks: "> [!IMPORTANT]> I den här händelsen kanske redan markeras som hanteras av de interna implementeringarna av sammansatta kontroller. Se kommentaren nedan.       Händelsen TextInput vara redan markerade som hanteras av de interna implementeringarna av sammansatta kontroller. Till exempel en <xref:System.Windows.Controls.TextBox>är en sammansatta kontroll där händelsen TextInput redan har markerats som hanterad; i dess sammansättning.</xref:System.Windows.Controls.TextBox> Kontroller kan göra detta eftersom kontrollen måste tolka vissa typer av indata, till exempel piltangenterna med särskild innebörd för kontrollen. Om du använder <xref:System.Windows.ContentElement.PreviewTextInput>som händelsen där du bifoga hanterare för textinmatning, kan du få bättre resultat.</xref:System.Windows.ContentElement.PreviewTextInput> Den här metoden kringgår de flesta fall där kontrollen sammansättning den här händelsen har redan markerats som hanteras och förhindrar att dina hanteraren tar emot händelsen längs vägen händelse.       Händelsen TextInput kan en komponent eller ett program att lyssna efter textinmatning på ett enhetsoberoende sätt. Tangentbordet är primärt TextInput, men tal, handskrift och andra enheter kan också medföra TextInput.       På grund av kombinationer av – antingen i standardtangentbord eller via input method Editor – flera viktiga händelser kan utlösa en text inkommande händelse.       Den här händelsen skapas ett alias för den <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>kopplade händelsen för den här klassen så att TextInput är en del av klassen medlemmar listan när <xref:System.Windows.ContentElement>ärvs som en grundläggande element.</xref:System.Windows.ContentElement> </xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName> Händelsehanterare som är kopplade till TextInput-händelse är kopplade till den underliggande <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>kopplade händelsen och ta emot den samma instansen av händelsedata.</xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>      <a name=&quot;routedEventInfo_TextInput&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TextInputEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.Windows.Input.TextCompositionEventHandler>|      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewTextInput>.</xref:System.Windows.ContentElement.PreviewTextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.ContentElement.TextInputEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnTextInput%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTextInput%2A>"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler TextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TextInputEvent
  id: TextInputEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TextInputEvent
  nameWithType: ContentElement.TextInputEvent
  fullName: System.Windows.ContentElement.TextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TextInput&quot;> </xref> routade händelse."
  remarks: "Routade Händelseidentifierare skapas när dirigerade händelser registreras. Dessa identifierare kan innehålla en identifierande namn, typ, hanterartypen, routningsstrategi och verktyget metod för att lägga till ägare för händelsen. Du kan använda dessa identifierare för att lägga till klasshanterare.       Mer information om hur du registrerar dirigerade händelser finns i <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Mer information om hur du använder routade Händelseidentifierare att lägga till klasshanterare finns <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchDown
  id: TouchDown
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchDown
  nameWithType: ContentElement.TouchDown
  fullName: System.Windows.ContentElement.TouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare vidrör skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "Som standard den <xref:System.Windows.ContentElement.PreviewTouchDown>och TouchDown händelser sker inte förrän en fingeravtrycksläsare vidrör skärmen och flyttar.</xref:System.Windows.ContentElement.PreviewTouchDown> Att hålla en fingeravtrycksläsare på skärmen ned den utan att flytta den orsakar tryck och håll beteendet för ett <xref:System.Windows.Input.Stylus>.</xref:System.Windows.Input.Stylus> Tryck och håll beteendet motsvarar en mus genom att högerklicka.       Kan orsaka det <xref:System.Windows.ContentElement.PreviewTouchDown>och TouchDown händelser inträffar när en fingeravtrycksläsare vidrör skärmen, ange den <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>anslutna egenskapen `false` för det här elementet.</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewTouchDown>      <a name=&quot;routedEventInfo_TouchDown&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TouchDownEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewTouchDown>.</xref:System.Windows.ContentElement.PreviewTouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.TouchDownEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnTouchDown%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTouchDown%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchDownEvent
  id: TouchDownEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchDownEvent
  nameWithType: ContentElement.TouchDownEvent
  fullName: System.Windows.ContentElement.TouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TouchDown&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchEnter
  id: TouchEnter
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchEnter
  nameWithType: ContentElement.TouchEnter
  fullName: System.Windows.ContentElement.TouchEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en touch flyttas från utanför till inom gränserna för det här elementet."
  remarks: "Denna händelse utlöses alltid, oavsett om enheten touch avbildas till den här UI-element.      <a name=&quot;routedEventInfo_TouchEnter&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TouchEnterEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Åsidosätt <xref:System.Windows.ContentElement.OnTouchEnter%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTouchEnter%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.TouchEnterEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchEnter;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchEnterEvent
  id: TouchEnterEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchEnterEvent
  nameWithType: ContentElement.TouchEnterEvent
  fullName: System.Windows.ContentElement.TouchEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TouchEnter&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchesCaptured
  id: TouchesCaptured
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchesCaptured
  nameWithType: ContentElement.TouchesCaptured
  fullName: System.Windows.ContentElement.TouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar alla touch-enheter som har hämtats till det här elementet."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCaptured { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "En uppräkning av <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objekt som har hämtats till det här elementet."
  overload: System.Windows.ContentElement.TouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchesCapturedWithin
  id: TouchesCapturedWithin
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchesCapturedWithin
  nameWithType: ContentElement.TouchesCapturedWithin
  fullName: System.Windows.ContentElement.TouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar alla touch-enheter som har hämtats till det här elementet eller alla underordnade element i dess visuella träd."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCapturedWithin { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "En uppräkning av <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objekt som har hämtats till det här elementet eller alla underordnade element i dess visuella träd."
  overload: System.Windows.ContentElement.TouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchesDirectlyOver
  id: TouchesDirectlyOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchesDirectlyOver
  nameWithType: ContentElement.TouchesDirectlyOver
  fullName: System.Windows.ContentElement.TouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar alla touch-enheter som är över det här elementet."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesDirectlyOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "En uppräkning av <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objekt som är över det här elementet."
  overload: System.Windows.ContentElement.TouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchesOver
  id: TouchesOver
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchesOver
  nameWithType: ContentElement.TouchesOver
  fullName: System.Windows.ContentElement.TouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Hämtar alla touch-enheter som är över det här elementet eller alla underordnade element i dess visuella träd."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "En uppräkning av <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> objekt som är över det här elementet och alla underordnade element i dess visuella träd."
  overload: System.Windows.ContentElement.TouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchLeave
  id: TouchLeave
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchLeave
  nameWithType: ContentElement.TouchLeave
  fullName: System.Windows.ContentElement.TouchLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en touch flyttas från innanför till utanför gränserna för det här elementet."
  remarks: "<a name=&quot;routedEventInfo_TouchLeave&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TouchLeaveEvent>|   | Routningsstrategi | Direkt |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Åsidosätt <xref:System.Windows.ContentElement.OnTouchLeave%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTouchLeave%2A> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.TouchLeaveEvent>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchLeave;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchLeaveEvent
  id: TouchLeaveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchLeaveEvent
  nameWithType: ContentElement.TouchLeaveEvent
  fullName: System.Windows.ContentElement.TouchLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TouchLeave&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchMove
  id: TouchMove
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchMove
  nameWithType: ContentElement.TouchMove
  fullName: System.Windows.ContentElement.TouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare flyttas på skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "<a name=&quot;routedEventInfo_TouchMove&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TouchMoveEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewTouchMove>.</xref:System.Windows.ContentElement.PreviewTouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.TouchMoveEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnTouchMove%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTouchMove%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchMoveEvent
  id: TouchMoveEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchMoveEvent
  nameWithType: ContentElement.TouchMoveEvent
  fullName: System.Windows.ContentElement.TouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TouchMove&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchUp
  id: TouchUp
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchUp
  nameWithType: ContentElement.TouchUp
  fullName: System.Windows.ContentElement.TouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Inträffar när en fingeravtrycksläsare utlöses från skärmen medan fingeravtrycksläsare är över det här elementet."
  remarks: "<a name=&quot;routedEventInfo_TouchUp&quot;></a>## Dirigeras händelseinformation |||   |-|-|   | ID-fältet | <xref:System.Windows.ContentElement.TouchUpEvent>|   | Routningsstrategi | Genomströmning |   | Delegaten | <xref:System.EventHandler%601>av typen <xref:System.Windows.Input.TouchEventArgs>. |      -Tunneltrafik motsvarande händelse är <xref:System.Windows.ContentElement.PreviewTouchUp>.</xref:System.Windows.ContentElement.PreviewTouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.ContentElement.TouchUpEvent>      -Åsidosätt <xref:System.Windows.ContentElement.OnTouchUp%2A>att implementera klassen som hanterar för den här händelsen i härledda klasser.</xref:System.Windows.ContentElement.OnTouchUp%2A>"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ContentElement.TouchUpEvent
  id: TouchUpEvent
  parent: System.Windows.ContentElement
  langs:
  - csharp
  name: TouchUpEvent
  nameWithType: ContentElement.TouchUpEvent
  fullName: System.Windows.ContentElement.TouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Identifierar den <xref href=&quot;System.Windows.ContentElement.TouchUp&quot;> </xref> routade händelse."
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.ContentElement.#ctor
  parent: System.Windows.ContentElement
  isExternal: false
  name: ContentElement()
  nameWithType: ContentElement.ContentElement()
  fullName: System.Windows.ContentElement.ContentElement()
- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.ContentElement
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: ContentElement.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.ContentElement.AddHandler(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.ContentElement
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: ContentElement.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.ContentElement.AddHandler(RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: ContentElement.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.ContentElement.AddToEventRoute(EventRoute,RoutedEventArgs)
- uid: System.Windows.EventRoute
  parent: System.Windows
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.ContentElement.AllowDrop
  parent: System.Windows.ContentElement
  isExternal: false
  name: AllowDrop
  nameWithType: ContentElement.AllowDrop
  fullName: System.Windows.ContentElement.AllowDrop
- uid: System.Windows.ContentElement.AllowDropProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: AllowDropProperty
  nameWithType: ContentElement.AllowDropProperty
  fullName: System.Windows.ContentElement.AllowDropProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.ContentElement
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock)
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.ContentElement
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.ContentElement.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
- uid: System.Windows.Media.Animation.HandoffBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: HandoffBehavior
  nameWithType: HandoffBehavior
  fullName: System.Windows.Media.Animation.HandoffBehavior
- uid: System.Windows.ContentElement.AreAnyTouchesCaptured
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: ContentElement.AreAnyTouchesCaptured
  fullName: System.Windows.ContentElement.AreAnyTouchesCaptured
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCapturedProperty
  nameWithType: ContentElement.AreAnyTouchesCapturedProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedProperty
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: ContentElement.AreAnyTouchesCapturedWithin
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedWithin
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: ContentElement.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: ContentElement.AreAnyTouchesDirectlyOver
  fullName: System.Windows.ContentElement.AreAnyTouchesDirectlyOver
- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: ContentElement.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
- uid: System.Windows.ContentElement.AreAnyTouchesOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: ContentElement.AreAnyTouchesOver
  fullName: System.Windows.ContentElement.AreAnyTouchesOver
- uid: System.Windows.ContentElement.AreAnyTouchesOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesOverProperty
  nameWithType: ContentElement.AreAnyTouchesOverProperty
  fullName: System.Windows.ContentElement.AreAnyTouchesOverProperty
- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.ContentElement
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline)
- uid: System.Windows.Media.Animation.AnimationTimeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationTimeline
  nameWithType: AnimationTimeline
  fullName: System.Windows.Media.Animation.AnimationTimeline
- uid: System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.ContentElement
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.ContentElement.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
- uid: System.Windows.ContentElement.CaptureMouse
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureMouse()
  nameWithType: ContentElement.CaptureMouse()
  fullName: System.Windows.ContentElement.CaptureMouse()
- uid: System.Windows.ContentElement.CaptureStylus
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureStylus()
  nameWithType: ContentElement.CaptureStylus()
  fullName: System.Windows.ContentElement.CaptureStylus()
- uid: System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureTouch(TouchDevice)
  nameWithType: ContentElement.CaptureTouch(TouchDevice)
  fullName: System.Windows.ContentElement.CaptureTouch(TouchDevice)
- uid: System.Windows.Input.TouchDevice
  parent: System.Windows.Input
  isExternal: false
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: System.Windows.Input.TouchDevice
- uid: System.Windows.ContentElement.CommandBindings
  parent: System.Windows.ContentElement
  isExternal: false
  name: CommandBindings
  nameWithType: ContentElement.CommandBindings
  fullName: System.Windows.ContentElement.CommandBindings
- uid: System.Windows.Input.CommandBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: CommandBindingCollection
  nameWithType: CommandBindingCollection
  fullName: System.Windows.Input.CommandBindingCollection
- uid: System.Windows.ContentElement.DragEnter
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragEnter
  nameWithType: ContentElement.DragEnter
  fullName: System.Windows.ContentElement.DragEnter
- uid: System.Windows.DragEventHandler
  parent: System.Windows
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.DragEventHandler
- uid: System.Windows.ContentElement.DragEnterEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragEnterEvent
  nameWithType: ContentElement.DragEnterEvent
  fullName: System.Windows.ContentElement.DragEnterEvent
- uid: System.Windows.ContentElement.DragLeave
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragLeave
  nameWithType: ContentElement.DragLeave
  fullName: System.Windows.ContentElement.DragLeave
- uid: System.Windows.ContentElement.DragLeaveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragLeaveEvent
  nameWithType: ContentElement.DragLeaveEvent
  fullName: System.Windows.ContentElement.DragLeaveEvent
- uid: System.Windows.ContentElement.DragOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragOver
  nameWithType: ContentElement.DragOver
  fullName: System.Windows.ContentElement.DragOver
- uid: System.Windows.ContentElement.DragOverEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: DragOverEvent
  nameWithType: ContentElement.DragOverEvent
  fullName: System.Windows.ContentElement.DragOverEvent
- uid: System.Windows.ContentElement.Drop
  parent: System.Windows.ContentElement
  isExternal: false
  name: Drop
  nameWithType: ContentElement.Drop
  fullName: System.Windows.ContentElement.Drop
- uid: System.Windows.ContentElement.DropEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: DropEvent
  nameWithType: ContentElement.DropEvent
  fullName: System.Windows.ContentElement.DropEvent
- uid: System.Windows.ContentElement.Focus
  parent: System.Windows.ContentElement
  isExternal: false
  name: Focus()
  nameWithType: ContentElement.Focus()
  fullName: System.Windows.ContentElement.Focus()
- uid: System.Windows.ContentElement.Focusable
  parent: System.Windows.ContentElement
  isExternal: false
  name: Focusable
  nameWithType: ContentElement.Focusable
  fullName: System.Windows.ContentElement.Focusable
- uid: System.Windows.ContentElement.FocusableChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: FocusableChanged
  nameWithType: ContentElement.FocusableChanged
  fullName: System.Windows.ContentElement.FocusableChanged
- uid: System.Windows.DependencyPropertyChangedEventHandler
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventHandler
  nameWithType: DependencyPropertyChangedEventHandler
  fullName: System.Windows.DependencyPropertyChangedEventHandler
- uid: System.Windows.ContentElement.FocusableProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: FocusableProperty
  nameWithType: ContentElement.FocusableProperty
  fullName: System.Windows.ContentElement.FocusableProperty
- uid: System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.ContentElement
  isExternal: false
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: ContentElement.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.ContentElement.GetAnimationBaseValue(DependencyProperty)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ContentElement.GetUIParentCore
  parent: System.Windows.ContentElement
  isExternal: false
  name: GetUIParentCore()
  nameWithType: ContentElement.GetUIParentCore()
  fullName: System.Windows.ContentElement.GetUIParentCore()
- uid: System.Windows.ContentElement.GiveFeedback
  parent: System.Windows.ContentElement
  isExternal: false
  name: GiveFeedback
  nameWithType: ContentElement.GiveFeedback
  fullName: System.Windows.ContentElement.GiveFeedback
- uid: System.Windows.GiveFeedbackEventHandler
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.GiveFeedbackEventHandler
- uid: System.Windows.ContentElement.GiveFeedbackEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GiveFeedbackEvent
  nameWithType: ContentElement.GiveFeedbackEvent
  fullName: System.Windows.ContentElement.GiveFeedbackEvent
- uid: System.Windows.ContentElement.GotFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotFocus
  nameWithType: ContentElement.GotFocus
  fullName: System.Windows.ContentElement.GotFocus
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.ContentElement.GotFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotFocusEvent
  nameWithType: ContentElement.GotFocusEvent
  fullName: System.Windows.ContentElement.GotFocusEvent
- uid: System.Windows.ContentElement.GotKeyboardFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotKeyboardFocus
  nameWithType: ContentElement.GotKeyboardFocus
  fullName: System.Windows.ContentElement.GotKeyboardFocus
- uid: System.Windows.Input.KeyboardFocusChangedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventHandler
  nameWithType: KeyboardFocusChangedEventHandler
  fullName: System.Windows.Input.KeyboardFocusChangedEventHandler
- uid: System.Windows.ContentElement.GotKeyboardFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotKeyboardFocusEvent
  nameWithType: ContentElement.GotKeyboardFocusEvent
  fullName: System.Windows.ContentElement.GotKeyboardFocusEvent
- uid: System.Windows.ContentElement.GotMouseCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotMouseCapture
  nameWithType: ContentElement.GotMouseCapture
  fullName: System.Windows.ContentElement.GotMouseCapture
- uid: System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.ContentElement.GotMouseCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotMouseCaptureEvent
  nameWithType: ContentElement.GotMouseCaptureEvent
  fullName: System.Windows.ContentElement.GotMouseCaptureEvent
- uid: System.Windows.ContentElement.GotStylusCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotStylusCapture
  nameWithType: ContentElement.GotStylusCapture
  fullName: System.Windows.ContentElement.GotStylusCapture
- uid: System.Windows.Input.StylusEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventHandler
  nameWithType: StylusEventHandler
  fullName: System.Windows.Input.StylusEventHandler
- uid: System.Windows.ContentElement.GotStylusCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotStylusCaptureEvent
  nameWithType: ContentElement.GotStylusCaptureEvent
  fullName: System.Windows.ContentElement.GotStylusCaptureEvent
- uid: System.Windows.ContentElement.GotTouchCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotTouchCapture
  nameWithType: ContentElement.GotTouchCapture
  fullName: System.Windows.ContentElement.GotTouchCapture
- uid: System.EventHandler{System.Windows.Input.TouchEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TouchEventArgs>
  nameWithType: EventHandler<TouchEventArgs>
  fullName: System.EventHandler<System.Windows.Input.TouchEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.TouchEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchEventArgs
    name: TouchEventArgs
    nameWithType: TouchEventArgs
    fullName: TouchEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ContentElement.GotTouchCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: GotTouchCaptureEvent
  nameWithType: ContentElement.GotTouchCaptureEvent
  fullName: System.Windows.ContentElement.GotTouchCaptureEvent
- uid: System.Windows.ContentElement.HasAnimatedProperties
  parent: System.Windows.ContentElement
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: ContentElement.HasAnimatedProperties
  fullName: System.Windows.ContentElement.HasAnimatedProperties
- uid: System.Windows.ContentElement.InputBindings
  parent: System.Windows.ContentElement
  isExternal: false
  name: InputBindings
  nameWithType: ContentElement.InputBindings
  fullName: System.Windows.ContentElement.InputBindings
- uid: System.Windows.Input.InputBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: InputBindingCollection
  nameWithType: InputBindingCollection
  fullName: System.Windows.Input.InputBindingCollection
- uid: System.Windows.ContentElement.IsEnabled
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabled
  nameWithType: ContentElement.IsEnabled
  fullName: System.Windows.ContentElement.IsEnabled
- uid: System.Windows.ContentElement.IsEnabledChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabledChanged
  nameWithType: ContentElement.IsEnabledChanged
  fullName: System.Windows.ContentElement.IsEnabledChanged
- uid: System.Windows.ContentElement.IsEnabledCore
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabledCore
  nameWithType: ContentElement.IsEnabledCore
  fullName: System.Windows.ContentElement.IsEnabledCore
- uid: System.Windows.ContentElement.IsEnabledProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: ContentElement.IsEnabledProperty
  fullName: System.Windows.ContentElement.IsEnabledProperty
- uid: System.Windows.ContentElement.IsFocused
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsFocused
  nameWithType: ContentElement.IsFocused
  fullName: System.Windows.ContentElement.IsFocused
- uid: System.Windows.ContentElement.IsFocusedProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsFocusedProperty
  nameWithType: ContentElement.IsFocusedProperty
  fullName: System.Windows.ContentElement.IsFocusedProperty
- uid: System.Windows.ContentElement.IsInputMethodEnabled
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: ContentElement.IsInputMethodEnabled
  fullName: System.Windows.ContentElement.IsInputMethodEnabled
- uid: System.Windows.ContentElement.IsKeyboardFocused
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: ContentElement.IsKeyboardFocused
  fullName: System.Windows.ContentElement.IsKeyboardFocused
- uid: System.Windows.ContentElement.IsKeyboardFocusedChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusedChanged
  nameWithType: ContentElement.IsKeyboardFocusedChanged
  fullName: System.Windows.ContentElement.IsKeyboardFocusedChanged
- uid: System.Windows.ContentElement.IsKeyboardFocusedProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusedProperty
  nameWithType: ContentElement.IsKeyboardFocusedProperty
  fullName: System.Windows.ContentElement.IsKeyboardFocusedProperty
- uid: System.Windows.ContentElement.IsKeyboardFocusWithin
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: ContentElement.IsKeyboardFocusWithin
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithin
- uid: System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusWithinChanged
  nameWithType: ContentElement.IsKeyboardFocusWithinChanged
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithinChanged
- uid: System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusWithinProperty
  nameWithType: ContentElement.IsKeyboardFocusWithinProperty
  fullName: System.Windows.ContentElement.IsKeyboardFocusWithinProperty
- uid: System.Windows.ContentElement.IsMouseCaptured
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptured
  nameWithType: ContentElement.IsMouseCaptured
  fullName: System.Windows.ContentElement.IsMouseCaptured
- uid: System.Windows.ContentElement.IsMouseCapturedChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCapturedChanged
  nameWithType: ContentElement.IsMouseCapturedChanged
  fullName: System.Windows.ContentElement.IsMouseCapturedChanged
- uid: System.Windows.ContentElement.IsMouseCapturedProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCapturedProperty
  nameWithType: ContentElement.IsMouseCapturedProperty
  fullName: System.Windows.ContentElement.IsMouseCapturedProperty
- uid: System.Windows.ContentElement.IsMouseCaptureWithin
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: ContentElement.IsMouseCaptureWithin
  fullName: System.Windows.ContentElement.IsMouseCaptureWithin
- uid: System.Windows.ContentElement.IsMouseCaptureWithinChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptureWithinChanged
  nameWithType: ContentElement.IsMouseCaptureWithinChanged
  fullName: System.Windows.ContentElement.IsMouseCaptureWithinChanged
- uid: System.Windows.ContentElement.IsMouseCaptureWithinProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptureWithinProperty
  nameWithType: ContentElement.IsMouseCaptureWithinProperty
  fullName: System.Windows.ContentElement.IsMouseCaptureWithinProperty
- uid: System.Windows.ContentElement.IsMouseDirectlyOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: ContentElement.IsMouseDirectlyOver
  fullName: System.Windows.ContentElement.IsMouseDirectlyOver
- uid: System.Windows.ContentElement.IsMouseDirectlyOverChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseDirectlyOverChanged
  nameWithType: ContentElement.IsMouseDirectlyOverChanged
  fullName: System.Windows.ContentElement.IsMouseDirectlyOverChanged
- uid: System.Windows.ContentElement.IsMouseDirectlyOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseDirectlyOverProperty
  nameWithType: ContentElement.IsMouseDirectlyOverProperty
  fullName: System.Windows.ContentElement.IsMouseDirectlyOverProperty
- uid: System.Windows.ContentElement.IsMouseOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseOver
  nameWithType: ContentElement.IsMouseOver
  fullName: System.Windows.ContentElement.IsMouseOver
- uid: System.Windows.ContentElement.IsMouseOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseOverProperty
  nameWithType: ContentElement.IsMouseOverProperty
  fullName: System.Windows.ContentElement.IsMouseOverProperty
- uid: System.Windows.ContentElement.IsStylusCaptured
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptured
  nameWithType: ContentElement.IsStylusCaptured
  fullName: System.Windows.ContentElement.IsStylusCaptured
- uid: System.Windows.ContentElement.IsStylusCapturedChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCapturedChanged
  nameWithType: ContentElement.IsStylusCapturedChanged
  fullName: System.Windows.ContentElement.IsStylusCapturedChanged
- uid: System.Windows.ContentElement.IsStylusCapturedProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCapturedProperty
  nameWithType: ContentElement.IsStylusCapturedProperty
  fullName: System.Windows.ContentElement.IsStylusCapturedProperty
- uid: System.Windows.ContentElement.IsStylusCaptureWithin
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: ContentElement.IsStylusCaptureWithin
  fullName: System.Windows.ContentElement.IsStylusCaptureWithin
- uid: System.Windows.ContentElement.IsStylusCaptureWithinChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptureWithinChanged
  nameWithType: ContentElement.IsStylusCaptureWithinChanged
  fullName: System.Windows.ContentElement.IsStylusCaptureWithinChanged
- uid: System.Windows.ContentElement.IsStylusCaptureWithinProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptureWithinProperty
  nameWithType: ContentElement.IsStylusCaptureWithinProperty
  fullName: System.Windows.ContentElement.IsStylusCaptureWithinProperty
- uid: System.Windows.ContentElement.IsStylusDirectlyOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: ContentElement.IsStylusDirectlyOver
  fullName: System.Windows.ContentElement.IsStylusDirectlyOver
- uid: System.Windows.ContentElement.IsStylusDirectlyOverChanged
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusDirectlyOverChanged
  nameWithType: ContentElement.IsStylusDirectlyOverChanged
  fullName: System.Windows.ContentElement.IsStylusDirectlyOverChanged
- uid: System.Windows.ContentElement.IsStylusDirectlyOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusDirectlyOverProperty
  nameWithType: ContentElement.IsStylusDirectlyOverProperty
  fullName: System.Windows.ContentElement.IsStylusDirectlyOverProperty
- uid: System.Windows.ContentElement.IsStylusOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusOver
  nameWithType: ContentElement.IsStylusOver
  fullName: System.Windows.ContentElement.IsStylusOver
- uid: System.Windows.ContentElement.IsStylusOverProperty
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusOverProperty
  nameWithType: ContentElement.IsStylusOverProperty
  fullName: System.Windows.ContentElement.IsStylusOverProperty
- uid: System.Windows.ContentElement.KeyDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: KeyDown
  nameWithType: ContentElement.KeyDown
  fullName: System.Windows.ContentElement.KeyDown
- uid: System.Windows.Input.KeyEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Input.KeyEventHandler
- uid: System.Windows.ContentElement.KeyDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: KeyDownEvent
  nameWithType: ContentElement.KeyDownEvent
  fullName: System.Windows.ContentElement.KeyDownEvent
- uid: System.Windows.ContentElement.KeyUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: KeyUp
  nameWithType: ContentElement.KeyUp
  fullName: System.Windows.ContentElement.KeyUp
- uid: System.Windows.ContentElement.KeyUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: KeyUpEvent
  nameWithType: ContentElement.KeyUpEvent
  fullName: System.Windows.ContentElement.KeyUpEvent
- uid: System.Windows.ContentElement.LostFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostFocus
  nameWithType: ContentElement.LostFocus
  fullName: System.Windows.ContentElement.LostFocus
- uid: System.Windows.ContentElement.LostFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostFocusEvent
  nameWithType: ContentElement.LostFocusEvent
  fullName: System.Windows.ContentElement.LostFocusEvent
- uid: System.Windows.ContentElement.LostKeyboardFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostKeyboardFocus
  nameWithType: ContentElement.LostKeyboardFocus
  fullName: System.Windows.ContentElement.LostKeyboardFocus
- uid: System.Windows.ContentElement.LostKeyboardFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostKeyboardFocusEvent
  nameWithType: ContentElement.LostKeyboardFocusEvent
  fullName: System.Windows.ContentElement.LostKeyboardFocusEvent
- uid: System.Windows.ContentElement.LostMouseCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostMouseCapture
  nameWithType: ContentElement.LostMouseCapture
  fullName: System.Windows.ContentElement.LostMouseCapture
- uid: System.Windows.ContentElement.LostMouseCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostMouseCaptureEvent
  nameWithType: ContentElement.LostMouseCaptureEvent
  fullName: System.Windows.ContentElement.LostMouseCaptureEvent
- uid: System.Windows.ContentElement.LostStylusCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostStylusCapture
  nameWithType: ContentElement.LostStylusCapture
  fullName: System.Windows.ContentElement.LostStylusCapture
- uid: System.Windows.ContentElement.LostStylusCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostStylusCaptureEvent
  nameWithType: ContentElement.LostStylusCaptureEvent
  fullName: System.Windows.ContentElement.LostStylusCaptureEvent
- uid: System.Windows.ContentElement.LostTouchCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostTouchCapture
  nameWithType: ContentElement.LostTouchCapture
  fullName: System.Windows.ContentElement.LostTouchCapture
- uid: System.Windows.ContentElement.LostTouchCaptureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: LostTouchCaptureEvent
  nameWithType: ContentElement.LostTouchCaptureEvent
  fullName: System.Windows.ContentElement.LostTouchCaptureEvent
- uid: System.Windows.ContentElement.MouseDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseDown
  nameWithType: ContentElement.MouseDown
  fullName: System.Windows.ContentElement.MouseDown
- uid: System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.ContentElement.MouseDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseDownEvent
  nameWithType: ContentElement.MouseDownEvent
  fullName: System.Windows.ContentElement.MouseDownEvent
- uid: System.Windows.ContentElement.MouseEnter
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseEnter
  nameWithType: ContentElement.MouseEnter
  fullName: System.Windows.ContentElement.MouseEnter
- uid: System.Windows.ContentElement.MouseEnterEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseEnterEvent
  nameWithType: ContentElement.MouseEnterEvent
  fullName: System.Windows.ContentElement.MouseEnterEvent
- uid: System.Windows.ContentElement.MouseLeave
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeave
  nameWithType: ContentElement.MouseLeave
  fullName: System.Windows.ContentElement.MouseLeave
- uid: System.Windows.ContentElement.MouseLeaveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeaveEvent
  nameWithType: ContentElement.MouseLeaveEvent
  fullName: System.Windows.ContentElement.MouseLeaveEvent
- uid: System.Windows.ContentElement.MouseLeftButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeftButtonDown
  nameWithType: ContentElement.MouseLeftButtonDown
  fullName: System.Windows.ContentElement.MouseLeftButtonDown
- uid: System.Windows.ContentElement.MouseLeftButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeftButtonDownEvent
  nameWithType: ContentElement.MouseLeftButtonDownEvent
  fullName: System.Windows.ContentElement.MouseLeftButtonDownEvent
- uid: System.Windows.ContentElement.MouseLeftButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeftButtonUp
  nameWithType: ContentElement.MouseLeftButtonUp
  fullName: System.Windows.ContentElement.MouseLeftButtonUp
- uid: System.Windows.ContentElement.MouseLeftButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseLeftButtonUpEvent
  nameWithType: ContentElement.MouseLeftButtonUpEvent
  fullName: System.Windows.ContentElement.MouseLeftButtonUpEvent
- uid: System.Windows.ContentElement.MouseMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseMove
  nameWithType: ContentElement.MouseMove
  fullName: System.Windows.ContentElement.MouseMove
- uid: System.Windows.ContentElement.MouseMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseMoveEvent
  nameWithType: ContentElement.MouseMoveEvent
  fullName: System.Windows.ContentElement.MouseMoveEvent
- uid: System.Windows.ContentElement.MouseRightButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseRightButtonDown
  nameWithType: ContentElement.MouseRightButtonDown
  fullName: System.Windows.ContentElement.MouseRightButtonDown
- uid: System.Windows.ContentElement.MouseRightButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseRightButtonDownEvent
  nameWithType: ContentElement.MouseRightButtonDownEvent
  fullName: System.Windows.ContentElement.MouseRightButtonDownEvent
- uid: System.Windows.ContentElement.MouseRightButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseRightButtonUp
  nameWithType: ContentElement.MouseRightButtonUp
  fullName: System.Windows.ContentElement.MouseRightButtonUp
- uid: System.Windows.ContentElement.MouseRightButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseRightButtonUpEvent
  nameWithType: ContentElement.MouseRightButtonUpEvent
  fullName: System.Windows.ContentElement.MouseRightButtonUpEvent
- uid: System.Windows.ContentElement.MouseUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseUp
  nameWithType: ContentElement.MouseUp
  fullName: System.Windows.ContentElement.MouseUp
- uid: System.Windows.ContentElement.MouseUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseUpEvent
  nameWithType: ContentElement.MouseUpEvent
  fullName: System.Windows.ContentElement.MouseUpEvent
- uid: System.Windows.ContentElement.MouseWheel
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseWheel
  nameWithType: ContentElement.MouseWheel
  fullName: System.Windows.ContentElement.MouseWheel
- uid: System.Windows.Input.MouseWheelEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventHandler
  nameWithType: MouseWheelEventHandler
  fullName: System.Windows.Input.MouseWheelEventHandler
- uid: System.Windows.ContentElement.MouseWheelEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: MouseWheelEvent
  nameWithType: ContentElement.MouseWheelEvent
  fullName: System.Windows.ContentElement.MouseWheelEvent
- uid: System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.ContentElement
  isExternal: false
  name: MoveFocus(TraversalRequest)
  nameWithType: ContentElement.MoveFocus(TraversalRequest)
  fullName: System.Windows.ContentElement.MoveFocus(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.ContentElement.OnCreateAutomationPeer
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: ContentElement.OnCreateAutomationPeer()
  fullName: System.Windows.ContentElement.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: ContentElement.OnDragEnter(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragEnter(DragEventArgs)
- uid: System.Windows.DragEventArgs
  parent: System.Windows
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
- uid: System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragLeave(DragEventArgs)
  nameWithType: ContentElement.OnDragLeave(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragLeave(DragEventArgs)
- uid: System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: ContentElement.OnDragOver(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDragOver(DragEventArgs)
- uid: System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDrop(DragEventArgs)
  nameWithType: ContentElement.OnDrop(DragEventArgs)
  fullName: System.Windows.ContentElement.OnDrop(DragEventArgs)
- uid: System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.ContentElement.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.GiveFeedbackEventArgs
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.GiveFeedbackEventArgs
- uid: System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: ContentElement.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.ContentElement.OnGotFocus(RoutedEventArgs)
- uid: System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.Input.KeyboardFocusChangedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventArgs
  nameWithType: KeyboardFocusChangedEventArgs
  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs
- uid: System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: ContentElement.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnGotMouseCapture(MouseEventArgs)
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: ContentElement.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnGotStylusCapture(StylusEventArgs)
- uid: System.Windows.Input.StylusEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventArgs
  nameWithType: StylusEventArgs
  fullName: System.Windows.Input.StylusEventArgs
- uid: System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: ContentElement.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnGotTouchCapture(TouchEventArgs)
- uid: System.Windows.Input.TouchEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TouchEventArgs
  nameWithType: TouchEventArgs
  fullName: System.Windows.Input.TouchEventArgs
- uid: System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: ContentElement.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: ContentElement.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnKeyUp(KeyEventArgs)
- uid: System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: ContentElement.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.ContentElement.OnLostFocus(RoutedEventArgs)
- uid: System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: ContentElement.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnLostMouseCapture(MouseEventArgs)
- uid: System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: ContentElement.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnLostStylusCapture(StylusEventArgs)
- uid: System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: ContentElement.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnLostTouchCapture(TouchEventArgs)
- uid: System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: ContentElement.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseEnter(MouseEventArgs)
- uid: System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: ContentElement.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeave(MouseEventArgs)
- uid: System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: ContentElement.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnMouseMove(MouseEventArgs)
- uid: System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnMouseUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: ContentElement.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.ContentElement.OnMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.Input.MouseWheelEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
- uid: System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragEnter(DragEventArgs)
- uid: System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragLeave(DragEventArgs)
- uid: System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDragOver(DragEventArgs)
- uid: System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: ContentElement.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewDrop(DragEventArgs)
- uid: System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: ContentElement.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewKeyDown(KeyEventArgs)
- uid: System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: ContentElement.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewKeyUp(KeyEventArgs)
- uid: System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseDown(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: ContentElement.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseMove(MouseEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseUp(MouseButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.QueryContinueDragEventArgs
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.QueryContinueDragEventArgs
- uid: System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.Input.StylusButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventArgs
  nameWithType: StylusButtonEventArgs
  fullName: System.Windows.Input.StylusButtonEventArgs
- uid: System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: ContentElement.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusDown(StylusDownEventArgs)
- uid: System.Windows.Input.StylusDownEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventArgs
  nameWithType: StylusDownEventArgs
  fullName: System.Windows.Input.StylusDownEventArgs
- uid: System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusInAirMove(StylusEventArgs)
- uid: System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusInRange(StylusEventArgs)
- uid: System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusMove(StylusEventArgs)
- uid: System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.Input.StylusSystemGestureEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventArgs
  nameWithType: StylusSystemGestureEventArgs
  fullName: System.Windows.Input.StylusSystemGestureEventArgs
- uid: System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: ContentElement.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewStylusUp(StylusEventArgs)
- uid: System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: ContentElement.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTextInput(TextCompositionEventArgs)
- uid: System.Windows.Input.TextCompositionEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventArgs
  nameWithType: TextCompositionEventArgs
  fullName: System.Windows.Input.TextCompositionEventArgs
- uid: System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchDown(TouchEventArgs)
- uid: System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchMove(TouchEventArgs)
- uid: System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: ContentElement.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnPreviewTouchUp(TouchEventArgs)
- uid: System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.ContentElement.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: ContentElement.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.ContentElement.OnQueryCursor(QueryCursorEventArgs)
- uid: System.Windows.Input.QueryCursorEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventArgs
  nameWithType: QueryCursorEventArgs
  fullName: System.Windows.Input.QueryCursorEventArgs
- uid: System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: ContentElement.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: ContentElement.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.ContentElement.OnStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: ContentElement.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.ContentElement.OnStylusDown(StylusDownEventArgs)
- uid: System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: ContentElement.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusEnter(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: ContentElement.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusInAirMove(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: ContentElement.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusInRange(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: ContentElement.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusLeave(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusMove(StylusEventArgs)
  nameWithType: ContentElement.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusMove(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: ContentElement.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.ContentElement.OnStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusUp(StylusEventArgs)
  nameWithType: ContentElement.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.ContentElement.OnStylusUp(StylusEventArgs)
- uid: System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: ContentElement.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.ContentElement.OnTextInput(TextCompositionEventArgs)
- uid: System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchDown(TouchEventArgs)
  nameWithType: ContentElement.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchDown(TouchEventArgs)
- uid: System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: ContentElement.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchEnter(TouchEventArgs)
- uid: System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: ContentElement.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchLeave(TouchEventArgs)
- uid: System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchMove(TouchEventArgs)
  nameWithType: ContentElement.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchMove(TouchEventArgs)
- uid: System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchUp(TouchEventArgs)
  nameWithType: ContentElement.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.ContentElement.OnTouchUp(TouchEventArgs)
- uid: System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.ContentElement
  isExternal: false
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: ContentElement.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.ContentElement.PredictFocus(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.ContentElement.PreviewDragEnter
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragEnter
  nameWithType: ContentElement.PreviewDragEnter
  fullName: System.Windows.ContentElement.PreviewDragEnter
- uid: System.Windows.ContentElement.PreviewDragEnterEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragEnterEvent
  nameWithType: ContentElement.PreviewDragEnterEvent
  fullName: System.Windows.ContentElement.PreviewDragEnterEvent
- uid: System.Windows.ContentElement.PreviewDragLeave
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragLeave
  nameWithType: ContentElement.PreviewDragLeave
  fullName: System.Windows.ContentElement.PreviewDragLeave
- uid: System.Windows.ContentElement.PreviewDragLeaveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragLeaveEvent
  nameWithType: ContentElement.PreviewDragLeaveEvent
  fullName: System.Windows.ContentElement.PreviewDragLeaveEvent
- uid: System.Windows.ContentElement.PreviewDragOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragOver
  nameWithType: ContentElement.PreviewDragOver
  fullName: System.Windows.ContentElement.PreviewDragOver
- uid: System.Windows.ContentElement.PreviewDragOverEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDragOverEvent
  nameWithType: ContentElement.PreviewDragOverEvent
  fullName: System.Windows.ContentElement.PreviewDragOverEvent
- uid: System.Windows.ContentElement.PreviewDrop
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDrop
  nameWithType: ContentElement.PreviewDrop
  fullName: System.Windows.ContentElement.PreviewDrop
- uid: System.Windows.ContentElement.PreviewDropEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewDropEvent
  nameWithType: ContentElement.PreviewDropEvent
  fullName: System.Windows.ContentElement.PreviewDropEvent
- uid: System.Windows.ContentElement.PreviewGiveFeedback
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewGiveFeedback
  nameWithType: ContentElement.PreviewGiveFeedback
  fullName: System.Windows.ContentElement.PreviewGiveFeedback
- uid: System.Windows.ContentElement.PreviewGiveFeedbackEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewGiveFeedbackEvent
  nameWithType: ContentElement.PreviewGiveFeedbackEvent
  fullName: System.Windows.ContentElement.PreviewGiveFeedbackEvent
- uid: System.Windows.ContentElement.PreviewGotKeyboardFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewGotKeyboardFocus
  nameWithType: ContentElement.PreviewGotKeyboardFocus
  fullName: System.Windows.ContentElement.PreviewGotKeyboardFocus
- uid: System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewGotKeyboardFocusEvent
  nameWithType: ContentElement.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
- uid: System.Windows.ContentElement.PreviewKeyDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewKeyDown
  nameWithType: ContentElement.PreviewKeyDown
  fullName: System.Windows.ContentElement.PreviewKeyDown
- uid: System.Windows.ContentElement.PreviewKeyDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewKeyDownEvent
  nameWithType: ContentElement.PreviewKeyDownEvent
  fullName: System.Windows.ContentElement.PreviewKeyDownEvent
- uid: System.Windows.ContentElement.PreviewKeyUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewKeyUp
  nameWithType: ContentElement.PreviewKeyUp
  fullName: System.Windows.ContentElement.PreviewKeyUp
- uid: System.Windows.ContentElement.PreviewKeyUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewKeyUpEvent
  nameWithType: ContentElement.PreviewKeyUpEvent
  fullName: System.Windows.ContentElement.PreviewKeyUpEvent
- uid: System.Windows.ContentElement.PreviewLostKeyboardFocus
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewLostKeyboardFocus
  nameWithType: ContentElement.PreviewLostKeyboardFocus
  fullName: System.Windows.ContentElement.PreviewLostKeyboardFocus
- uid: System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewLostKeyboardFocusEvent
  nameWithType: ContentElement.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
- uid: System.Windows.ContentElement.PreviewMouseDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseDown
  nameWithType: ContentElement.PreviewMouseDown
  fullName: System.Windows.ContentElement.PreviewMouseDown
- uid: System.Windows.ContentElement.PreviewMouseDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseDownEvent
  nameWithType: ContentElement.PreviewMouseDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseDownEvent
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseLeftButtonDown
  nameWithType: ContentElement.PreviewMouseLeftButtonDown
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonDown
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: ContentElement.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseLeftButtonUp
  nameWithType: ContentElement.PreviewMouseLeftButtonUp
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonUp
- uid: System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: ContentElement.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
- uid: System.Windows.ContentElement.PreviewMouseMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseMove
  nameWithType: ContentElement.PreviewMouseMove
  fullName: System.Windows.ContentElement.PreviewMouseMove
- uid: System.Windows.ContentElement.PreviewMouseMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseMoveEvent
  nameWithType: ContentElement.PreviewMouseMoveEvent
  fullName: System.Windows.ContentElement.PreviewMouseMoveEvent
- uid: System.Windows.ContentElement.PreviewMouseRightButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseRightButtonDown
  nameWithType: ContentElement.PreviewMouseRightButtonDown
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonDown
- uid: System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseRightButtonDownEvent
  nameWithType: ContentElement.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
- uid: System.Windows.ContentElement.PreviewMouseRightButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseRightButtonUp
  nameWithType: ContentElement.PreviewMouseRightButtonUp
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonUp
- uid: System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseRightButtonUpEvent
  nameWithType: ContentElement.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
- uid: System.Windows.ContentElement.PreviewMouseUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseUp
  nameWithType: ContentElement.PreviewMouseUp
  fullName: System.Windows.ContentElement.PreviewMouseUp
- uid: System.Windows.ContentElement.PreviewMouseUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseUpEvent
  nameWithType: ContentElement.PreviewMouseUpEvent
  fullName: System.Windows.ContentElement.PreviewMouseUpEvent
- uid: System.Windows.ContentElement.PreviewMouseWheel
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseWheel
  nameWithType: ContentElement.PreviewMouseWheel
  fullName: System.Windows.ContentElement.PreviewMouseWheel
- uid: System.Windows.ContentElement.PreviewMouseWheelEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewMouseWheelEvent
  nameWithType: ContentElement.PreviewMouseWheelEvent
  fullName: System.Windows.ContentElement.PreviewMouseWheelEvent
- uid: System.Windows.ContentElement.PreviewQueryContinueDrag
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewQueryContinueDrag
  nameWithType: ContentElement.PreviewQueryContinueDrag
  fullName: System.Windows.ContentElement.PreviewQueryContinueDrag
- uid: System.Windows.QueryContinueDragEventHandler
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.QueryContinueDragEventHandler
- uid: System.Windows.ContentElement.PreviewQueryContinueDragEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewQueryContinueDragEvent
  nameWithType: ContentElement.PreviewQueryContinueDragEvent
  fullName: System.Windows.ContentElement.PreviewQueryContinueDragEvent
- uid: System.Windows.ContentElement.PreviewStylusButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusButtonDown
  nameWithType: ContentElement.PreviewStylusButtonDown
  fullName: System.Windows.ContentElement.PreviewStylusButtonDown
- uid: System.Windows.Input.StylusButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventHandler
  nameWithType: StylusButtonEventHandler
  fullName: System.Windows.Input.StylusButtonEventHandler
- uid: System.Windows.ContentElement.PreviewStylusButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusButtonDownEvent
  nameWithType: ContentElement.PreviewStylusButtonDownEvent
  fullName: System.Windows.ContentElement.PreviewStylusButtonDownEvent
- uid: System.Windows.ContentElement.PreviewStylusButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusButtonUp
  nameWithType: ContentElement.PreviewStylusButtonUp
  fullName: System.Windows.ContentElement.PreviewStylusButtonUp
- uid: System.Windows.ContentElement.PreviewStylusButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusButtonUpEvent
  nameWithType: ContentElement.PreviewStylusButtonUpEvent
  fullName: System.Windows.ContentElement.PreviewStylusButtonUpEvent
- uid: System.Windows.ContentElement.PreviewStylusDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusDown
  nameWithType: ContentElement.PreviewStylusDown
  fullName: System.Windows.ContentElement.PreviewStylusDown
- uid: System.Windows.Input.StylusDownEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventHandler
  nameWithType: StylusDownEventHandler
  fullName: System.Windows.Input.StylusDownEventHandler
- uid: System.Windows.ContentElement.PreviewStylusDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusDownEvent
  nameWithType: ContentElement.PreviewStylusDownEvent
  fullName: System.Windows.ContentElement.PreviewStylusDownEvent
- uid: System.Windows.ContentElement.PreviewStylusInAirMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusInAirMove
  nameWithType: ContentElement.PreviewStylusInAirMove
  fullName: System.Windows.ContentElement.PreviewStylusInAirMove
- uid: System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusInAirMoveEvent
  nameWithType: ContentElement.PreviewStylusInAirMoveEvent
  fullName: System.Windows.ContentElement.PreviewStylusInAirMoveEvent
- uid: System.Windows.ContentElement.PreviewStylusInRange
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusInRange
  nameWithType: ContentElement.PreviewStylusInRange
  fullName: System.Windows.ContentElement.PreviewStylusInRange
- uid: System.Windows.ContentElement.PreviewStylusInRangeEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusInRangeEvent
  nameWithType: ContentElement.PreviewStylusInRangeEvent
  fullName: System.Windows.ContentElement.PreviewStylusInRangeEvent
- uid: System.Windows.ContentElement.PreviewStylusMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusMove
  nameWithType: ContentElement.PreviewStylusMove
  fullName: System.Windows.ContentElement.PreviewStylusMove
- uid: System.Windows.ContentElement.PreviewStylusMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusMoveEvent
  nameWithType: ContentElement.PreviewStylusMoveEvent
  fullName: System.Windows.ContentElement.PreviewStylusMoveEvent
- uid: System.Windows.ContentElement.PreviewStylusOutOfRange
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusOutOfRange
  nameWithType: ContentElement.PreviewStylusOutOfRange
  fullName: System.Windows.ContentElement.PreviewStylusOutOfRange
- uid: System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusOutOfRangeEvent
  nameWithType: ContentElement.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
- uid: System.Windows.ContentElement.PreviewStylusSystemGesture
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusSystemGesture
  nameWithType: ContentElement.PreviewStylusSystemGesture
  fullName: System.Windows.ContentElement.PreviewStylusSystemGesture
- uid: System.Windows.Input.StylusSystemGestureEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventHandler
  nameWithType: StylusSystemGestureEventHandler
  fullName: System.Windows.Input.StylusSystemGestureEventHandler
- uid: System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusSystemGestureEvent
  nameWithType: ContentElement.PreviewStylusSystemGestureEvent
  fullName: System.Windows.ContentElement.PreviewStylusSystemGestureEvent
- uid: System.Windows.ContentElement.PreviewStylusUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusUp
  nameWithType: ContentElement.PreviewStylusUp
  fullName: System.Windows.ContentElement.PreviewStylusUp
- uid: System.Windows.ContentElement.PreviewStylusUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewStylusUpEvent
  nameWithType: ContentElement.PreviewStylusUpEvent
  fullName: System.Windows.ContentElement.PreviewStylusUpEvent
- uid: System.Windows.ContentElement.PreviewTextInput
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTextInput
  nameWithType: ContentElement.PreviewTextInput
  fullName: System.Windows.ContentElement.PreviewTextInput
- uid: System.Windows.Input.TextCompositionEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventHandler
  nameWithType: TextCompositionEventHandler
  fullName: System.Windows.Input.TextCompositionEventHandler
- uid: System.Windows.ContentElement.PreviewTextInputEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTextInputEvent
  nameWithType: ContentElement.PreviewTextInputEvent
  fullName: System.Windows.ContentElement.PreviewTextInputEvent
- uid: System.Windows.ContentElement.PreviewTouchDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchDown
  nameWithType: ContentElement.PreviewTouchDown
  fullName: System.Windows.ContentElement.PreviewTouchDown
- uid: System.Windows.ContentElement.PreviewTouchDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchDownEvent
  nameWithType: ContentElement.PreviewTouchDownEvent
  fullName: System.Windows.ContentElement.PreviewTouchDownEvent
- uid: System.Windows.ContentElement.PreviewTouchMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchMove
  nameWithType: ContentElement.PreviewTouchMove
  fullName: System.Windows.ContentElement.PreviewTouchMove
- uid: System.Windows.ContentElement.PreviewTouchMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchMoveEvent
  nameWithType: ContentElement.PreviewTouchMoveEvent
  fullName: System.Windows.ContentElement.PreviewTouchMoveEvent
- uid: System.Windows.ContentElement.PreviewTouchUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchUp
  nameWithType: ContentElement.PreviewTouchUp
  fullName: System.Windows.ContentElement.PreviewTouchUp
- uid: System.Windows.ContentElement.PreviewTouchUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: PreviewTouchUpEvent
  nameWithType: ContentElement.PreviewTouchUpEvent
  fullName: System.Windows.ContentElement.PreviewTouchUpEvent
- uid: System.Windows.ContentElement.QueryContinueDrag
  parent: System.Windows.ContentElement
  isExternal: false
  name: QueryContinueDrag
  nameWithType: ContentElement.QueryContinueDrag
  fullName: System.Windows.ContentElement.QueryContinueDrag
- uid: System.Windows.ContentElement.QueryContinueDragEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: QueryContinueDragEvent
  nameWithType: ContentElement.QueryContinueDragEvent
  fullName: System.Windows.ContentElement.QueryContinueDragEvent
- uid: System.Windows.ContentElement.QueryCursor
  parent: System.Windows.ContentElement
  isExternal: false
  name: QueryCursor
  nameWithType: ContentElement.QueryCursor
  fullName: System.Windows.ContentElement.QueryCursor
- uid: System.Windows.Input.QueryCursorEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventHandler
  nameWithType: QueryCursorEventHandler
  fullName: System.Windows.Input.QueryCursorEventHandler
- uid: System.Windows.ContentElement.QueryCursorEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: QueryCursorEvent
  nameWithType: ContentElement.QueryCursorEvent
  fullName: System.Windows.ContentElement.QueryCursorEvent
- uid: System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.ContentElement
  isExternal: false
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: ContentElement.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.ContentElement.RaiseEvent(RoutedEventArgs)
- uid: System.Windows.ContentElement.ReleaseAllTouchCaptures
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseAllTouchCaptures()
  nameWithType: ContentElement.ReleaseAllTouchCaptures()
  fullName: System.Windows.ContentElement.ReleaseAllTouchCaptures()
- uid: System.Windows.ContentElement.ReleaseMouseCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseMouseCapture()
  nameWithType: ContentElement.ReleaseMouseCapture()
  fullName: System.Windows.ContentElement.ReleaseMouseCapture()
- uid: System.Windows.ContentElement.ReleaseStylusCapture
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseStylusCapture()
  nameWithType: ContentElement.ReleaseStylusCapture()
  fullName: System.Windows.ContentElement.ReleaseStylusCapture()
- uid: System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: ContentElement.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.ContentElement.ReleaseTouchCapture(TouchDevice)
- uid: System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.ContentElement
  isExternal: false
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: ContentElement.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.ContentElement.RemoveHandler(RoutedEvent,Delegate)
- uid: System.Windows.ContentElement.ShouldSerializeCommandBindings
  parent: System.Windows.ContentElement
  isExternal: false
  name: ShouldSerializeCommandBindings()
  nameWithType: ContentElement.ShouldSerializeCommandBindings()
  fullName: System.Windows.ContentElement.ShouldSerializeCommandBindings()
- uid: System.Windows.ContentElement.ShouldSerializeInputBindings
  parent: System.Windows.ContentElement
  isExternal: false
  name: ShouldSerializeInputBindings()
  nameWithType: ContentElement.ShouldSerializeInputBindings()
  fullName: System.Windows.ContentElement.ShouldSerializeInputBindings()
- uid: System.Windows.ContentElement.StylusButtonDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusButtonDown
  nameWithType: ContentElement.StylusButtonDown
  fullName: System.Windows.ContentElement.StylusButtonDown
- uid: System.Windows.ContentElement.StylusButtonDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusButtonDownEvent
  nameWithType: ContentElement.StylusButtonDownEvent
  fullName: System.Windows.ContentElement.StylusButtonDownEvent
- uid: System.Windows.ContentElement.StylusButtonUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusButtonUp
  nameWithType: ContentElement.StylusButtonUp
  fullName: System.Windows.ContentElement.StylusButtonUp
- uid: System.Windows.ContentElement.StylusButtonUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusButtonUpEvent
  nameWithType: ContentElement.StylusButtonUpEvent
  fullName: System.Windows.ContentElement.StylusButtonUpEvent
- uid: System.Windows.ContentElement.StylusDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusDown
  nameWithType: ContentElement.StylusDown
  fullName: System.Windows.ContentElement.StylusDown
- uid: System.Windows.ContentElement.StylusDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusDownEvent
  nameWithType: ContentElement.StylusDownEvent
  fullName: System.Windows.ContentElement.StylusDownEvent
- uid: System.Windows.ContentElement.StylusEnter
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusEnter
  nameWithType: ContentElement.StylusEnter
  fullName: System.Windows.ContentElement.StylusEnter
- uid: System.Windows.ContentElement.StylusEnterEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusEnterEvent
  nameWithType: ContentElement.StylusEnterEvent
  fullName: System.Windows.ContentElement.StylusEnterEvent
- uid: System.Windows.ContentElement.StylusInAirMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusInAirMove
  nameWithType: ContentElement.StylusInAirMove
  fullName: System.Windows.ContentElement.StylusInAirMove
- uid: System.Windows.ContentElement.StylusInAirMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusInAirMoveEvent
  nameWithType: ContentElement.StylusInAirMoveEvent
  fullName: System.Windows.ContentElement.StylusInAirMoveEvent
- uid: System.Windows.ContentElement.StylusInRange
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusInRange
  nameWithType: ContentElement.StylusInRange
  fullName: System.Windows.ContentElement.StylusInRange
- uid: System.Windows.ContentElement.StylusInRangeEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusInRangeEvent
  nameWithType: ContentElement.StylusInRangeEvent
  fullName: System.Windows.ContentElement.StylusInRangeEvent
- uid: System.Windows.ContentElement.StylusLeave
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusLeave
  nameWithType: ContentElement.StylusLeave
  fullName: System.Windows.ContentElement.StylusLeave
- uid: System.Windows.ContentElement.StylusLeaveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusLeaveEvent
  nameWithType: ContentElement.StylusLeaveEvent
  fullName: System.Windows.ContentElement.StylusLeaveEvent
- uid: System.Windows.ContentElement.StylusMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusMove
  nameWithType: ContentElement.StylusMove
  fullName: System.Windows.ContentElement.StylusMove
- uid: System.Windows.ContentElement.StylusMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusMoveEvent
  nameWithType: ContentElement.StylusMoveEvent
  fullName: System.Windows.ContentElement.StylusMoveEvent
- uid: System.Windows.ContentElement.StylusOutOfRange
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusOutOfRange
  nameWithType: ContentElement.StylusOutOfRange
  fullName: System.Windows.ContentElement.StylusOutOfRange
- uid: System.Windows.ContentElement.StylusOutOfRangeEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusOutOfRangeEvent
  nameWithType: ContentElement.StylusOutOfRangeEvent
  fullName: System.Windows.ContentElement.StylusOutOfRangeEvent
- uid: System.Windows.ContentElement.StylusSystemGesture
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusSystemGesture
  nameWithType: ContentElement.StylusSystemGesture
  fullName: System.Windows.ContentElement.StylusSystemGesture
- uid: System.Windows.ContentElement.StylusSystemGestureEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusSystemGestureEvent
  nameWithType: ContentElement.StylusSystemGestureEvent
  fullName: System.Windows.ContentElement.StylusSystemGestureEvent
- uid: System.Windows.ContentElement.StylusUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusUp
  nameWithType: ContentElement.StylusUp
  fullName: System.Windows.ContentElement.StylusUp
- uid: System.Windows.ContentElement.StylusUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: StylusUpEvent
  nameWithType: ContentElement.StylusUpEvent
  fullName: System.Windows.ContentElement.StylusUpEvent
- uid: System.Windows.ContentElement.TextInput
  parent: System.Windows.ContentElement
  isExternal: false
  name: TextInput
  nameWithType: ContentElement.TextInput
  fullName: System.Windows.ContentElement.TextInput
- uid: System.Windows.ContentElement.TextInputEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TextInputEvent
  nameWithType: ContentElement.TextInputEvent
  fullName: System.Windows.ContentElement.TextInputEvent
- uid: System.Windows.ContentElement.TouchDown
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchDown
  nameWithType: ContentElement.TouchDown
  fullName: System.Windows.ContentElement.TouchDown
- uid: System.Windows.ContentElement.TouchDownEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchDownEvent
  nameWithType: ContentElement.TouchDownEvent
  fullName: System.Windows.ContentElement.TouchDownEvent
- uid: System.Windows.ContentElement.TouchEnter
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchEnter
  nameWithType: ContentElement.TouchEnter
  fullName: System.Windows.ContentElement.TouchEnter
- uid: System.Windows.ContentElement.TouchEnterEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchEnterEvent
  nameWithType: ContentElement.TouchEnterEvent
  fullName: System.Windows.ContentElement.TouchEnterEvent
- uid: System.Windows.ContentElement.TouchesCaptured
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesCaptured
  nameWithType: ContentElement.TouchesCaptured
  fullName: System.Windows.ContentElement.TouchesCaptured
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TouchDevice>
  nameWithType: IEnumerable<TouchDevice>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.TouchDevice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchDevice
    name: TouchDevice
    nameWithType: TouchDevice
    fullName: TouchDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ContentElement.TouchesCapturedWithin
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: ContentElement.TouchesCapturedWithin
  fullName: System.Windows.ContentElement.TouchesCapturedWithin
- uid: System.Windows.ContentElement.TouchesDirectlyOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: ContentElement.TouchesDirectlyOver
  fullName: System.Windows.ContentElement.TouchesDirectlyOver
- uid: System.Windows.ContentElement.TouchesOver
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesOver
  nameWithType: ContentElement.TouchesOver
  fullName: System.Windows.ContentElement.TouchesOver
- uid: System.Windows.ContentElement.TouchLeave
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchLeave
  nameWithType: ContentElement.TouchLeave
  fullName: System.Windows.ContentElement.TouchLeave
- uid: System.Windows.ContentElement.TouchLeaveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchLeaveEvent
  nameWithType: ContentElement.TouchLeaveEvent
  fullName: System.Windows.ContentElement.TouchLeaveEvent
- uid: System.Windows.ContentElement.TouchMove
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchMove
  nameWithType: ContentElement.TouchMove
  fullName: System.Windows.ContentElement.TouchMove
- uid: System.Windows.ContentElement.TouchMoveEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchMoveEvent
  nameWithType: ContentElement.TouchMoveEvent
  fullName: System.Windows.ContentElement.TouchMoveEvent
- uid: System.Windows.ContentElement.TouchUp
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchUp
  nameWithType: ContentElement.TouchUp
  fullName: System.Windows.ContentElement.TouchUp
- uid: System.Windows.ContentElement.TouchUpEvent
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchUpEvent
  nameWithType: ContentElement.TouchUpEvent
  fullName: System.Windows.ContentElement.TouchUpEvent
- uid: System.Windows.ContentElement.#ctor*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ContentElement
  nameWithType: ContentElement.ContentElement
- uid: System.Windows.ContentElement.AddHandler*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AddHandler
  nameWithType: ContentElement.AddHandler
- uid: System.Windows.ContentElement.AddToEventRoute*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AddToEventRoute
  nameWithType: ContentElement.AddToEventRoute
- uid: System.Windows.ContentElement.AllowDrop*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AllowDrop
  nameWithType: ContentElement.AllowDrop
- uid: System.Windows.ContentElement.ApplyAnimationClock*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ApplyAnimationClock
  nameWithType: ContentElement.ApplyAnimationClock
- uid: System.Windows.ContentElement.AreAnyTouchesCaptured*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: ContentElement.AreAnyTouchesCaptured
- uid: System.Windows.ContentElement.AreAnyTouchesCapturedWithin*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: ContentElement.AreAnyTouchesCapturedWithin
- uid: System.Windows.ContentElement.AreAnyTouchesDirectlyOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: ContentElement.AreAnyTouchesDirectlyOver
- uid: System.Windows.ContentElement.AreAnyTouchesOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: ContentElement.AreAnyTouchesOver
- uid: System.Windows.ContentElement.BeginAnimation*
  parent: System.Windows.ContentElement
  isExternal: false
  name: BeginAnimation
  nameWithType: ContentElement.BeginAnimation
- uid: System.Windows.ContentElement.CaptureMouse*
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureMouse
  nameWithType: ContentElement.CaptureMouse
- uid: System.Windows.ContentElement.CaptureStylus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureStylus
  nameWithType: ContentElement.CaptureStylus
- uid: System.Windows.ContentElement.CaptureTouch*
  parent: System.Windows.ContentElement
  isExternal: false
  name: CaptureTouch
  nameWithType: ContentElement.CaptureTouch
- uid: System.Windows.ContentElement.CommandBindings*
  parent: System.Windows.ContentElement
  isExternal: false
  name: CommandBindings
  nameWithType: ContentElement.CommandBindings
- uid: System.Windows.ContentElement.Focus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: Focus
  nameWithType: ContentElement.Focus
- uid: System.Windows.ContentElement.Focusable*
  parent: System.Windows.ContentElement
  isExternal: false
  name: Focusable
  nameWithType: ContentElement.Focusable
- uid: System.Windows.ContentElement.GetAnimationBaseValue*
  parent: System.Windows.ContentElement
  isExternal: false
  name: GetAnimationBaseValue
  nameWithType: ContentElement.GetAnimationBaseValue
- uid: System.Windows.ContentElement.GetUIParentCore*
  parent: System.Windows.ContentElement
  isExternal: false
  name: GetUIParentCore
  nameWithType: ContentElement.GetUIParentCore
- uid: System.Windows.ContentElement.HasAnimatedProperties*
  parent: System.Windows.ContentElement
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: ContentElement.HasAnimatedProperties
- uid: System.Windows.ContentElement.InputBindings*
  parent: System.Windows.ContentElement
  isExternal: false
  name: InputBindings
  nameWithType: ContentElement.InputBindings
- uid: System.Windows.ContentElement.IsEnabled*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabled
  nameWithType: ContentElement.IsEnabled
- uid: System.Windows.ContentElement.IsEnabledCore*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsEnabledCore
  nameWithType: ContentElement.IsEnabledCore
- uid: System.Windows.ContentElement.IsFocused*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsFocused
  nameWithType: ContentElement.IsFocused
- uid: System.Windows.ContentElement.IsInputMethodEnabled*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: ContentElement.IsInputMethodEnabled
- uid: System.Windows.ContentElement.IsKeyboardFocused*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: ContentElement.IsKeyboardFocused
- uid: System.Windows.ContentElement.IsKeyboardFocusWithin*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: ContentElement.IsKeyboardFocusWithin
- uid: System.Windows.ContentElement.IsMouseCaptured*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptured
  nameWithType: ContentElement.IsMouseCaptured
- uid: System.Windows.ContentElement.IsMouseCaptureWithin*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: ContentElement.IsMouseCaptureWithin
- uid: System.Windows.ContentElement.IsMouseDirectlyOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: ContentElement.IsMouseDirectlyOver
- uid: System.Windows.ContentElement.IsMouseOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsMouseOver
  nameWithType: ContentElement.IsMouseOver
- uid: System.Windows.ContentElement.IsStylusCaptured*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptured
  nameWithType: ContentElement.IsStylusCaptured
- uid: System.Windows.ContentElement.IsStylusCaptureWithin*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: ContentElement.IsStylusCaptureWithin
- uid: System.Windows.ContentElement.IsStylusDirectlyOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: ContentElement.IsStylusDirectlyOver
- uid: System.Windows.ContentElement.IsStylusOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: IsStylusOver
  nameWithType: ContentElement.IsStylusOver
- uid: System.Windows.ContentElement.MoveFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: MoveFocus
  nameWithType: ContentElement.MoveFocus
- uid: System.Windows.ContentElement.OnCreateAutomationPeer*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: ContentElement.OnCreateAutomationPeer
- uid: System.Windows.ContentElement.OnDragEnter*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragEnter
  nameWithType: ContentElement.OnDragEnter
- uid: System.Windows.ContentElement.OnDragLeave*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragLeave
  nameWithType: ContentElement.OnDragLeave
- uid: System.Windows.ContentElement.OnDragOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDragOver
  nameWithType: ContentElement.OnDragOver
- uid: System.Windows.ContentElement.OnDrop*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnDrop
  nameWithType: ContentElement.OnDrop
- uid: System.Windows.ContentElement.OnGiveFeedback*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGiveFeedback
  nameWithType: ContentElement.OnGiveFeedback
- uid: System.Windows.ContentElement.OnGotFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotFocus
  nameWithType: ContentElement.OnGotFocus
- uid: System.Windows.ContentElement.OnGotKeyboardFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotKeyboardFocus
  nameWithType: ContentElement.OnGotKeyboardFocus
- uid: System.Windows.ContentElement.OnGotMouseCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotMouseCapture
  nameWithType: ContentElement.OnGotMouseCapture
- uid: System.Windows.ContentElement.OnGotStylusCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotStylusCapture
  nameWithType: ContentElement.OnGotStylusCapture
- uid: System.Windows.ContentElement.OnGotTouchCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnGotTouchCapture
  nameWithType: ContentElement.OnGotTouchCapture
- uid: System.Windows.ContentElement.OnIsKeyboardFocusedChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsKeyboardFocusedChanged
  nameWithType: ContentElement.OnIsKeyboardFocusedChanged
- uid: System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged
  nameWithType: ContentElement.OnIsKeyboardFocusWithinChanged
- uid: System.Windows.ContentElement.OnIsMouseCapturedChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseCapturedChanged
  nameWithType: ContentElement.OnIsMouseCapturedChanged
- uid: System.Windows.ContentElement.OnIsMouseCaptureWithinChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseCaptureWithinChanged
  nameWithType: ContentElement.OnIsMouseCaptureWithinChanged
- uid: System.Windows.ContentElement.OnIsMouseDirectlyOverChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsMouseDirectlyOverChanged
  nameWithType: ContentElement.OnIsMouseDirectlyOverChanged
- uid: System.Windows.ContentElement.OnIsStylusCapturedChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusCapturedChanged
  nameWithType: ContentElement.OnIsStylusCapturedChanged
- uid: System.Windows.ContentElement.OnIsStylusCaptureWithinChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusCaptureWithinChanged
  nameWithType: ContentElement.OnIsStylusCaptureWithinChanged
- uid: System.Windows.ContentElement.OnIsStylusDirectlyOverChanged*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnIsStylusDirectlyOverChanged
  nameWithType: ContentElement.OnIsStylusDirectlyOverChanged
- uid: System.Windows.ContentElement.OnKeyDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnKeyDown
  nameWithType: ContentElement.OnKeyDown
- uid: System.Windows.ContentElement.OnKeyUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnKeyUp
  nameWithType: ContentElement.OnKeyUp
- uid: System.Windows.ContentElement.OnLostFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostFocus
  nameWithType: ContentElement.OnLostFocus
- uid: System.Windows.ContentElement.OnLostKeyboardFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostKeyboardFocus
  nameWithType: ContentElement.OnLostKeyboardFocus
- uid: System.Windows.ContentElement.OnLostMouseCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostMouseCapture
  nameWithType: ContentElement.OnLostMouseCapture
- uid: System.Windows.ContentElement.OnLostStylusCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostStylusCapture
  nameWithType: ContentElement.OnLostStylusCapture
- uid: System.Windows.ContentElement.OnLostTouchCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnLostTouchCapture
  nameWithType: ContentElement.OnLostTouchCapture
- uid: System.Windows.ContentElement.OnMouseDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseDown
  nameWithType: ContentElement.OnMouseDown
- uid: System.Windows.ContentElement.OnMouseEnter*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseEnter
  nameWithType: ContentElement.OnMouseEnter
- uid: System.Windows.ContentElement.OnMouseLeave*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeave
  nameWithType: ContentElement.OnMouseLeave
- uid: System.Windows.ContentElement.OnMouseLeftButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeftButtonDown
  nameWithType: ContentElement.OnMouseLeftButtonDown
- uid: System.Windows.ContentElement.OnMouseLeftButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseLeftButtonUp
  nameWithType: ContentElement.OnMouseLeftButtonUp
- uid: System.Windows.ContentElement.OnMouseMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseMove
  nameWithType: ContentElement.OnMouseMove
- uid: System.Windows.ContentElement.OnMouseRightButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseRightButtonDown
  nameWithType: ContentElement.OnMouseRightButtonDown
- uid: System.Windows.ContentElement.OnMouseRightButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseRightButtonUp
  nameWithType: ContentElement.OnMouseRightButtonUp
- uid: System.Windows.ContentElement.OnMouseUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseUp
  nameWithType: ContentElement.OnMouseUp
- uid: System.Windows.ContentElement.OnMouseWheel*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnMouseWheel
  nameWithType: ContentElement.OnMouseWheel
- uid: System.Windows.ContentElement.OnPreviewDragEnter*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragEnter
  nameWithType: ContentElement.OnPreviewDragEnter
- uid: System.Windows.ContentElement.OnPreviewDragLeave*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragLeave
  nameWithType: ContentElement.OnPreviewDragLeave
- uid: System.Windows.ContentElement.OnPreviewDragOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDragOver
  nameWithType: ContentElement.OnPreviewDragOver
- uid: System.Windows.ContentElement.OnPreviewDrop*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewDrop
  nameWithType: ContentElement.OnPreviewDrop
- uid: System.Windows.ContentElement.OnPreviewGiveFeedback*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewGiveFeedback
  nameWithType: ContentElement.OnPreviewGiveFeedback
- uid: System.Windows.ContentElement.OnPreviewGotKeyboardFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewGotKeyboardFocus
  nameWithType: ContentElement.OnPreviewGotKeyboardFocus
- uid: System.Windows.ContentElement.OnPreviewKeyDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: ContentElement.OnPreviewKeyDown
- uid: System.Windows.ContentElement.OnPreviewKeyUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewKeyUp
  nameWithType: ContentElement.OnPreviewKeyUp
- uid: System.Windows.ContentElement.OnPreviewLostKeyboardFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewLostKeyboardFocus
  nameWithType: ContentElement.OnPreviewLostKeyboardFocus
- uid: System.Windows.ContentElement.OnPreviewMouseDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseDown
  nameWithType: ContentElement.OnPreviewMouseDown
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseLeftButtonDown
  nameWithType: ContentElement.OnPreviewMouseLeftButtonDown
- uid: System.Windows.ContentElement.OnPreviewMouseLeftButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseLeftButtonUp
  nameWithType: ContentElement.OnPreviewMouseLeftButtonUp
- uid: System.Windows.ContentElement.OnPreviewMouseMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseMove
  nameWithType: ContentElement.OnPreviewMouseMove
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseRightButtonDown
  nameWithType: ContentElement.OnPreviewMouseRightButtonDown
- uid: System.Windows.ContentElement.OnPreviewMouseRightButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseRightButtonUp
  nameWithType: ContentElement.OnPreviewMouseRightButtonUp
- uid: System.Windows.ContentElement.OnPreviewMouseUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseUp
  nameWithType: ContentElement.OnPreviewMouseUp
- uid: System.Windows.ContentElement.OnPreviewMouseWheel*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewMouseWheel
  nameWithType: ContentElement.OnPreviewMouseWheel
- uid: System.Windows.ContentElement.OnPreviewQueryContinueDrag*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewQueryContinueDrag
  nameWithType: ContentElement.OnPreviewQueryContinueDrag
- uid: System.Windows.ContentElement.OnPreviewStylusButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusButtonDown
  nameWithType: ContentElement.OnPreviewStylusButtonDown
- uid: System.Windows.ContentElement.OnPreviewStylusButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusButtonUp
  nameWithType: ContentElement.OnPreviewStylusButtonUp
- uid: System.Windows.ContentElement.OnPreviewStylusDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusDown
  nameWithType: ContentElement.OnPreviewStylusDown
- uid: System.Windows.ContentElement.OnPreviewStylusInAirMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusInAirMove
  nameWithType: ContentElement.OnPreviewStylusInAirMove
- uid: System.Windows.ContentElement.OnPreviewStylusInRange*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusInRange
  nameWithType: ContentElement.OnPreviewStylusInRange
- uid: System.Windows.ContentElement.OnPreviewStylusMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusMove
  nameWithType: ContentElement.OnPreviewStylusMove
- uid: System.Windows.ContentElement.OnPreviewStylusOutOfRange*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusOutOfRange
  nameWithType: ContentElement.OnPreviewStylusOutOfRange
- uid: System.Windows.ContentElement.OnPreviewStylusSystemGesture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusSystemGesture
  nameWithType: ContentElement.OnPreviewStylusSystemGesture
- uid: System.Windows.ContentElement.OnPreviewStylusUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewStylusUp
  nameWithType: ContentElement.OnPreviewStylusUp
- uid: System.Windows.ContentElement.OnPreviewTextInput*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTextInput
  nameWithType: ContentElement.OnPreviewTextInput
- uid: System.Windows.ContentElement.OnPreviewTouchDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchDown
  nameWithType: ContentElement.OnPreviewTouchDown
- uid: System.Windows.ContentElement.OnPreviewTouchMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchMove
  nameWithType: ContentElement.OnPreviewTouchMove
- uid: System.Windows.ContentElement.OnPreviewTouchUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnPreviewTouchUp
  nameWithType: ContentElement.OnPreviewTouchUp
- uid: System.Windows.ContentElement.OnQueryContinueDrag*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: ContentElement.OnQueryContinueDrag
- uid: System.Windows.ContentElement.OnQueryCursor*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnQueryCursor
  nameWithType: ContentElement.OnQueryCursor
- uid: System.Windows.ContentElement.OnStylusButtonDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusButtonDown
  nameWithType: ContentElement.OnStylusButtonDown
- uid: System.Windows.ContentElement.OnStylusButtonUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusButtonUp
  nameWithType: ContentElement.OnStylusButtonUp
- uid: System.Windows.ContentElement.OnStylusDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusDown
  nameWithType: ContentElement.OnStylusDown
- uid: System.Windows.ContentElement.OnStylusEnter*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusEnter
  nameWithType: ContentElement.OnStylusEnter
- uid: System.Windows.ContentElement.OnStylusInAirMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusInAirMove
  nameWithType: ContentElement.OnStylusInAirMove
- uid: System.Windows.ContentElement.OnStylusInRange*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusInRange
  nameWithType: ContentElement.OnStylusInRange
- uid: System.Windows.ContentElement.OnStylusLeave*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusLeave
  nameWithType: ContentElement.OnStylusLeave
- uid: System.Windows.ContentElement.OnStylusMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusMove
  nameWithType: ContentElement.OnStylusMove
- uid: System.Windows.ContentElement.OnStylusOutOfRange*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusOutOfRange
  nameWithType: ContentElement.OnStylusOutOfRange
- uid: System.Windows.ContentElement.OnStylusSystemGesture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusSystemGesture
  nameWithType: ContentElement.OnStylusSystemGesture
- uid: System.Windows.ContentElement.OnStylusUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnStylusUp
  nameWithType: ContentElement.OnStylusUp
- uid: System.Windows.ContentElement.OnTextInput*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTextInput
  nameWithType: ContentElement.OnTextInput
- uid: System.Windows.ContentElement.OnTouchDown*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchDown
  nameWithType: ContentElement.OnTouchDown
- uid: System.Windows.ContentElement.OnTouchEnter*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchEnter
  nameWithType: ContentElement.OnTouchEnter
- uid: System.Windows.ContentElement.OnTouchLeave*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchLeave
  nameWithType: ContentElement.OnTouchLeave
- uid: System.Windows.ContentElement.OnTouchMove*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchMove
  nameWithType: ContentElement.OnTouchMove
- uid: System.Windows.ContentElement.OnTouchUp*
  parent: System.Windows.ContentElement
  isExternal: false
  name: OnTouchUp
  nameWithType: ContentElement.OnTouchUp
- uid: System.Windows.ContentElement.PredictFocus*
  parent: System.Windows.ContentElement
  isExternal: false
  name: PredictFocus
  nameWithType: ContentElement.PredictFocus
- uid: System.Windows.ContentElement.RaiseEvent*
  parent: System.Windows.ContentElement
  isExternal: false
  name: RaiseEvent
  nameWithType: ContentElement.RaiseEvent
- uid: System.Windows.ContentElement.ReleaseAllTouchCaptures*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseAllTouchCaptures
  nameWithType: ContentElement.ReleaseAllTouchCaptures
- uid: System.Windows.ContentElement.ReleaseMouseCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseMouseCapture
  nameWithType: ContentElement.ReleaseMouseCapture
- uid: System.Windows.ContentElement.ReleaseStylusCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseStylusCapture
  nameWithType: ContentElement.ReleaseStylusCapture
- uid: System.Windows.ContentElement.ReleaseTouchCapture*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ReleaseTouchCapture
  nameWithType: ContentElement.ReleaseTouchCapture
- uid: System.Windows.ContentElement.RemoveHandler*
  parent: System.Windows.ContentElement
  isExternal: false
  name: RemoveHandler
  nameWithType: ContentElement.RemoveHandler
- uid: System.Windows.ContentElement.ShouldSerializeCommandBindings*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ShouldSerializeCommandBindings
  nameWithType: ContentElement.ShouldSerializeCommandBindings
- uid: System.Windows.ContentElement.ShouldSerializeInputBindings*
  parent: System.Windows.ContentElement
  isExternal: false
  name: ShouldSerializeInputBindings
  nameWithType: ContentElement.ShouldSerializeInputBindings
- uid: System.Windows.ContentElement.TouchesCaptured*
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesCaptured
  nameWithType: ContentElement.TouchesCaptured
- uid: System.Windows.ContentElement.TouchesCapturedWithin*
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: ContentElement.TouchesCapturedWithin
- uid: System.Windows.ContentElement.TouchesDirectlyOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: ContentElement.TouchesDirectlyOver
- uid: System.Windows.ContentElement.TouchesOver*
  parent: System.Windows.ContentElement
  isExternal: false
  name: TouchesOver
  nameWithType: ContentElement.TouchesOver
