### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.SessionAuthenticationModule
  id: SessionAuthenticationModule
  children:
  - System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  - System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  - System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  - System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  - System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  - System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  - System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  - System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  - System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  langs:
  - csharp
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule
  fullName: System.IdentityModel.Services.SessionAuthenticationModule
  type: Class
  summary: "Implementerar en ASP.NET-modul som bearbetar sessionscookies i WS-Federation-scenarier."
  remarks: "When present in the ASP.NET pipeline, the SessionAuthenticationModule (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.  \n  \n The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).  \n  \n The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.  \n  \n For more complicated scenarios, you can derive from SessionAuthenticationModule to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.  \n  \n You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  example:
  - "[!code-cs[WifSAM#1](~/add/codesnippet/csharp/sam/global.asax.cs#1)]  \n  \n The following XML shows how to configure the SAM in the ASP.NET pipeline. Many other elements that are present in a typical configuration are omitted here for brevity.  \n  \n```xml  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <!--WIF 4.5 modules -->  \n      <add name=\"SessionAuthenticationModule\" type=\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n      <add name=\"WsFederationAuthenticationModule\" type=\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n    </modules>  \n  </system.webServer>  \n</configuration>  \n```"
  syntax:
    content: 'public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase'
  inheritance:
  - System.Object
  - System.IdentityModel.Services.HttpModuleBase
  implements: []
  inheritedMembers:
  - System.IdentityModel.Services.HttpModuleBase.Dispose
  - System.IdentityModel.Services.HttpModuleBase.FederationConfiguration
  - System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule&quot;> </xref> klass."
  remarks: "Den <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>egenskapen `false` och <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>egenskapen har initierats till en standardinstans av <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>klass</xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>"
  syntax:
    content: public SessionAuthenticationModule ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  id: AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Autentiserar inkommande begäran genom att verifiera inkommande sessionstoken. På lyckad validering uppdaterar den aktuella HTTP-kontexten och tråd huvudnamn med den angivna <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>."
  remarks: "AuthenticateSessionSecurityToken-metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A>metod för att validera inkommande token och uppdatera den <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>och <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>Egenskaper.</xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> Om den `writeCookie` parametern är `true`, <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>-metoden har anropats för att skriva sessionstoken till en cookie.</xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>"
  syntax:
    content: public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Säkerhetstoken för sessionen att använda för att autentisera inkommande HTTP-begäran."
    - id: writeCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att skriva sessions-cookie; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  id: ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Anger om en sessionscookie är i den angivna cookie-samlingen."
  syntax:
    content: public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);
    parameters:
    - id: httpCookieCollection
      type: System.Web.HttpCookieCollection
      description: "Samling av cookies att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en sessions-cookie hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>httpCookieCollection</code>är null"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  id: ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hämtar aktivt <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> för aktuellt <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Den aktiva session säkerhetstoken."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  id: CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hämtar cookie-hanterare som används för att läsa, skriva och ta bort sessions-cookies."
  remarks: "CookieHandler-egenskapen har initierats av den <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> Den här metoden initierar egenskapen baserat på cookie-hanteraren som har angetts på den <xref:System.IdentityModel.Services.Configuration.FederationConfiguration>objekt som har angetts i den <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration> Du kan ange cookie-hanteraren i en konfigurationsfil via den [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  syntax:
    content: public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }
    return:
      type: System.IdentityModel.Services.CookieHandler
      description: "Cookie-hanteraren."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Skapar en <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> från de angivna parametrarna genom att använda token hanteraren konfigurerade session."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "Huvudnamn sparas i token."
    - id: context
      type: System.String
      description: "En sträng som programdefinierade kontext."
    - id: validFrom
      type: System.DateTime
      description: "Det första ögonblick där denna token är giltig."
    - id: validTo
      type: System.DateTime
      description: "Det ögonblick då denna token är giltigt."
    - id: isPersistent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet ska vara beständig av användaragent; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Sessionstoken."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det är inte en giltig sessions token hanterare har konfigurerats. (Det finns inga <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> konfigurerats i den <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>egenskapen.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  id: DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Tar bort sessions-cookie och tas bort från cachen."
  remarks: "Tar bort sessions-cookie med hjälp av hanteraren för cookie som angetts av den <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>egenskapen.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Den här metoden anropas vid utloggning av den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: public void DeleteSessionTokenCookie ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  id: InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Initierar modulen och förbereder den för att hantera händelser från modulen [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] programobjektet."
  remarks: "Lägger till den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>och <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A>hanterare för den <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>och <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>händelser för application-objektet som anges av den `context` parameter.</xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected override void InitializeModule (System.Web.HttpApplication context);
    parameters:
    - id: context
      type: System.Web.HttpApplication
      description: "Objekt för HTTP-program som innehåller den här modulen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  id: InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Initierar egenskaperna modulen definitionerna i konfigurationsfilen."
  remarks: "Initierar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>egenskap från hanteraren som har angetts i konfigurationen av den <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName>objekt som har angetts i den <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Du kan ange cookie-hanteraren i en konfigurationsfil via den [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  syntax:
    content: protected override void InitializePropertiesFromConfiguration ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hämtar eller anger ett värde som anger om sessionsinformation (anspråksvärden osv.) ska lagras i sessions-cookie eller om sessionen innehållet ska lagras på serversidan använder cookien för att lagra bara en referens."
  remarks: "I läget för referens i <xref:System.IdentityModel.Tokens.SessionSecurityToken>lagras i ett cacheminne för serversidan (ett objekt som härleds från <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> </xref:System.IdentityModel.Tokens.SessionSecurityToken> Utfärdade cookie innehåller bara en kontext-ID som används för att hämta token från cacheminnet.      > [!IMPORTANT] > Att arbeta i läget för referens Microsoft rekommenderar att tillhandahålla en hanterare för den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>händelse i global.asax.cs fil- och inställningen i <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName>-egenskapen i token som skickas i den <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> Detta säkerställer att sessionstoken körs i referensläget för varje begäran och är i första hand över bara ange egenskapen IsReferenceMode på modulen autentisering sessionen."
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om utfärdade cookies är i referensläget. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, vilket innebär att som utfärdats cookies inte är i referensläget."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  id: OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hanterar den <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> händelse från den [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pipeline."
  remarks: "Den här metoden gör följande: 1.  Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>metod för att läsa en <xref:System.IdentityModel.Tokens.SessionSecurityToken>från sessions-cookie, om en sådan finns.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>      2.  Om en session säkerhetstoken måste returnera Läs (troligen eftersom en session inte har fastställts).      3.  Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A>metod för att öka den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>händelse.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> Detta ger en möjlighet för token läsa från cookien som ska ändras eller begäran om att avbrytas. Hanteraren kan även ange att token ska utfärdas, genom att ange den <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>      4.  Om token som utfärdas, tas den bort från cachen och anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A>metod för att öka den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated>händelse.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> Detta ger möjlighet för token som ska ändras igen. Beteendet återutfärda kan också ändras genom att ange den <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>egenskapen i händelsehanteraren.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>      5.  Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>metod för att autentisera användaren.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Om lyckas har effekten av inställningen i <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>egenskap till säkerhetsobjekt som ingår i den <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName>egenskapen för den inkommande token.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>      6.  Om sessionen har upphört att gälla, anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Metoden OnAuthenticateRequest har lagts till i hanterare för den <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>händelse i den <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen. Det här är en <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objekt."
    - id: eventArgs
      type: System.EventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det är inte en giltig sessions token hanterare har konfigurerats. (Det finns inga <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> konfigurerats i den <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>egenskapen.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  id: OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Hanterar den <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> händelse från den [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pipeline."
  remarks: "Standardimplementering är tom.       OnPostAuthenticateRequest-hanteraren har lagts till i hanterare för den <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>händelse i den <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen. Det här är en <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objekt."
    - id: e
      type: System.EventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  id: OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Genererar den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&quot;> </xref> händelse."
  remarks: "Anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  id: OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Genererar den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&quot;> </xref> händelse."
  remarks: "Anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  id: OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Genererar den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&quot;> </xref> händelse."
  remarks: "Den här metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden när den utloggning har utförts och sessions-cookie har tagits bort.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignedOut (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  id: OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Genererar den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&quot;> </xref> händelse."
  remarks: "Den här metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>sätt att genomföra utloggning.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Den anropas innan sessions-cookie tas bort."
  syntax:
    content: protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.SigningOutEventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  id: OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Genererar den <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&quot;> </xref> händelse."
  remarks: "Den här metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden om ett fel uppstår under utloggning.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.ErrorEventArgs
      description: "Data för händelsen."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  id: ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Läser en <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> från angivna sessions-cookie."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);
    parameters:
    - id: sessionCookie
      type: System.Byte[]
      description: "Cookie i obearbetat format, som innehåller sessionstoken."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Sessionstoken som lästes från cookien."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det är inte en giltig sessions token hanterare har konfigurerats. (Det finns inga <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> konfigurerats i den <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>egenskapen.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  id: SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inträffar när en session säkerhetstoken har skapats."
  remarks: "Du kan använda den här händelsen för att ändra säkerhetstoken sessionen innan de skrivs till en cookie.       Händelsen SessionSecurityTokenCreated visas inifrån den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>metoden efter en sessionstoken (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) har skapats.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Detta inträffar, till exempel om en händelsehanterare för den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>händelse ändrar token.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>       Du kan använda den här händelsen för att ändra egenskaperna för sessionstoken innan den skickas ytterligare längsmed pipelinen och används för att autentisera den entitet som gjort begäran (användare).       I en händelsehanterare kan du komma åt token via den <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> När du har ändrat token som du kan se till att de skrivs tillbaka till cookien genom att ange den <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>egenskapen `true`.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> Till skillnad från är händelsen SessionSecurityTokenCreated SessionSecurityTokenCreated inte en cancelable händelse."
  example:
  - "The following code shows a handler for the SessionSecurityTokenCreated event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#6](~/add/codesnippet/csharp/sam/global.asax.cs#6)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> SessionSecurityTokenCreated;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  id: SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inträffar när en session säkerhetstoken har lästs från en cookie."
  remarks: "The SessionSecurityTokenReceived event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.  \n  \n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.  \n  \n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the SessionSecurityTokenReceived event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request."
  example:
  - "The following code shows a handler for the SessionSecurityTokenReceived event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#5](~/add/codesnippet/csharp/sam/global.asax.cs#5)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> SessionSecurityTokenReceived;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Anger huvudnamn för den <xref href=&quot;System.Web.HttpContext&quot;> </xref> och <xref href=&quot;System.Threading.Thread&quot;> </xref> till säkerhetsobjekt som ingår i den angivna sessionstoken."
  remarks: "Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>metoden och anger den <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>egenskapen och <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>-egenskapen i <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>med identiteter som ska returneras.</xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> </xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>       Den här metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>"
  syntax:
    content: protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Sessionstoken som du vill objektet."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  id: SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inträffar när användaren har loggat."
  remarks: "Aktiveras från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden precis efter den <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>-metoden har anropats.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Den här händelsen är inte säkert att anropas för varje session. Till exempel cookies kan tas bort på klientsidan, i så fall kan den här händelsen skulle aldrig att aktiveras eftersom det finns inga händelser för servern för att ta bort sessionen."
  example:
  - "The following code shows a handler for the SignedOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#3](~/add/codesnippet/csharp/sam/global.asax.cs#3)]"
  syntax:
    content: public event EventHandler SignedOut;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  id: SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inträffar innan du tar bort inloggningssessionen."
  remarks: "Aktiveras från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden precis före den <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>-metoden har anropats.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Den här händelsen är inte säkert att anropas för varje session. Till exempel cookies kan tas bort på klientsidan, i så fall kan den här händelsen skulle aldrig att aktiveras eftersom det finns inga händelser för servern för att ta bort sessionen."
  example:
  - "The following code shows a handler for the SigningOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#4](~/add/codesnippet/csharp/sam/global.asax.cs#4)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SigningOutEventArgs> SigningOut;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  id: SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Den aktuella användaren sedan loggar ut och genererar associerade händelser."
  remarks: "Anropar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, och <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A>metoder för att utföra utloggning.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A> Om ett undantag inträffar den <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A>-metoden har anropats för att höja den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError>händelse.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> Du kan ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.IdentityModel.Services.ErrorEventArgs>objekt skickades till händelsehanteraren för händelsen för att avbryta den utloggning och förhindra undantag från att spridas till klienten.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Du kan åsidosätta den här metoden om du vill lägga till programspecifika beteende."
  example:
  - "The following code shows code for invoking the SignOut method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#7](~/add/codesnippet/csharp/sam/global.asax.cs#7)]"
  syntax:
    content: public virtual void SignOut ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  id: SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inträffar när ett fel vid utloggning."
  remarks: "Aktiveras från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>metoden när ett fel uppstår vid utloggning.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       I en händelsehanterare kan du få undantag som resulterade i genereras från den <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName>egenskapen.</xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> Du kan avbryta vidare bearbetning av undantag som har resultatet inte sprider undantag till klienten, genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.IdentityModel.Services.ErrorEventArgs>till `true`.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Den här händelsen är inte säkert att anropas för varje session. Till exempel cookies kan tas bort på klientsidan, i så fall kan den här händelsen skulle aldrig att aktiveras eftersom det finns inga händelser för servern för att ta bort sessionen."
  example:
  - "The following code shows a handler for the SignOutError event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#2](~/add/codesnippet/csharp/sam/global.asax.cs#2)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.ErrorEventArgs> SignOutError;
    return:
      type: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  id: TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Försöker läsa en <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> från en sessionscookie och returnerar ett värde som anger om sessions-cookie lästes."
  remarks: "Läser cookien med hjälp av cookie-hanteraren som har konfigurerats i den <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>egenskapen och anropar sedan den <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A>metod för att läsa token från cookien.</xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "När den här metoden returnerar innehåller session säkerhetstoken som lästes från sessions-cookie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sessions-cookie lästes från begäran. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Validerar angivna <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> och returnerar sina identiteter."
  remarks: "Den här metoden anropas från den <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>metoden.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Anropar den <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>metod för att validera token och extrahera sina identiteter konfigurerade session token hanteraren.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>"
  syntax:
    content: protected System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Att validera token."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "Mängden med identiteter som ingår i token."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  exceptions:
  - type: System.IdentityModel.Services.FederatedSessionExpiredException
    commentId: T:System.IdentityModel.Services.FederatedSessionExpiredException
    description: "Token har upphört att gälla."
  - type: System.IdentityModel.Services.FederationException
    commentId: T:System.IdentityModel.Services.FederationException
    description: "Token starttiden är inte giltigt ännu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det är inte en giltig sessions token hanterare har konfigurerats. (Det finns inga <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> konfigurerats i den <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>egenskapen.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  id: WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Skriver den angivna <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> till en sessions-cookie."
  remarks: "Skriver cookien genom att använda cookie-hanteraren som har konfigurerats i den <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>egenskapen.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Sessionen säkerhetstoken att skriva."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sessionToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det är inte en giltig sessions token hanterare har konfigurerats. (Det finns inga <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> konfigurerats i den <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>egenskapen.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
references:
- uid: System.IdentityModel.Services.HttpModuleBase
  isExternal: false
  name: System.IdentityModel.Services.HttpModuleBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Services.FederatedSessionExpiredException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederatedSessionExpiredException
  nameWithType: FederatedSessionExpiredException
  fullName: System.IdentityModel.Services.FederatedSessionExpiredException
- uid: System.IdentityModel.Services.FederationException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederationException
  nameWithType: FederationException
  fullName: System.IdentityModel.Services.FederationException
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.CookieHandler
  parent: System.IdentityModel.Services
  isExternal: false
  name: CookieHandler
  nameWithType: CookieHandler
  fullName: System.IdentityModel.Services.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenCreatedEventArgs
  nameWithType: SessionSecurityTokenCreatedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenReceivedEventArgs
  nameWithType: SessionSecurityTokenReceivedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
- uid: System.IdentityModel.Services.SigningOutEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SigningOutEventArgs
  nameWithType: SigningOutEventArgs
  fullName: System.IdentityModel.Services.SigningOutEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
- uid: System.IdentityModel.Services.ErrorEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: ErrorEventArgs
  nameWithType: ErrorEventArgs
  fullName: System.IdentityModel.Services.ErrorEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenCreatedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenCreatedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
    name: SessionSecurityTokenCreatedEventArgs
    nameWithType: SessionSecurityTokenCreatedEventArgs
    fullName: SessionSecurityTokenCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenReceivedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenReceivedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
    name: SessionSecurityTokenReceivedEventArgs
    nameWithType: SessionSecurityTokenReceivedEventArgs
    fullName: SessionSecurityTokenReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
- uid: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SigningOutEventArgs>
  nameWithType: EventHandler<SigningOutEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SigningOutEventArgs
    name: SigningOutEventArgs
    nameWithType: SigningOutEventArgs
    fullName: SigningOutEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
- uid: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: ErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule
  nameWithType: SessionAuthenticationModule.InitializeModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut
  nameWithType: SessionAuthenticationModule.OnSignedOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut
  nameWithType: SessionAuthenticationModule.OnSigningOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError
  nameWithType: SessionAuthenticationModule.OnSignOutError
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut
  nameWithType: SessionAuthenticationModule.SignOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken
  nameWithType: SessionAuthenticationModule.ValidateSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie
