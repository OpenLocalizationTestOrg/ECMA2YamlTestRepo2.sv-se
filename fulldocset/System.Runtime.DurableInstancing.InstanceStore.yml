### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstanceStore
  id: InstanceStore
  children:
  - System.Runtime.DurableInstancing.InstanceStore.#ctor
  - System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  - System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  - System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  - System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  - System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  - System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  - System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  langs:
  - csharp
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
  type: Class
  summary: "Representerar en instansarkivet."
  remarks: "En beständig provider ger åtkomst till en instanslagring via en konkret implementering av InstanceStore-klassen.       Beständig providers kan anropa InstanceHandle.Free i referenser som angavs för TryCommand, även när kommandot har slutförts körs. Men beständig providers inte måste innehåller starkt referenser till InstanceHandle eller InstanceOwner-objekt som det kan förhindra InstanceStore att skräpinsamlas.      > [!WARNING] > Arbetsflödesdefinitioner för beständiga arbetsflöden kan inte ändras. Om en arbetsflödesdefinition ändras när den sparas, kommer arbetsflödets körtid krascha när arbetsflödet laddas."
  syntax:
    content: public abstract class InstanceStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  id: '#ctor'
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
  type: Constructor
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Initierar en instans av den <xref href=&quot;System.Runtime.DurableInstancing.InstanceStore&quot;> </xref> klass."
  syntax:
    content: protected InstanceStore ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Kör asynkront beständiga kommandon som <xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;> </xref> och <xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>."
  remarks: "En värd anropar metoden BeginExecute för att köra en beständiga kommando mot en instans referens asynkront. Värden hämtar instansreferensen genom att anropa den <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>metoden.</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> Instansreferensen kan bindas till entiteter som representerar kontext och ämne av kommandot, till exempel en instans, instansägare eller låset för instansen.  Endast ett kommando kan utfärdas mot en instans-referens i taget."
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "En instans-referens."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Kommandot som ska köras."
    - id: timeout
      type: System.TimeSpan
      description: "Tidsgränsen för körningen av skriptkommandot."
    - id: callback
      type: System.AsyncCallback
      description: "Det asynkrona återanrop ombud som får ett meddelande om genomförandet av den asynkrona åtgärden."
    - id: state
      type: System.Object
      description: "Tillståndsinformationen."
    return:
      type: System.IAsyncResult
      description: "Tillståndet för den asynkrona åtgärden."
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "En beständig provider implementerar den här metoden, som avgör om en viss beständiga kommando kan utföras. Om kommandot kan utföras, kör du kommandot asynkront."
  remarks: "Om kommandot kan utföras, anropar den beständiga providern relevanta metoder på InstancePersistenceContext att ge resultatet av kommandot.      > [!WARNING] > Även om den här metoden deklareras som `virtual` snarare än `abstract`, det finns ingen implementering. Den här metoden måste åsidosättas för att tillhandahålla funktioner."
  syntax:
    content: protected virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "Instans-kontext."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Beständiga kommando som ska köras."
    - id: timeout
      type: System.TimeSpan
      description: "Tidsgränsen för körningen av skriptkommandot."
    - id: callback
      type: System.AsyncCallback
      description: "Det asynkrona återanrop ombud som får ett meddelande om genomförandet av den asynkrona åtgärden."
    - id: state
      type: System.Object
      description: "Tillståndsinformationen."
    return:
      type: System.IAsyncResult
      description: "Tillståndet för den asynkrona åtgärden."
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Börjar en asynkron åtgärd för att lyssna efter alla händelser som skapats av instanslagring för en specifik instans-referens."
  syntax:
    content: public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "En instans-referens."
    - id: timeout
      type: System.TimeSpan
      description: "Den period som åtgärden på grund av timeout."
    - id: callback
      type: System.AsyncCallback
      description: "Metoden som ska anropas när den asynkrona åtgärden har slutförts."
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller tillståndsinformationen som är associerade med den asynkrona åtgärden."
    return:
      type: System.IAsyncResult
      description: "Returnerar ett <xref:System.IAsyncResult>objekt...</xref:System.IAsyncResult>"
  overload: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  id: CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Skapar en instans-referens."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  id: CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Skapar en instans-referens.  Om DefaultInstanceOwner anges bunden värdet automatiskt som den nya referensen instansägare.  Instans-ID som skickades som en parameter binds automatiskt som den nya referensen instans."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "En instans-identifierare. Får inte vara Guid.Empty."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Skapar en instans-referens. Om instansägare skickas som en parameter inte är null binds automatiskt värdet som det nya handtaget instansägare.  (Annars Ingen instansägare är bunden, även om DefaultInstanceOwner anges.)"
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Ägaren av en instans."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen. Ett null-värde som anger att den nya referensen inte bör automatiskt bindas till en instansägare."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  id: CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Skapar en instans-referens. Om instansägare skickas som en parameter inte är null binds automatiskt värdet som det nya handtaget instansägare.  (Annars Ingen instansägare är bunden, även om DefaultInstanceOwner anges.) Instans-ID som skickades som en parameter binds automatiskt som den nya referensen instans."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Ett InstanceOwner-objekt som representerar ägaren av en instans. Överföra null som värde för den här parametern anger att den nya referensen inte bör automatiskt bindas till en instansägare."
    - id: instanceId
      type: System.Guid
      description: "En instans-identifierare. Får inte vara Guid.Empty."
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen."
  overload: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  id: DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hämtar eller anger standardinstansägare."
  remarks: "Några värdar härleda instansägare att använda genom att läsa den här egenskapen. WorkflowApplication kan använda den här egenskapen. Den här egenskapen används inte av WorkflowServiceHost.       DefaultInstanceOwner justeringsrutnätet måste anges till null om den inte längre behövs. InstanceStore-objekt kan inte vara skräpinsamlats om DefaultInstanceOwner inte är null.      > [!WARNING] > Även om den här metoden deklareras som `virtual` snarare än `abstract`, det finns ingen implementering. Den här metoden måste åsidosättas för att tillhandahålla funktioner."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Standardinstansägare."
  overload: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Slutar den asynkrona åtgärden."
  remarks: "Det här tillståndet kan BeginExecute anropades under en transaktion vara en icke allokerad data. När transaktionen är genomförd har data i InstanceView objekt kan betraktas som har allokerats."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Resultatet av åtgärden."
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Ett InstanceView-objekt som representerar kända tillståndet för instansen efter slutförande av kommandot."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  id: EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Avslutar en asynkron åtgärd."
  remarks: >-
    > [!WARNING]

    >  Even though this method is declared as `virtual` rather than `abstract`, there is no implementation. This method must be overridden in order to provide functionality.
  syntax:
    content: protected virtual bool EndTryCommand (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Resultatet av åtgärden."
    return:
      type: System.Boolean
      description: "En beständig providers implementering ska returnera false om det inte stöder kommandot som skickades till metoden BeginTryCommand. Annars bör den returnera true eller utlöser ett undantag."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  id: EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Slutar den asynkrona åtgärden som initierats av den <xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>metoden.</xref:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*>"
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> EndWaitForEvents (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ett IAsyncResult-objekt som var överlämnas till klienten med Begin-metod."
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "Returnerar en lista med <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objekt..."
  overload: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: 'Kör kommandot beständiga synkront. Exempel på beständiga kommandon är: <xref href=&quot;System.Activities.DurableInstancing.LoadWorkflowCommand&quot;> </xref> och <xref href=&quot;System.Activities.DurableInstancing.SaveWorkflowCommand&quot;> </xref>.'
  remarks: "En värd som anropar metoden Execute för att köra en beständiga kommando mot en instans-referens som värden hämtar genom att anropa den <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>metoden.</xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> Instansreferensen kan bindas till entiteter som representerar kontext och ämne av kommandot, till exempel en instans, instansägare eller låset för instansen.  Endast ett kommando kan utfärdas mot en instans-referens i taget.      > [!WARNING] > Om den här metoden körs med en <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, skapas en <xref:System.Runtime.DurableInstancing.InstanceOwner>och binda till instansen.</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> Det innebär att ingen annan process kommer att kunna komma åt det här arbetsflödet; Om processen avslutas kan inte arbetsflödet återställas eller utförs. Om sådan ett arbetsflöde körs igen, en <xref:System.Runtime.DurableInstancing.InstanceLockedException>genereras.</xref:System.Runtime.DurableInstancing.InstanceLockedException>   >> Om <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>är inte används i instance store skapas en tillfällig <xref:System.Runtime.DurableInstancing.InstanceOwner>som kommer att tas bort i slutet av processen.</xref:System.Runtime.DurableInstancing.InstanceOwner> </xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> Men om processen avslutas innan arbetsflödets sista beständiga punkt, detta undantag, såvida inte tidsperioden som anges i den **HostLockRenewalPeriod** parametern har upphört att gälla."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "En instans-referens."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Kommandot som ska köras."
    - id: timeout
      type: System.TimeSpan
      description: "Tidsgränsen för åtgärden."
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Ett InstanceView-objekt som representerar kända tillståndet för instansen efter slutförande av kommandot.  Det här tillståndet kan Execute anropades under en transaktion vara en data. När transaktionen är genomförd har allokerat data i InstanceView objekt kan ses"
  overload: System.Runtime.DurableInstancing.InstanceStore.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  id: GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hämtar alla signalerat händelser som är bunden till en <xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;> </xref> objekt."
  syntax:
    content: protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "En <xref href=&quot;System.Runtime.DurableInstancing.InstanceOwner&quot;> </xref> objekt som representerar ägaren av en instans."
    return:
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
      description: "Returnerar en matris med <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objekt..."
  overload: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  id: GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Hämtar varje InstanceOwner-objekt som är bundet till en giltig instans referens eller inte har skräpinsamlats."
  remarks: "Returnerar en matris med InstanceOwner-objekt."
  syntax:
    content: protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();
    parameters: []
    return:
      type: System.Runtime.DurableInstancing.InstanceOwner[]
      description: "Ägaren av instansen."
  overload: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  id: OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Anropas när en instans-referens har frigjorts."
  syntax:
    content: protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen frigjordes."
    - id: userContext
      type: System.Object
      description: "Den beständiga providern kontexten användarinformation som returnerades från OnNewInstanceHandle, eller null om OnNewInstanceHandle inte åsidosätts."
  overload: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  id: OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Anropas när en ny instans referens skapas."
  syntax:
    content: protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);
    parameters:
    - id: instanceHandle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "En instans-referens."
    return:
      type: System.Object
      description: "Ett objekt.  Den här användaren context-objektet blir tillgängliga för den beständiga providern när kommandon körs genom att använda handtaget och när referensen har frigjorts."
  overload: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Återställer signalerat händelsen och tar bort händelsen signalerat händelselistan underhålls av instansägare."
  syntax:
    content: protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "Den beständiga händelse som har signalerat tidigare och för att återställas."
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Instansägare som är associerade med beständiga händelsen."
  overload: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  id: SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "En instanslagring anropar den här metoden för att en händelse. En arbetsflödesvärden prenumererar för den här händelsen beständiga tar emot det och tar en lämplig åtgärd."
  syntax:
    content: protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "Den beständiga händelsen till signaleras."
    - id: owner
      type: System.Runtime.DurableInstancing.InstanceOwner
      description: "Instansägare."
  overload: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "En beständig provider implementerar denna metod som avgör om en viss beständiga kommando kan köras och om att köra kommandot Kör den asynkront."
  remarks: "Om kommandot kan köras den beständiga providern anropar relevanta metoder på det <xref:System.Runtime.DurableInstancing.InstancePersistenceContext>att tillhandahålla resultatet av kommandot.</xref:System.Runtime.DurableInstancing.InstancePersistenceContext>"
  syntax:
    content: protected virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: context
      type: System.Runtime.DurableInstancing.InstancePersistenceContext
      description: "Instans-kontext."
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Kommandot som ska köras."
    - id: timeout
      type: System.TimeSpan
      description: "Värdet för tidsgränsen för åtgärden."
    return:
      type: System.Boolean
      description: "En beständig providers implementering ska returnera <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om det inte stöder kommandot som skickades som en parameter, annars den borde returnera <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> eller utlöser ett undantag."
  overload: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  id: WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  langs:
  - csharp
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "En arbetsflödesvärden vanligtvis anropar metoden ska vänta på att en händelse ska signaleras."
  syntax:
    content: public System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent> WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);
    parameters:
    - id: handle
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Instansreferensen som är bunden till händelsen."
    - id: timeout
      type: System.TimeSpan
      description: "Tidsintervallet efter vilket väntande åtgärden på grund av timeout."
    return:
      type: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
      description: "En lista över <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> objekt."
  overload: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore()
  nameWithType: InstanceStore.InstanceStore()
  fullName: System.Runtime.DurableInstancing.InstanceStore.InstanceStore()
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginExecute(InstanceHandle,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(InstanceHandle,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle()
  nameWithType: InstanceStore.CreateInstanceHandle()
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle()
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceOwner
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle(InstanceOwner,Guid)
  nameWithType: InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
  fullName: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(InstanceOwner,Guid)
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstanceStore.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand(IAsyncResult)
  nameWithType: InstanceStore.EndTryCommand(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents(IAsyncResult)
  nameWithType: InstanceStore.EndWaitForEvents(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(IAsyncResult)
- uid: System.Collections.Generic.List{System.Runtime.DurableInstancing.InstancePersistenceEvent}
  parent: System.Collections.Generic
  isExternal: true
  name: List<InstancePersistenceEvent>
  nameWithType: List<InstancePersistenceEvent>
  fullName: System.Collections.Generic.List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Runtime.DurableInstancing.InstancePersistenceEvent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.Execute(InstanceHandle,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents(InstanceOwner)
  nameWithType: InstanceStore.GetEvents(InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetEvents(InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
    name: InstancePersistenceEvent
    nameWithType: InstancePersistenceEvent
    fullName: InstancePersistenceEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners()
  nameWithType: InstanceStore.GetInstanceOwners()
  fullName: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners()
- uid: System.Runtime.DurableInstancing.InstanceOwner[]
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceOwner
  nameWithType: InstanceOwner
  fullName: System.Runtime.DurableInstancing.InstanceOwner[]
  spec.csharp:
  - uid: System.Runtime.DurableInstancing.InstanceOwner
    name: InstanceOwner
    nameWithType: InstanceOwner
    fullName: InstanceOwner[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle(InstanceHandle,Object)
  nameWithType: InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(InstanceHandle,Object)
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle(InstanceHandle)
  nameWithType: InstanceStore.OnNewInstanceHandle(InstanceHandle)
  fullName: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(InstanceHandle)
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.ResetEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent(InstancePersistenceEvent,InstanceOwner)
  nameWithType: InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
  fullName: System.Runtime.DurableInstancing.InstanceStore.SignalEvent(InstancePersistenceEvent,InstanceOwner)
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  nameWithType: InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.TryCommand(InstancePersistenceContext,InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents(InstanceHandle,TimeSpan)
  nameWithType: InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(InstanceHandle,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstanceStore.#ctor*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore.InstanceStore
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginExecute
  nameWithType: InstanceStore.BeginExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginTryCommand
  nameWithType: InstanceStore.BeginTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: BeginWaitForEvents
  nameWithType: InstanceStore.BeginWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: CreateInstanceHandle
  nameWithType: InstanceStore.CreateInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: DefaultInstanceOwner
  nameWithType: InstanceStore.DefaultInstanceOwner
- uid: System.Runtime.DurableInstancing.InstanceStore.EndExecute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndExecute
  nameWithType: InstanceStore.EndExecute
- uid: System.Runtime.DurableInstancing.InstanceStore.EndTryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndTryCommand
  nameWithType: InstanceStore.EndTryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: EndWaitForEvents
  nameWithType: InstanceStore.EndWaitForEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.Execute*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: Execute
  nameWithType: InstanceStore.Execute
- uid: System.Runtime.DurableInstancing.InstanceStore.GetEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetEvents
  nameWithType: InstanceStore.GetEvents
- uid: System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: GetInstanceOwners
  nameWithType: InstanceStore.GetInstanceOwners
- uid: System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnFreeInstanceHandle
  nameWithType: InstanceStore.OnFreeInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: OnNewInstanceHandle
  nameWithType: InstanceStore.OnNewInstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceStore.ResetEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: ResetEvent
  nameWithType: InstanceStore.ResetEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.SignalEvent*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: SignalEvent
  nameWithType: InstanceStore.SignalEvent
- uid: System.Runtime.DurableInstancing.InstanceStore.TryCommand*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: TryCommand
  nameWithType: InstanceStore.TryCommand
- uid: System.Runtime.DurableInstancing.InstanceStore.WaitForEvents*
  parent: System.Runtime.DurableInstancing.InstanceStore
  isExternal: false
  name: WaitForEvents
  nameWithType: InstanceStore.WaitForEvents
