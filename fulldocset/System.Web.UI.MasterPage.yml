### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MasterPage
  id: MasterPage
  children:
  - System.Web.UI.MasterPage.#ctor
  - System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.ContentPlaceHolders
  - System.Web.UI.MasterPage.ContentTemplates
  - System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.Master
  - System.Web.UI.MasterPage.MasterPageFile
  langs:
  - csharp
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
  type: Class
  summary: "Fungerar som en mall och koppla samman behållare för sidor som består endast av <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> kontroller och deras respektive underordnade kontroller."
  remarks: "En huvudsida fungerar som en mall för behållaren och koppla samman sidan innehåll sidor i ASP.NET-webbprogram. Huvudsidor ger ett bekvämt sätt att dela struktur och innehåll på en uppsättning innehållssidor. Du kan använda innehåll platshållare för att definiera avsnitt på Huvudsidfilen ersätta med innehåll från sidan innehåll.       När du använder en huvudsida och dess relaterade innehållssidor kan du lägga till taggarna som krävs XHTML dokument (t.ex `html`, `head`, och `body`) endast huvudsidan och inte längre skapa din andra .aspx-filer (ASP.NET-sidor) som fristående webbsidor. Sidorna innehåll definiera innehållet för att infoga i platshållare på huvudsidan.       När en HTTP-begäran görs för en sida vid körning, kombineras huvudsida och innehållssidor till en klass med samma namn som innehållssidorna. Klar kompileras, kopplade klass som härleds från <xref:System.Web.UI.Page>klassen.</xref:System.Web.UI.Page>       En sida kan innehålla direkt markup och kontroller, samt behållarkontroller. Alla element som är placerad på huvudsidan utanför en <xref:System.Web.UI.WebControls.ContentPlaceHolder>kontrollen återges på alla sidor som beror på att sammanfoga huvudsida och innehållssidor.</xref:System.Web.UI.WebControls.ContentPlaceHolder>       Varje sida som är relaterade till huvudsidan måste referera till huvudsidan i en `MasterPageFile` attribut i dess direktiv. Innehåll sidor får bara innehålla en `@ Page` direktiv och en eller flera <xref:System.Web.UI.WebControls.Content>kontroller.</xref:System.Web.UI.WebControls.Content> Alla dina Sidkontrollerna för text, markering och servern måste placeras i <xref:System.Web.UI.WebControls.Content>kontroller.</xref:System.Web.UI.WebControls.Content> Du identifierar den <xref:System.Web.UI.WebControls.ContentPlaceHolder>kontroll över en sida som en <xref:System.Web.UI.WebControls.Content>kontrollen som är associerad med genom att ange den <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>egenskapen för den <xref:System.Web.UI.WebControls.Content>kontroll.</xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> </xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.ContentPlaceHolder>       Vid körning, dynamiskt innehåll från varje <xref:System.Web.UI.WebControls.Content>kontroll i den begärda sidan har kopplats till huvudsidan i den exakta platsen för den relaterade <xref:System.Web.UI.WebControls.ContentPlaceHolder>kontroll.</xref:System.Web.UI.WebControls.ContentPlaceHolder> </xref:System.Web.UI.WebControls.Content> Andra påläggs- och kontroller på huvudsidan påverkas inte. Händelsehanterare kan definieras i master klassen och på sidan innehåll. Mer information finns i [händelser i ASP.NET-hanterare och innehållssidor](~/add/includes/ajax-current-ext-md.md).       Klassen MasterPage-sida är associerad med filer som har filnamnstillägget .master. Dessa filer kompileras under körning som MasterPage-objekt och cachelagras i serverminnet.       Huvudsidan görs tillgänglig för sidan innehåll via <xref:System.Web.UI.Page.Master%2A>-egenskapen för grundläggande <xref:System.Web.UI.Page>klass.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Master%2A> Den <xref:System.Web.UI.Page.Master%2A>egenskap returnerar instansen av huvudsidan; men den har skrivits in som grundläggande sidas MasterPage-klassen.</xref:System.Web.UI.Page.Master%2A> Åtkomstkontroller, egenskaper och funktioner på huvudsidan i <xref:System.Web.UI.Page.Master%2A>egenskap kan omvandlas till ett MasterPage-objekt.</xref:System.Web.UI.Page.Master%2A> Klassnamnet på huvudsidan definieras med hjälp av den `ClassName` attribut i direktivet.      > [!NOTE] > Filer med .master skickas inte till en webbläsare.       Direktiv som är giltiga på huvudsidan är desamma som de som finns på en <xref:System.Web.UI.UserControl>objektet.</xref:System.Web.UI.UserControl> They can include the following attributes:      -   `AutoEventWireup`      -   `ClassName`      -   `CodeFile`      -   `CompilerMode`      -   `CompilerOptions`      -   `Debug`      -   `Description`      -   `EnableTheming`      -   `EnableViewState`      -   `Explicit`      -   `Inherits`      -   `Language`      -   `LinePragmas`      -   `MasterPageFile`      -   `Src`      -   `Strict`      -   `WarningLevel`       Master page directives do not override the directives on individual content pages.       Huvudsidor skapas oftast deklarativt. Om du vill skapa en huvudsida programmässigt härledd direkt från klassen MasterPage-sida. Förutom att utöka klassen MasterPage-sida måste du skapa filen .master för att visa användargränssnittet (UI) som associeras med de klasser som du har anropats i källfilen.      > [!NOTE] > När du skapar en huvudsida genom att först skapa en egen klass, måste du inkludera alla namnområden som krävs för de klasser som används av sidan.       Läs mer om huvudsidor [ASP.NET huvudsidor](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains four code examples:  \n  \n-   The first code example demonstrates how to create a master page declaratively.  \n  \n-   The second code example represents the content page that is associated with the master page that was created in the first code example.  \n  \n-   The third code example demonstrates how to add a property to a master page.  \n  \n-   The fourth code example demonstrates how to use a content page to access a public property on the master page.  \n  \n The following example demonstrates how to create a master page declaratively and to add some content to it using a content page. The first Web page is the .master page named `MasterPageSample_1.master`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example represents the content page that is associated with `MasterPageSample_1.master`. It contains a <xref:System.Web.UI.WebControls.Content> control and identifies the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control that the content is associated with by using the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPageSample_1cs.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPageSample_1vb.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n The following example demonstrates how to add a property to a master page. The `ClassName` attribute is used to name the master page.  \n  \n```c#  \n<%@ Master Language=\"C#\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n        public string SiteName  \n        {  \n            get { return \"My Site Name\"; }  \n        }  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n  Public ReadOnly Property SiteName() As String  \n    Get  \n      Return \"My Site Name\"  \n    End Get  \n  End Property  \n  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example shows how to use a content page to access the public property `SiteName` on the master page in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  protected void Page_Load(object sender, EventArgs e)  \n  {  \n    MasterExample m = (MasterExample)Page.Master;  \n    mylabel.Text = m.SiteName;  \n  }  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  \n  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  \n    Dim m As MasterExample = CType(Page.Master, MasterPage)  \n    mylabel.Text = m.SiteName  \n  End Sub  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))]

      [System.Web.UI.ParseChildren(false)]

      public class MasterPage : System.Web.UI.UserControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  - System.Web.UI.UserControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.FrameworkInitialize
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.UserControl.Application
  - System.Web.UI.UserControl.Attributes
  - System.Web.UI.UserControl.Cache
  - System.Web.UI.UserControl.CachePolicy
  - System.Web.UI.UserControl.DesignerInitialize
  - System.Web.UI.UserControl.InitializeAsUserControl(System.Web.UI.Page)
  - System.Web.UI.UserControl.IsPostBack
  - System.Web.UI.UserControl.LoadViewState(System.Object)
  - System.Web.UI.UserControl.MapPath(System.String)
  - System.Web.UI.UserControl.OnInit(System.EventArgs)
  - System.Web.UI.UserControl.Request
  - System.Web.UI.UserControl.Response
  - System.Web.UI.UserControl.SaveViewState
  - System.Web.UI.UserControl.Server
  - System.Web.UI.UserControl.Session
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#InnerText
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#TagName
  - System.Web.UI.UserControl.Trace
  - System.Web.UI.UserControl.TryUpdateModel``1(``0)
  - System.Web.UI.UserControl.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.UserControl.UpdateModel``1(``0)
  - System.Web.UI.UserControl.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  platform:
  - net462
- uid: System.Web.UI.MasterPage.#ctor
  id: '#ctor'
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skapar en ny instans av den <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> klass."
  syntax:
    content: public MasterPage ();
    parameters: []
  overload: System.Web.UI.MasterPage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till en <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> Kontrollera till den <xref:System.Web.UI.MasterPage.ContentTemplates*>ordlista.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  remarks: "Huvudsida härledda klasser kan lägga till <xref:System.Web.UI.WebControls.Content>kontroller för att den <xref:System.Web.UI.MasterPage.ContentTemplates%2A>ordlista med metoden AddContentTemplate.</xref:System.Web.UI.MasterPage.ContentTemplates%2A> </xref:System.Web.UI.WebControls.Content> Härledda typer vanligtvis åsidosätter inte metoden AddContentTemplate."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "Ett unikt namn för den <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref>."
    - id: template
      type: System.Web.UI.ITemplate
      description: "The <xref href=&quot;System.Web.UI.WebControls.Content&quot;></xref>."
  overload: System.Web.UI.MasterPage.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "En <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> kontroll med samma namn finns redan i den <xref:System.Web.UI.MasterPage.ContentTemplates*>ordlista.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  id: ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en lista över <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> kontroller som huvudsidan används för att definiera olika innehåll regioner."
  remarks: "Huvudsida härledda klasser komma åt egenskapen ContentPlaceHolders om du vill visa aktuellt <xref:System.Web.UI.WebControls.ContentPlaceHolder>kontroller som finns i bakgrunden.</xref:System.Web.UI.WebControls.ContentPlaceHolder> Härledda typer åsidosätter inte egenskapen ContentPlaceHolders normalt."
  syntax:
    content: protected System.Collections.IList ContentPlaceHolders { get; }
    return:
      type: System.Collections.IList
      description: "En <xref:System.Collections.IList>av <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> kontroller som huvudsidan används som platshållare för <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> kontroller finns i innehållssidor.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentPlaceHolders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentTemplates
  id: ContentTemplates
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en lista över content-kontroller som är kopplade till huvudsidan."
  remarks: "Huvudsida härledda klasser komma åt egenskapen ContentTemplates för att hämta aktuellt <xref:System.Web.UI.WebControls.Content>kontroller, som definieras av associerade innehållssidor.</xref:System.Web.UI.WebControls.Content> Härledda typer åsidosätter inte egenskapen ContentTemplates normalt."
  syntax:
    content: protected System.Collections.IDictionary ContentTemplates { get; }
    return:
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IList>för content-kontroller som är kopplade till huvudsidan.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  id: InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ger en metod för att ange den aktuella mall kontrollen för en sida som äger huvudsidan."
  syntax:
    content: public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);
    parameters:
    - id: contentPlaceHolder
      type: System.Web.UI.Control
      description: "Kontrollen som representerar en behållare för innehållet."
    - id: template
      type: System.Web.UI.ITemplate
      description: "Den <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> instans som ska användas."
  overload: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.Master
  id: Master
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar överordnat huvudsidan för den nuvarande huvudservern i kapslade huvudsidor scenarier."
  remarks: "Master-egenskapen är skrivskyddad, eftersom huvudsida hierarkier inte kan byggas på körtiden."
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "Huvudsidan som är överordnad till den aktuella huvudsidan; Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den aktuella huvudsidan har ingen överordnad."
  overload: System.Web.UI.MasterPage.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger namnet på huvudsidan som innehåller det aktuella innehållet."
  remarks: ''
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "Namnet på huvudsidan som är överordnad till den aktuella huvudsidan; Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den aktuella huvudsidan har ingen överordnad."
  overload: System.Web.UI.MasterPage.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MasterPageFile-egenskapen kan endast anges under eller före den <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> händelse."
  platform:
  - net462
references:
- uid: System.Web.UI.UserControl
  isExternal: false
  name: System.Web.UI.UserControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.MasterPage.#ctor
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.MasterPage.ContentTemplates
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.MasterPage.Master
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.MasterPage.MasterPageFile
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
- uid: System.Web.UI.MasterPage.#ctor*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage.MasterPage
- uid: System.Web.UI.MasterPage.AddContentTemplate*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate
  nameWithType: MasterPage.AddContentTemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
- uid: System.Web.UI.MasterPage.ContentTemplates*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder
  nameWithType: MasterPage.InstantiateInContentPlaceHolder
- uid: System.Web.UI.MasterPage.Master*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
- uid: System.Web.UI.MasterPage.MasterPageFile*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
