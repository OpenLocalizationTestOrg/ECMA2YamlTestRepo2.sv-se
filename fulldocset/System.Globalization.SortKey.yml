### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortKey
  id: SortKey
  children:
  - System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  - System.Globalization.SortKey.Equals(System.Object)
  - System.Globalization.SortKey.GetHashCode
  - System.Globalization.SortKey.KeyData
  - System.Globalization.SortKey.OriginalString
  - System.Globalization.SortKey.ToString
  langs:
  - csharp
  name: SortKey
  nameWithType: SortKey
  fullName: System.Globalization.SortKey
  type: Class
  summary: "Representerar resultatet av en sträng att mappa till dess sorteringsnyckel."
  remarks: "Kulturen känslig jämföra två strängar som beror på varje tecken i en sträng med flera kategorier av sortera vikterna, inklusive skript, bokstäver, case och Diakritisk vikter. En nyckel fungerar som lagringsplats för dessa vikten för en viss sträng.       Den <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName>metoden returnerar en instans av klassen efter som visar kultur känslig mappningen av tecken i en angiven sträng.</xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=fullName> Värdet för ett objekt efter är dess viktiga data som returneras av den <xref:System.Globalization.SortKey.KeyData%2A>egenskapen.</xref:System.Globalization.SortKey.KeyData%2A> Den här viktiga data består av ett antal byte som kodar string, kultur-specifika sorterings-regler och alternativ för användardefinierade jämförelse. En jämförelse med sorteringsnycklar består av en bitvis jämförelse av motsvarande viktiga data i varje sorteringsnyckel.  Till exempel om du skapar en sorteringsnyckel genom att anropa den <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>metoden med värdet <xref:System.Globalization.CompareOptions?displayProperty=fullName>, en strängjämförelsen som använder sorteringsnyckel är skiftlägeskänslig.</xref:System.Globalization.CompareOptions?displayProperty=fullName> </xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>       När du skapar en nyckel för en sträng kan du jämföra sorteringsnycklar genom att anropa statiskhet <xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName>metod.</xref:System.Globalization.SortKey.Compare%2A?displayProperty=fullName> Den här metoden utförs en enkel jämförelse av byte för byte, så att det är mycket snabbare än den <xref:System.String.Compare%2A?displayProperty=fullName>eller <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metod.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> </xref:System.String.Compare%2A?displayProperty=fullName>      ## Prestandaöverväganden när du utför en strängjämförelse den <xref:System.Globalization.SortKey.Compare%2A>och <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metoder ger samma resultat, men de är riktade mot olika scenarier.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> </xref:System.Globalization.SortKey.Compare%2A>       På en hög nivå av <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metoden genererar sorteringsnyckel för varje sträng, utför jämförelsen ignorerar sorteringsnyckel och returnerar resultatet av sammanslagningen.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> Men den <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metoden inte generera ett hela sorteringsnyckel för att göra jämförelsen.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName> I stället genererar metoden viktiga data för varje textelement (det vill säga grundläggande tecken, Surrogatparet eller kombinera teckensekvensen) i varje sträng. Metoden jämför sedan nyckeldata för motsvarande textelement. Åtgärden avbryter så snart det slutliga resultatet av jämförelsen bestäms. Sortera nyckelinformation beräknas, men inga efter objektet har skapats. Den här strategin är ekonomiskt vad gäller prestanda om båda strängarna jämförs en gång, men blir billigare om samma strängarna jämförs många gånger.       Den <xref:System.Globalization.SortKey.Compare%2A>metoden kräver generering av ett objekt efter varje sträng innan du utför jämförelsen.</xref:System.Globalization.SortKey.Compare%2A> Den här strategin är mycket prestanda för första jämförelsen på grund av tid och minne som har investerat för att generera efter objekt. Det blir ekonomiska om samma sorteringsnycklar jämförs många gånger.       Anta att du skriver ett program som söker en databastabell för den rad där sträng-baserade indexkolumn matchar en angiven söksträng. Tabellen innehåller tusentals rader och jämföra strängen i indexet på varje rad tar lång tid. Därför när programmet lagrar en rad- och dess index, även genererar och lagrar sorteringsnyckel för index i en kolumn som är dedikerad till att förbättra sökningsprestanda. När programmet söker efter en målrad, jämför sorteringsnyckel söksträng till sorteringsnyckel för index-sträng, i stället för att jämföra strängen index sträng.      ## Säkerhetsaspekter den <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metoden returnerar en efter objekt med värdet baserat på en angiven sträng och <xref:System.Globalization.CompareOptions>värde och kultur som är kopplade till den underliggande <xref:System.Globalization.CompareInfo>objektet.</xref:System.Globalization.CompareInfo> </xref:System.Globalization.CompareOptions> </xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> Om beslut säkerhet är beroende av en strängjämförelse eller case ändring, bör du använda den <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metoden invariabla kulturen så att beteendet för åtgärden är konsekvent, oavsett vilka inställningar för kultur som används av operativsystemet.</xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>       Använd följande steg för att hämta en sorteringsnyckel: 1.  Hämta invariabla från den <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName>egenskapen.</xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName>      2.  Hämta en <xref:System.Globalization.CompareInfo>objekt för den invariabla kulturen från den <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName>egenskapen.</xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName> </xref:System.Globalization.CompareInfo>      3.  Anropa den <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>metoden.</xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName>       Arbeta med värdet för en efter objekt motsvarar anropar Windows `LCMapString` metod med det angivna värdet för LCMAP_SORTKEY. Men före sorteringsnycklar för engelska tecken för objektet efter sorteringsnycklar för koreanska tecken.       Efter objekt kan vara serialiserade, men bara så att de kan passera <xref:System.AppDomain>objekt.</xref:System.AppDomain> Om ett program Serialiserar ett objekt efter, måste programmet återskapa alla sorteringsnycklar när det finns en ny version av .NET Framework.       Mer information om sorteringsnycklar finns Unicode tekniska Standard #10, &quot;Unicode-sortering Algorithm&quot; på den [Unicode Consortium webbplats](http://go.microsoft.com/fwlink/?linkid=37123)."
  example:
  - "The following example compares the string \"llama\" using the \"en-US\" and \"es-ES\" cultures, and the \"en-US\" and \"es-ES\" traditional cultures.  \n  \n [!code-cpp[System.Globalization.SortKey.Compare#1](~/add/codesnippet/cpp/t-system.globalization.s_1_1.cpp)]\n [!code-cs[System.Globalization.SortKey.Compare#1](~/add/codesnippet/csharp/t-system.globalization.s_1_1.cs)]\n [!code-vb[System.Globalization.SortKey.Compare#1](~/add/codesnippet/visualbasic/t-system.globalization.s_1_1.vb)]  \n  \n The following example shows how you can use the SortKey class to improve performance in an application that relies extensively on sorting and searching a large array. The example creates an unordered array of names, which in this case has 13 elements. It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=fullName> method. The result is a sorted array. The example then searches the array for three strings. For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=fullName> method to retrieve the index of that sort key in the array of sort keys. Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.  \n  \n [!code-vb[System.Globalization.SortKey.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.s_1_2.vb)]\n [!code-cs[System.Globalization.SortKey.Class#1](~/add/codesnippet/csharp/t-system.globalization.s_1_2.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SortKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  id: Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: Compare(SortKey,SortKey)
  nameWithType: SortKey.Compare(SortKey,SortKey)
  fullName: System.Globalization.SortKey.Compare(SortKey,SortKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Jämför två sorteringsnycklar."
  remarks: "Metoden jämför jämför den <xref:System.Globalization.SortKey.KeyData%2A>Egenskaper för den `sortkey1` och `sortkey2` parametrar.</xref:System.Globalization.SortKey.KeyData%2A> Metoden som ger samma resultat som den <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>metoden.</xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=fullName>       Mer information om metoden Jämför och jämförelse av sorteringsnycklar finns det <xref:System.Globalization.SortKey>klassen avsnittet.</xref:System.Globalization.SortKey>"
  example:
  - "The following code example compares two strings using the Compare method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=fullName> method.  \n  \n [!code-cs[sys.glob.sortkey.compare#1](~/add/codesnippet/csharp/4647647d-ce80-4fb7-82b7-_1.cs)]\n [!code-vb[sys.glob.sortkey.compare#1](~/add/codesnippet/visualbasic/4647647d-ce80-4fb7-82b7-_1.vb)]"
  syntax:
    content: public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);
    parameters:
    - id: sortkey1
      type: System.Globalization.SortKey
      description: "Första sorteringsnyckel ska jämföras."
    - id: sortkey2
      type: System.Globalization.SortKey
      description: "Andra sorteringsnyckel ska jämföras."
    return:
      type: System.Int32
      description: "Ett heltal som anger förhållandet mellan <code> sortkey1 </code> och <code> sortkey2 </code>.       <table><thead><tr><th> Värde       </th><th> Villkor       </th></tr></thead><tbody><tr><td> Är mindre än noll       </td><td><code>sortkey1</code>is less than <code>sortkey2</code>.       </td></tr><tr><td> Noll       </td><td><code>sortkey1</code>is equal to <code>sortkey2</code>.       </td></tr><tr><td> Större än noll       </td><td><code>sortkey1</code>är större än <code> sortkey2 </code>.       </td></tr></tbody></table>"
  overload: System.Globalization.SortKey.Compare*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sortkey1</code>or <code>sortkey2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.SortKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortKey.Equals(Object)
  fullName: System.Globalization.SortKey.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Anger om det angivna objektet är lika med aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  remarks: "Två <xref:System.Globalization.SortKey>objekt anses vara lika om deras <xref:System.Globalization.SortKey.KeyData%2A>Egenskaper är lika.</xref:System.Globalization.SortKey.KeyData%2A> </xref:System.Globalization.SortKey>       Den här metoden åsidosätter <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the results of Equals when compared with different <xref:System.Globalization.SortKey> objects.  \n  \n [!code-vb[System.Globalization.SortKey.Equals#1](~/add/codesnippet/visualbasic/m-system.globalization.s_0_1.vb)]\n [!code-cpp[System.Globalization.SortKey.Equals#1](~/add/codesnippet/cpp/m-system.globalization.s_0_1.cpp)]\n [!code-cs[System.Globalization.SortKey.Equals#1](~/add/codesnippet/csharp/m-system.globalization.s_0_1.cs)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som ska jämföras med aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <code> value </code> parametern är lika med aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortKey.Equals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.SortKey.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortKey.GetHashCode()
  fullName: System.Globalization.SortKey.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Fungerar som en hash-funktionen för aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt som är lämplig för hash-algoritmer och datastrukturer som en hash-tabell."
  remarks: "Den här metoden genererar samma hash-kod för två objekt som är lika enligt den <xref:System.Globalization.SortKey.Equals%2A>metoden.</xref:System.Globalization.SortKey.Equals%2A>       Den här metoden åsidosätter <xref:System.Object.GetHashCode%2A?displayProperty=fullName>.</xref:System.Object.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash-koden för aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  overload: System.Globalization.SortKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.KeyData
  id: KeyData
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: KeyData
  nameWithType: SortKey.KeyData
  fullName: System.Globalization.SortKey.KeyData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar byte-matris som representerar aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  remarks: "Mer information om hur du använder de data som returneras av egenskapen nyckeldata i jämförelse av strängar finns det <xref:System.Globalization.SortKey>klassen avsnittet.</xref:System.Globalization.SortKey>"
  example:
  - "The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/p-system.globalization.s_0_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/p-system.globalization.s_0_1.cs)]"
  syntax:
    content: public virtual byte[] KeyData { get; }
    return:
      type: System.Byte[]
      description: "En bytematris som representerar aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  overload: System.Globalization.SortKey.KeyData*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.OriginalString
  id: OriginalString
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: OriginalString
  nameWithType: SortKey.OriginalString
  fullName: System.Globalization.SortKey.OriginalString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Hämtar den ursprungliga strängen som används för att skapa aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/p-system.globalization.s_1_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/p-system.globalization.s_1_1.cs)]"
  syntax:
    content: public virtual string OriginalString { get; }
    return:
      type: System.String
      description: "Den ursprungliga strängen som används för att skapa aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  overload: System.Globalization.SortKey.OriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortKey.ToString
  id: ToString
  parent: System.Globalization.SortKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SortKey.ToString()
  fullName: System.Globalization.SortKey.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Returnerar en sträng som representerar aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  remarks: "Det returnera värdet är sammanfogning av strängen &quot;Efter&quot; -, kultur-ID. och med jämförelsealternativ för aktuellt <xref:System.Globalization.SortKey>objekt och värdet för den <xref:System.Globalization.SortKey.OriginalString%2A>egenskapen.</xref:System.Globalization.SortKey.OriginalString%2A> </xref:System.Globalization.SortKey>       Den här metoden åsidosätter <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>"
  example:
  - "The following code example displays an original string, the strings yielded by the ToString method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.  \n  \n [!code-vb[sys.glob.sortkey.tostring#1](~/add/codesnippet/visualbasic/m-system.globalization.s_1_1.vb)]\n [!code-cs[sys.glob.sortkey.tostring#1](~/add/codesnippet/csharp/m-system.globalization.s_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som representerar aktuellt <xref href=&quot;System.Globalization.SortKey&quot;> </xref> objekt."
  overload: System.Globalization.SortKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)
  parent: System.Globalization.SortKey
  isExternal: false
  name: Compare(SortKey,SortKey)
  nameWithType: SortKey.Compare(SortKey,SortKey)
  fullName: System.Globalization.SortKey.Compare(SortKey,SortKey)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.SortKey
  parent: System.Globalization
  isExternal: false
  name: SortKey
  nameWithType: SortKey
  fullName: System.Globalization.SortKey
- uid: System.Globalization.SortKey.Equals(System.Object)
  parent: System.Globalization.SortKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SortKey.Equals(Object)
  fullName: System.Globalization.SortKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortKey.GetHashCode
  parent: System.Globalization.SortKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SortKey.GetHashCode()
  fullName: System.Globalization.SortKey.GetHashCode()
- uid: System.Globalization.SortKey.KeyData
  parent: System.Globalization.SortKey
  isExternal: false
  name: KeyData
  nameWithType: SortKey.KeyData
  fullName: System.Globalization.SortKey.KeyData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.SortKey.OriginalString
  parent: System.Globalization.SortKey
  isExternal: false
  name: OriginalString
  nameWithType: SortKey.OriginalString
  fullName: System.Globalization.SortKey.OriginalString
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.SortKey.ToString
  parent: System.Globalization.SortKey
  isExternal: false
  name: ToString()
  nameWithType: SortKey.ToString()
  fullName: System.Globalization.SortKey.ToString()
- uid: System.Globalization.SortKey.Compare*
  parent: System.Globalization.SortKey
  isExternal: false
  name: Compare
  nameWithType: SortKey.Compare
- uid: System.Globalization.SortKey.Equals*
  parent: System.Globalization.SortKey
  isExternal: false
  name: Equals
  nameWithType: SortKey.Equals
- uid: System.Globalization.SortKey.GetHashCode*
  parent: System.Globalization.SortKey
  isExternal: false
  name: GetHashCode
  nameWithType: SortKey.GetHashCode
- uid: System.Globalization.SortKey.KeyData*
  parent: System.Globalization.SortKey
  isExternal: false
  name: KeyData
  nameWithType: SortKey.KeyData
- uid: System.Globalization.SortKey.OriginalString*
  parent: System.Globalization.SortKey
  isExternal: false
  name: OriginalString
  nameWithType: SortKey.OriginalString
- uid: System.Globalization.SortKey.ToString*
  parent: System.Globalization.SortKey
  isExternal: false
  name: ToString
  nameWithType: SortKey.ToString
