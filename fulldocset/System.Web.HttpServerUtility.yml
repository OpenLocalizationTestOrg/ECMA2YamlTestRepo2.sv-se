### YamlMime:ManagedReference
items:
- uid: System.Web.HttpServerUtility
  id: HttpServerUtility
  children:
  - System.Web.HttpServerUtility.ClearError
  - System.Web.HttpServerUtility.CreateObject(System.String)
  - System.Web.HttpServerUtility.CreateObject(System.Type)
  - System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  - System.Web.HttpServerUtility.Execute(System.String)
  - System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.GetLastError
  - System.Web.HttpServerUtility.HtmlDecode(System.String)
  - System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.HtmlEncode(System.String)
  - System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.MachineName
  - System.Web.HttpServerUtility.MapPath(System.String)
  - System.Web.HttpServerUtility.ScriptTimeout
  - System.Web.HttpServerUtility.Transfer(System.String)
  - System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  - System.Web.HttpServerUtility.UrlDecode(System.String)
  - System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlEncode(System.String)
  - System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlPathEncode(System.String)
  - System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  - System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  langs:
  - csharp
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
  type: Class
  summary: "Ger helper metoder för bearbetning av webbegäranden."
  remarks: "Metoder och egenskaper i klassen HttpServerUtility är tillgängliga via den inre <xref:System.Web.HttpContext.Server%2A>objekt som tillhandahålls av ASP.NET.</xref:System.Web.HttpContext.Server%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).  \n  \n The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the HttpServerUtility class. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements. The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.  \n  \n [!code-cs[System.Web.HttpServerUtility1#1](~/add/codesnippet/csharp/t-system.web.httpserveru_1.aspx)]\n [!code-vb[System.Web.HttpServerUtility1#1](~/add/codesnippet/visualbasic/t-system.web.httpserveru_1.aspx)]"
  syntax:
    content: public sealed class HttpServerUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ClearError
  id: ClearError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rensar tidigare undantag."
  remarks: ''
  example:
  - "The following example clears the last exception that was thrown.  \n  \n [!code-cs[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_6_1.cs)]\n [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_6_1.vb)]"
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpServerUtility.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  id: CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Skapar en server-instans av ett COM-objekt som identifieras av objektets programmässiga identifierare (ProgID)."
  remarks: ''
  example:
  - "The following example creates an object by using the object's ProgID.  \n  \n [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_4_1.vb)]\n [!code-cs[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_4_1.cs)]"
  syntax:
    content: public object CreateObject (string progID);
    parameters:
    - id: progID
      type: System.String
      description: "Den klass eller en typ av objekt du vill skapa en instans av."
    return:
      type: System.Object
      description: "Det nya objektet."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Det gick inte att skapa en instans av objektet."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  id: CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Skapar en server-instans av ett COM-objekt som identifieras av objekttypen."
  syntax:
    content: public object CreateObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "En <xref:System.Type>som representerar objektet som skapas.</xref:System.Type>"
    return:
      type: System.Object
      description: "Det nya objektet."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  id: CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Skapar en server-instans av ett COM-objekt som identifieras av objektets klass-ID (CLSID)."
  remarks: ''
  example:
  - "The following example demonstrates how to use the CreateObjectFromClsid method to create a server instance of a COM object.  \n  \n [!code-cs[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_2_1.cs)]\n [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_2_1.vb)]"
  syntax:
    content: public object CreateObjectFromClsid (string clsid);
    parameters:
    - id: clsid
      type: System.String
      description: "Klass-ID i objektet för att skapa en instans av."
    return:
      type: System.Object
      description: "Det nya objektet."
  overload: System.Web.HttpServerUtility.CreateObjectFromClsid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Det gick inte att skapa en instans av objektet."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String)
  id: Execute(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kör hanteraren för den angivna virtuella sökvägen i kontexten för den aktuella begäranden."
  remarks: "Metoden Execute fortsätter körningen av den ursprungliga sidan efter körning av den nya sidan har slutförts. Den <xref:System.Web.HttpServerUtility.Transfer%2A>metoden Överför ovillkorligt körningen till en annan hanterare.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av Execute-metoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar hanteraren som anges av metoden Execute ASP.NET direkt och igen inte logik för autentisering och auktorisering för den nya resursen. Om ditt program säkerhetsprincip kräver att klienter ska ha rätt åtkomstbehörighet till resursen, programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för metoden Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Utför en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för både Internet Information Services (IIS) och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar metoden Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example displays the .aspx page \"Updateinfo.aspx\" in the current directory. Program execution returns to the starting page after the Updateinfo.aspx page is displayed.  \n  \n [!code-vb[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_15_1.vb)]\n [!code-cs[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_15_1.cs)]"
  syntax:
    content: public void Execute (string path);
    parameters:
    - id: path
      type: System.String
      description: "URL-sökvägen ska köras."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  id: Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kör hanteraren för den angivna virtuella sökvägen i kontexten för den aktuella begäranden och anger om du vill avmarkera det <> </> *> och <> </> *> samlingar."
  remarks: ''
  example:
  - "The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections. Program execution returns to the starting page after `Updateinfo.aspx` is displayed.  \n  \n [!code-vb[HttpServerUtility.Execute#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_16_1.aspx)]\n [!code-cs[HttpServerUtility.Execute#1](~/add/codesnippet/csharp/m-system.web.httpserveru_16_1.aspx)]"
  syntax:
    content: public void Execute (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "URL-sökvägen ska köras."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> och <> </> *> samlingar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  id: Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kör hanteraren för den angivna virtuella sökvägen i kontexten för den aktuella begäranden. En <xref:System.IO.TextWriter>samlar in utdata från den körda hanteraren.</xref:System.IO.TextWriter>"
  remarks: "Metoden Execute fortsätter körningen av den ursprungliga begäranden när körningen av den virtuella sökvägen som angetts har slutförts. Den <xref:System.Web.HttpServerUtility.Transfer%2A>metoden Överför ovillkorligt körningen till en annan hanterare.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av Execute-metoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar hanteraren som anges av metoden Execute ASP.NET direkt och igen inte logik för autentisering och auktorisering för den nya resursen. Om ditt program säkerhetsprincip kräver att klienter ska ha rätt åtkomstbehörighet till resursen, programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för metoden Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Utför en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för både Internet Information Services (IIS) och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar metoden Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream.  \n  \n [!code-cs[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_12_1.cs)]\n [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_12_1.vb)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer);
    parameters:
    - id: path
      type: System.String
      description: "URL-sökvägen ska köras."
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>att samla in utdata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  id: Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kör hanteraren för den angivna virtuella sökvägen i kontexten för den aktuella begäranden. En <xref:System.IO.TextWriter>registrerar utdata från sidan och en boolesk parameter som anger om du vill avmarkera det <> </> *> och <> </> *> samlingar.</xref:System.IO.TextWriter>"
  remarks: "Den <xref:System.Web.HttpServerUtility.Execute%2A>metoden fortsätter körningen av den ursprungliga begäranden när körningen av den angivna virtuella sökvägen har slutförts.</xref:System.Web.HttpServerUtility.Execute%2A> Den <xref:System.Web.HttpServerUtility.Transfer%2A>metoden Överför ovillkorligt körningen till en annan hanterare.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av Execute-metoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar hanteraren som anges av metoden Execute ASP.NET direkt och igen inte logik för autentisering och auktorisering för den nya resursen. Om ditt program säkerhetsprincip kräver att klienter ska ha rätt åtkomstbehörighet till resursen, programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för metoden Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Utför en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för både Internet Information Services (IIS) och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar metoden Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream. The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.  \n  \n [!code-cs[HttpServerUtility.Execute02#1](~/add/codesnippet/csharp/0d13d28c-0070-4c47-b943-_1.aspx)]\n [!code-vb[HttpServerUtility.Execute02#1](~/add/codesnippet/visualbasic/0d13d28c-0070-4c47-b943-_1.aspx)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "URL-sökvägen ska köras."
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>att samla in utdata.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> och <> </> *> samlingar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).  \n  \n \\- or -  \n  \n <code>path</code> ends with a period (.).  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är inte en virtuell sökväg."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  id: Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kör hanteraren för den angivna virtuella sökvägen i kontexten för den aktuella begäranden. En <xref:System.IO.TextWriter>registrerar utdata från utförs hanteraren och en boolesk parameter som anger om du vill avmarkera det <> </> *> och <> </> *> samlingar.</xref:System.IO.TextWriter>"
  remarks: "Du kan skriva anpassade HTTP-hanterare för att bearbeta specifik, fördefinierade typer av HTTP-begäranden på alla språk som är kompatibel med Common Language Specification (CLS). Körbar kod som har definierats i HTTP-hanterare klasser i stället för vanliga (även kallat klassiska ASP) för ASP-sidor eller ASP.NET-sidor besvarar dessa specifika förfrågningar. Tillåt att HTTP-hanterare för att interagera med lågnivå-begäran och svar tjänster för en webbserver som kör Internet Information Services (IIS) och liknande funktioner som ger till ISAPI-tillägg, men med en enklare programmeringsmodell.       ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras med Execute-metoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar ASP.NET direkt hanteraren som anges av metoden Execute och körs inte på nytt logik för autentisering och auktorisering för den nya resursen. Om säkerhetsprincipen för ditt program kräver att klienter har lämplig behörighet att få åtkomst till resursen, måste programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för metoden Execute.</xref:System.Web.HttpResponse.Redirect%2A> Den <xref:System.Web.HttpResponse.Redirect%2A>utför en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för IIS- och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar metoden Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "HTTP-hanterare som implementerar det <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> att överföra den aktuella begäranden."
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>att samla in utdata.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> och <> </> *> samlingar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ett fel uppstod när hanteraren som har angetts av <code> handler </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>handler</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.GetLastError
  id: GetLastError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returnerar föregående undantaget."
  remarks: ''
  example:
  - "The following example prints a description of the application's last error to the HTTP output stream. It prints \"No Errors\" if no errors have been encountered.  \n  \n [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_8_1.vb)]\n [!code-cs[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_8_1.cs)]"
  syntax:
    content: public Exception GetLastError ();
    parameters: []
    return:
      type: System.Exception
      description: "Den tidigare undantag utlöstes."
  overload: System.Web.HttpServerUtility.GetLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avkodar ett HTML-kodad sträng och avkodade strängen."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly. HtmlDecode decodes text that has been transmitted to the server.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.  \n  \n [!code-cs[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_14_1.aspx)]\n [!code-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_14_1.aspx)]"
  syntax:
    content: public string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "HTML-strängen att avkoda."
    return:
      type: System.String
      description: "Den avkodade texten."
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avkodar ett HTML-kodad sträng och skickar det resulterande utdata till en <xref:System.IO.TextWriter>utdataströmmen.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example decodes a string that has been HTML-encoded for transmission over HTTP. It decodes the supplied string named `EncodedString` which contains the text \"This is a &lt;Test String&gt;.\", and copies it into the string named `DecodedString` as \"This is a \\<Test String>.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "HTML-strängen att avkoda."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>utdataströmmen som innehåller den avkodade strängen.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTML-kodas en sträng och returnerar kodad sträng."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example shows how to HTML-encode a value that potentially codes unsafe code. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode. Typically, you would HTML-encode a value that you received from the user or the request. `Result` refers to a `Literal` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_10_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_10_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_2.vb)]"
  syntax:
    content: public string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "En textsträng att koda."
    return:
      type: System.String
      description: "Texten som HTML-kodas."
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTML-kodas en sträng och skickar utdata till en <xref:System.IO.TextWriter>utdataströmmen.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag. The HTML encoding of these two characters is `<` and `>`, respectively, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This is a &lt;Test String&gt;.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_7_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_7_1.cs)]"
  syntax:
    content: public void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Strängen som koda."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>utdataströmmen som innehåller kodad sträng.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MachineName
  id: MachineName
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hämtar de server-datornamn."
  remarks: ''
  example:
  - "The following example stores the server's computer name as a string variable.  \n  \n [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_0_1.vb)]\n [!code-cs[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_0_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "Namnet på den lokala datorn."
  overload: System.Web.HttpServerUtility.MachineName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Namnet på datorn kan inte hittas."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returnerar den fysiska sökväg som motsvarar den angivna virtuella sökvägen."
  remarks: "If `path` is `null`, the MapPath method returns the full physical path of the directory that contains the current request for the path. The relative path does not need to specify an existing file or folder for this method to return a value. However, you cannot specify a path outside of the Web application.  \n  \n> [!IMPORTANT]\n>  The MapPath method potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.  \n  \n A Web application that resides at `C:\\ExampleSites\\TestMapPath` would return the following results:  \n  \n|Request from|`path`|Returned value|  \n|------------------|------------|--------------------|  \n|RootLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath|  \n|RootLevelPage.aspx|\"/DownOneLevel/DownLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\DownOneLevel\\DownLevelPage.aspx|  \n|RootLevelPage.aspx|\"/NotRealFolder\"|C:\\ExampleSites\\TestMapPath\\NotRealFolder|  \n|RootLevelPage.aspx|\"../OutsideApplication\"|<xref:System.Web.HttpException>|  \n|/DownOneLevel/DownLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath\\DownOneLevel|  \n|/DownOneLevel/DownLevelPage.aspx|\"../RootLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\RootLevelPage.aspx|"
  example:
  - "The following example shows how to retrieve the physical file of a relative virtual path. The code resides in the code-behind file for a web page and utilizes the default `Server` object.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/csharp/m-system.web.httpserveru_5_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/csharp/m-system.web.httpserveru_5_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_2.vb)]"
  syntax:
    content: public string MapPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Den virtuella sökvägen i webbprogrammet."
    return:
      type: System.String
      description: "Den fysiska sökvägen på webbservern som motsvarar <code> path </code>."
  overload: System.Web.HttpServerUtility.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ScriptTimeout
  id: ScriptTimeout
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hämtar eller anger begäran-timeout-värdet i sekunder."
  remarks: "Egenskapen ScriptTimeout kan anges i Web.config-filen genom att ange den `executionTimeout` attribut för elementet. Ange timeout programmässigt med egenskapen ScriptTimeout företräde framför inställningen Web.config.      > [!NOTE] > Om du ställer in den `debug` attribut för elementet så att `true` i Web.config-filen värdet för ScriptTimeout kommer att ignoreras."
  example:
  - "The following example sets the request time-out period to 60 seconds.  \n  \n [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public int ScriptTimeout { get; set; }
    return:
      type: System.Int32
      description: "Timeout-värde-inställningen för begäranden."
  overload: System.Web.HttpServerUtility.ScriptTimeout*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tidsgränsen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller på annat sätt gick inte att ange."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  id: Transfer(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avslutar körning av den aktuella sidan och startar körningen av en ny sida med hjälp av den angivna URL-sökvägen på sidan för den aktuella begäranden."
  remarks: "Sidan som överförs till måste vara en annan .aspx-sida. Till exempel är en överföring till en ASP- eller .asmx sida inte giltig. Överföringsmetoden bevarar de <xref:System.Web.HttpRequest.QueryString%2A>och <xref:System.Web.HttpRequest.Form%2A>samlingar.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>       Överför anrop <xref:System.Web.HttpResponse.End%2A>, vilket ger en <xref:System.Threading.ThreadAbortException>undantag vid slutförandet.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av överföringsmetoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar hanteraren som anges av överföringsmetoden direkt i ASP.NET och körs inte på nytt logik för autentisering och auktorisering för den nya resursen. Om ditt program säkerhetsprincip kräver att klienter ska ha rätt åtkomstbehörighet till resursen, programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för överföringsmetoden.</xref:System.Web.HttpResponse.Redirect%2A> Den <xref:System.Web.HttpResponse.Redirect%2A>metoden utförs en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för både Internet Information Services (IIS) och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar överföringsmetoden.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (string path);
    parameters:
    - id: path
      type: System.String
      description: "Den nya sidan på servern för att köra URL-sökvägen."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  id: Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avslutar körning av den aktuella sidan och startar körning av en ny sida med den angivna URL-sökvägen på sidan. Anger om du vill avmarkera det <> </> *> och <> </> *> samlingar."
  remarks: "Sidan som överförs till måste vara en annan .aspx-sida. Till exempel är en överföring till en ASP- eller .asmx sida inte giltig.       Överför anrop <xref:System.Web.HttpResponse.End%2A>, vilket ger en <xref:System.Threading.ThreadAbortException>undantag vid slutförandet.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       Om du ställer in den `preserveForm` parameter till `true`, målsidan kommer att kunna komma åt visningsstatus för föregående sida med hjälp av den <xref:System.Web.UI.Page.PreviousPage%2A>egenskapen.</xref:System.Web.UI.Page.PreviousPage%2A>       Av säkerhetsskäl bör du behålla den `enableViewStateMac` -attributet inställt på `true`. ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av överföringsmetoden. Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, anropar hanteraren som anges av överföringsmetoden direkt i ASP.NET och körs inte på nytt logik för autentisering och auktorisering för den nya resursen. Om ditt program säkerhetsprincip kräver att klienter ska ha rätt åtkomstbehörighet till resursen, programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för överföringsmetoden.</xref:System.Web.HttpResponse.Redirect%2A> Den <xref:System.Web.HttpResponse.Redirect%2A>metoden utförs en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för både Internet Information Services (IIS) och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar överföringsmetoden.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes a new page in the same directory as the current page.  \n  \n [!code-cs[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_3_1.cs)]\n [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_3_1.vb)]"
  syntax:
    content: public void Transfer (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Den nya sidan på servern för att köra URL-sökvägen."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> och <> </> *> samlingar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Den aktuella sida-begäranden har ett återanrop."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  id: Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avslutar körning av den aktuella sidan och startar körning av en ny begäran genom att använda en anpassad HTTP-hanterare som implementerar det <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> gränssnitt och anger om du vill avmarkera det <> </> *> och <> </> *> samlingar."
  remarks: "Du kan skriva anpassade HTTP-hanterare för att bearbeta specifik, fördefinierade typer av HTTP-begäranden på alla språk som är kompatibel med Common Language Specification (CLS). Körbar kod som har definierats i HTTP-hanterare klasser i stället för vanliga (även kallat klassiska ASP) för ASP-sidor eller ASP.NET-sidor besvarar dessa specifika förfrågningar. Tillåt att HTTP-hanterare för att interagera med lågnivå-begäran och svar tjänster för en webbserver som kör Internet Information Services (IIS) och liknande funktioner som ger till ISAPI-tillägg, men med en enklare programmeringsmodell.       Om du ställer in den `preserveForm` parameter till `true`, målsidan kommer att kunna komma åt visningsstatus för föregående sida med hjälp av den <xref:System.Web.UI.Page.PreviousPage%2A>egenskapen.</xref:System.Web.UI.Page.PreviousPage%2A>       Av säkerhetsskäl bör du behålla den `enableViewStateMac` -attributet inställt på `true`. ASP.NET kontrollerar inte att den aktuella användaren har behörighet att visa den resurs som levereras av den <xref:System.Web.HttpServerUtility.Transfer%2A>metoden.</xref:System.Web.HttpServerUtility.Transfer%2A> Även om ASP.NET autentiseringen och auktoriseringen av logik körs innan ursprungliga hanteraren för filserverresurser anropas, ASP.NET direkt anropar hanteraren som anges av överföringsmetoden och körs inte på nytt logik för autentisering och auktorisering för den nya resursen. Om säkerhetsprincipen för ditt program kräver att klienter ska ha lämplig behörighet att komma åt resursen kan programmet tvinga omauktorisering eller tillhandahåller en mekanism för anpassade åtkomstkontroll.       Du kan tvinga omauktorisering med hjälp av den <xref:System.Web.HttpResponse.Redirect%2A>metoden i stället för överföringsmetoden.</xref:System.Web.HttpResponse.Redirect%2A> Den <xref:System.Web.HttpResponse.Redirect%2A>metoden utförs en klientsidan omdirigering där webbläsaren begär den nya resursen.</xref:System.Web.HttpResponse.Redirect%2A> Eftersom den här omdirigering är en ny begäran om att ange systemet, utsätts det för alla autentisering och auktorisering logiken för IIS- och ASP.NET säkerhetsprincip.       Du kan kontrollera att användaren har behörighet att visa resursen genom att inkludera en metod för anpassad auktorisering som använder den <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metoden innan programmet anropar överföringsmetoden.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "HTTP-hanterare som implementerar det <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> att överföra den aktuella begäranden."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> och <> </> *> samlingar; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Den aktuella sida-begäranden har ett återanrop."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  id: TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Utför en asynkron körning av den angivna URL: en."
  remarks: "Anropar den här metodöverlagringen den <xref:System.Web.HttpServerUtility.TransferRequest%2A>överlagra med den `preserveForm` parametern `false`, `method` parametern `null`, `headers` parametern `null`, och `preserveUser` parametern `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Mer information finns i avsnittet &quot;Anmärkningar&quot; i <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>överlagra.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path);
    parameters:
    - id: path
      type: System.String
      description: "Den nya sidan på servern för att köra URL-sökvägen."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Begäran kräver integrerat pipeline-läge för [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Servern är inte tillgänglig för att hantera begäran."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är ogiltig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  id: TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Utför en asynkron körning av den angivna URL: en och bevarar sträng Frågeparametrar."
  remarks: "Denna överlagring anropar den <xref:System.Web.HttpServerUtility.TransferRequest%2A>överlagra med den `preserveForm` parametern anges till det värde som skickades i `method` parametern `null`, `headers` parametern `null`, och `preserveUser` parametern `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Mer information finns i avsnittet &quot;Anmärkningar&quot; i <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>       TransferRequest introducerades i .NET Framework version 3.5.  Mer information finns i [versioner och beroenden](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void TransferRequest (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Den nya sidan på servern för att köra URL-sökvägen."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> mängd; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ta bort den <> </> *> samling."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Begäran kräver integrerat pipeline-läge för [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Servern är inte tillgänglig för att hantera begäran."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är ogiltig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Utför en asynkron körning av den angivna URL: en med hjälp av den angivna HTTP-metoden och rubriker."
  remarks: "Den här metoden används när du kör med integrerat pipeline-läge i [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] att bearbetningen ska överföras från en resurstyp till en annan vid körning på mål-begäran med rätt begärandekontexten. Du kan till exempel använda metoden TransferRequest för att överföra en begäran om en ASPX-sida för en begäran om en XML-sida.       Metoden TransferRequest utför en asynkron underordnade körning av den angivna URL: en med följande villkor: – om den `path` parametern anger en frågesträng, den kommer att användas som den nya frågesträngen. Om det finns inga frågesträngen kan frågesträngen i begäran återanvändas.      -Om den `method` parameter har angetts, kommer att användas. Om det är `null`, HTTP-metoden för den ursprungliga begäranden kommer att användas.      -Om den `preserveForm` parametern är `true`, aktuella objektsinnehållet i begäran kommer att kunna mål-begäran. Detta gör att formuläret inlägg och överför för att överföras.      – Om det användar-ID är för närvarande inställd på den ursprungliga begäranden, överförs identiteten till den nya begäranden. Detta gör att autentiserade begäranden att återanvända resultatet av autentisering för den nya begäranden. Om du inte vill att användaren ska överföras tilldelas användaren `null` på den ursprungliga begäranden innan du överför.      -Om den `headers` anges för parametern, ny begäran kommer att köras med de angivna huvudena. Detta kan användas för att ändra begärandehuvuden och cookies för ny begäran eller lägga till en särskild huvud som anger om den ursprungliga begäranden togs emot.           Den här metoden anropar den <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>metodöverlagringen med den `preserveUser` parametern `true`.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "Den nya sidan på servern för att köra URL-sökvägen."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> mängd; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ta bort den <> </> *> samling."
    - id: method
      type: System.String
      description: "HTTP-metoden ska användas i körningen av den nya begäranden."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> av begärandehuvudena för ny begäran."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Begäran kräver [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] körs i integrerat läge."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Servern är inte tillgänglig för att hantera begäran."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är ogiltig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Utför en asynkron körning av den angivna URL: en med hjälp av den angivna HTTP-metoden, rubriker och sökväg och bevarar eventuellt formulärvärden och användaridentitet."
  remarks: "Mer information finns i avsnittet &quot;Anmärkningar&quot; i <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara den <> </> *> mängd; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ta bort den <> </> *> samling."
    - id: method
      type: System.String
      description: "HTTP-metoden ska användas i en ny begäran."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objekt som innehåller begärandehuvuden för ny begäran."
    - id: preserveUser
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att bevara användarens identitet. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. De andra metoden överlagringarna av den här metoden anropa denna överlagring med den här parametern anger <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Begäran kräver integrerat pipeline-läge för [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Servern är inte tillgänglig för att hantera begäran."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är ogiltig."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-avkodar en sträng och avkodade strängen."
  remarks: "URL-kodning säkerställer att alla webbläsare korrekt Överför text i URL-strängar. Tecken, till exempel ett frågetecken (?), markera et-tecken (&), snedstreck (/) och blanksteg kan trunkeras eller skadad av vissa webbläsare. Därför kan dessa tecken måste vara kodad i `<a>` taggar eller strängar i fråga där strängarna kan skickas igen med en webbläsare i en begäran-sträng.       Den här metoden är ett bekvämt sätt att komma åt den <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metoden vid körning från ett ASP.NET-program.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> Den här metoden använder internt, <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>att avkoda strängar.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>       I filen bakomliggande kod för en ASP.NET-webbsida åtkomst till en instans av den <xref:System.Web.HttpServerUtility>klassen via den `Server` egenskapen.</xref:System.Web.HttpServerUtility> I en klass som inte är i en bakomliggande kod-fil, använda `HttpContext.Current.Server` åtkomst till en instans av <xref:System.Web.HttpServerUtility>klassen.</xref:System.Web.HttpServerUtility>       Utanför ett webbprogram, kan du använda den <xref:System.Net.WebUtility>klass för att koda eller avkoda värden.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-decode a value that is retrieved from the query string. The code resides in the code-behind file for a web page. `ReturnPage` refers to a `HyperLink` control.  \n  \n [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_1.vb)]\n [!code-cs[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_9_1.cs)]  \n  \n The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_9_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_2.vb)]"
  syntax:
    content: public string UrlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "En textsträng att avkoda."
    return:
      type: System.String
      description: "Den avkodade texten."
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  id: UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avkodar en HTML-sträng som togs emot i en URL och skickar det resulterande utdata till en <xref:System.IO.TextWriter>utdataströmmen.</xref:System.IO.TextWriter>"
  remarks: "URL-kodning säkerställer att alla webbläsare korrekt Överför text i URL-strängar. Tecken, till exempel ett frågetecken (?), markera et-tecken (&), snedstreck (/) och blanksteg kan trunkeras eller skadad av vissa webbläsare. Därför kan dessa tecken måste vara kodad i `<a>` taggar eller strängar i fråga där strängarna kan skickas igen med en webbläsare i en begäran-sträng.       <xref:System.Web.HttpServerUtility.UrlDecode%2A>är ett bekvämt sätt att komma åt den <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metoden vid körning från ett ASP.NET-program.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlDecode%2A> Internt <xref:System.Web.HttpServerUtility.UrlDecode%2A>använder <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>att avkoda strängar.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlDecode%2A>       Om du vill koda eller avkoda värden som ligger utanför ett webbprogram, använder du <xref:System.Net.WebUtility>klassen.</xref:System.Net.WebUtility>"
  example:
  - "The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.  \n  \n [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_11_1.vb)]\n [!code-cs[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_11_1.cs)]"
  syntax:
    content: public void UrlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "HTML-strängen att avkoda."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>utdataströmmen som innehåller den avkodade strängen.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-kodar en sträng och returnerar kodad sträng."
  remarks: "URL-kodning säkerställer att alla webbläsare korrekt Överför text i URL-strängar. Tecken, till exempel ett frågetecken (?), markera et-tecken (&), snedstreck (/) och blanksteg kan trunkeras eller skadad av vissa webbläsare. Därför kan dessa tecken måste vara kodad i `<a>` taggar eller strängar i fråga där strängarna kan skickas igen med en webbläsare i en begäran-sträng.       Den här metoden är ett bekvämt sätt att komma åt den <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metoden vid körning från ett ASP.NET-program.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> Den här metoden använder internt, <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>att koda strängar.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>       I filen bakomliggande kod för en ASP.NET-webbsida åtkomst till en instans av den <xref:System.Web.HttpServerUtility>klassen via den `Server` egenskapen.</xref:System.Web.HttpServerUtility> I en klass som inte är i en bakomliggande kod-fil, använda `HttpContext.Current.Server` åtkomst till en instans av <xref:System.Web.HttpServerUtility>klassen.</xref:System.Web.HttpServerUtility>       Utanför ett webbprogram, kan du använda den <xref:System.Net.WebUtility>klass för att koda eller avkoda värden.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-encode a value that is used as a query string value of a hyperlink. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode. Typically, you would URL-encode a value that you received from the user or the request. `NextPage` refers to a `HyperLink` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_0_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_0_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_2.vb)]"
  syntax:
    content: public string UrlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Texten som ska användas för kodning av URL: en."
    return:
      type: System.String
      description: "Den URL-kodade texten."
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  id: UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-kodar en sträng och skickar utdata till en <xref:System.IO.TextWriter>utdataströmmen.</xref:System.IO.TextWriter>"
  remarks: "URL-kodning säkerställer att alla webbläsare korrekt Överför text i URL-strängar. Tecken, till exempel ett frågetecken (?), markera et-tecken (&), snedstreck (/) och blanksteg kan trunkeras eller skadad av vissa webbläsare. Därför kan dessa tecken måste vara kodad i `<a>` taggar eller strängar i fråga där strängarna kan skickas igen med en webbläsare i en begäran-sträng.       <xref:System.Web.HttpServerUtility.UrlEncode%2A>är ett bekvämt sätt att komma åt den <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metoden vid körning från ett ASP.NET-program.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlEncode%2A> Internt <xref:System.Web.HttpServerUtility.UrlEncode%2A>använder <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>att koda strängar.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlEncode%2A>       Om du vill koda eller avkoda värden som ligger utanför ett webbprogram, använder du <xref:System.Net.WebUtility>klassen.</xref:System.Net.WebUtility>"
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This+is+a+%3cTest+String%3e.\".  \n  \n [!code-cs[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_13_1.cs)]\n [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_13_1.vb)]"
  syntax:
    content: public void UrlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "En textsträng att koda."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>utdataströmmen som innehåller kodad sträng.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Använd inte; endast avsedd för webbläsarkompatibilitet. Använd <xref:System.Web.HttpServerUtility.UrlEncode*>.</xref:System.Web.HttpServerUtility.UrlEncode*>"
  syntax:
    content: public string UrlPathEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Texten som ska användas för kodning av URL: en."
    return:
      type: System.String
      description: "URL: en kodad text."
  overload: System.Web.HttpServerUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  id: UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avkodar en URL strängtoken i dess motsvarande bytematris med base 64 tecken."
  remarks: "Metoden UrlTokenDecode konverterar en URL-strängtoken som kodar binärdata som base 64 siffror, till dess motsvarande byte array-representation. Använd metoden UrlTokenDecode för att avkoda token överförda på URL: en och kodad med hjälp av <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>       UrlTokenDecode-metoden returnerar en tom bytematris om den `input` parametern har en längd på mindre än&1;."
  syntax:
    content: public static byte[] UrlTokenDecode (string input);
    parameters:
    - id: input
      type: System.String
      description: "URL: en strängtoken att avkoda."
    return:
      type: System.Byte[]
      description: "Byte-matris som innehåller avkodade strängen-URL: en token."
  overload: System.Web.HttpServerUtility.UrlTokenDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Värdet för den <code> input </code> parametern är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  id: UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kodar en byte-matris till dess motsvarande strängrepresentation med base 64 tecken, vilket är användbart för överföring på URL: en."
  remarks: "Metoden UrlTokenEncode konverterar en byte-matris till ett motsvarande strängrepresentation kodad med base 64 tecken. Den resulterande strängtoken kan överföras på URL: en.       UrlTokenEncode returneras en tom sträng om den `input` parametern har en längd på mindre än&1;."
  syntax:
    content: public static string UrlTokenEncode (byte[] input);
    parameters:
    - id: input
      type: System.Byte[]
      description: "Bytematrisen för kodning."
    return:
      type: System.String
      description: "Den sträng som innehåller den kodade token om byte-matris *längd* är större än ett, annars en tom sträng (&quot;&quot;)."
  overload: System.Web.HttpServerUtility.UrlTokenEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Värdet för den <code> input </code> parametern är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Web.HttpServerUtility.ClearError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
- uid: System.Web.HttpServerUtility.Execute(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpServerUtility.GetLastError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.MachineName
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
- uid: System.Web.HttpServerUtility.ScriptTimeout
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
- uid: System.Web.HttpServerUtility.ClearError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError
  nameWithType: HttpServerUtility.ClearError
- uid: System.Web.HttpServerUtility.CreateObject*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject
  nameWithType: HttpServerUtility.CreateObject
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid
  nameWithType: HttpServerUtility.CreateObjectFromClsid
- uid: System.Web.HttpServerUtility.Execute*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute
  nameWithType: HttpServerUtility.Execute
- uid: System.Web.HttpServerUtility.GetLastError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError
  nameWithType: HttpServerUtility.GetLastError
- uid: System.Web.HttpServerUtility.HtmlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpServerUtility.HtmlDecode
- uid: System.Web.HttpServerUtility.HtmlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpServerUtility.HtmlEncode
- uid: System.Web.HttpServerUtility.MachineName*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath
  nameWithType: HttpServerUtility.MapPath
- uid: System.Web.HttpServerUtility.ScriptTimeout*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
- uid: System.Web.HttpServerUtility.Transfer*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer
  nameWithType: HttpServerUtility.Transfer
- uid: System.Web.HttpServerUtility.TransferRequest*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest
  nameWithType: HttpServerUtility.TransferRequest
- uid: System.Web.HttpServerUtility.UrlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpServerUtility.UrlDecode
- uid: System.Web.HttpServerUtility.UrlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpServerUtility.UrlEncode
- uid: System.Web.HttpServerUtility.UrlPathEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpServerUtility.UrlPathEncode
- uid: System.Web.HttpServerUtility.UrlTokenDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode
  nameWithType: HttpServerUtility.UrlTokenDecode
- uid: System.Web.HttpServerUtility.UrlTokenEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode
  nameWithType: HttpServerUtility.UrlTokenEncode
