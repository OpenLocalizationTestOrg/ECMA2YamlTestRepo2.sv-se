### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  id: ReliableSessionBindingElement
  children:
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  - System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  - System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  - System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  - System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
  type: Class
  summary: "Representerar bindningselement som kan producera sändande och mottagande kanaler som krävs för en tillförlitlig session mellan slutpunkter."
  remarks: "Innehåller sessioner samt eventuellt beställda meddelandeleverans. Den här implementerade sessionen kan passera SOAP- och mellanhand.       Varje bindningselement representerar ett bearbetningssteg att skicka eller ta emot meddelanden. Vid körning skapa bindningselementen kanalfabriker och lyssnare som är nödvändiga för att skapa utgående och inkommande kanal stackar som krävs för att skicka och ta emot meddelanden. ReliableSessionBindingElement ger ett extra lager i stapeln som kan upprätta en tillförlitlig session mellan slutpunkter och konfigurera beteendet för den här sessionen.       ReliableSessionBindingElement finns på bindningarna som standard i följande tabell.      | Bindning | Standard |   |-------------|-------------|   | <xref:System.ServiceModel.NetTcpBinding>| Inaktivera |   | <xref:System.ServiceModel.WSHttpBinding>| Inaktivera |   | <xref:System.ServiceModel.WSDualHttpBinding>| På (krävs) |</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>"
  example:
  - "The ReliableSessionBindingElement can be added to any custom binding. This is done using the following configuration elements.  \n  \n```  \n<bindings>  \n    <customBinding>  \n        <binding configurationName=”ReliabilityHTTP”>  \n            <reliableSession/>  \n        </binding>  \n    </customBinding>  \n</bindings>  \n```  \n  \n The following sample code demonstrates how to use ReliableSessionBindingElement in code.  \n  \n [!code-vb[S_Imperative#1](~/add/codesnippet/visualbasic/t-system.servicemodel.ch_0_1.vb)]\n [!code-cs[S_Imperative#1](~/add/codesnippet/csharp/t-system.servicemodel.ch_0_1.cs)]"
  syntax:
    content: 'public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> klass."
  syntax:
    content: public ReliableSessionBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> klass som anger om meddelandeleverans måste bevara den ordning som meddelanden skickas."
  syntax:
    content: public ReliableSessionBindingElement (bool ordered);
    parameters:
    - id: ordered
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om meddelanden måste levereras i den ordning som de skickas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger tidsintervall som en destination väntar innan en bekräftelse skickas till meddelandekällan via tillförlitliga kanaler som skapas av tillverkningen."
  remarks: "Det mål som tar emot meddelanden på en tillförlitlig kanal grupperas bekräftelser för meddelanden tillsammans i ett enda meddelande att minska nätverkstrafiken och öka information på meddelanden. Gruppering skalas bättre när trafiken ökar. Den försöker inte att skicka en bekräftelse för varje meddelande som den tar emot så snart som möjligt, men i stället väntar på en viss tidsperiod, för att gruppera bekräftelser som har anlänt under intervallet och skickar dem sedan sin helhet. Det första meddelandet som tas emot är undantag. bekräftas så snart det levererats. Även om tillförlitliga sessioner används med enskild HTTP-anslutningar som är fallet med till exempel den <xref:System.ServiceModel.WSHttpBinding>men inte <xref:System.ServiceModel.WSDualHttpBinding>, och sedan på den här inställningen inte används.</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding>       Det värde som angetts med egenskapen AcknowledgementInterval är en rekommendation att infrastrukturen och inte en hård gräns."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som anger tidsintervall som en tjänst ska vänta tills en bekräftelse skickas till meddelandekällan.</xref:System.TimeSpan> Standardvärdet är 2 sekunder."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med noll."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Som ska läggas till."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "Som ska läggas till."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Som ska läggas till."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "Som ska läggas till."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Som ska läggas till."
    return:
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Som ska läggas till."
    return:
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Skapar en kopia av bindningselement aktuella tillförlitlig session."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "En <xref:System.ServiceModel.Channels.BindingElement>som är en klon av det aktuella bindningselementet.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger ett värde som anger om den tillförlitliga sessionen har flödeskontroll har aktiverats."
  remarks: "Flödeskontroll är en mekanism som tillförlitliga sessioner implementerar för att säkerställa att avsändare inte skicka fler meddelanden än en mottagare kan hantera. Mottagare har en buffert för meddelanden som används för att anpassa meddelandet belastning och out-ordning meddelanden. Mottagarna att meddela avsändare mängden utrymme som finns kvar i bufferten i var och en av sina bekräftelser. Avsändare kan använda den här informationen för att sluta skicka nya meddelanden när mottagaren har inget buffertutrymme vänster."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den tillförlitliga sessionen har flödeskontroll aktiverad; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger ett tidsintervall som en tjänst är inaktivt före stängning."
  remarks: "Aktivitet på en kanal är definierad som ett program eller infrastruktur visas. Inaktivitet timeout-parameter styr den maximala tid att behålla en inaktiv session alive. Sessionen avbryts av infrastruktur- och kanal-fel om fler än InactivityTimeout tidsintervall skickar utan aktivitet. Den tillförlitliga sessionen avbryts datakanalen ensidigt.       Om den skickande datorn har inga meddelanden ska skickas sedan den tillförlitliga sessionen är normalt inte fel på grund av inaktivitet; i stället behåller en mekanism för keep-alive sessionen aktiv under obestämd tid. Observera att dispatcher oberoende kan avbryta den tillförlitliga sessionen om inga programmeddelanden skickas eller tas emot. Därför inaktivitetsgräns vanligtvis upphör att gälla om nätverksförhållandena så att inga meddelanden tas emot eller om det uppstår ett fel på avsändare."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Den <xref:System.TimeSpan>som anger tidsintervall som en tjänst är inaktivt innan du stänger.</xref:System.TimeSpan> Standardvärdet är 10 minuter."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med noll eller större än <xref:System.Int32.MaxValue>eller <xref:System.TimeSpan.MaxValue>.</xref:System.TimeSpan.MaxValue> </xref:System.Int32.MaxValue>"
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger det största antalet kanaler som kan vara väntande under den tillförlitliga sessionen."
  remarks: "Kanaler är väntande när de väntar på att godkännas. När gränsen har nåtts kan inga kanaler skapas och placeras i väntande läge tills den här siffran blir (genom att acceptera väntande kanaler). Det finns en gräns för varje lyssnare.       När tröskelvärdet har uppnåtts och fjärrprogram försöker upprätta en ny tillförlitlig session, nekas begäran och open-åtgärden som du uppmanas att göra detta fel."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "Största antal kanaler som kan vara väntande. Standardvärdet är 4."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med noll eller större än 16384."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger det maximala antalet gånger som ett meddelande som ska överföras under den tillförlitliga sessionen."
  remarks: "Ett meddelande ska anses överföras om dess leverans hos mottagaren har godkänts av mottagaren.       Om en bekräftelse har tagits emot inom en viss tid för ett meddelande som har skickats, återöverför infrastrukturen automatiskt meddelandet. Infrastrukturen som försöker skicka meddelandet för mest MaxRetryCount flera gånger. Inte ta emot en bekräftelse innan den här gränsen nås betraktas som ett allvarligt kommunikationsfel och orsakar fel kanalhändelse ska uppstå.       Infrastrukturen som använder en algoritm för exponentiell inte för att avgöra när du ska överföra, baserat på en beräknad Genomsnittlig tid för fram och åter. Tid för första försök beräknas baserat på uppmätta tur och returtid för upprättandet av sessionen. Algoritm för återöverföring fördubblas fördröjning med varje försök, vilket resulterar i cirka 8.5 minuter skicka mellan det första överföringsförsöket och det senaste försöket återöverföring. Tiden för det första försöket återöverföring justeras enligt den beräknade tiden för fram och åter och den resulterande stretch av tiden för sådana försök varierar i enlighet med detta. Detta gör att återöverföring tid att anpassa dynamiskt till varierande nätverksförhållanden."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Maximalt antal gånger som ett meddelande skickas på nytt. Det lägsta värdet är 1. Det maximala antalet är <xref:System.Int32>, och standardvärdet är 8.</xref:System.Int32>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med noll."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger det största antalet meddelanden som kan finnas i bufferten skicka eller ta emot bufferten."
  remarks: "Värdet på egenskapen MaxTransferWindowSize kan anges för både avsändaren och mottagaren. Det här värdet ingår i principen för bindning av WSDL, så om du använder den [ServiceModel Metadata för verktyget (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) för att skapa din klient har samma värde. Annars är det här värdet vad du ställer in det på klienten.       När den här gränsen har nåtts på avsändaren, blockeras ytterligare anrop för att skicka. När den här gränsen har nåtts på mottagaren godkänns inte nya meddelanden som inkommer till den underliggande kanalen.       En tillförlitlig session använder en Windows-baserat protokoll för att förbättra belastningen på nätverket. Mängden buffring krävs hämtas direkt från storleken på fönstret för överföring. När justera det här värdet Observera att fönstret optimala överföringen är relaterat till bandbredden och svarstiden på enkel sätt. Idealiskt största fönsterstorlek är bandbredd tider svarstiden. Mindre ger mindre än 100% nätverksanvändning; allt större är bara onödigt utrymme."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "Största antal meddelanden som kan buffras. Det lägsta värdet är 1. Det maximala värdet är 4096; Standardvärdet är 32."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är mindre än eller lika med ett eller större än 4096."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger ett värde som anger om meddelandeleverans måste bevara den ordning som meddelanden skickas."
  remarks: "Om du vill få meddelanden som skickas i ordning, måste du ställa <xref:System.ServiceModel.ConcurrencyMode>till <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>"
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om meddelanden måste levereras i den ordning som de skickas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Hämtar eller anger versionen av WS-ReliableMessaging som anges av bindningselementet."
  remarks: 'Det finns två versioner av WS-ReliableMessaging-protokollet som stöds av [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 och WS-ReliableMessagingFebruary2005. Standardversionen är WS-ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "En instans som härletts från <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> som representerar versionen av WS-ReliableMessaging-protokollet som används av konfigurationselementet."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Mappar du informationen i det tillförlitliga sessionen bindningselementet i WSDL-element som gör att fjärrslutpunkten åtkomst till tjänsten med en tillförlitlig session."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "Den <xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> som exporterar bindningsinformation i det tillförlitliga sessionen bindningselementet till WSDL-element."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "Den <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> som ger mappningen från exporterade WSDL-element för slutpunkt-beskrivningen."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone
  nameWithType: ReliableSessionBindingElement.Clone
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: ReliableSessionBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
