### YamlMime:ManagedReference
items:
- uid: System.Data.DataRowCollection
  id: DataRowCollection
  children:
  - System.Data.DataRowCollection.Add(System.Data.DataRow)
  - System.Data.DataRowCollection.Add(System.Object[])
  - System.Data.DataRowCollection.Clear
  - System.Data.DataRowCollection.Contains(System.Object)
  - System.Data.DataRowCollection.Contains(System.Object[])
  - System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  - System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  - System.Data.DataRowCollection.Count
  - System.Data.DataRowCollection.Find(System.Object)
  - System.Data.DataRowCollection.Find(System.Object[])
  - System.Data.DataRowCollection.GetEnumerator
  - System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  - System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  - System.Data.DataRowCollection.Item(System.Int32)
  - System.Data.DataRowCollection.Remove(System.Data.DataRow)
  - System.Data.DataRowCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataRowCollection
  nameWithType: DataRowCollection
  fullName: System.Data.DataRowCollection
  type: Class
  summary: "Representerar en mängd rader för en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "DataRowCollection är en viktig del av <xref:System.Data.DataTable>.</xref:System.Data.DataTable> När den <xref:System.Data.DataColumnCollection>definierar schemat i tabellen, DataRowCollection innehåller faktiska data för tabellen, där varje <xref:System.Data.DataRow>representerar en enskild rad i DataRowCollection.</xref:System.Data.DataRow> </xref:System.Data.DataColumnCollection>       Du kan anropa den <xref:System.Data.DataRowCollection.Add%2A>och <xref:System.Data.DataRowCollection.Remove%2A>metoder för att infoga och ta bort <xref:System.Data.DataRow>objekt från DataRowCollection.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection.Add%2A> Du kan också anropa den <xref:System.Data.DataRowCollection.Find%2A>metod för att söka efter <xref:System.Data.DataRow>objekt som innehåller specifika värden i primärnyckelkolumnerna, och <xref:System.Data.DataRowCollection.Contains%2A>metod för att söka teckenbaserade data för enstaka ord eller fraser.</xref:System.Data.DataRowCollection.Contains%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>       Använd metoderna för andra åtgärder, till exempel sortera eller filtrera DataRowCollection, på den DataRowCollection associerade <xref:System.Data.DataTable>.</xref:System.Data.DataTable>"
  example:
  - "The first example in this section prints the value of column 1 for every row in a DataRowCollection. The second example adds a new row created by using the <xref:System.Data.DataTable.NewRow%2A> method to the DataRowCollection.  \n  \n [!code-cs[Classic WebData DataRowCollection Example#1](~/add/codesnippet/csharp/t-system.data.datarowcol_1.cs)]\n [!code-vb[Classic WebData DataRowCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datarowcol_1.vb)]"
  syntax:
    content: 'public sealed class DataRowCollection : System.Data.InternalDataCollectionBase'
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  id: Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lägger till den angivna <xref href=&quot;System.Data.DataRow&quot;> </xref> till den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> objekt."
  remarks: "Skapa en ny <xref:System.Data.DataRow>måste du använda <xref:System.Data.DataTable.NewRow%2A>metoden i <xref:System.Data.DataTable>klassen.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> </xref:System.Data.DataRow> När du använder den <xref:System.Data.DataTable.NewRow%2A>metoden, ett nytt <xref:System.Data.DataRow>objekt returneras med schemat för överordnade <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow> </xref:System.Data.DataTable.NewRow%2A> När du har skapat den <xref:System.Data.DataRow>objekt och anger värden för var och en av dess kolumner, Använd Add-metod för att lägga till objektet i samlingen.</xref:System.Data.DataRow>       Genererar ett undantag om användaren genererar ett undantag i den <xref:System.Data.DataTable.RowChanging>händelse.</xref:System.Data.DataTable.RowChanging> Om ett undantag inträffar läggs inte raden i tabellen."
  example:
  - "The following example uses the Add method to add a new <xref:System.Data.DataRow> to a <xref:System.Data.DataRowCollection> object.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_2_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Raden är null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Raden tillhör en annan tabell eller tillhör redan den här tabellen."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Tillägget upphäver en begränsning."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Tillägg försöker placera ett null-värde i en <xref href=&quot;System.Data.DataColumn&quot;> </xref> där <xref:System.Data.DataColumn.AllowDBNull*>är false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Add(System.Object[])
  id: Add(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en rad med angivna värden och lägger till den till den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: "Om en <xref:System.Data.DataColumn>objektet har dess <xref:System.Data.DataColumn.AutoIncrement%2A>värdet True är null ska skickas för att få standardvärdet för kolumnen.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn>       Undantag kan också inträffa om du skapar ett undantag under antingen en <xref:System.Data.DataTable.ColumnChanging>eller <xref:System.Data.DataTable.RowChanging>händelse.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging> Om ett undantag inträffar läggs inte raden i tabellen."
  example:
  - "The following example uses the <xref:System.Data.DataRowCollection.Add%2A> method to create and add a new <xref:System.Data.DataRow> object to a <xref:System.Data.DataRowCollection>.  \n  \n [!code-cs[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_5_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_5_1.vb)]"
  syntax:
    content: public System.Data.DataRow Add (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matris med-värden som används för att skapa den nya raden."
    return:
      type: System.Data.DataRow
      description: "Ingen."
  overload: System.Data.DataRowCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Matrisen är större än antalet kolumner i tabellen."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Värdet matchar inte dess respektive kolumntypen."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Att lägga till raden upphäver en begränsning."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Försök att placera ett null-värde i en kolumn där <xref:System.Data.DataColumn.AllowDBNull*>är false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRowCollection.Clear
  id: Clear
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rensar alla radmängden."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataRowCollection.Clear*
  exceptions:
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "En <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> tillämpas på den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om den primära nyckeln för varje rad i samlingen innehåller det angivna värdet."
  remarks: "Du använder metoden innehåller den <xref:System.Data.DataTable>objekt som den <xref:System.Data.DataRowCollection>objektet tillhör måste ha minst en kolumn som har angetts som en primärnyckelkolumn.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Finns det <xref:System.Data.DataTable.PrimaryKey%2A>-egenskapen för mer information om hur du skapar en primärnyckelkolumn.</xref:System.Data.DataTable.PrimaryKey%2A>       När du har fastställt att en rad innehåller det angivna värdet, du kan använda den <xref:System.Data.DataRowCollection.Find%2A>metod för att returnera specifikt <xref:System.Data.DataRow>objekt som har värdet.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the Contains method to determine whether a <xref:System.Data.DataRowCollection> object contains a specific value.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_7_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Värdet för den primära nyckeln för test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om samlingen innehåller en <xref href=&quot;System.Data.DataRow&quot;> </xref> med angivna primärnyckelvärdet; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen saknar primärnyckel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  id: Contains(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om primärnyckelkolumnerna för varje rad i samlingen innehåller de värden som anges i matrisen objekt."
  remarks: "Att använda den <xref:System.Data.DataRowCollection.Contains%2A>metod med en matris med värden, den <xref:System.Data.DataTable>objekt som den <xref:System.Data.DataRowCollection>objektet tillhör måste ha en matris med kolumner som primära nycklar.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Contains%2A> Finns det <xref:System.Data.DataTable.PrimaryKey%2A>-egenskapen för mer information om hur du skapar en matris med primärnyckelkolumnerna.</xref:System.Data.DataTable.PrimaryKey%2A> Antalet matriselement måste överensstämma med antalet primärnyckelkolumner i <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       När du har fastställt att en rad innehåller det angivna värdet, använda den <xref:System.Data.DataRowCollection.Find%2A>metod för att returnera specifikt <xref:System.Data.DataRow>objekt som har värdet.</xref:System.Data.DataRow> </xref:System.Data.DataRowCollection.Find%2A>"
  example:
  - "The following Visual Basic example uses the <xref:System.Data.DataRowCollection.Contains%2A> method to find a particular row in a <xref:System.Data.DataRowCollection> object. The example creates an array of values, one element for each primary key in the table, and then passes the array to the method to return a `true` or `false`.  \n  \n [!code-vb[Classic WebData DataRowCollection.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_4_1.vb)]"
  syntax:
    content: public bool Contains (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "En matris med primärnyckelvärden att testa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref> innehåller en <xref href=&quot;System.Data.DataRow&quot;> </xref> med angivna nycklar värden; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.Contains*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen saknar primärnyckel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar alla de <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt från samlingen i den angivna matrisen som börjar vid matrisindex givet mål."
  syntax:
    content: public override void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "Endimensionell matris som är mål för element som kopieras från den <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. Matrisen måste ha Nollbaserad indexering."
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i matrisen vid kopiering av vilka börjar."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  id: CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar alla de <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt från samlingen i den angivna matrisen som börjar vid matrisindex givet mål."
  syntax:
    content: public void CopyTo (System.Data.DataRow[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Endimensionell matris som är mål för element som kopieras från den <xref uid=&quot;langword_csharp_DataRowCollection&quot; name=&quot;DataRowCollection&quot; href=&quot;&quot;> </xref>. Matrisen måste ha Nollbaserad indexering."
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet i matrisen vid kopiering av vilka börjar."
  overload: System.Data.DataRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Count
  id: Count
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar det totala antalet <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt i samlingen."
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "Det totala antalet <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt i samlingen."
  overload: System.Data.DataRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object)
  id: Find(System.Object)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den raden som anges av värdet för primära nyckeln."
  remarks: "Att använda den `Find` -metoden i <xref:System.Data.DataTable>objekt som den <xref:System.Data.DataRowCollection>objektet tillhör måste ha minst en kolumn som har angetts som en primärnyckelkolumn.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> Finns det <xref:System.Data.DataTable.PrimaryKey%2A>-egenskapen för mer information om hur du skapar en primärnyckelkolumn.</xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the Find method to find the primary key value \"2\" in a collection of <xref:System.Data.DataRow> objects. The method returns the specific <xref:System.Data.DataRow> object letting you change its values, as needed.  \n  \n [!code-vb[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_0_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.Find Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_0_1.cs)]"
  syntax:
    content: public System.Data.DataRow Find (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Primärnyckelvärdet i den <xref href=&quot;System.Data.DataRow&quot;> </xref> att hitta."
    return:
      type: System.Data.DataRow
      description: "En <xref href=&quot;System.Data.DataRow&quot;> </xref> som innehåller primärnyckelvärdet angetts; annars null värde om värdet för primära nyckeln inte finns i den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen saknar primärnyckel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Find(System.Object[])
  id: Find(System.Object[])
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den rad som innehåller de angivna primärnyckelvärden."
  remarks: "Att använda den <xref:System.Data.DataRowCollection.Find%2A>-metoden i <xref:System.Data.DataTable>objekt som den <xref:System.Data.DataRowCollection>objektet tillhör måste ha minst en kolumn som har angetts som en primärnyckelkolumn.</xref:System.Data.DataRowCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection.Find%2A> När två eller flera rader har samma primärnyckelvärde, returneras den första raden hittades. Detta inträffar när <xref:System.Data.DataSet.EnforceConstraints%2A>är inställd på false.</xref:System.Data.DataSet.EnforceConstraints%2A> Finns det <xref:System.Data.DataTable.PrimaryKey%2A>-egenskapen för mer information om hur du skapar en <xref:System.Data.DataTable.PrimaryKey%2A>kolumn eller en matris med <xref:System.Data.DataColumn>objekt när du har mer än en primärnyckel för tabellen.</xref:System.Data.DataColumn> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataTable.PrimaryKey%2A>"
  example:
  - "The following example uses the values of an array to find a specific row in a collection of <xref:System.Data.DataRow> objects. The method assumes that a <xref:System.Data.DataTable> exists with three primary key columns. After creating an array of the values, the code uses the <xref:System.Data.DataRowCollection.Find%2A> method with the array to get the particular object that you want.  \n  \n [!code-cs[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/csharp/m-system.data.datarowcol_6_1.cs)]\n [!code-vb[Classic WebData DataRowCollection.Find1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_6_1.vb)]"
  syntax:
    content: public System.Data.DataRow Find (object[] keys);
    parameters:
    - id: keys
      type: System.Object[]
      description: "En matris med primärnyckelvärden att hitta. Matrisen är <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRow
      description: "En <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt som innehåller primärnyckelvärden angivna; annars null värde om värdet för primära nyckeln inte finns i den <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  overload: System.Data.DataRowCollection.Find*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Ingen rad motsvarar det indexvärdet."
  - type: System.Data.MissingPrimaryKeyException
    commentId: T:System.Data.MissingPrimaryKeyException
    description: "Tabellen saknar primärnyckel."
  platform:
  - net462
- uid: System.Data.DataRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar en <xref:System.Collections.IEnumerator>för den här samlingen.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>för den här samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  id: IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index för den angivna <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt."
  syntax:
    content: public int IndexOf (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "Den <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref> att söka efter."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för raden eller -1 om raden inte hittades i samlingen."
  overload: System.Data.DataRowCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  id: InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Infogar en ny rad i samlingen på den angivna platsen."
  remarks: "Den plats som anges av InsertAt återspeglas av ordningen rader i den <xref:System.Data.DataRowCollection>endast.</xref:System.Data.DataRowCollection> Om mer än en rad returneras i en <xref:System.Data.DataRow>matris infogade raden kan inte returneras i den plats som anges av InsertAt.</xref:System.Data.DataRow> Till exempel den <xref:System.Data.DataTable.Rows%2A>egenskapen returnerar raden i det angivna insert-läge.</xref:System.Data.DataTable.Rows%2A> <xref:System.Data.DataTable.Select%2A>och <xref:System.Data.DataRow.GetChildRows%2A>får inte.</xref:System.Data.DataRow.GetChildRows%2A></xref:System.Data.DataTable.Select%2A> När du skriver innehållet i <xref:System.Data.DataRowCollection>XML-format, till exempel <xref:System.Data.DataSet.WriteXml%2A>rader skrivs enligt den ordning som anges av <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataSet.WriteXml%2A> </xref:System.Data.DataRowCollection>       Om värdet som angetts för den `pos` parameter är större än antalet rader i samlingen, läggs den nya raden till i slutet."
  syntax:
    content: public void InsertAt (System.Data.DataRow row, int pos);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "The <xref href=&quot;System.Data.DataRow&quot;></xref> to add."
    - id: pos
      type: System.Int32
      description: "(Nollbaserat) plats i samlingen där du vill lägga till den <xref uid=&quot;langword_csharp_DataRow&quot; name=&quot;DataRow&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRowCollection.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar raden med det angivna indexet."
  remarks: "Använd den <xref:System.Data.DataRowCollection.Contains%2A>metod för att avgöra om det finns ett specifikt värde i en rad nyckelkolumn.</xref:System.Data.DataRowCollection.Contains%2A>"
  example:
  - "The following example prints the value of column 1 of each row in a <xref:System.Data.DataRowCollection>.  \n  \n [!code-vb[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarowcol_1.vb)]\n [!code-cs[Classic WebData DataRowCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datarowcol_1.cs)]"
  syntax:
    content: public System.Data.DataRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för raden ska returneras."
    return:
      type: System.Data.DataRow
      description: "Den angivna <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRowCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Indexet är större än antalet objekt i samlingen."
  platform:
  - net462
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  id: Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den angivna <xref href=&quot;System.Data.DataRow&quot;> </xref> från samlingen."
  remarks: "När en rad har tagits bort, förloras alla data på den raden. Du kan också anropa den <xref:System.Data.DataRow.Delete%2A>metod för den <xref:System.Data.DataRow>klass kan bara markera en rad för borttagning.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Anropar `Remove` är detsamma som att anropa <xref:System.Data.DataRow.Delete%2A>och sedan anropa <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Ta bort ska inte anropas i en slinga foreach när söka igenom en <xref:System.Data.DataRowCollection>objektet.</xref:System.Data.DataRowCollection> Ta bort ändrar tillstånd i mängden.       Du kan också använda den <xref:System.Data.DataRowCollection.Clear%2A>metod för att ta bort alla medlemmar i samlingen i taget.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example uses the Remove method to delete a found row in a <xref:System.Data.DataRowCollection> object. The example first uses the <xref:System.Data.DataRowCollection.Contains%2A> method to determine whether the rows collection contains a row. If it does, the <xref:System.Data.DataRowCollection.Find%2A> method is used to find the specific row, and the Remove method is then used to remove the row.  \n  \n [!code-vb[Classic WebData DataRowCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_1_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataRow row);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: "Den <xref href=&quot;System.Data.DataRow&quot;> </xref> att ta bort."
  overload: System.Data.DataRowCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort raden med det angivna indexet från samlingen."
  remarks: "När en rad har tagits bort, förloras alla data på den raden. Du kan också anropa den <xref:System.Data.DataRow.Delete%2A>metod för den <xref:System.Data.DataRow>klass kan bara markera en rad för borttagning.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Delete%2A> Anropar `RemoveAt` är detsamma som att anropa <xref:System.Data.DataRow.Delete%2A>och sedan anropa <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.Delete%2A>       Du kan använda den <xref:System.Data.DataRowCollection.Clear%2A>metod för att ta bort alla medlemmar i samlingen i taget.</xref:System.Data.DataRowCollection.Clear%2A>"
  example:
  - "The following example removes the last row in a <xref:System.Data.DataRowCollection> by calling the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataRowCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datarowcol_3_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indexet för raden ska tas bort."
  overload: System.Data.DataRowCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.MissingPrimaryKeyException
  parent: System.Data
  isExternal: false
  name: MissingPrimaryKeyException
  nameWithType: MissingPrimaryKeyException
  fullName: System.Data.MissingPrimaryKeyException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRowCollection.Add(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(DataRow)
  nameWithType: DataRowCollection.Add(DataRow)
  fullName: System.Data.DataRowCollection.Add(DataRow)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRowCollection.Add(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add(Object[])
  nameWithType: DataRowCollection.Add(Object[])
  fullName: System.Data.DataRowCollection.Add(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Clear
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRowCollection.Clear()
  fullName: System.Data.DataRowCollection.Clear()
- uid: System.Data.DataRowCollection.Contains(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: DataRowCollection.Contains(Object)
  fullName: System.Data.DataRowCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataRowCollection.Contains(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains(Object[])
  nameWithType: DataRowCollection.Contains(Object[])
  fullName: System.Data.DataRowCollection.Contains(Object[])
- uid: System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataRowCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataRowCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo(DataRow[],Int32)
  nameWithType: DataRowCollection.CopyTo(DataRow[],Int32)
  fullName: System.Data.DataRowCollection.CopyTo(DataRow[],Int32)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRowCollection.Count
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
  fullName: System.Data.DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find(System.Object)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object)
  nameWithType: DataRowCollection.Find(Object)
  fullName: System.Data.DataRowCollection.Find(Object)
- uid: System.Data.DataRowCollection.Find(System.Object[])
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find(Object[])
  nameWithType: DataRowCollection.Find(Object[])
  fullName: System.Data.DataRowCollection.Find(Object[])
- uid: System.Data.DataRowCollection.GetEnumerator
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataRowCollection.GetEnumerator()
  fullName: System.Data.DataRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataRowCollection.IndexOf(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf(DataRow)
  nameWithType: DataRowCollection.IndexOf(DataRow)
  fullName: System.Data.DataRowCollection.IndexOf(DataRow)
- uid: System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt(DataRow,Int32)
  nameWithType: DataRowCollection.InsertAt(DataRow,Int32)
  fullName: System.Data.DataRowCollection.InsertAt(DataRow,Int32)
- uid: System.Data.DataRowCollection.Item(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRowCollection.Item(Int32)
  fullName: System.Data.DataRowCollection.Item(Int32)
- uid: System.Data.DataRowCollection.Remove(System.Data.DataRow)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove(DataRow)
  nameWithType: DataRowCollection.Remove(DataRow)
  fullName: System.Data.DataRowCollection.Remove(DataRow)
- uid: System.Data.DataRowCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRowCollection.RemoveAt(Int32)
  fullName: System.Data.DataRowCollection.RemoveAt(Int32)
- uid: System.Data.DataRowCollection.Add*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Add
  nameWithType: DataRowCollection.Add
- uid: System.Data.DataRowCollection.Clear*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Clear
  nameWithType: DataRowCollection.Clear
- uid: System.Data.DataRowCollection.Contains*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Contains
  nameWithType: DataRowCollection.Contains
- uid: System.Data.DataRowCollection.CopyTo*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRowCollection.CopyTo
- uid: System.Data.DataRowCollection.Count*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Count
  nameWithType: DataRowCollection.Count
- uid: System.Data.DataRowCollection.Find*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Find
  nameWithType: DataRowCollection.Find
- uid: System.Data.DataRowCollection.GetEnumerator*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataRowCollection.GetEnumerator
- uid: System.Data.DataRowCollection.IndexOf*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRowCollection.IndexOf
- uid: System.Data.DataRowCollection.InsertAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: InsertAt
  nameWithType: DataRowCollection.InsertAt
- uid: System.Data.DataRowCollection.Item*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Item
  nameWithType: DataRowCollection.Item
- uid: System.Data.DataRowCollection.Remove*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: Remove
  nameWithType: DataRowCollection.Remove
- uid: System.Data.DataRowCollection.RemoveAt*
  parent: System.Data.DataRowCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRowCollection.RemoveAt
