### YamlMime:ManagedReference
items:
- uid: System.Data.DBConcurrencyException
  id: DBConcurrencyException
  children:
  - System.Data.DBConcurrencyException.#ctor
  - System.Data.DBConcurrencyException.#ctor(System.String)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  - System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DBConcurrencyException.Row
  - System.Data.DBConcurrencyException.RowCount
  langs:
  - csharp
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
  type: Class
  summary: "Undantag som genereras av den <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> under en insert-, uppdatera eller ta bort åtgärden om antalet rader som påverkas är lika med noll."
  remarks: "Den <xref:System.Data.Common.DataAdapter>undersöker antalet rader som påverkas av körningen av varje insert-, update- eller delete-åtgärden och genererar det här undantaget om antalet är lika med noll.</xref:System.Data.Common.DataAdapter> Det här undantaget orsakas vanligtvis av en Simultankörningsfel."
  syntax:
    content: 'public sealed class DBConcurrencyException : SystemException'
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor
  id: '#ctor'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klass."
  remarks: "Standardkonstruktorn initierar alla fält till respektive standardvärde."
  syntax:
    content: public DBConcurrencyException ();
    parameters: []
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klass."
  syntax:
    content: public DBConcurrencyException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Den textsträng som beskriver information om undantaget."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klass."
  remarks: "Du kan skapa ett nytt undantag som fångar upp ett tidigare undantag. Koden som hanterar det andra undantaget kan använda ytterligare information från tidigare undantag, även kallat ett inre undantag för att undersöka orsaken till första felet."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Den textsträng som beskriver information om undantaget."
    - id: inner
      type: System.Exception
      description: "En referens till ett inre undantag."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  id: '#ctor(System.String,System.Exception,System.Data.DataRow[])'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klass."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner, System.Data.DataRow[] dataRows);
    parameters:
    - id: message
      type: System.String
      description: "Felmeddelandet som förklarar orsaken till undantaget."
    - id: inner
      type: System.Exception
      description: "Undantag som är orsaken till det aktuella undantaget eller en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic) om inget inre undantag har angetts."
    - id: dataRows
      type: System.Data.DataRow[]
      description: "En matris som innehåller den <xref href=&quot;System.Data.DataRow&quot;> </xref> vars update fel genereras undantaget."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  id: CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopior av <xref href=&quot;System.Data.DataRow&quot;> </xref> vars update fel genereras detta undantag till den angivna matrisen <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt."
  remarks: "När du utför batchuppdateringar med den <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>egenskapen för den <xref:System.Data.Common.DataAdapter>inställd på `true`, detta undantag genereras om alla rad uppdateringar misslyckas.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> I det här fallet detta <xref:System.Data.DBConcurrencyException>innehåller <xref:System.Data.DataRow>objekt för alla rader vars gick inte att uppdatera, i stället för bara en <xref:System.Data.DataRow>objekt i <xref:System.Data.DBConcurrencyException.Row%2A>, och den berörda <xref:System.Data.DataRow>objekt kan hämtas genom att anropa <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Endimensionell matris av <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt att kopiera den <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt i."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  id: CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopior av <xref href=&quot;System.Data.DataRow&quot;> </xref> vars update fel genereras detta undantag till den angivna matrisen <xref href=&quot;System.Data.DataRow&quot;> </xref> objekten, med början vid matrisindex angivet mål."
  remarks: "När du utför batchuppdateringar med den <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>egenskapen för den <xref:System.Data.Common.DataAdapter>inställd på `true`, detta undantag genereras om alla rad uppdateringar misslyckas.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> I det här fallet detta <xref:System.Data.DBConcurrencyException>innehåller <xref:System.Data.DataRow>objekt för alla rader vars gick inte att uppdatera, i stället för bara en <xref:System.Data.DataRow>objekt i <xref:System.Data.DBConcurrencyException.Row%2A>, och den berörda <xref:System.Data.DataRow>objekt kan hämtas genom att anropa <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Endimensionell matris av <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt att kopiera den <xref href=&quot;System.Data.DataRow&quot;> </xref> objekt i."
    - id: arrayIndex
      type: System.Int32
      description: "Matrisindex mål att starta kopieras till."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Fylls aprcified serialisering informationsobjektet med de data som behövs för att serialisera den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "En <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> som innehåller serialiserade data som är associerade med den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "En <xref:System.Runtime.Serialization.StreamingContext>som innehåller källan och målet för den serialiserade dataströmmen som är associerade med den <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.DBConcurrencyException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> info </code> parametern är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.Row
  id: Row
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar eller anger värdet för den <xref href=&quot;System.Data.DataRow&quot;> </xref> som genererats av <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  remarks: "Använda raden för att hämta värdet för den <xref:System.Data.DataRow>rad som genereras av <xref:System.Data.DBConcurrencyException>.</xref:System.Data.DBConcurrencyException> </xref:System.Data.DataRow> Ange värdet för den <xref:System.Data.DataRow>har ingen effekt.</xref:System.Data.DataRow>       När du utför batchuppdateringar med den <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>egenskapen för den <xref:System.Data.Common.DataAdapter>inställd på `true`, detta undantag genereras om alla rad uppdateringar misslyckas.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> I det här fallet den här <xref:System.Data.DBConcurrencyException>innehåller <xref:System.Data.DataRow>objekt för alla rader vars gick inte att uppdatera, i stället för bara ett <xref:System.Data.DataRow>objekt i raden, och den berörda <xref:System.Data.DataRow>objekt kan hämtas genom att anropa <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>       Finns inte stöd för serialisering för <xref:System.Data.DataRow>objekt.</xref:System.Data.DataRow> Därför, om du vill serialisera en <xref:System.Data.DBConcurrencyException>objekt värdet på egenskapen rad i den serialiserade versionen av objektet anges till null.</xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public System.Data.DataRow Row { get; set; }
    return:
      type: System.Data.DataRow
      description: "Värdet för den <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DBConcurrencyException.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.RowCount
  id: RowCount
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar antalet rader vars uppdateringen kunde inte generera det här undantaget."
  syntax:
    content: public int RowCount { get; }
    return:
      type: System.Int32
      description: "Ett heltal som innehåller antalet rader vars uppdateringen misslyckades."
  overload: System.Data.DBConcurrencyException.RowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DBConcurrencyException.#ctor
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.DBConcurrencyException.Row
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DBConcurrencyException.RowCount
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
- uid: System.Data.DBConcurrencyException.#ctor*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException.DBConcurrencyException
- uid: System.Data.DBConcurrencyException.CopyToRows*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows
  nameWithType: DBConcurrencyException.CopyToRows
- uid: System.Data.DBConcurrencyException.GetObjectData*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData
  nameWithType: DBConcurrencyException.GetObjectData
- uid: System.Data.DBConcurrencyException.Row*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
- uid: System.Data.DBConcurrencyException.RowCount*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
