### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElement
  id: ConfigurationElement
  children:
  - System.Configuration.ConfigurationElement.#ctor
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
  type: Class
  summary: "Representerar en konfigurationselement i en konfigurationsfil."
  remarks: "ConfigurationElement är en abstrakt klass som används för att representera ett XML-element i en konfigurationsfil (till exempel Web.config). Ett element i en konfigurationsfil kan innehålla noll, en eller flera underordnade element.       Du kan inte skapa en instans av den eftersom klassen ConfigurationElement har definierats som abstrakt. Du kan endast vara härledda klasser från den. .NET Framework innehåller klasser som härleds från klassen ConfigurationElement för att kunna representera XML-konfigurationen standardelement, till exempel <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> Du kan också utöka klassen ConfigurationElement för att komma åt anpassade konfigurationselement och avsnitt. I exempel senare i det här avsnittet visas hur du kommer åt anpassade konfigurationselement och avsnitt med hjälp av anpassade klasser som härleds från ConfigurationElement.       Du kan också utöka standardkonfiguration typer, till exempel ConfigurationElement, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, och <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> </xref:System.Configuration.ConfigurationProperty> </xref:System.Configuration.ConfigurationElementCollection> Mer information finns i dokumentationen för dessa klasser.       Mer information om hur du kommer åt informationen i konfigurationsfiler finns i <xref:System.Configuration.ConfigurationManager>klassen och <xref:System.Web.Configuration.WebConfigurationManager>klass.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Configuration.ConfigurationManager>"
  example:
  - "The following code example shows how to implement a custom ConfigurationElement both as an individual element in a custom section and as a collection of elements in a custom section. The example consists of the following files:  \n  \n-   An app.config file that contains a custom section that is named `MyUrls`. This section contains a simple element (it does not contain any other elements) and a collection of elements. The simple element is named `simple` and the collection is named `urls`.  \n  \n-   A console application. The application reads the contents of the app.config file and writes the information to the console. It uses classes that derive from ConfigurationElement, <xref:System.Configuration.ConfigurationElementCollection>, and <xref:System.Configuration.ConfigurationSection>.  \n  \n-   A class named `UrlsSection` that derives from the <xref:System.Configuration.ConfigurationSection> class. This class is used to access the `MyUrls` section in the configuration file.  \n  \n-   A class named `UrlsCollection` that derives from the <xref:System.Configuration.ConfigurationElementCollection> class. This class is used to access the `urls` collection in the configuration file.  \n  \n-   A class named `UrlConfigElement` that derives from the ConfigurationElement class. This class is used to access the `simple` element and the members of the `urls` collection in the configuration file.  \n  \n To run the example, perform the following steps:  \n  \n1.  Create a solution that has a console application project and a class library project that is named `ConfigurationElement`.  \n  \n2.  Put the three class files in the class library project and put the other files in the console library project.  \n  \n3.  In both projects set a reference to `System.Configuration`.  \n  \n4.  In the console application project set a project reference to the class library project.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#151](~/add/codesnippet/csharp/t-system.configuration.c_8_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#151](~/add/codesnippet/visualbasic/t-system.configuration.c_8_2.vb)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#71](~/add/codesnippet/csharp/t-system.configuration.c_8_3.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#71](~/add/codesnippet/visualbasic/t-system.configuration.c_8_3.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationElement#51](~/add/codesnippet/visualbasic/t-system.configuration.c_8_4.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#51](~/add/codesnippet/csharp/t-system.configuration.c_8_4.cs)]  \n  \n [!code-cs[System.Configuration.ConfigurationElement#31](~/add/codesnippet/csharp/t-system.configuration.c_8_5.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#31](~/add/codesnippet/visualbasic/t-system.configuration.c_8_5.vb)]"
  syntax:
    content: public abstract class ConfigurationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initierar en ny instans av den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> klass."
  remarks: "Du skapar en ny instans av den <xref:System.Configuration.ConfigurationElement>class, till exempel varje gång programmet behöver lägga till ett nytt element i den relaterade <xref:System.Configuration.ConfigurationElementCollection>samling.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to use a customized constructor.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#32](~/add/codesnippet/csharp/m-system.configuration.c_36_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#32](~/add/codesnippet/visualbasic/m-system.configuration.c_36_1.vb)]"
  syntax:
    content: protected ConfigurationElement ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  id: CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar en referens till den översta <xref href=&quot;System.Configuration.Configuration&quot;> </xref> -instans som representerar konfigurationshierarkin som aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instansen tillhör."
  remarks: "Egenskapen CurrentConfiguration gör det enkelt att bestämma vilken filversion den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] är angiven som mål. Den <xref:System.Configuration.Configuration.TargetFramework%2A>egenskapen för den översta <xref:System.Configuration.Configuration>instans anger den aktuella framework-versionen.</xref:System.Configuration.Configuration> </xref:System.Configuration.Configuration.TargetFramework%2A>"
  syntax:
    content: public System.Configuration.Configuration CurrentConfiguration { get; }
    return:
      type: System.Configuration.Configuration
      description: "Den översta <xref href=&quot;System.Configuration.Configuration&quot;> </xref> -instans som aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instansen tillhör."
  overload: System.Configuration.ConfigurationElement.CurrentConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  id: DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Läser XML i konfigurationsfilen."
  remarks: ''
  example:
  - "The following example demonstrates how to extend the DeserializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#33](~/add/codesnippet/csharp/6dc9ac84-77cf-449c-b380-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#33](~/add/codesnippet/visualbasic/6dc9ac84-77cf-449c-b380-_1.vb)]"
  syntax:
    content: protected virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>som läser från konfigurationsfilen.</xref:System.Xml.XmlReader>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att serialisera endast samling nyckelegenskaper; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.DeserializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element to read is locked.  \n  \n \\- or -  \n  \n An attribute of the current node is not recognized.  \n  \n \\- or -  \n  \n The lock status of the current node cannot be determined."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementInformation
  id: ElementInformation
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar en <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> objekt som innehåller information om icke-anpassningsbar och funktionerna i den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt."
  remarks: ''
  example:
  - "The following example shows how to use the ElementInformation property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#80](~/add/codesnippet/csharp/p-system.configuration.c_48_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#80](~/add/codesnippet/visualbasic/p-system.configuration.c_48_1.vb)]"
  syntax:
    content: public System.Configuration.ElementInformation ElementInformation { get; }
    return:
      type: System.Configuration.ElementInformation
      description: "En <xref href=&quot;System.Configuration.ElementInformation&quot;> </xref> som innehåller information om icke-anpassningsbar och funktionerna i den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.ElementInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ElementProperty
  id: ElementProperty
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar den <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> objekt som representerar den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> själva objektet."
  syntax:
    content: protected virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "Den <xref href=&quot;System.Configuration.ConfigurationElementProperty&quot;> </xref> som representerar den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> sig själv."
  overload: System.Configuration.ConfigurationElement.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Jämför aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instans på det angivna objektet."
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "Det objekt som ska jämföras med."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om objektet ska jämföras med är lika med aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instansen; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  id: EvaluationContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar den <xref href=&quot;System.Configuration.ContextInformation&quot;> </xref> objekt för den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt."
  remarks: "En <xref:System.Configuration.ContextInformation>objektet ger en kontext som krävs för en <xref:System.Configuration.ConfigurationElement>objekt att fatta beslut baserat på om den utvärderas.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation>       Den <xref:System.Configuration.ContextInformation>objektet innehåller miljö information relaterad till ett element i konfigurationen.</xref:System.Configuration.ContextInformation> Du kan till exempel använda den <xref:System.Configuration.ContextInformation.IsMachineLevel%2A>egenskapen för att avgöra om en <xref:System.Configuration.ConfigurationElement>har angetts i Machine.config eller du kan fastställa vilken hierarki en <xref:System.Configuration.ConfigurationElement>element som tillhör med hjälp av den <xref:System.Configuration.ContextInformation.HostingContext%2A>egenskapen.</xref:System.Configuration.ContextInformation.HostingContext%2A> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ContextInformation.IsMachineLevel%2A>"
  syntax:
    content: protected System.Configuration.ContextInformation EvaluationContext { get; }
    return:
      type: System.Configuration.ContextInformation
      description: "The <xref href=&quot;System.Configuration.ContextInformation&quot;></xref> for the <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>."
  overload: System.Configuration.ConfigurationElement.EvaluationContext*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det aktuella elementet är inte associerad med en kontext."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar ett unikt värde som representerar aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instans."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Ett unikt värde som representerar aktuellt <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> instans."
  overload: System.Configuration.ConfigurationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  id: GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Returnerar den transformerade versionen av det angivna sammansättningsnamnet."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>metoden och <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>metoden anropa den här metoden för att omvandla ett sammansättningsnamn när en tidigare version av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] är riktad.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedAssemblyString (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Namnet på sammansättningen."
    return:
      type: System.String
      description: "Den omvandlade versionen av sammansättningsnamnet. Om inga transformatorn är tillgänglig i <code> assemblyName </code> returneras parametervärdet oförändrat. Den <xref:System.Configuration.Configuration.TypeStringTransformer*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga transformatorn.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  id: GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Returnerar den transformerade versionen av det angivna typnamnet."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.SerializeElement%2A>metoden och <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A>metoden anropa den här metoden för att omvandla ett typnamn när en tidigare version av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] är riktad.</xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> </xref:System.Configuration.ConfigurationElement.SerializeElement%2A>"
  syntax:
    content: protected virtual string GetTransformedTypeString (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Namnet på typen."
    return:
      type: System.String
      description: "Den omvandlade versionen av det angivna typnamnet. Om inga transformatorn är tillgänglig i <code> typeName </code> returneras parametervärdet oförändrat. Den <xref:System.Configuration.Configuration.TypeStringTransformer*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det finns inga transformatorn.</xref:System.Configuration.Configuration.TypeStringTransformer*>"
  overload: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.HasContext
  id: HasContext
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar ett värde som anger om den <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  syntax:
    content: protected bool HasContext { get; }
    return:
      type: System.Boolean
      description: "FALSKT om den <xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, annars <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Configuration.ConfigurationElement.CurrentConfiguration*>"
  overload: System.Configuration.ConfigurationElement.HasContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Init
  id: Init
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Anger den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt till det ursprungliga tillståndet."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  id: InitializeDefault
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Används för att initiera en standarduppsättning med värden för den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt."
  remarks: "Anropas för att ange det interna tillståndet för objektet till standardvärdena."
  syntax:
    content: protected virtual void InitializeDefault ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.InitializeDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Anger om den här konfigurationselementet har ändrats sedan den senast sparades eller har lästs in, implementeras i en härledd klass."
  remarks: "Metoden IsModified avgör om detta <xref:System.Configuration.ConfigurationElement>objekt skrivs till konfigurationen fil när den <xref:System.Configuration.Configuration.Save%2A>metoden anropas.</xref:System.Configuration.Configuration.Save%2A> </xref:System.Configuration.ConfigurationElement> Om det returnera värdet är `false`, förutsätts att konfigurationsfilen representerar det aktuella tillståndet för elementet.       Som standard IsModified returnerar `true` när en egenskap som har angetts via indexeraren till den här <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>       Åsidosätta metoden IsModified för att tillhandahålla anpassade uppgift om tillståndet för det här <xref:System.Configuration.ConfigurationElement>element.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to extend IsModified.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#35](~/add/codesnippet/csharp/m-system.configuration.c_9_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#35](~/add/codesnippet/visualbasic/m-system.configuration.c_9_1.vb)]  \n  \n The method shown in the previous example is called when a configuration element is modified, as in the following example.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#6](~/add/codesnippet/csharp/m-system.configuration.c_9_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#6](~/add/codesnippet/visualbasic/m-system.configuration.c_9_2.vb)]"
  syntax:
    content: protected virtual bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet har ändrats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet är skrivskyddat."
  remarks: "Systemet definierar konfigurationselement som inte kan ändras.       Ta reda på vilka element kan ändras genom att använda metoden IsReadOnly."
  example:
  - "The following example shows how to use the IsReadOnly method. It is used on a custom section and returns `false`.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#7](~/add/codesnippet/csharp/m-system.configuration.c_12_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#7](~/add/codesnippet/visualbasic/m-system.configuration.c_12_1.vb)]"
  syntax:
    content: public virtual bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet är skrivskyddat, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  id: Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar eller anger en egenskap eller ett attribut för den här konfigurationselementet."
  remarks: "Använd egenskapen objekt att hämta eller ange värdena för en <xref:System.Configuration.ConfigurationProperty>objektet.</xref:System.Configuration.ConfigurationProperty>       I C# är den här egenskapen indexerare för <xref:System.Configuration.ConfigurationSectionCollection>klass.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[System.Configuration.ConfigurationProperty prop] { get; set; }
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "Egenskapen för att komma åt."
    return:
      type: System.Object
      description: "Det angivna egenskap, attribut eller underordnade elementet."
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "<code>prop</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller finns inte i elementet."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>läses endast eller låst."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar eller anger ett egenskapen, attribut eller underordnat element av denna konfigurationselementet."
  remarks: "Använd egenskapen objekt att hämta eller ange värdena för en <xref:System.Configuration.ConfigurationProperty>objektet.</xref:System.Configuration.ConfigurationProperty>       I C# är den här egenskapen indexerare för <xref:System.Configuration.ConfigurationSectionCollection>klass.</xref:System.Configuration.ConfigurationSectionCollection>"
  syntax:
    content: protected object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> åtkomst."
    return:
      type: System.Object
      description: "Det angivna egenskapen, attribut eller underordnade elementet"
  overload: System.Configuration.ConfigurationElement.Item*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>prop</code>är skrivskyddad eller låst."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  id: ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Lägger till Ogiltig egenskap-fel i den här <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt, och i alla underelement i listan skickades."
  syntax:
    content: protected virtual void ListErrors (System.Collections.IList errorList);
    parameters:
    - id: errorList
      type: System.Collections.IList
      description: "Ett objekt som implementerar det <xref:System.Collections.IList>gränssnittet.</xref:System.Collections.IList>"
  overload: System.Configuration.ConfigurationElement.ListErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  id: LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar samling låst attribut."
  remarks: "Egenskapen LockAllAttributesExcept kan du låsa alla attribut samtidigt, med undantag för det som du anger. Om du vill göra det använder du den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metod som beskrivs i avsnittet exempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockAllAttributesExcept egenskapen kan du förhindra att underordnat konfigurationselement för det element som regeln gäller kan ändras. Använd den <xref:System.Configuration.ConfigurationElement.LockItem%2A>egenskapen om du vill publicera ett allmänt lås på det överordnade elementet sig själv och dess underordnade element.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllAttributesExcept.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#9](~/add/codesnippet/csharp/p-system.configuration.c_59_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#9](~/add/codesnippet/visualbasic/p-system.configuration.c_59_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst attribut (Egenskaper) för elementet."
  overload: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  id: LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar de låst element."
  remarks: "Egenskapen LockAllElementsExcept kan du låsa alla element på en gång, förutom den som du anger.      > [!NOTE] > I LockAllElementsExcept egenskapen kan du förhindra att underordnat konfigurationselement för det element som regeln gäller kan ändras. Använd den <xref:System.Configuration.ConfigurationElement.LockItem%2A>egenskapen om du vill publicera ett allmänt lås på elementet sig själv och dess underordnade element.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAllElementsExcept property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#5](~/add/codesnippet/csharp/p-system.configuration.c_3_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#5](~/add/codesnippet/visualbasic/p-system.configuration.c_3_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst element."
  overload: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockAttributes
  id: LockAttributes
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar samling låst attribut"
  remarks: "Egenskapen LockAttributes kan du låsa alla attribut som du anger.       Om du vill att du använder den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metod som beskrivs i avsnittet exempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockAttributes egenskapen kan du förhindra att underordnat konfigurationselement för det element som regeln gäller kan ändras. Använd <xref:System.Configuration.ConfigurationElement.LockItem%2A>Om du vill publicera ett allmänt lås på själva elementet och dess underordnade element.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockAttributes property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#8](~/add/codesnippet/csharp/p-system.configuration.c_45_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#8](~/add/codesnippet/visualbasic/p-system.configuration.c_45_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockAttributes { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst attribut (Egenskaper) för elementet."
  overload: System.Configuration.ConfigurationElement.LockAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockElements
  id: LockElements
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar de låst element."
  remarks: "Egenskapen LockElements kan du låsa alla element som du anger.       Om du vill göra det använder du den <xref:System.Configuration.ConfigurationLockCollection.Contains%2A>metod som beskrivs i nästa exempel.</xref:System.Configuration.ConfigurationLockCollection.Contains%2A>      > [!NOTE] > I LockElements egenskapen kan du förhindra att underordnat konfigurationselement för det element som regeln gäller kan ändras. Använd <xref:System.Configuration.ConfigurationElement.LockItem%2A>Om du vill publicera ett allmänt lås på själva elementet och dess underordnade element.</xref:System.Configuration.ConfigurationElement.LockItem%2A>"
  example:
  - "The following example shows how to use the LockElements property.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#4](~/add/codesnippet/csharp/p-system.configuration.c_11_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#4](~/add/codesnippet/visualbasic/p-system.configuration.c_11_1.vb)]"
  syntax:
    content: public System.Configuration.ConfigurationLockCollection LockElements { get; }
    return:
      type: System.Configuration.ConfigurationLockCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> låst element."
  overload: System.Configuration.ConfigurationElement.LockElements*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.LockItem
  id: LockItem
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar eller anger ett värde som anger om elementet är låst."
  remarks: "Använd egenskapen LockItem om du vill publicera ett allmänt lås på själva elementet och dess underordnade element."
  example:
  - "The following example shows how to use the LockItem.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#3](~/add/codesnippet/csharp/p-system.configuration.c_20_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#3](~/add/codesnippet/visualbasic/p-system.configuration.c_20_1.vb)]"
  syntax:
    content: public bool LockItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet är låst; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.LockItem*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Elementet har redan låsts på en högre konfigurationsnivå."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  id: OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar ett värde som anger om ett okänt attribut påträffades under deserialisering."
  remarks: "OnDeserializeUnrecognizedAttribute anropas när ett okänt attribut påträffades under avserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på det okända attributet."
    - id: value
      type: System.String
      description: "Värdet för det okända attributet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När ett okänt attribut påträffades under deserialisering av; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar ett värde som anger om ett okänt element påträffades under deserialisering."
  remarks: "OnDeserializeUnrecognizedElement anropas när ett okänt attribut påträffades under avserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "Namnet på den okända underelement."
    - id: reader
      type: System.Xml.XmlReader
      description: "Den <xref:System.Xml.XmlReader>som används för deserialisering.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När ett okänt element påträffades under deserialisering av; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The element identified by <code>elementName</code> is locked.  \n  \n \\- or -  \n  \n One or more of the element's attributes is locked.  \n  \n \\- or -  \n  \n <code>elementName</code> is unrecognized, or the element has an unrecognized attribute.  \n  \n \\- or -  \n  \n The element has a Boolean attribute with an invalid value.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property more than once.  \n  \n \\- or -  \n  \n An attempt was made to deserialize a property that is not a valid member of the element.  \n  \n \\- or -  \n  \n The element cannot contain a CDATA or text element."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  id: OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Utlöser ett undantag när det gick inte att hitta en obligatorisk egenskap."
  remarks: "Den <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>anropas när ett okänt attribut påträffades under avserialisering av det <xref:System.Configuration.ConfigurationElement>objektet.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A>"
  syntax:
    content: protected virtual object OnRequiredPropertyNotFound (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på det obligatoriska attributet inte hittades."
    return:
      type: System.Object
      description: "Ingen."
  overload: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "I samtliga fall."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  id: PostDeserialize
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Anropas efter avserialisering."
  syntax:
    content: protected virtual void PostDeserialize ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  id: PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Anropas innan serialisering."
  syntax:
    content: protected virtual void PreSerialize (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som ska användas för att serialisera den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  overload: System.Configuration.ConfigurationElement.PreSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Properties
  id: Properties
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Hämtar insamlingen av egenskaper."
  remarks: "Egenskapen egenskaper, även kallat egenskapsuppsättningen, innehåller alla egenskaper (attribut) som gäller för elementet."
  example:
  - For an example that shows how to use the Properties property, refer to the <xref:System.Configuration.ConfigurationProperty> class.
  syntax:
    content: protected virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Den <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> egenskaper för elementet."
  overload: System.Configuration.ConfigurationElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Återställer det interna tillståndet för den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet, inklusive Lås och egenskaper för samlingar."
  syntax:
    content: protected virtual void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Den överordnade noden för konfigurationselementet."
  overload: System.Configuration.ConfigurationElement.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Återställer värdet för den <xref:System.Configuration.ConfigurationElement.IsModified*>metod för att <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> implementeras i en härledd klass.</xref:System.Configuration.ConfigurationElement.IsModified*>"
  remarks: "ResetModified-metoden anropas automatiskt efter ändringar av den här <xref:System.Configuration.ConfigurationElement>objekt har skrivits till konfigurationsfilen.</xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Skriver innehållet i den här konfigurationselementet till konfigurationsfilen implementeras i en härledd klass."
  remarks: ''
  example:
  - "The following example shows how to extend the SerializeElement method.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#34](~/add/codesnippet/csharp/640dc581-4dbf-4d04-aba6-_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#34](~/add/codesnippet/visualbasic/640dc581-4dbf-4d04-aba6-_1.vb)]"
  syntax:
    content: protected virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som skriver till konfigurationsfilen.</xref:System.Xml.XmlWriter>"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att serialisera endast samling nyckelegenskaper; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om några data serialiserades faktiskt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det aktuella attributet är låst på en högre konfigurationsnivå."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  id: SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Skriver yttre taggar för den här konfigurationselementet till konfigurationsfilen implementeras i en härledd klass."
  remarks: "SerializeToXmlElement-metoden anropas efter anropet till den <xref:System.Configuration.ConfigurationElement.Unmerge%2A>metoden under serialiseringen.</xref:System.Configuration.ConfigurationElement.Unmerge%2A> Metoden SerializeToXmlElement skriver ut innehållet i konfigurationselementet mellan inledande och avslutande taggar för elementet. Åsidosätta SerializeToXmlElement för att tillhandahålla en metod för anpassad serialisering."
  syntax:
    content: protected virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som skriver till konfigurationsfilen.</xref:System.Xml.XmlWriter>"
    - id: elementName
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> som ska skrivas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om skrivningen lyckades. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Elementet har flera underordnade element."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  id: SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Egenskapen med det angivna värdet."
  syntax:
    content: protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);
    parameters:
    - id: prop
      type: System.Configuration.ConfigurationProperty
      description: "Elementet egenskapen anges."
    - id: value
      type: System.Object
      description: "Värdet för att tilldela egenskapen."
    - id: ignoreLocks
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om lås på egenskapen som ska ignoreras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElement.SetPropertyValue*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Inträffar om elementet är skrivskyddad eller <code> ignoreLocks </code> är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> men Lås inte kan ignoreras."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Anger den <xref:System.Configuration.ConfigurationElement.IsReadOnly*>-egenskapen för den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objektet och alla underelement.</xref:System.Configuration.ConfigurationElement.IsReadOnly*>"
  remarks: "Den här metoden används internt för att ta de systemkonfiguration element som inte ändras.       Ta reda på vilka element kan ändras genom att använda den <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>metoden.</xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>"
  syntax:
    content: protected virtual void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElement.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Ändrar den <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objekt att ta bort alla värden som inte ska sparas."
  remarks: "Den här metoden anropas innan den <xref:System.Configuration.ConfigurationElement>objekt sparas av den <xref:System.Configuration.Configuration>objekt för att ta bort alla onödiga egenskaper.</xref:System.Configuration.Configuration> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "En <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> på nuvarande nivå som innehåller en sammanslagen vy av egenskaperna."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Överordnat <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det här är den översta nivån."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "En <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref> som avgör vilken egenskap som värden för att inkludera."
  overload: System.Configuration.ConfigurationElement.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationElement.#ctor
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement()
  nameWithType: ConfigurationElement.ConfigurationElement()
  fullName: System.Configuration.ConfigurationElement.ConfigurationElement()
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
  fullName: System.Configuration.ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.Configuration
  parent: System.Configuration
  isExternal: false
  name: Configuration
  nameWithType: Configuration
  fullName: System.Configuration.Configuration
- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement(XmlReader,Boolean)
  nameWithType: ConfigurationElement.DeserializeElement(XmlReader,Boolean)
  fullName: System.Configuration.ConfigurationElement.DeserializeElement(XmlReader,Boolean)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElement.ElementInformation
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
  fullName: System.Configuration.ConfigurationElement.ElementInformation
- uid: System.Configuration.ElementInformation
  parent: System.Configuration
  isExternal: false
  name: ElementInformation
  nameWithType: ElementInformation
  fullName: System.Configuration.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
  fullName: System.Configuration.ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Configuration.ConfigurationElement.Equals(System.Object)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElement.Equals(Object)
  fullName: System.Configuration.ConfigurationElement.Equals(Object)
- uid: System.Configuration.ConfigurationElement.EvaluationContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
  fullName: System.Configuration.ConfigurationElement.EvaluationContext
- uid: System.Configuration.ContextInformation
  parent: System.Configuration
  isExternal: false
  name: ContextInformation
  nameWithType: ContextInformation
  fullName: System.Configuration.ContextInformation
- uid: System.Configuration.ConfigurationElement.GetHashCode
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElement.GetHashCode()
  fullName: System.Configuration.ConfigurationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString(String)
  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString(String)
  nameWithType: ConfigurationElement.GetTransformedTypeString(String)
  fullName: System.Configuration.ConfigurationElement.GetTransformedTypeString(String)
- uid: System.Configuration.ConfigurationElement.HasContext
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
  fullName: System.Configuration.ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init()
  nameWithType: ConfigurationElement.Init()
  fullName: System.Configuration.ConfigurationElement.Init()
- uid: System.Configuration.ConfigurationElement.InitializeDefault
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault()
  nameWithType: ConfigurationElement.InitializeDefault()
  fullName: System.Configuration.ConfigurationElement.InitializeDefault()
- uid: System.Configuration.ConfigurationElement.IsModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElement.IsModified()
  fullName: System.Configuration.ConfigurationElement.IsModified()
- uid: System.Configuration.ConfigurationElement.IsReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElement.IsReadOnly()
  fullName: System.Configuration.ConfigurationElement.IsReadOnly()
- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(ConfigurationProperty)
  nameWithType: ConfigurationElement.Item(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationElement.Item(ConfigurationProperty)
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.Configuration.ConfigurationElement.Item(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationElement.Item(String)
  fullName: System.Configuration.ConfigurationElement.Item(String)
- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors(IList)
  nameWithType: ConfigurationElement.ListErrors(IList)
  fullName: System.Configuration.ConfigurationElement.ListErrors(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
  fullName: System.Configuration.ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationLockCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationLockCollection
  nameWithType: ConfigurationLockCollection
  fullName: System.Configuration.ConfigurationLockCollection
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
  fullName: System.Configuration.ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
  fullName: System.Configuration.ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
  fullName: System.Configuration.ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
  fullName: System.Configuration.ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute(String,String)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(String,String)
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound(String)
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)
  fullName: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(String)
- uid: System.Configuration.ConfigurationElement.PostDeserialize
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: ConfigurationElement.PostDeserialize()
  fullName: System.Configuration.ConfigurationElement.PostDeserialize()
- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)
  fullName: System.Configuration.ConfigurationElement.PreSerialize(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElement.Properties
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
  fullName: System.Configuration.ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElement.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElement.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.ResetModified
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElement.ResetModified()
  fullName: System.Configuration.ConfigurationElement.ResetModified()
- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElement.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElement.SerializeElement(XmlWriter,Boolean)
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement(XmlWriter,String)
  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
  fullName: System.Configuration.ConfigurationElement.SerializeToXmlElement(XmlWriter,String)
- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue(ConfigurationProperty,Object,Boolean)
  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
  fullName: System.Configuration.ConfigurationElement.SetPropertyValue(ConfigurationProperty,Object,Boolean)
- uid: System.Configuration.ConfigurationElement.SetReadOnly
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElement.SetReadOnly()
  fullName: System.Configuration.ConfigurationElement.SetReadOnly()
- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElement.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElement.#ctor*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement.ConfigurationElement
- uid: System.Configuration.ConfigurationElement.CurrentConfiguration*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: CurrentConfiguration
  nameWithType: ConfigurationElement.CurrentConfiguration
- uid: System.Configuration.ConfigurationElement.DeserializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: DeserializeElement
  nameWithType: ConfigurationElement.DeserializeElement
- uid: System.Configuration.ConfigurationElement.ElementInformation*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementInformation
  nameWithType: ConfigurationElement.ElementInformation
- uid: System.Configuration.ConfigurationElement.ElementProperty*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ElementProperty
  nameWithType: ConfigurationElement.ElementProperty
- uid: System.Configuration.ConfigurationElement.Equals*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElement.Equals
- uid: System.Configuration.ConfigurationElement.EvaluationContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: EvaluationContext
  nameWithType: ConfigurationElement.EvaluationContext
- uid: System.Configuration.ConfigurationElement.GetHashCode*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElement.GetHashCode
- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedAssemblyString
  nameWithType: ConfigurationElement.GetTransformedAssemblyString
- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: GetTransformedTypeString
  nameWithType: ConfigurationElement.GetTransformedTypeString
- uid: System.Configuration.ConfigurationElement.HasContext*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: HasContext
  nameWithType: ConfigurationElement.HasContext
- uid: System.Configuration.ConfigurationElement.Init*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Init
  nameWithType: ConfigurationElement.Init
- uid: System.Configuration.ConfigurationElement.InitializeDefault*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: InitializeDefault
  nameWithType: ConfigurationElement.InitializeDefault
- uid: System.Configuration.ConfigurationElement.IsModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElement.IsModified
- uid: System.Configuration.ConfigurationElement.IsReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElement.IsReadOnly
- uid: System.Configuration.ConfigurationElement.Item*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Item
  nameWithType: ConfigurationElement.Item
- uid: System.Configuration.ConfigurationElement.ListErrors*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ListErrors
  nameWithType: ConfigurationElement.ListErrors
- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllAttributesExcept
  nameWithType: ConfigurationElement.LockAllAttributesExcept
- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAllElementsExcept
  nameWithType: ConfigurationElement.LockAllElementsExcept
- uid: System.Configuration.ConfigurationElement.LockAttributes*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockAttributes
  nameWithType: ConfigurationElement.LockAttributes
- uid: System.Configuration.ConfigurationElement.LockElements*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockElements
  nameWithType: ConfigurationElement.LockElements
- uid: System.Configuration.ConfigurationElement.LockItem*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: LockItem
  nameWithType: ConfigurationElement.LockItem
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedAttribute
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute
- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: OnRequiredPropertyNotFound
  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound
- uid: System.Configuration.ConfigurationElement.PostDeserialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PostDeserialize
  nameWithType: ConfigurationElement.PostDeserialize
- uid: System.Configuration.ConfigurationElement.PreSerialize*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: PreSerialize
  nameWithType: ConfigurationElement.PreSerialize
- uid: System.Configuration.ConfigurationElement.Properties*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Properties
  nameWithType: ConfigurationElement.Properties
- uid: System.Configuration.ConfigurationElement.Reset*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElement.Reset
- uid: System.Configuration.ConfigurationElement.ResetModified*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElement.ResetModified
- uid: System.Configuration.ConfigurationElement.SerializeElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElement.SerializeElement
- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SerializeToXmlElement
  nameWithType: ConfigurationElement.SerializeToXmlElement
- uid: System.Configuration.ConfigurationElement.SetPropertyValue*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetPropertyValue
  nameWithType: ConfigurationElement.SetPropertyValue
- uid: System.Configuration.ConfigurationElement.SetReadOnly*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElement.SetReadOnly
- uid: System.Configuration.ConfigurationElement.Unmerge*
  parent: System.Configuration.ConfigurationElement
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElement.Unmerge
