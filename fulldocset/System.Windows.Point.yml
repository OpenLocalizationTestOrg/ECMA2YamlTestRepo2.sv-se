### YamlMime:ManagedReference
items:
- uid: System.Windows.Point
  id: Point
  children:
  - System.Windows.Point.#ctor(System.Double,System.Double)
  - System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.Equals(System.Object)
  - System.Windows.Point.Equals(System.Windows.Point)
  - System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.GetHashCode
  - System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  - System.Windows.Point.Offset(System.Double,System.Double)
  - System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)
  - System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)
  - System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.Parse(System.String)
  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Point.ToString
  - System.Windows.Point.ToString(System.IFormatProvider)
  - System.Windows.Point.X
  - System.Windows.Point.Y
  langs:
  - csharp
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
  type: Struct
  summary: "Representerar x - och y-koordinaten-par i tvådimensionell utrymme."
  remarks: "I XAML, avgränsare mellan den <xref:System.Windows.Point.X%2A>och <xref:System.Windows.Point.Y%2A>värden för en punkt kan vara ett kommatecken eller blanksteg.</xref:System.Windows.Point.Y%2A> </xref:System.Windows.Point.X%2A>       Vissa kulturer kan använda tecknet kommatecken som decimal avgränsare i stället för en punkt. XAML bearbetning för invariabla kultur som standard till en-US i de flesta implementeringar av XAML processor och förväntar sig perioden ska decimal avgränsaren. Du bör undvika att använda tecknet kommatecken som decimal avgränsare om du anger en punkt i XAML, eftersom som ska vara i konflikt med typen strängkonvertering för en punkt-attributvärde i den <xref:System.Windows.Point.X%2A>och <xref:System.Windows.Point.Y%2A>komponenter.</xref:System.Windows.Point.Y%2A> </xref:System.Windows.Point.X%2A>      <a name=&quot;xamlAttributeUsage_Duration&quot;></a>## XAML attributsyntax ```   <object property=&quot;x,y&quot;/>   -or-   <object property=&quot;x y&quot;/>   ``` <a name=&quot;xamlValues_MinWidth&quot;> </a> ## XAML värden *x* x-koordinaten för den här platsen.             *y* y-koordinaten för den här platsen."
  example:
  - "The following example shows how to check if two Point structures are not equal.  It also illustrates how to assign values to a Point structure when the structure is being declared and after the structure has been declared.  \n  \n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))]

      public struct Point : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Point.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Point
  langs:
  - csharp
  name: Point(Double,Double)
  nameWithType: Point.Point(Double,Double)
  fullName: System.Windows.Point.Point(Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Skapar en ny <xref href=&quot;System.Windows.Point&quot;> </xref> struktur som innehåller de angivna koordinaterna."
  syntax:
    content: public Point (double x, double y);
    parameters:
    - id: x
      type: System.Double
      description: "X-koordinaten för den nya <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
    - id: y
      type: System.Double
      description: "Y-koordinaten för den nya <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
  overload: System.Windows.Point.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  id: Add(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Add(Point,Vector)
  nameWithType: Point.Add(Point,Vector)
  fullName: System.Windows.Point.Add(Point,Vector)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lägger till en <xref href=&quot;System.Windows.Vector&quot;> </xref> till en <xref href=&quot;System.Windows.Point&quot;> </xref> och returnerar resultatet som ett <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
  remarks: "Lägga till en <xref:System.Windows.Point>struktur för en <xref:System.Windows.Point>struktur är förbjuden.</xref:System.Windows.Point> </xref:System.Windows.Point>"
  example:
  - "This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.  \n  \n [!code-cs[PointExamples_snip#AddPointAndVectorExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#addpointandvectorexample_csharp)]"
  syntax:
    content: public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Den <xref href=&quot;System.Windows.Point&quot;> </xref> om du vill lägga till."
    - id: vector
      type: System.Windows.Vector
      description: "Den <xref href=&quot;System.Windows.Vector&quot;> </xref> om du vill lägga till."
    return:
      type: System.Windows.Point
      description: "Returns the sum of <code>point</code> and <code>vector</code>."
  overload: System.Windows.Point.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Windows.Point.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Anger om den angivna <xref:System.Object>är en <xref href=&quot;System.Windows.Point&quot;> </xref> och om den har samma koordinater som detta <xref href=&quot;System.Windows.Point&quot;> </xref>.</xref:System.Object>"
  remarks: "<xref:System.Windows.Point>koordinater beskrivs med <xref:System.Double>värden.</xref:System.Double></xref:System.Windows.Point> Eftersom värdet för en <xref:System.Double>kan förlora precision när drivas på en jämförelse mellan två <xref:System.Windows.Point>värden som är logiskt lika misslyckas.</xref:System.Windows.Point> </xref:System.Double>"
  example:
  - "The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static Equals method.  \n  \n [!code-cs[PointExamples_snip#NonStaticEqualsExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#nonstaticequalsexample_csharp)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Den <xref:System.Object>ska jämföras.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>o</code> is a <xref href=&quot;System.Windows.Point&quot;></xref> and contains the same <>*> and <>*> values as this <xref href=&quot;System.Windows.Point&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Point.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Equals(System.Windows.Point)
  id: Equals(System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: System.Windows.Point.Equals(Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Jämför två <xref href=&quot;System.Windows.Point&quot;> </xref> strukturer sinsemellan."
  remarks: "<xref:System.Windows.Point>koordinater uttrycks med <xref:System.Double>värden.</xref:System.Double></xref:System.Windows.Point> Eftersom värdet för en <xref:System.Double>kan förlora precision när användas på en jämförelse mellan två <xref:System.Windows.Point>värden som är logiskt lika misslyckas.</xref:System.Windows.Point> </xref:System.Double>"
  syntax:
    content: public bool Equals (System.Windows.Point value);
    parameters:
    - id: value
      type: System.Windows.Point
      description: "Punkten att jämföra med den här instansen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om båda <xref href=&quot;System.Windows.Point&quot;> </xref> strukturer som innehåller samma <> </> *> och <> </> *> värden; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Point.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  id: Equals(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Equals(Point,Point)
  nameWithType: Point.Equals(Point,Point)
  fullName: System.Windows.Point.Equals(Point,Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Jämför två <xref href=&quot;System.Windows.Point&quot;> </xref> strukturer sinsemellan."
  remarks: "Punktkoordinater beskrivs med <xref:System.Double>värden.</xref:System.Double> Eftersom värdet för en <xref:System.Double>kan förlora precision när drivas på en jämförelse mellan två <xref:System.Windows.Point>värden som är logiskt lika misslyckas.</xref:System.Windows.Point> </xref:System.Double>"
  example:
  - "The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static Equals method.  \n  \n [!code-cs[PointExamples_snip#StaticEqualsExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#staticequalsexample_csharp)]"
  syntax:
    content: public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "Den första punkten ska jämföras."
    - id: point2
      type: System.Windows.Point
      description: "Den andra punkten ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>point1</code> and <code>point2</code> contain the same <>*> and <>*> values; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Point.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.GetHashCode
  id: GetHashCode
  parent: System.Windows.Point
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Windows.Point.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returnerar hash-koden för den här <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.  \n  \n [!code-cs[PointExamples_snip#GetHashCodeExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#gethashcodeexample_csharp)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden för den här <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
  overload: System.Windows.Point.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  id: Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Multiply(Point,Matrix)
  nameWithType: Point.Multiply(Point,Matrix)
  fullName: System.Windows.Point.Multiply(Point,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Omvandlar den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> struktur med det angivna <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> struktur."
  remarks: ''
  example:
  - "The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the Multiply method.  \n  \n [!code-cs[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#multiplypointbymatrixexample_csharp)]"
  syntax:
    content: public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Peka transformeringen."
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "Omvandling av matrisen."
    return:
      type: System.Windows.Point
      description: "Den omvandlade punkten."
  overload: System.Windows.Point.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Offset(System.Double,System.Double)
  id: Offset(System.Double,System.Double)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Offset(Double,Double)
  nameWithType: Point.Offset(Double,Double)
  fullName: System.Windows.Point.Offset(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Förskjuter en punkt <> </> *> och <> </> *> koordinater med de angivna belopp."
  remarks: "Den här åtgärden motsvarar att lägga till en <xref:System.Windows.Point>till <xref:System.Windows.Vector>.</xref:System.Windows.Vector> </xref:System.Windows.Point>       Observera att anropa metoden förskjutning bara har en effekt om du kan ändra den <xref:System.Windows.Point.X%2A>och <xref:System.Windows.Point.Y%2A>Egenskaper direkt.</xref:System.Windows.Point.Y%2A> </xref:System.Windows.Point.X%2A> Eftersom <xref:System.Windows.Point>är en värdetyp om du refererar till en <xref:System.Windows.Point>objekt med en egenskap eller indexerare kan du hämta en kopia av objektet, inte en referens till objektet.</xref:System.Windows.Point> </xref:System.Windows.Point> Om du försöker ändra <xref:System.Windows.Point.X%2A>eller <xref:System.Windows.Point.Y%2A>för en egenskap eller indexerare referens kompileraren ett fel inträffar.</xref:System.Windows.Point.Y%2A> </xref:System.Windows.Point.X%2A> På liknande sätt, anropar förskjutning på egenskapen eller indexeraren ändrar inte det underliggande objektet.  Om du vill ändra värdet för en <xref:System.Windows.Point>som refereras till som en egenskap eller indexerare, skapa en ny <xref:System.Windows.Point>, ändra dess fält och tilldela sedan den <xref:System.Windows.Point>tillbaka till egenskapen eller indexeraren.</xref:System.Windows.Point> </xref:System.Windows.Point> </xref:System.Windows.Point>"
  example:
  - "The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.  \n  \n [!code-cs[PointExamples_snip#OffsetExample_csharp](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#offsetexample_csharp)]"
  syntax:
    content: public void Offset (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "Hur mycket att förskjuta punkten <xref:System.Windows.Point.X*>samordna.</xref:System.Windows.Point.X*>"
    - id: offsetY
      type: System.Double
      description: "Hur mycket att förskjuta punkten <xref:System.Windows.Point.Y*>samordna.</xref:System.Windows.Point.Y*>"
  overload: System.Windows.Point.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  id: op_Addition(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Addition(Point,Vector)
  nameWithType: Point.op_Addition(Point,Vector)
  fullName: System.Windows.Point.op_Addition(Point,Vector)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Översätter det angivna <xref href=&quot;System.Windows.Point&quot;> </xref> av den angivna <xref href=&quot;System.Windows.Vector&quot;> </xref> och returnerar resultatet."
  remarks: ''
  example:
  - "The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedAdditionOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedadditionoperatorexample)]\n [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedadditionoperatorexample)]"
  syntax:
    content: public static System.Windows.Point op_Addition (System.Windows.Point point, System.Windows.Vector vector);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Punkten att översätta."
    - id: vector
      type: System.Windows.Vector
      description: "Belopp som att översätta `point`."
    return:
      type: System.Windows.Point
      description: "Resultatet av översattes angiven av den angivna metoden."
  overload: System.Windows.Point.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  id: op_Equality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Equality(Point,Point)
  nameWithType: Point.op_Equality(Point,Point)
  fullName: System.Windows.Point.op_Equality(Point,Point)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Jämför två <xref href=&quot;System.Windows.Point&quot;> </xref> strukturer sinsemellan."
  remarks: "En punktkoordinater beskrivs med <xref:System.Double>värden.</xref:System.Double> Eftersom värdet för <xref:System.Double>kan förlora precision när beräkningar utförs på dem som en jämförelse mellan två <xref:System.Windows.Point>värden som är logiskt lika misslyckas.</xref:System.Windows.Point> </xref:System.Double>"
  example:
  - "The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedEqualityOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedequalityoperatorexample)]\n [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedequalityoperatorexample)]"
  syntax:
    content: public static bool op_Equality (System.Windows.Point point1, System.Windows.Point point2);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "Först <xref href=&quot;System.Windows.Point&quot;> </xref> om du vill jämföra."
    - id: point2
      type: System.Windows.Point
      description: "Andra <xref href=&quot;System.Windows.Point&quot;> </xref> om du vill jämföra."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both the <>*> and <>*> coordinates of <code>point1</code> and <code>point2</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Point.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)
  id: op_Explicit(System.Windows.Point to System.Windows.Size)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Windows.Point.op_Explicit(Point)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Size op_Explicit (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Som ska läggas till."
    return:
      type: System.Windows.Size
      description: "Som ska läggas till."
  overload: System.Windows.Point.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)
  id: op_Explicit(System.Windows.Point to System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Windows.Point.op_Explicit(Point)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Vector op_Explicit (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Som ska läggas till."
    return:
      type: System.Windows.Vector
      description: "Som ska läggas till."
  overload: System.Windows.Point.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  id: op_Inequality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Inequality(Point,Point)
  nameWithType: Point.op_Inequality(Point,Point)
  fullName: System.Windows.Point.op_Inequality(Point,Point)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Jämför två <xref href=&quot;System.Windows.Point&quot;> </xref> för olikhet."
  remarks: "En punkt <xref:System.Windows.Point.X%2A>och <xref:System.Windows.Point.Y%2A>koordinater beskrivs med <xref:System.Double>värden.</xref:System.Double> </xref:System.Windows.Point.Y%2A> </xref:System.Windows.Point.X%2A> Eftersom <xref:System.Double>värden kan förlora precision när användas på en jämförelse mellan två <xref:System.Windows.Point>värden som är logiskt lika misslyckas.</xref:System.Windows.Point> </xref:System.Double>"
  example:
  - "The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedInequalityOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedinequalityoperatorexample)]\n [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedinequalityoperatorexample)]"
  syntax:
    content: public static bool op_Inequality (System.Windows.Point point1, System.Windows.Point point2);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "Den första punkten ska jämföras."
    - id: point2
      type: System.Windows.Point
      description: "Den andra punkten ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>point1</code> and <code>point2</code> have different <>*> or <>*> coordinates; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>point1</code> and <code>point2</code> have the same <>*> and <>*> coordinates."
  overload: System.Windows.Point.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  id: op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Multiply(Point,Matrix)
  nameWithType: Point.op_Multiply(Point,Matrix)
  fullName: System.Windows.Point.op_Multiply(Point,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Omvandlar den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> av den angivna <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (*) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]\n [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]"
  syntax:
    content: public static System.Windows.Point op_Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Peka transformeringen."
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "Omvandling av matrisen."
    return:
      type: System.Windows.Point
      description: "Resultatet av att omvandla den angivna punkten med hjälp av den angivna matrisen."
  overload: System.Windows.Point.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  id: op_Subtraction(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Subtraction(Point,Point)
  nameWithType: Point.op_Subtraction(Point,Point)
  fullName: System.Windows.Point.op_Subtraction(Point,Point)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> från en annan angiven <xref href=&quot;System.Windows.Point&quot;> </xref> och returnerar skillnaden som en <xref href=&quot;System.Windows.Vector&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedsubtractionoperatorexample2)]\n [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedsubtractionoperatorexample2)]"
  syntax:
    content: public static System.Windows.Vector op_Subtraction (System.Windows.Point point1, System.Windows.Point point2);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "Punkten där `point2` subtraheras."
    - id: point2
      type: System.Windows.Point
      description: "Peka på Ta bort från `point1`."
    return:
      type: System.Windows.Vector
      description: "The difference between <code>point1</code> and <code>point2</code>."
  overload: System.Windows.Point.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  id: op_Subtraction(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  name: op_Subtraction(Point,Vector)
  nameWithType: Point.op_Subtraction(Point,Vector)
  fullName: System.Windows.Point.op_Subtraction(Point,Vector)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Vector&quot;> </xref> från den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> och returnerar det resulterande <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.  \n  \n [!code-cs[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#overloadedsubtractionoperatorexample1)]\n [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#overloadedsubtractionoperatorexample1)]"
  syntax:
    content: public static System.Windows.Point op_Subtraction (System.Windows.Point point, System.Windows.Vector vector);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Punkten där `vector` subtraheras."
    - id: vector
      type: System.Windows.Vector
      description: "Vektorn som ska subtraheras från`point1`"
    return:
      type: System.Windows.Point
      description: "The difference between <code>point</code> and <code>vector</code>."
  overload: System.Windows.Point.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Point.Parse(String)
  fullName: System.Windows.Point.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Skapar en <xref href=&quot;System.Windows.Point&quot;> </xref> från den angivna <xref:System.String>.</xref:System.String>"
  remarks: ''
  example:
  - "The following example shows how to use the Parse method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.  \n  \n [!code-cs[PointExamples_snip#ParseExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#parseexample)]\n [!code-vb[PointExamples_snip#ParseExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#parseexample)]"
  syntax:
    content: public static System.Windows.Point Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "En strängrepresentation av en punkt."
    return:
      type: System.Windows.Point
      description: "Motsvarande <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
  overload: System.Windows.Point.Parse*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>source</code>är inte består av två eller utrymme-kommaavgränsad dubbla värden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>source</code>innehåller inte två tal.       - eller - <code>source</code> innehåller för många avgränsare."
  platform:
  - net462
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  id: Subtract(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Subtract(Point,Point)
  nameWithType: Point.Subtract(Point,Point)
  fullName: System.Windows.Point.Subtract(Point,Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> från en annan angiven <xref href=&quot;System.Windows.Point&quot;> </xref> och returnerar skillnaden som en <xref href=&quot;System.Windows.Vector&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static Subtract method.  \n  \n [!code-cs[PointExamples_snip#SubtractExample2](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#subtractexample2)]\n [!code-vb[PointExamples_snip#SubtractExample2](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#subtractexample2)]"
  syntax:
    content: public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "Punkten där `point2` subtraheras."
    - id: point2
      type: System.Windows.Point
      description: "Peka på Ta bort från `point1`."
    return:
      type: System.Windows.Vector
      description: "The difference between <code>point1</code> and <code>point2</code>."
  overload: System.Windows.Point.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  id: Subtract(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  name: Subtract(Point,Vector)
  nameWithType: Point.Subtract(Point,Vector)
  fullName: System.Windows.Point.Subtract(Point,Vector)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Vector&quot;> </xref> från den angivna <xref href=&quot;System.Windows.Point&quot;> </xref> och returnerar det resulterande <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static Subtract method.  \n  \n [!code-cs[PointExamples_snip#SubtractExample1](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#subtractexample1)]\n [!code-vb[PointExamples_snip#SubtractExample1](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#subtractexample1)]"
  syntax:
    content: public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Punkten där `vector` subtraheras."
    - id: vector
      type: System.Windows.Vector
      description: "Den `vector` ska subtraheras från `point`."
    return:
      type: System.Windows.Point
      description: "The difference between <code>point</code> and <code>vector</code>."
  overload: System.Windows.Point.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Point
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Point.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Point.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Den här medlemmen stöder den [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastrukturen och är inte avsedd att användas direkt från din kod. En beskrivning av den här medlemmen finns <xref:System.IFormattable.ToString*>.</xref:System.IFormattable.ToString*>"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "Sträng som anger formatet som används.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> använder standardformatet som definierats för typ av den <xref:System.IFormattable>implementering.</xref:System.IFormattable>"
    - id: provider
      type: System.IFormatProvider
      description: "Den <xref uid=&quot;langword_csharp_IFormatProvider&quot; name=&quot;IFormatProvider&quot; href=&quot;&quot;> </xref> du använder för att formatera värdet.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> få talformat information från den aktuella språkinställningen av operativsystemet."
    return:
      type: System.String
      description: "En sträng som innehåller värdet för den aktuella instansen i angivet format."
  overload: System.Windows.Point.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.ToString
  id: ToString
  parent: System.Windows.Point
  langs:
  - csharp
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Windows.Point.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Skapar en <xref:System.String>representation av det här <xref href=&quot;System.Windows.Point&quot;> </xref>.</xref:System.String>"
  remarks: ''
  example:
  - "The following example shows how to use the ToString method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.  \n  \n [!code-cs[PointExamples_snip#ToStringExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#tostringexample)]\n [!code-vb[PointExamples_snip#ToStringExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#tostringexample)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller den <> </> *> och <> </> *> värdena för detta <xref href=&quot;System.Windows.Point&quot;> </xref> struktur.</xref:System.String>"
  overload: System.Windows.Point.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Point
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Point.ToString(IFormatProvider)
  fullName: System.Windows.Point.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Skapar en <xref:System.String>representation av det här <xref href=&quot;System.Windows.Point&quot;> </xref>.</xref:System.String>"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "Kultur-specifik formatering information."
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller den <> </> *> och <> </> *> värdena för detta <xref href=&quot;System.Windows.Point&quot;> </xref> struktur.</xref:System.String>"
  overload: System.Windows.Point.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.X
  id: X
  parent: System.Windows.Point
  langs:
  - csharp
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hämtar eller anger X-koordinaten värdet för det här <xref href=&quot;System.Windows.Point&quot;> </xref> struktur."
  remarks: ''
  example:
  - "The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.  It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.  \n  \n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]"
  syntax:
    content: public double X { get; set; }
    return:
      type: System.Double
      description: "Värdet för X-koordinaten för detta <xref href=&quot;System.Windows.Point&quot;> </xref> struktur.  Standardvärdet är `0`."
  overload: System.Windows.Point.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Point.Y
  id: Y
  parent: System.Windows.Point
  langs:
  - csharp
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Hämtar eller anger Y-koordinaten för detta <xref href=&quot;System.Windows.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.  It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.  \n  \n [!code-cs[PointExamples_snip#PointInequalityExample](~/add/codesnippet/csharp/PointExamples_snip/PointExample.cs#pointinequalityexample)]\n [!code-vb[PointExamples_snip#PointInequalityExample](~/add/codesnippet/visualbasic/pointexamples_snip/pointexample.vb#pointinequalityexample)]"
  syntax:
    content: public double Y { get; set; }
    return:
      type: System.Double
      description: "Värdet för Y-koordinaten för detta <xref href=&quot;System.Windows.Point&quot;> </xref> struktur.  Standardvärdet är `0`."
  overload: System.Windows.Point.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Point.#ctor(System.Double,System.Double)
  parent: System.Windows.Point
  isExternal: false
  name: Point(Double,Double)
  nameWithType: Point.Point(Double,Double)
  fullName: System.Windows.Point.Point(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  isExternal: false
  name: Add(Point,Vector)
  nameWithType: Point.Add(Point,Vector)
  fullName: System.Windows.Point.Add(Point,Vector)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Point.Equals(System.Object)
  parent: System.Windows.Point
  isExternal: false
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Windows.Point.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Point.Equals(System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: System.Windows.Point.Equals(Point)
- uid: System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: Equals(Point,Point)
  nameWithType: Point.Equals(Point,Point)
  fullName: System.Windows.Point.Equals(Point,Point)
- uid: System.Windows.Point.GetHashCode
  parent: System.Windows.Point
  isExternal: false
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Windows.Point.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  isExternal: false
  name: Multiply(Point,Matrix)
  nameWithType: Point.Multiply(Point,Matrix)
  fullName: System.Windows.Point.Multiply(Point,Matrix)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Point.Offset(System.Double,System.Double)
  parent: System.Windows.Point
  isExternal: false
  name: Offset(Double,Double)
  nameWithType: Point.Offset(Double,Double)
  fullName: System.Windows.Point.Offset(Double,Double)
- uid: System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  isExternal: false
  name: op_Addition(Point,Vector)
  nameWithType: Point.op_Addition(Point,Vector)
  fullName: System.Windows.Point.op_Addition(Point,Vector)
- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: op_Equality(Point,Point)
  nameWithType: Point.op_Equality(Point,Point)
  fullName: System.Windows.Point.op_Equality(Point,Point)
- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Size)
  parent: System.Windows.Point
  isExternal: false
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Windows.Point.op_Explicit(Point)
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Point.op_Explicit(System.Windows.Point to System.Windows.Vector)
  parent: System.Windows.Point
  isExternal: false
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Windows.Point.op_Explicit(Point)
- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: op_Inequality(Point,Point)
  nameWithType: Point.op_Inequality(Point,Point)
  fullName: System.Windows.Point.op_Inequality(Point,Point)
- uid: System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  isExternal: false
  name: op_Multiply(Point,Matrix)
  nameWithType: Point.op_Multiply(Point,Matrix)
  fullName: System.Windows.Point.op_Multiply(Point,Matrix)
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: op_Subtraction(Point,Point)
  nameWithType: Point.op_Subtraction(Point,Point)
  fullName: System.Windows.Point.op_Subtraction(Point,Point)
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  isExternal: false
  name: op_Subtraction(Point,Vector)
  nameWithType: Point.op_Subtraction(Point,Vector)
  fullName: System.Windows.Point.op_Subtraction(Point,Vector)
- uid: System.Windows.Point.Parse(System.String)
  parent: System.Windows.Point
  isExternal: false
  name: Parse(String)
  nameWithType: Point.Parse(String)
  fullName: System.Windows.Point.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  isExternal: false
  name: Subtract(Point,Point)
  nameWithType: Point.Subtract(Point,Point)
  fullName: System.Windows.Point.Subtract(Point,Point)
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  isExternal: false
  name: Subtract(Point,Vector)
  nameWithType: Point.Subtract(Point,Vector)
  fullName: System.Windows.Point.Subtract(Point,Vector)
- uid: System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Point
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Point.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Point.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Point.ToString
  parent: System.Windows.Point
  isExternal: false
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Windows.Point.ToString()
- uid: System.Windows.Point.ToString(System.IFormatProvider)
  parent: System.Windows.Point
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Point.ToString(IFormatProvider)
  fullName: System.Windows.Point.ToString(IFormatProvider)
- uid: System.Windows.Point.X
  parent: System.Windows.Point
  isExternal: false
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
- uid: System.Windows.Point.Y
  parent: System.Windows.Point
  isExternal: false
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
- uid: System.Windows.Point.#ctor*
  parent: System.Windows.Point
  isExternal: false
  name: Point
  nameWithType: Point.Point
- uid: System.Windows.Point.Add*
  parent: System.Windows.Point
  isExternal: false
  name: Add
  nameWithType: Point.Add
- uid: System.Windows.Point.Equals*
  parent: System.Windows.Point
  isExternal: false
  name: Equals
  nameWithType: Point.Equals
- uid: System.Windows.Point.GetHashCode*
  parent: System.Windows.Point
  isExternal: false
  name: GetHashCode
  nameWithType: Point.GetHashCode
- uid: System.Windows.Point.Multiply*
  parent: System.Windows.Point
  isExternal: false
  name: Multiply
  nameWithType: Point.Multiply
- uid: System.Windows.Point.Offset*
  parent: System.Windows.Point
  isExternal: false
  name: Offset
  nameWithType: Point.Offset
- uid: System.Windows.Point.op_Addition*
  parent: System.Windows.Point
  isExternal: false
  name: op_Addition
  nameWithType: Point.op_Addition
- uid: System.Windows.Point.op_Equality*
  parent: System.Windows.Point
  isExternal: false
  name: op_Equality
  nameWithType: Point.op_Equality
- uid: System.Windows.Point.op_Explicit*
  parent: System.Windows.Point
  isExternal: false
  name: op_Explicit
  nameWithType: Point.op_Explicit
- uid: System.Windows.Point.op_Inequality*
  parent: System.Windows.Point
  isExternal: false
  name: op_Inequality
  nameWithType: Point.op_Inequality
- uid: System.Windows.Point.op_Multiply*
  parent: System.Windows.Point
  isExternal: false
  name: op_Multiply
  nameWithType: Point.op_Multiply
- uid: System.Windows.Point.op_Subtraction*
  parent: System.Windows.Point
  isExternal: false
  name: op_Subtraction
  nameWithType: Point.op_Subtraction
- uid: System.Windows.Point.Parse*
  parent: System.Windows.Point
  isExternal: false
  name: Parse
  nameWithType: Point.Parse
- uid: System.Windows.Point.Subtract*
  parent: System.Windows.Point
  isExternal: false
  name: Subtract
  nameWithType: Point.Subtract
- uid: System.Windows.Point.System#IFormattable#ToString*
  parent: System.Windows.Point
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Point.System.IFormattable.ToString
- uid: System.Windows.Point.ToString*
  parent: System.Windows.Point
  isExternal: false
  name: ToString
  nameWithType: Point.ToString
- uid: System.Windows.Point.X*
  parent: System.Windows.Point
  isExternal: false
  name: X
  nameWithType: Point.X
- uid: System.Windows.Point.Y*
  parent: System.Windows.Point
  isExternal: false
  name: Y
  nameWithType: Point.Y
