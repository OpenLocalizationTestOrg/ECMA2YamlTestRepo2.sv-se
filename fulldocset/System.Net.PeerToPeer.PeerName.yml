### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "Anger de värden som definierar ett objekt för peer-to-peer-peer-namn. Ett peer-namn är vanligtvis en sträng som används för att identifiera en peer-resurs."
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initierar ett nytt objekt av typen <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> med det angivna fullständigt kvalificerade namnet <xref:System.String>värde.</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "Innehåller namnet på peer att koda som en <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> instans."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.String>som anges är inte ett giltigt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Fyller på en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objektet med de data som behövs för att serialisera den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "Den här konstruktorn krävs för deserialisering av den här typen."
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Referens till det objekt som innehåller de data som behövs för att deserialisera den här instansen."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontexten som tillhandahåller avserialisering av data. Kallas även källan för serialiserade data."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller flera parametrar är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> klass."
  remarks: "Den här konstruktorn returnerar ett objekt av typen <xref:System.Net.PeerToPeer.PeerName>som innehåller det fullständigt kvalificerade namnet för peer.</xref:System.Net.PeerToPeer.PeerName> Den anger också om peer-namn är skyddade eller oskyddad.       Den här instansen använder peer standardidentiteten för den aktuella användaren och den angivna <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, utöver typ av peer-namn för att skapa med den angivna klassificerare och skriv.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>som innehåller namnet på Peer att koda som en <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>uppräkningsvärde som anger vilken typ av peer-namn du vill skapa."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.Net.PeerToPeer.PeerName.Classifier*>innehåller en eller flera ogiltiga tecken.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller flera parametrar är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Standard-identitet som används som bas för den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> kunde inte hämtas.      - <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Kunde inte skapas."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Returnerar en sträng som anger de behörigheter som används av det här <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
  remarks: "Endast ägaren, eller peer-värden kan registrera ett skyddat peer-namn. Ett peer-namn anses vara skyddade om det stöds av ett självsignerat certifikat.       Peer-namn är skiftlägeskänsliga och format för en peer-namn: *Authority.Classifier*. Till exempel är &quot;0.MyPeerName&quot; ett giltigt peer-namn."
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "Sträng som innehåller autentisering-delen av den angivna <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>. För skyddade peer-namn innehåller den här egenskapen den offentliga nyckeln som en hexadecimal sträng fyrtio tecken. Den här egenskapen anges till noll (0) för oskyddat peer-namn."
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Returnerar en sträng som innehåller klassificeraren för peer-to-peer <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "Sträng som innehåller den klassificerare delen som används för att identifiera ett peer-namn för <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> eller upplösning inom en PNRP <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.       Om du inte uttryckligen anges är standardvärdet för alla egenskaper <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för referenstyper och noll (0) för egenskaper av typen <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Skapar en ny instans av den angivna <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>objektet med det angivna peer-värdnamnet.</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "Peer-to-peer-värden är &quot;noden seed&quot; ansvarig för initiering av sessionen för peer-to-peer-nätverk, bjuda in kollegor för att delta i program som den här typen av nätverksanslutningen är mest lämpliga för kommunikation, till exempel chatt-grupper eller spel sessioner.       Den här metoden kan användas för att skapa en <xref:System.Net.PeerToPeer.PeerName>objekt baserat på den <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>egenskapen.</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> Det här namnet är inte associerad med identiteten för den anropande noden."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "En sträng som innehåller kvalificerade DNS-värdnamnet."
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "En <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt som representerar namnet på angivna peer-värddatorn."
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.String>som anges är inte en giltig peer värden namnet sträng.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "En <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> kunde inte skapas från den angivna<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Skapar en ny <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> genom att ersätta den <xref:System.Net.PeerToPeer.PeerName.Classifier*>fält som definierats för den angivna <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektet med det angivna klassificerare strängvärdet.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>Läggs till i den befintliga <xref:System.Net.PeerToPeer.PeerName.Authority%2A>delen av <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerName.Authority%2A> </xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Strängen får inte överstiga 149 tecken, inklusive den `null` Begränsare. Ange `null` att returnera peer-namnet på identitet."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt som du vill ange det nya klassificerare strängvärdet."
    - id: classifier
      type: System.String
      description: "Den <xref:System.Net.PeerToPeer.PeerName.Classifier*>att ställa in på den returnerade <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Den nya <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt som innehåller den uppdaterade klassificeraren."
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref:System.String>som anges är inte en giltig peer name klassificerare.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller flera parametrar är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "En <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> kunde inte skapas från den angivna<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Utför en skiftlägeskänslig jämförelse av aktuellt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> och det angivna namnet."
  remarks: "Två peer-namn som identiska om de innehåller samma tecken i sina <xref:System.Net.PeerToPeer.PeerName.Authority%2A>och <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>komponenter.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       Inga normalizations utförs på strängar innan jämförelse.  Alla normalisering bör ha slutförts under eller före konstruera peer name-objekt."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "Namnet på peer ska jämföras med den här <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Returnerar <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> om den angivna <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> identifierar samma resurs som det aktuella objektet som peer-namn, annars returnerar den här metoden <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.       Den här metoden returnerar också <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> om <code> other </code> är inställd på <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Anger om innehållet i det här <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> är lika med innehållet i ett annat objekt."
  remarks: "Den här metoden ärver standardsignatur och beteende från <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Den <xref:System.Object>ska jämföras med aktuellt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> och jämförelse-objekt innehåller samma information, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Åsidosätter den <xref:System.Object.GetHashCode*>metoden.</xref:System.Object.GetHashCode*>"
  remarks: "Två objekt som identiska om den här metoden returnerar samma hash för båda."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En hash för aktuellt <xref:System.Object>.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Fylls informationsobjekt för serialisering med de data som behövs för att serialisera den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "En härledd typ måste anropa bastypen <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>metod.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Innehåller serialiserade data som är associerade med den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Innehåller mål för den serialiserade dataströmmen som är associerade med den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hämtar ett booleskt värde som anger om detta är ett skyddat peer-namn."
  remarks: "Ett peer-namn anses vara skyddade om det stöds av ett självsignerat certifikat.       Endast ägaren kan registrera ett skyddat peer-namn med PNRP."
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "Om <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, Peer-namnet är skyddad med en privat nyckel / offentliga nyckelpar. Namnet innehåller hash-algoritmen SHA (Secure)-hash för den offentliga nyckeln för användarcertifikat för att peer-datorn. Annars, om <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, peer-namnet har ingen associerad identitet.       Om du inte uttryckligen anges är standardvärdet för alla egenskaper <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för referenstyper och noll (0) för egenskaper av typen <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hämtar namnet på peer-to-peer-värden. Det här är en DNS-kodade version av den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> som motsvarar en PeerHostName eftersom de är båda identifierare.  Skillnaden mellan två är bild."
  remarks: "Peer-to-peer-värden är &quot;noden seed&quot; ansvarig för initiering av sessionen för peer-to-peer-nätverk, bjuda in kollegor för att delta i program som den här typen av nätverksanslutningen är mest lämpliga för kommunikation, till exempel chatt-grupper eller spel sessioner.       Egenskapen PeerHostName anger namnet på en peer-dator som skapats sessionen för peer-to-peer-nätverk och som anses vara värd för sessionen.  Värden för en peer-to-peer-nätverk session kan samla in peer-datorer i mer än ett <xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud> Dessutom kan en peer samtidigt vara värd för flera peer-värden."
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "En <xref:System.String>värde som är namnet på peer-to-peer-värden.</xref:System.String> Om du inte uttryckligen anges är standardvärdet för alla egenskaper <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för referenstyper."
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementerar den <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> gränssnitt och returnerar de data som behövs för att serialisera den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> instans."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Innehåller serialiserade data som är associerade med den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Innehåller mål för den serialiserade dataströmmen som är associerade med den <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Returnerar en strängrepresentation av aktuellt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objekt."
  remarks: "Den här metoden ärver standardsignatur och beteende från <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'En sträng som representerar aktuellt <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>, och som angetts i följande format: *Authority.Classifier*. Till exempel &quot;0.MyInternetPeer&quot;.'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
