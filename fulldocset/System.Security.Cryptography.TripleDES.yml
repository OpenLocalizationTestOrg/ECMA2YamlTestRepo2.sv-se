### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.TripleDES
  id: TripleDES
  children:
  - System.Security.Cryptography.TripleDES.#ctor
  - System.Security.Cryptography.TripleDES.Create
  - System.Security.Cryptography.TripleDES.Create(System.String)
  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  - System.Security.Cryptography.TripleDES.Key
  langs:
  - csharp
  name: TripleDES
  nameWithType: TripleDES
  fullName: System.Security.Cryptography.TripleDES
  type: Class
  summary: "Representerar basklass för trippel datakrypteringsstandard algoritmer implementeringar måste härledas från vilken alla TripleDES."
  remarks: "TripleDES använder tre på varandra följande iterationer av den <xref:System.Security.Cryptography.DES>algoritmen.</xref:System.Security.Cryptography.DES> Den kan använda antingen två eller tre 56-bitarsnycklar.      > [!NOTE] > En nyare symmetrisk kryptografisk algoritm Advanced Encryption Standard (AES), är tillgänglig. Överväg att använda den <xref:System.Security.Cryptography.Aes>klass och härledda klasser i stället för klassen TripleDES.</xref:System.Security.Cryptography.Aes> Använda TripleDES endast för kompatibilitet med äldre program och data.       Den här algoritmen stöder nyckellängder från 128 bitar till 192 bitar i steg om 64 bitar."
  example:
  - "The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/cpp/t-system.security.crypto_61_1.cpp)]\n [!code-cs[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_61_1.cs)]\n [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_61_1.vb)]  \n  \n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: TripleDES()
  nameWithType: TripleDES.TripleDES()
  fullName: System.Security.Cryptography.TripleDES.TripleDES()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> klass."
  remarks: "Du kan inte skapa en instans av en abstrakt klass. Programkod som skapar en ny instans av en härledd klass.       Den här metoden initierar skyddade fälten för den <xref:System.Security.Cryptography.SymmetricAlgorithm>klassen standardvärdena visas i följande tabell.</xref:System.Security.Cryptography.SymmetricAlgorithm>      | Fältet | Standardvärde |   |-----------|-------------------|   | <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|&192; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|&64; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>"
  syntax:
    content: protected TripleDES ();
    parameters: []
  overload: System.Security.Cryptography.TripleDES.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Create
  id: Create
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Create()
  nameWithType: TripleDES.Create()
  fullName: System.Security.Cryptography.TripleDES.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av ett kryptografiskt objekt att utföra den <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmen."
  remarks: "Skapar en ny instans av <xref:System.Security.Cryptography.TripleDES>klassen.</xref:System.Security.Cryptography.TripleDES>"
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DES.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_61_1.cs)]\n [!code-cpp[Cryptography.3DES.Create.File#1](~/add/codesnippet/cpp/m-system.security.crypto_61_1.cpp)]\n [!code-vb[Cryptography.3DES.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_61_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.  \n  \n [!code-cpp[Cryptography.3DES.Create.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_61_2.cpp)]\n [!code-vb[Cryptography.3DES.Create.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_61_2.vb)]"
  syntax:
    content: public static System.Security.Cryptography.TripleDES Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.TripleDES
      description: "En instans av ett kryptografiskt objekt."
  overload: System.Security.Cryptography.TripleDES.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Create(String)
  nameWithType: TripleDES.Create(String)
  fullName: System.Security.Cryptography.TripleDES.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av ett kryptografiskt objekt att utföra den angivna implementeringen av den <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmen."
  remarks: ''
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/cpp/m-system.security.crypto_55_1.cpp)]\n [!code-cs[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/csharp/m-system.security.crypto_55_1.cs)]\n [!code-vb[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_55_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.  \n  \n [!code-cs[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_55_2.cs)]\n [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_55_2.vb)]\n [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_55_2.cpp)]"
  syntax:
    content: public static System.Security.Cryptography.TripleDES Create (string str);
    parameters:
    - id: str
      type: System.String
      description: "Namnet på den specifika implementeringen av <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> ska användas."
    return:
      type: System.Security.Cryptography.TripleDES
      description: "En instans av ett kryptografiskt objekt."
  overload: System.Security.Cryptography.TripleDES.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  id: IsWeakKey(System.Byte[])
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: IsWeakKey(Byte[])
  nameWithType: TripleDES.IsWeakKey(Byte[])
  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Anger om den angivna nyckeln är svagt."
  remarks: "Svag nycklar är nycklar som resulterar i chiffer som är lätta att bryta. Om texten är krypterad med en svag nyckel, returnerar kryptera den resulterande cipher igen med samma svag nyckel den ursprungliga texten. 128-bitars läge, om de första 64-bitarna är samma som de senaste 64-bitarna är nyckeln svaga. I 192-bitarsläge är om de första 64-bitarna är desamma som andra 64-bitars eller om andra 64-bitars är samma som de senaste 64-bitarna nyckeln svagt.       Försök att ange en svag nyckel resultat i en <xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException> När <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>anropas för att skapa en slumpmässig nyckel, en svag nyckel aldrig ska returneras.</xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>"
  syntax:
    content: public static bool IsWeakKey (byte[] rgbKey);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "Den hemliga nyckeln för svaghet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är svaga; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.TripleDES.IsWeakKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Storleken på den <code> rgbKey </code> är inte giltig."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Key
  id: Key
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Key
  nameWithType: TripleDES.Key
  fullName: System.Security.Cryptography.TripleDES.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar eller anger den hemliga nyckeln för den <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmen."
  remarks: "Den här algoritmen stöder nyckellängder från 128 bitar till 192 bitar i steg om 64 bitar."
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "Den hemliga nyckeln för den <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmen."
  overload: System.Security.Cryptography.TripleDES.Key*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett försök gjordes att ange nyckeln <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ett försök gjordes att ange en nyckel vars längd är ogiltig.       - eller - ett försök gjordes att ange en svag nyckel (se <xref:System.Security.Cryptography.TripleDES.IsWeakKey*>).</xref:System.Security.Cryptography.TripleDES.IsWeakKey*>"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.TripleDES.#ctor
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: TripleDES()
  nameWithType: TripleDES.TripleDES()
  fullName: System.Security.Cryptography.TripleDES.TripleDES()
- uid: System.Security.Cryptography.TripleDES.Create
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create()
  nameWithType: TripleDES.Create()
  fullName: System.Security.Cryptography.TripleDES.Create()
- uid: System.Security.Cryptography.TripleDES
  parent: System.Security.Cryptography
  isExternal: false
  name: TripleDES
  nameWithType: TripleDES
  fullName: System.Security.Cryptography.TripleDES
- uid: System.Security.Cryptography.TripleDES.Create(System.String)
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create(String)
  nameWithType: TripleDES.Create(String)
  fullName: System.Security.Cryptography.TripleDES.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: IsWeakKey(Byte[])
  nameWithType: TripleDES.IsWeakKey(Byte[])
  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.TripleDES.Key
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Key
  nameWithType: TripleDES.Key
  fullName: System.Security.Cryptography.TripleDES.Key
- uid: System.Security.Cryptography.TripleDES.#ctor*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: TripleDES
  nameWithType: TripleDES.TripleDES
- uid: System.Security.Cryptography.TripleDES.Create*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create
  nameWithType: TripleDES.Create
- uid: System.Security.Cryptography.TripleDES.IsWeakKey*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: IsWeakKey
  nameWithType: TripleDES.IsWeakKey
- uid: System.Security.Cryptography.TripleDES.Key*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Key
  nameWithType: TripleDES.Key
