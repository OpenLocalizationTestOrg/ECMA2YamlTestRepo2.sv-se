### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Definierar krävs medlemmar i en sessionstillståndsprovider för ett datalager."
  remarks: "Sessionstillståndet ASP.NET läser och skriver sessionsdata från och till datakällan med hjälp av ett sessionstillstånd lagra providern. Ett meddelandearkiv för sessionstillstånd är en klass som ärver den abstrakta klassen SessionStateStoreProviderBase och åsidosätter medlemmar med implementeringar som är specifika för datalagret. Sessionstillstånd meddelandearkivet anropas av den <xref:System.Web.SessionState.SessionStateModule>klassen under bearbetning av en ASP.NET-sida för att kommunicera med datalagret för lagring och hämtning av sessionsvariabler och tillhörande sessionsinformation, till exempel timeout-värdet.</xref:System.Web.SessionState.SessionStateModule>       Sessionsdata inom varje ASP.NET-program lagras separat för varje <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>egenskap.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> ASP.NET-program delar inte sessionsdata.       Du kan ange en anpassad SessionStateStoreProviderBase-implementering för ett ASP.NET-program genom att ange den `mode` attribut för den `sessionState` konfigurationselementet till <xref:System.Web.SessionState.SessionStateMode>och `customProvider` attribut med namnet på den anpassade providern som visas i exemplet för det här avsnittet.</xref:System.Web.SessionState.SessionStateMode>      ## Låser sessionen Store Data eftersom ASP.NET-program är flertrådade att stödja svarar på samtidiga begäranden, är det möjligt att samtidiga begäranden kan försöka få åtkomst till samma sessionsinformation. Överväg ett scenario där flera ramar i en ramgrupp alla åtkomst till samma program. Separata förfrågningar för varje ram i gruppen kan köras på webbservern samtidigt på olika trådar. Om ASP.NET-sidor för varje ramkälla komma åt sessionstillstånd variabler, kan du ha flera trådar som har åtkomst till store session samtidigt.       Att undvika att datakollisioner till sessionen store och oväntat beteende för sessionstillstånd, den <xref:System.Web.SessionState.SessionStateModule>och SessionStateStoreProviderBase klasser har lock-funktioner som uteslutande låser arkivobjektet sessionen för en viss session under körningen av en ASP.NET-sida.</xref:System.Web.SessionState.SessionStateModule> Observera att även om den <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attributet har markerats som `ReadOnly`, andra ASP.NET-sidor i samma program kanske kan skriva till arkivet session så att en begäran om skrivskyddad session data från store kan fortfarande få väntar låst data att frigöras.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Ett lås har angetts för sessionen-lagra data i början av begäran i anropet till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> När begäran slutförs låset frigörs under anropet till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Om den <xref:System.Web.SessionState.SessionStateModule>låst sessionsdata påträffas under anrop till antingen den <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>eller <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>-metoden den kommer att begära sessionsdata intervaller halv sekund tills låset frigörs eller tidsperiod som sessionsdata har låsts överskrider värdet för den <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>egenskapen.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> Om körningen tidsgräns har överskridits i <xref:System.Web.SessionState.SessionStateModule>objekt anropar den <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metod för att frigöra session-lagra data och session-lagra data för begäran vid den tidpunkten.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Eftersom låst session store data kan ha frigjorts av ett anrop till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metoden på en separat tråd innan anropet till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metod för det aktuella svaret ett försök kan göras att ställa in och frigöra sessionstillstånd lagra data som redan har släppts och ändras av en annan session.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Att undvika den här situationen kan den <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>och <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metoder returnerar en identifierare för lås.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Lås-ID måste användas med varje begäran att ändra låst session-lagra data. Sessionen store data ändras bara om Lås-ID i datalagret matchar Lås-ID som tillhandahålls av <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>      ## Ta bort utgångna Session lagra Data när den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden anropas för en viss session, data för den aktuella sessionen tas bort från den data store med hjälp av den <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metoden; annars förblir data i datalagret sessionen att framtida serverbegäranden för sessionen.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Det är SessionStateStoreProviderBase-implementeringen för att ta bort utgångna sessions-data."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klass."
  remarks: "Du behöver inte implementerar en konstruktor för en klass som ärver <xref:System.Web.SessionState.SessionStateStoreProviderBase>abstrakt klass.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Initieringen av värden för en <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementering skickas till den <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>metodimplementering.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Skapar en ny <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> objekt som ska användas för den aktuella begäranden."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden CreateNewStoreData i början av en begäran för en ASP.NET-sida under den <xref:System.Web.HttpApplication.AcquireRequestState>händelse.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Om anropas metoden CreateNewStoreData: – inkommande begäran har inget sessions-ID eller - den inkommande begäranden har en session-ID, men sessionen inte finns i datalagret.       Metoden CreateNewStoreData skapar en ny <xref:System.Web.SessionState.SessionStateStoreData>objekt med en tom <xref:System.Web.SessionState.ISessionStateItemCollection>objekt, en <xref:System.Web.HttpStaticObjectsCollection>samling och det angivna `timeout` värde.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> Den <xref:System.Web.HttpStaticObjectsCollection>samling för ASP.NET-program kan hämtas med hjälp av den <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>metoden.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: timeout
      type: System.Int32
      description: "Sessionens tillstånd <xref:System.Web.SessionState.HttpSessionState.Timeout*>värde för den nya <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "En ny <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> för den aktuella begäranden."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Lägger till ett nytt objekt i sessionsläge till datalagret."
  remarks: "Metoden CreateUninitializedItem används med sessioner när den `cookieless` och `regenerateExpiredSessionId` attribut är båda `true`. Med den `regenerateExpiredSessionId attribute` inställd på `true` gör det <xref:System.Web.SessionState.SessionStateModule>objektet att generera en ny <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde när ett utgånget <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde har påträffats.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Skapa en ny <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värdet kräver dirigera om webbläsaren till en URL som innehåller den nyligen skapade <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> CreateUninitializedItem-metoden anropas under den ursprungliga begäran som innehåller ett utgånget <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Efter den <xref:System.Web.SessionState.SessionStateModule>objekt skaffar en ny <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde om du vill ersätta värdet har upphört att gälla, anropas metoden CreateUninitializedItem lägger du till ett Oinitierat till arkivet sessionstillståndsdata.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> Webbläsaren omdirigeras sedan till den URL som innehåller den nyligen skapade <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Förekomsten av oinitierad posten i datalagret session garanterar att den omdirigerade förfrågan som innehåller den nyligen skapade <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde inte förväxlas med en begäran för en session som har upphört att gälla och, i stället behandlas som en ny session.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Posten oinitierad i datalagret sessionen är associerad med den nyligen skapade <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde och innehåller bara standardvärdena, inklusive ett förfallodatum och tid och ett värde som motsvarar den `actionFlags` parameter för den <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>och <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metoder.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Oinitierat posten i arkivet för sessionstillstånd ska innehålla en `actionFlags` värde som är lika med den <xref:System.Web.SessionState.SessionStateActions>uppräkningsvärde.</xref:System.Web.SessionState.SessionStateActions> Det här värdet har överförts till den <xref:System.Web.SessionState.SessionStateModule>objekt av den <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>och <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metoder och informera den <xref:System.Web.SessionState.SessionStateModule>objekt som den aktuella sessionen är en ny men ej initierat sessionen.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> Den <xref:System.Web.SessionState.SessionStateModule>objekt sedan starta den nya sessionen och höja den `Session_OnStart` händelse.</xref:System.Web.SessionState.SessionStateModule>       Mer information om sessioner utan cookies finns i <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>egenskap.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Den <xref:System.Web.SessionState.HttpSessionState.SessionID*>för den aktuella begäranden.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "Sessionen <xref:System.Web.SessionState.HttpSessionState.Timeout*>för den aktuella begäranden.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Frigör alla resurser som används av den <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> implementering."
  remarks: "Metoden Dispose anropas när den <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>metoden Kör vid stängning av programdomänen.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> Klasser som ärver den <xref:System.Web.SessionState.SessionStateStoreProviderBase>klassen kan använda den här metoden kan frigöra resurser som inte längre i användning.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Anropas av den <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objekt i slutet av en begäran."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden EndRequest i slutet av en begäran för en ASP.NET-sida under den <xref:System.Web.HttpApplication.EndRequest>händelse.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> Du kan använda metoden EndRequest för att rensa alla per begäran krävs av sessionstillstånd store-providern."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returnerar skrivskyddad sessionslägesdata från datalagret session."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden GetItem i början av en begäran under de <xref:System.Web.HttpApplication.AcquireRequestState>händelsen när den <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>-attributet är inställt på `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Om den <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>-attributet är inställt på `true`, <xref:System.Web.SessionState.SessionStateModule>objekt i stället anrop av <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>metod.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       GetItem-metoden returnerar en <xref:System.Web.SessionState.SessionStateStoreData>objekt fylls med sessionsinformation från datalagret och uppdaterar sessionsdata upphör att gälla.</xref:System.Web.SessionState.SessionStateStoreData> Om inga data i session-objektet finns i datalagret, metoden GetItem anger den `locked``out` parameter till `false` och returnerar `null`. Detta gör att den <xref:System.Web.SessionState.SessionStateModule>objekt att anropa den <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metoden för att skapa en ny session-objektet i datalagret.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Om session-objektet data har påträffats i datalagret, men data låses GetItem metoden anger den `locked``out` parameter till `true`, anger den `lockAge``out` parameter till aktuellt datum och tid minus datumet och tid när objektet har låsts (som hämtas från datalagret), anger den `lockId``out` parameter till identifieraren Lås hämtas från datalager och returnerar `null`. Detta gör att den <xref:System.Web.SessionState.SessionStateModule>objekt att anropa metoden GetItem igen efter en halv sekund tid att försöka hämta informationen session-objektet.</xref:System.Web.SessionState.SessionStateModule>       Om värdet som den `lockAge``out` parameter har angetts överskrider det <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>värde, sedan <xref:System.Web.SessionState.SessionStateModule>objekt-anrop i <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metod för att ta bort låset för session-objektet-data och anropar sedan metoden GetItem igen.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       Den `actionFlags` parametern används när både den `cookieless` och `regenerateExpiredSessionId` attribut är inställda på att `true`. En `actionFlags` värdet <xref:System.Web.SessionState.SessionStateActions>anger att posten i datalagret session är en ny session som kräver initiering.</xref:System.Web.SessionState.SessionStateActions> Oinitierat transaktioner i datalagret session skapas av ett anrop till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Om objektet från datalagret sessionen inte är ett Oinitierat element i `actionFlags` parametern anges till noll.       Anpassade sessionstillstånd store implementerare som stöder sessioner utan cookies ska ange den `actionFlags` `out` parametern till värdet som returneras från sessionen datalagret för det aktuella objektet. Om den `actionFlags` parameter för den begärda sessionen store objekt är lika med den <xref:System.Web.SessionState.SessionStateActions>uppräkningsvärdet sedan metoden GetItem att värdet i dataarkivet till noll när du har angett den `actionFlags` `out` parameter.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Den <xref:System.Web.SessionState.HttpSessionState.SessionID*>för den aktuella begäranden.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "När den här metoden returnerar innehåller ett booleskt värde som har angetts till <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om det begärda session-objektet är låst i sessionen datalagret, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "När den här metoden returnerar innehåller en <xref:System.TimeSpan>objekt som har angetts till hur lång tid som ett objekt i datalager session har låsts.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "När den här metoden returnerar innehåller ett objekt som har angetts till Lås-ID för den aktuella begäranden. Mer information om Lås-ID finns i &quot;Låsa sessionen lagra Data&quot; i den <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klassen sammanfattning."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "När den här metoden returnerar innehåller något av de <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> värden, som anger om den aktuella sessionen är en oinitierad cookieless session."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "En <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> fylls i med session och information från datalagret session."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returnerar skrivskyddad sessionslägesdata från datalagret session."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden GetItemExclusive i början av en begäran, under den <xref:System.Web.HttpApplication.AcquireRequestState>händelsen när den <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>-attributet är inställt på `true`, vilket är standard.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Om den <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>-attributet är inställt på `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule>objekt i stället anrop av <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>metod.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       GetItemExclusive-metoden returnerar en <xref:System.Web.SessionState.SessionStateStoreData>objekt fylls med sessionsinformation från datalagret, uppdaterar utgångsdatum för lagrade data och låser session-objektet data i datalagret för tid för begäran.</xref:System.Web.SessionState.SessionStateStoreData> Om inga data i session-objektet finns i datalagret, metoden GetItemExclusive anger den `locked` `out` parameter till `false` och returnerar `null`. Detta gör att den <xref:System.Web.SessionState.SessionStateModule>objekt att anropa den <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>metoden för att skapa en ny session-objektet i datalagret.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Om session-objektet data har påträffats i datalagret, men data låses GetItemExclusive metoden anger den `locked` `out` parameter till `true`, anger den `lockAge` `out` parameter till aktuellt datum och tid minus datumet och tid när objektet har låsts (som hämtas från datalagret), anger den `lockId` `out` parameter till identifieraren Lås hämtas från datalager och returnerar `null`. Detta gör att den <xref:System.Web.SessionState.SessionStateModule>objekt att anropa metoden GetItemExclusive igen efter en halv sekund tid att försöka hämta informationen session-objektet och att låsa data.</xref:System.Web.SessionState.SessionStateModule> Om värdet som den `lockAge` `out` parametern anges till överskrider den <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>värde, sedan <xref:System.Web.SessionState.SessionStateModule>anrop av <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metod för att ta bort låset för data session-objektet och anropar sedan metoden GetItemExclusive igen.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       Den `actionFlags` parametern används när den `cookieless` och `regenerateExpiredSessionId` attribut båda är inställda på `true`. En `actionFlags` värdet <xref:System.Web.SessionState.SessionStateActions>anger att posten i datalagret session är en ny session som kräver initiering.</xref:System.Web.SessionState.SessionStateActions> Oinitierat transaktioner i datalagret session skapas av ett anrop till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>metoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Om objektet från datalagret sessionen inte är ett Oinitierat element i `actionFlags` parametern anges till noll.       Anpassade sessionstillstånd store implementerare som stöder sessioner utan cookies ska ange den `actionFlags` `out` parametern till värdet som returneras från sessionen datalagret för det aktuella objektet. Om den `actionFlags` parameter för den begärda sessionen store objekt är lika med den <xref:System.Web.SessionState.SessionStateActions>uppräkningsvärdet sedan metoden GetItemExclusive att värdet i dataarkivet till noll när du har angett den `actionFlags` `out` parameter.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Den <xref:System.Web.SessionState.HttpSessionState.SessionID*>för den aktuella begäranden.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "När den här metoden returnerar innehåller ett booleskt värde som har angetts till <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om ett lås är har erhållits, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "När den här metoden returnerar innehåller en <xref:System.TimeSpan>objekt som har angetts till hur lång tid som ett objekt i datalager session har låsts.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "När den här metoden returnerar innehåller ett objekt som har angetts till Lås-ID för den aktuella begäranden. Mer information om Lås-ID finns i &quot;Låsa sessionen lagra Data&quot; i den <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> klassen sammanfattning."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "När den här metoden returnerar innehåller något av de <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> värden, som anger om den aktuella sessionen är en oinitierad cookieless session."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "En <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> fylls i med session och information från datalagret session."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Anropas av den <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objekt för initiering per begäran."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden InitializeRequest innan du anropar någon annan <xref:System.Web.SessionState.SessionStateStoreProviderBase>metod.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> Du kan använda metoden InitializeRequest för att utföra alla per begäran initiering som krävs av sessionstillstånd store-providern."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Versioner ett lås på ett objekt i sessionsdata lagras."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden ReleaseItemExclusive för att uppdatera utgångsdatum och låsa upp på ett objekt i datalager session.</xref:System.Web.SessionState.SessionStateModule> Den anropas i slutet av en begäran under de <xref:System.Web.HttpApplication.ReleaseRequestState>händelser, om sessionen värden har inte ändrats.</xref:System.Web.HttpApplication.ReleaseRequestState> Om du värdena för sessionen har ändrats i <xref:System.Web.SessionState.SessionStateModule>objekt i stället anrop den <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>metoden.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar också metoden ReleaseItemExclusive när ett lås på ett objekt i datalager sessionen överskred den <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>värde.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Mer information om låsning och information om Lås-ID, finns i &quot;Låsa sessionen lagra Data&quot; i den <xref:System.Web.SessionState.SessionStateStoreProviderBase>Översikt över klassen.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Metoden ReleaseItemExclusive tar bara bort låset från ett objekt i datalager sessionen för det aktuella programmet som matchar den angivna sessionen `id` och `lockId` värden. Om den `lockId` matchar inte den i datalagret, metoden ReleaseItemExclusive händer ingenting."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Sessions-ID för den aktuella begäranden."
    - id: lockId
      type: System.Object
      description: "Lås-ID för den aktuella begäranden."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Tar bort objektet data från datalagret session."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden RemoveItem i slutet av en begäran under de <xref:System.Web.HttpApplication.ReleaseRequestState>händelsen ta bort data för ett session-objekt från datalagret sessionen om den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden har anropats.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Endast sessionsdata för det aktuella programmet som matchar den angivna sessionen `id` och `lockId` värden tas bort. Mer information om låsning och information om Lås-ID, finns i &quot;Låsa sessionen lagra Data&quot; i den <xref:System.Web.SessionState.SessionStateStoreProviderBase>Översikt över klassen.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Sessions-ID för den aktuella begäranden."
    - id: lockId
      type: System.Object
      description: "Lås-ID för den aktuella begäranden."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "Den <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> som representerar objektet du vill ta bort från datalagret."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Uppdaterar utgångsdatum och utgångstid för ett objekt i datalager session."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden ResetItemTimeout för att uppdatera datum och tid för en session till aktuellt datum och tid plus sessionen <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>när antingen: – <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>attribut är `true`, eller - begäran är inte Skapad av <xref:System.Web.HttpApplication.AcquireRequestState>och <xref:System.Web.HttpApplication.ReleaseRequestState>händelser på grund av ett fel.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       Om en ASP.NET-sida begärs och <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>-attributet är inställt på `false`, ResetItemTimeout-metoden anropas fortfarande för att uppdatera datum och tid för data i datalagret session.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Sessions-ID för den aktuella begäranden."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Uppdaterar informationen session-objektet i arkivet sessionstillståndsdata med värden från den aktuella begäranden och rensar låset för data."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden SetAndReleaseItemExclusive i slutet av en begäran under de <xref:System.Web.HttpApplication.ReleaseRequestState>händelse att infoga aktuella session-objektet information i datalagringen eller uppdatera befintlig session-objektet information i datalagringen med aktuella värden och för att låsa upp data och uppdatera förfallotiden i objektet.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Endast sessionsdata för det aktuella programmet som matchar den angivna sessionen `id` och `lockId` värden uppdateras. Mer information om låsning finns i &quot;Låsa arkivet sessionsdata&quot; i den <xref:System.Web.SessionState.SessionStateStoreProviderBase>Översikt över klassen.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Om sessionen värdena för den aktuella begäranden inte har ändrats, anropas SetAndReleaseItemExclusive-metoden inte. I stället den <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>metoden anropas.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Om den <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metoden har anropats, SetAndReleaseItemExclusive-metoden inte anropas.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> I stället den <xref:System.Web.SessionState.SessionStateModule>objekt-anrop i <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metod för att ta bort data i session-objektet från datakällan.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för den aktuella begäranden."
    - id: id
      type: System.String
      description: "Sessions-ID för den aktuella begäranden."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "Den <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> objekt som innehåller värdena som aktuell session ska lagras."
    - id: lockId
      type: System.Object
      description: "Lås-ID för den aktuella begäranden."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att identifiera session-objektet som ett nytt objekt; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att identifiera session-objektet som ett befintligt objekt."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Anger en referens till den <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegera för den <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> händelse som definieras i filen Global.asax."
  remarks: "Den <xref:System.Web.SessionState.SessionStateModule>objekt anropar metoden SetItemExpireCallback när modulen initieras för att avgöra om anrop till den `Session_OnEnd` händelse som stöds av den <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementering och koppla den <xref:System.Web.SessionState.SessionStateItemExpireCallback>Delegera med den `Session_OnEnd` händelse.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       Anpassade sessionstillstånd store providern implementerare bör använda metoden SetItemExpireCallback för att informera den <xref:System.Web.SessionState.SessionStateModule>objekt om anrop till den `Session_OnEnd` händelse stöds och för att ange en lokal referens till den <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegat som tillhandahålls av den `expireCallback` parameter.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> Anpassad implementering måste bestämma när lokalt <xref:System.Web.SessionState.SessionStateItemExpireCallback>ombud anropas.</xref:System.Web.SessionState.SessionStateItemExpireCallback> Till exempel delegaten kan anropas under anropet till den <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>metod som anropas när en session överges.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "Den <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegera för den <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> händelse som definieras i filen Global.asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sessionsläge meddelandearkivet stöder anropar den <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> händelse, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
