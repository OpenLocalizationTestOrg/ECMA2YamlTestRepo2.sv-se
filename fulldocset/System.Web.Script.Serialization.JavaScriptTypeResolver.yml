### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  id: JavaScriptTypeResolver
  children:
  - System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
  type: Class
  summary: "Ger abstrakt basklass för att implementera en anpassad typ-matchare."
  remarks: "Klassen JavaScriptTypeResolver tillhandahåller tjänster för:-konvertering av hanterade skriver information till ett strängvärde till den <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>metoden.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>      -Lösa ett strängvärde till lämplig hanterad typ via den <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>metoden.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>       När den <xref:System.Web.Script.Serialization.JavaScriptSerializer>objektet Serialiserar anpassade, den i den serialiserade strängen JavaScript Object Notation (JSON) kan välja att inkludera ett värde som innehåller typinformation.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Vid deserialisering, <xref:System.Web.Script.Serialization.JavaScriptSerializer>kan sedan hanteras strängvärdet att fastställa en lämplig referens typ till som JSON-strängen ska konverteras.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Om du anger en typ Konfliktlösare som den <xref:System.Web.Script.Serialization.JavaScriptSerializer>instansen serialiseraren kommer att använda den <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>och <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>metoder för att mappa mellan hanterad typ och strängvärdet under serialisering och deserialisering.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> </xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Klassen JavaScriptTypeResolver är basklass för den <xref:System.Web.Script.Serialization.SimpleTypeResolver>-klassen, som tillhandahåller en implementering av en typ-matchare som använder hanterade sammansättningskvalificerat typnamnet.</xref:System.Web.Script.Serialization.SimpleTypeResolver>"
  example:
  - "The following example demonstrates how to create a custom type resolver.  \n  \n [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_0_1.vb)]\n [!code-cs[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/csharp/t-system.web.script.seri_0_1.cs)]"
  syntax:
    content: public abstract class JavaScriptTypeResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptTypeResolver&quot;> </xref> klass."
  syntax:
    content: protected JavaScriptTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "När åsidosätts i en härledd klass returnerar den <xref:System.Type>objekt som är associerad med det angivna typnamnet.</xref:System.Type>"
  remarks: "När en matchare typ är associerad med en <xref:System.Web.Script.Serialization.JavaScriptSerializer>instansen serialiseraren används metoden ResolveType när den går igenom en JSON-strängen för att bestämma vilka hanterade typen som JSON-typ ska konverteras.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  syntax:
    content: public abstract Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "Namnet på den hanterade typen."
    return:
      type: System.Type
      description: "Den <xref:System.Type>objekt som är associerad med det angivna typnamnet.</xref:System.Type>"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "När åsidosätts i en härledd klass returnerar typnamnet för den angivna <xref:System.Type>objektet.</xref:System.Type>"
  remarks: "Om metoden ResolveTypeId returnerar antingen `null` eller <xref:System.String>, och sedan typen matcharen inte stöder typen.</xref:System.String>"
  syntax:
    content: public abstract string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Den hanterade typen matchas."
    return:
      type: System.String
      description: "Namnet på den angivna hantera typen."
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: JavaScriptTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: JavaScriptTypeResolver.ResolveTypeId
