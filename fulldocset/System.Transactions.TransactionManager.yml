### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionManager
  id: TransactionManager
  children:
  - System.Transactions.TransactionManager.DefaultTimeout
  - System.Transactions.TransactionManager.DistributedTransactionStarted
  - System.Transactions.TransactionManager.HostCurrentCallback
  - System.Transactions.TransactionManager.MaximumTimeout
  - System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  - System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  langs:
  - csharp
  name: TransactionManager
  nameWithType: TransactionManager
  fullName: System.Transactions.TransactionManager
  type: Class
  summary: "Innehåller metoder som används för hantering av transaktioner. Den här klassen kan inte ärvas."
  remarks: "Den här klassen innehåller statiska egenskaper och metoder för att hämta information om standard transaktionsalternativ. Den innehåller också flera statiska metoder som används för återställning av en beständig resurs när resursen varaktiga misslyckas. Inga särskilda åtgärder krävs av en beständig resurs om Microsoft Distributed Transaction Coordinator (MSDTC) misslyckas."
  syntax:
    content: public static class TransactionManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DefaultTimeout
  id: DefaultTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar timeoutintervall standard för nya transaktioner."
  remarks: "Tidsgränsen för en transaktion är den tid inom vilken transaktion måste slutföras. Om transaktionshanteraren inte har hört från alla transaktion deltagare innan timeout, avbryter transaktionen.       Det här värdet kan anges i den `DefaultSettingsSection` i konfigurationsfilen."
  syntax:
    content: public static TimeSpan DefaultTimeout { get; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>värde som anger timeout-intervall för nya transaktioner.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.DefaultTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  id: DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Anger att en distribuerad transaktion har startats."
  remarks: "**Varning** registrerar dig för den här händelsen försämrar prestanda för alla distribuerade transaktioner. Lokala transaktioner övervakas inte eftersom prestanda påverkas ännu mer.       **Obs** den här metoden använder <xref:System.Security.Permissions.SecurityAction>att förhindra att anropas från icke betrodd kod; dock endast omedelbar anropare krävs för att inneha den `FullTrust` behörighetsgruppen.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;
    return:
      type: System.Transactions.TransactionStartedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  id: HostCurrentCallback
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar eller anger en anpassad transaktion fabrik."
  remarks: '**Obs** den här metoden använder <xref:System.Security.Permissions.SecurityAction>att förhindra att anropas från icke betrodd kod; dock endast omedelbar anropare krävs för att inneha den `FullTrust` behörighetsgruppen.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }
    return:
      type: System.Transactions.HostCurrentTransactionCallback
      description: "En <xref href=&quot;System.Transactions.HostCurrentTransactionCallback&quot;> </xref> som innehåller en anpassad transaktion fabrik."
  overload: System.Transactions.TransactionManager.HostCurrentCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.MaximumTimeout
  id: MaximumTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Hämtar maximalt timeout-intervall för standard för nya transaktioner."
  remarks: "En förklaring av timeout-intervall finns i dokumentationen för den <xref:System.Transactions.TransactionManager.DefaultTimeout%2A>egenskapen.</xref:System.Transactions.TransactionManager.DefaultTimeout%2A>       Det här värdet kan anges i den `MachineSettingsSection` i konfigurationsfilen."
  syntax:
    content: public static TimeSpan MaximumTimeout { get; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>värde som anger maximal timeoutintervall som är tillåtet när du skapar nya transaktioner.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.MaximumTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  id: RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Meddelar transaktionshanteraren att återställa från fel resurshanterare är klar reenlisting alla omatchade transaktioner."
  remarks: "Alla varaktiga resurshanterare ska göra återställning när de först startas genom att anropa den <xref:System.Transactions.TransactionManager.Reenlist%2A>metod för varje utestående transaktion.</xref:System.Transactions.TransactionManager.Reenlist%2A>  Endast när alla reenlistments är klar bör resurshanteraren anropa RecoveryComplete kan.       Mer information om återställning finns [utför återställningen](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       **Obs** den här metoden använder <xref:System.Security.Permissions.SecurityAction>att förhindra att anropas från icke betrodd kod; dock endast omedelbar anropare krävs för att inneha den `FullTrust` behörighetsgruppen.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static void RecoveryComplete (Guid resourceManagerIdentifier);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En <xref:System.Guid>som unikt identifierar den resurs som ska återställas från.</xref:System.Guid>"
  overload: System.Transactions.TransactionManager.RecoveryComplete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>resourceManagerIdentifier</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  id: Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Reenlists en beständig deltagare i en transaktion."
  remarks: "En resurshanterare underlättar lösning av varaktiga registreringar i en transaktion genom reenlisting deltagaren transaktion efter resursfel.       Den `resourceManagerIdentifier` används för att konsekvent etikett deltagare av en transaktion om resursen kraschar.  När du anropar metoden Omregistreringsanrop resurshanteraren måste ange samma `resourceManagerIdentifier` som den använde när den ursprungligen kallas den <xref:System.Transactions.Transaction.EnlistDurable%2A>metod under registreringen eller en <xref:System.Transactions.TransactionException>genereras.</xref:System.Transactions.TransactionException> </xref:System.Transactions.Transaction.EnlistDurable%2A>       När en deltagare är reenlisted med den här metoden fas 2-metoderna i <xref:System.Transactions.IEnlistmentNotification>som motsvarar transaktionsresultatet (det vill säga <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>eller <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>) anropas efter behov.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification>       Efter att deltagarna har är reenlisted, bör du sedan anropa <xref:System.Transactions.TransactionManager.RecoveryComplete%2A>att slutföra återställningen.</xref:System.Transactions.TransactionManager.RecoveryComplete%2A>       Du bör endast anropa denna metod när en resurshanterare startas om från fel. Dessutom bör du endast Omregistrera omatchade transaktioner som loggats av en resurshanterare under den inledande fasen Förbered för ett genomförande. Alla försök att anropa den här metoden ogiltig tiden kan ge felaktiga resultat.       Om transaktionshanteraren misslyckas och resurshanteraren utför återställning bara en kort stund efter att du kallas den <xref:System.Transactions.PreparingEnlistment.Prepared%2A>metoden på en registrering i fas 1 av protokollet Two-Phase genomför Resurshanteraren kan antingen ta emot den <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>eller <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>återanrop.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Mer information om återställning finns [utför återställningen](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       **Obs** den här metoden använder <xref:System.Security.Permissions.SecurityAction>att förhindra att anropas från icke betrodd kod; dock endast omedelbar anropare krävs för att inneha den `FullTrust` behörighetsgruppen.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static System.Transactions.Enlistment Reenlist (Guid resourceManagerIdentifier, byte[] recoveryInformation, System.Transactions.IEnlistmentNotification enlistmentNotification);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "En <xref:System.Guid>som unikt identifierar resurshanteraren.</xref:System.Guid>"
    - id: recoveryInformation
      type: System.Byte[]
      description: "Innehåller ytterligare information för återställningsinformation."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "En resurs-objekt som implementerar <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> att ta emot meddelanden."
    return:
      type: System.Transactions.Enlistment
      description: "En <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> som beskriver listan."
  overload: System.Transactions.TransactionManager.Reenlist*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>recoveryInformation</code>är ogiltigt.       - eller - transaktionshanteraren informationen i <code>recoveryInformation</code> matchar inte den konfigurerade transaktionshanteraren.       - eller - <code>RecoveryInformation</code> känns inte igen av <xref href=&quot;System.Transactions&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Transactions.TransactionManager.RecoveryComplete*>har redan anropats för den angivna <code> resourceManagerIdentifier </code>.</xref:System.Transactions.TransactionManager.RecoveryComplete*> Reenlistment avvisas."
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "Den <code> resourceManagerIdentifier </code> matchar inte innehållet i den angivna återställningsinformationen i <code> recoveryInformation </code>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.Transactions.TransactionManager.DefaultTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
- uid: System.Transactions.TransactionStartedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionStartedEventHandler
  nameWithType: TransactionStartedEventHandler
  fullName: System.Transactions.TransactionStartedEventHandler
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
- uid: System.Transactions.HostCurrentTransactionCallback
  parent: System.Transactions
  isExternal: false
  name: HostCurrentTransactionCallback
  nameWithType: HostCurrentTransactionCallback
  fullName: System.Transactions.HostCurrentTransactionCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.TransactionManager.DefaultTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
- uid: System.Transactions.TransactionManager.HostCurrentCallback*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete
  nameWithType: TransactionManager.RecoveryComplete
- uid: System.Transactions.TransactionManager.Reenlist*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist
  nameWithType: TransactionManager.Reenlist
