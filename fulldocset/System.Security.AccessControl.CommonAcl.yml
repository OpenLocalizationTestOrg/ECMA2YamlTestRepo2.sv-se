### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAcl
  id: CommonAcl
  children:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  langs:
  - csharp
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
  type: Class
  summary: "Representerar en åtkomstkontrollista (ACL) och är basklass för den <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> och <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;> </xref> klasser."
  remarks: "-   Vissa kombinationer av arv och åtkomst mask-flaggor är meningslösa:-alla åtkomstkontrollpost (ACE) med ett noll-åtkomstmask tas bort.      -Ärver-endast ACE: er i ACL tas bort.      - <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.InheritanceFlags>, och <xref:System.Security.AccessControl.InheritanceFlags>flaggor i alla ACE: er i blad objekt ACL: er är avmarkerad.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE: er som har en <xref:System.Security.AccessControl.PropagationFlags>flaggan om de <xref:System.Security.AccessControl.InheritanceFlags>eller <xref:System.Security.AccessControl.InheritanceFlags>flaggan är meningslösa; de tas bort.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      - <xref:System.Security.AccessControl.PropagationFlags>Flaggan om de <xref:System.Security.AccessControl.InheritanceFlags>eller <xref:System.Security.AccessControl.InheritanceFlags>flaggan kan tas bort.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE: er som har en <xref:System.Security.AccessControl.AuditFlags>värdet för <xref:System.Security.AccessControl.AuditFlags>eller <xref:System.Security.AccessControl.AuditFlags>i åtkomstkontrollinformation listor (DACL) tas bort.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -Alla granska ACE som inte anger något <xref:System.Security.AccessControl.AuditFlags>eller <xref:System.Security.AccessControl.AuditFlags>tas bort.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -På DACL: er och tas SystemAudit och SystemAlarm ACE bort.      -På systemets åtkomstkontrollistor (SACL), tas AccessAllowed och AccessDenied ACE bort.       Kanonisk ordning underhålls enligt följande algoritm:-explicita åtkomstkontrollistor åsidosätter ärvda åtkomstkontrollposter; den här regeln gäller för både DACL: er och SACL.      – I DACL: er bland explicita åtkomstkontrollistor företräde åtkomstkontrollposter som nekar åtkomst framför ACE: er som tillåter åtkomst. Nonobject ACE komma före objekt åtkomstkontrollposter för katalogobjekt ACL: er.      -Alla vanliga ACE företräde framför noncommon ACE: er.      -Ärvda åtkomstkontrollposter upprätthålla deras relativa ordning efter canonicity.      -Okänd och anpassade ACE: er tillåts inte i både DACL: er och SACL.      -Inom sammanhängande intervall (explicit AccessDenied och AccessAllowed ACE: er för DACL alla explicita åtkomstkontrollistor för SACL), sorteras de ACE: er med hjälp av den <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>metoder för den <xref:System.Security.Principal.SecurityIdentifier>objekt som hör till åtkomstkontrollposterna.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>       Intilliggande ACE kombineras vid behov.  Detta minskar storleken på Åtkomstkontrollistan utan att påverka access control-semantik beviljas."
  syntax:
    content: 'public abstract class CommonAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar längden i byte av binär representation av aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt. Längden ska användas innan den konverterades åtkomstkontrollistan (ACL) i en binär matris med hjälp av den <xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>metoden.</xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>"
  syntax:
    content: public override sealed int BinaryLength { get; }
    return:
      type: System.Int32
      description: "Binär representation av aktuellt längden i byte, <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt."
  overload: System.Security.AccessControl.CommonAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Count
  id: Count
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar antalet åtkomst åtkomstkontrollposter (ACE) i aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt."
  syntax:
    content: public override sealed int Count { get; }
    return:
      type: System.Int32
      description: "Antal ACE: er i aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt."
  overload: System.Security.AccessControl.CommonAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals innehållet i den <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt i angivna byte-matris början vid angiven förskjutning."
  syntax:
    content: public override sealed void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "Bytematrisen dit innehållet i den <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> är konverteras."
    - id: offset
      type: System.Int32
      description: "Förskjutningen som ska startas konvertera."
  overload: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  id: IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar ett booleskt värde som anger om åtkomst åtkomstkontrollposter (ACE) i aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt finns i kanonisk ordning."
  syntax:
    content: public bool IsCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om ACE: er i aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt finns i kanonisk ordning; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.IsCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Anger om den <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt är en behållare."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt är en behållare."
  overload: System.Security.AccessControl.CommonAcl.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Anger om aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektet är en katalog objekt-åtkomstkontrollista (ACL)."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om aktuellt <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektet är ett katalogobjekt ACL."
  overload: System.Security.AccessControl.CommonAcl.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar eller anger den <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> med det angivna indexet."
  syntax:
    content: public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för den <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> att hämta eller ange."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "Den <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> med det angivna indexet."
  overload: System.Security.AccessControl.CommonAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  id: Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Tar bort alla åtkomstkontrollposter (ACE) finns i <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektet som är associerade med det angivna <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objekt."
  syntax:
    content: public void Purge (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "Den <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objekt att söka efter."
  overload: System.Security.AccessControl.CommonAcl.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  id: RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Tar bort alla ärvda åtkomstkontrollposter (ACE) från den här <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objekt."
  syntax:
    content: public void RemoveInheritedAces ();
    parameters: []
  overload: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar revision andelen av <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  syntax:
    content: public override sealed byte Revision { get; }
    return:
      type: System.Byte
      description: "Ett bytevärde som anger vilken version av <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonAcl.BinaryLength*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAcl.GetBinaryForm
- uid: System.Security.AccessControl.CommonAcl.IsCanonical*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item
  nameWithType: CommonAcl.Item
- uid: System.Security.AccessControl.CommonAcl.Purge*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge
  nameWithType: CommonAcl.Purge
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces
  nameWithType: CommonAcl.RemoveInheritedAces
- uid: System.Security.AccessControl.CommonAcl.Revision*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
