### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaTable
  id: MetaTable
  children:
  - System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaTable.Attributes
  - System.Web.DynamicData.MetaTable.BuildAttributeCollection
  - System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.MetaTable.Columns
  - System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateContext
  - System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  - System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  - System.Web.DynamicData.MetaTable.DataContextPropertyName
  - System.Web.DynamicData.MetaTable.DataContextType
  - System.Web.DynamicData.MetaTable.DisplayColumn
  - System.Web.DynamicData.MetaTable.DisplayName
  - System.Web.DynamicData.MetaTable.EntityType
  - System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaTable.GetColumn(System.String)
  - System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  - System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  - System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  - System.Web.DynamicData.MetaTable.GetFilteredColumns
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  - System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  - System.Web.DynamicData.MetaTable.GetQuery
  - System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  - System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  - System.Web.DynamicData.MetaTable.GetTable(System.Type)
  - System.Web.DynamicData.MetaTable.HasPrimaryKey
  - System.Web.DynamicData.MetaTable.Initialize
  - System.Web.DynamicData.MetaTable.IsReadOnly
  - System.Web.DynamicData.MetaTable.ListActionPath
  - System.Web.DynamicData.MetaTable.Model
  - System.Web.DynamicData.MetaTable.Name
  - System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  - System.Web.DynamicData.MetaTable.Provider
  - System.Web.DynamicData.MetaTable.ResetMetadata
  - System.Web.DynamicData.MetaTable.RootEntityType
  - System.Web.DynamicData.MetaTable.Scaffold
  - System.Web.DynamicData.MetaTable.SortColumn
  - System.Web.DynamicData.MetaTable.SortDescending
  - System.Web.DynamicData.MetaTable.ToString
  - System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  - System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  langs:
  - csharp
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
  type: Class
  summary: "Representerar metadata som beskriver en tabell som ska användas med dynamiska Data-sidor."
  remarks: ''
  example:
  - "The following example is part of the code-behind file for the Insert.aspx page template. The MetaTable instance is initialized in the `Page_Load` method. The title for the page is set to the table `DisplayName` property.  \n  \n```c#  \npublic partial class Insert : System.Web.UI.Page {  \n    protected MetaTable table;     \n  \n    protected void Page_Load(object sender, EventArgs e) {  \n        table = DetailsDataSource.GetTable();  \n        Title = table.DisplayName;  \n    }  \n}  \n```  \n  \n```vb#  \nPartial Class Insert  \n    Inherits System.Web.UI.Page  \n  \n    Protected table As MetaTable      \n  \n    Protected Sub Page_Load(ByVal sender As Object, _  \n            ByVal e As EventArgs)  \n        table = DetailsDataSource.GetTable  \n        Title = table.DisplayName  \n    End Sub  \nEnd Class  \n```"
  syntax:
    content: public class MetaTable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  id: '#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)'
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> klass."
  remarks: "Den `tableProvider` används för att initiera den <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>egenskapen.</xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A>"
  syntax:
    content: public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);
    parameters:
    - id: metaModel
      type: System.Web.DynamicData.MetaModel
      description: "Entiteten meta modell."
    - id: tableProvider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "Providern för modellen."
  overload: System.Web.DynamicData.MetaTable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Attributes
  id: Attributes
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar de attribut som är kopplade till tabellen."
  syntax:
    content: public System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "En samling som innehåller attributen i tabellen."
  overload: System.Web.DynamicData.MetaTable.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  id: BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar samlingen attribut."
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Attributet-samling."
  overload: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  id: CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om den angivna användaren är tillåtet att utföra delete-åtgärder."
  remarks: "En UPN-objektet representerar säkerhetskontexten för användaren vars räkning koden körs, inklusive användarens identitet och alla roller som de tillhör."
  syntax:
    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "Användarens säkerhetskontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har rätt att utföra delete-åtgärder; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  id: CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om den angivna användaren är tillåtet att utföra insert-åtgärder."
  remarks: "En UPN-objektet representerar säkerhetskontexten för användaren vars räkning koden körs, inklusive användarens identitet och alla roller som de tillhör."
  syntax:
    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "Användarens säkerhetskontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har rätt att utföra infogningsåtgärder; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  id: CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om den angivna användaren är tillåtet att utföra läsåtgärder."
  remarks: "En UPN-objektet representerar säkerhetskontexten för användaren vars räkning koden körs, inklusive användarens identitet och alla roller som de tillhör."
  syntax:
    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "Användarens säkerhetskontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har rätt att utföra läsåtgärder. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  id: CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om den angivna användaren kan utföra åtgärder för uppdatering."
  remarks: "En UPN-objektet representerar säkerhetskontexten för användaren vars räkning koden körs, inklusive användarens identitet och alla roller som de tillhör."
  syntax:
    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "Användarens säkerhetskontext."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren har rätt att utföra åtgärder för uppdatering; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Columns
  id: Columns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar kolumnsamlingen för tabellen."
  remarks: ''
  example:
  - "The following example shows how to use the Columns property. In the example, the Dynamic Data page templates have been copied to the \\DynamicData\\CustomPages\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`. In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table. The Columns property is used to display the number of columns in the table.  \n  \n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_1.cs)]  \n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_2.aspx)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> Columns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "En samling som innehåller kolumner för tabellen."
  overload: System.Web.DynamicData.MetaTable.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar en ny <xref href=&quot;System.Web.DynamicData.MetaChildrenColumn&quot;> </xref> objekt."
  remarks: "Den här metoden kan åsidosättas om du vill skapa en härledd typ."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Kolumn-provider."
    return:
      type: System.Web.DynamicData.MetaChildrenColumn
      description: "Det nya underordnade metacolumn-objektet."
  overload: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar en <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> objekt."
  remarks: "Den här metoden kan åsidosättas om du vill skapa en härledd typ."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Kolumn-provider."
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Objektet metacolumn."
  overload: System.Web.DynamicData.MetaTable.CreateColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateContext
  id: CreateContext
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar datakontexten för tabellen."
  remarks: "Datakontexten hämtas från en ny kontext som instansieras genom att anropa metoden CreateContext. Mer information finns i <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.MetaTable?displayProperty=fullName>"
  syntax:
    content: public virtual object CreateContext ();
    parameters: []
    return:
      type: System.Object
      description: "Datakontexten för tabellen."
  overload: System.Web.DynamicData.MetaTable.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar ett objekt som innehåller foreign key-metadata."
  remarks: "Den här metoden kan åsidosättas om du vill skapa en härledd typ."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Kolumn-provider."
    return:
      type: System.Web.DynamicData.MetaForeignKeyColumn
      description: "Ett objekt som innehåller foreign key-metadata."
  overload: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  id: CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar metadata för den angivna tabellen."
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);
    parameters:
    - id: typeDescriptor
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Information om tabelltypen."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Ett objekt som innehåller tabellmetadata."
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  id: CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Skapar metadata för den angivna tabellen."
  syntax:
    content: public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "Tabelltypen som du vill generera metadata."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Ett objekt som innehåller tabellmetadata."
  overload: System.Web.DynamicData.MetaTable.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  id: DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar namnet på tabellen."
  remarks: "Namnet hämtas från den <xref:System.Web.DynamicData.MetaTable.DataContextType%2A>objekt som tillhör tabellen.</xref:System.Web.DynamicData.MetaTable.DataContextType%2A>"
  syntax:
    content: public string DataContextPropertyName { get; }
    return:
      type: System.String
      description: "Namnet på tabellen."
  overload: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DataContextType
  id: DataContextType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar typ av datakontexten som är kopplad till tabellen."
  remarks: "Mer information finns i <xref:System.Data.Linq.DataContext?displayProperty=fullName>Översikt över klassen.</xref:System.Data.Linq.DataContext?displayProperty=fullName>"
  syntax:
    content: public Type DataContextType { get; }
    return:
      type: System.Type
      description: "Typ av datakontexten."
  overload: System.Web.DynamicData.MetaTable.DataContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  id: DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den kolumn som används för att visa värden när poster i den här tabellen används som överordnade i sekundärnyckelrelationer."
  remarks: "Kolumnen som returnerades är markerat i den här ordningen: 1.  Den kolumn som har angetts med hjälp av den <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>attribut.</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>      2.  Först strängen kolumn som inte ingår i primärnyckeln.      3.  Först strängen kolumn som är den primära nyckeln.      4.  Första sträng-kolumnen i den primära nyckeln.      5.  Den första kolumnen."
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Den kolumn som används för att visa värden när poster i den här tabellen används som överordnade i sekundärnyckelrelationer."
  overload: System.Web.DynamicData.MetaTable.DisplayColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.DisplayName
  id: DisplayName
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar namnet på tabellen i ett användarvänligt format."
  remarks: "Värdet för den här egenskapen som standard värdet för den <xref:System.Web.DynamicData.MetaTable.Name%2A>egenskapen.</xref:System.Web.DynamicData.MetaTable.Name%2A> Du kan anpassa värdet för den här egenskapen genom att använda den <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>attribut.</xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "Den sträng som representerar användarvänligt namn på tabellen."
  overload: System.Web.DynamicData.MetaTable.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.EntityType
  id: EntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den enhetstyp som representerar tabellen."
  syntax:
    content: public Type EntityType { get; }
    return:
      type: System.Type
      description: "Typen som representerar entiteten."
  overload: System.Web.DynamicData.MetaTable.EntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  id: ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar en kommaavgränsad lista över foreign key-namn."
  syntax:
    content: public string ForeignKeyColumnsNames { get; }
    return:
      type: System.String
      description: "En kommaavgränsad lista över foreign key-namn."
  overload: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  id: GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till för den aktuella tabellen och den angivna åtgärden."
  remarks: ''
  example:
  - The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.
  syntax:
    content: public string GetActionPath (string action);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna åtgärden."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till för den aktuella tabellen, angiven åtgärd och angivna primärnyckel."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "Lista över kolumnvärdena som utgör den primära nyckeln."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna åtgärden och primärnyckel."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  id: GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till för den angivna raden med hjälp av namnet på åtgärden."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Åtgärdssökvägen innehåller en primär nyckel kolumnnamn, som kan användas för frågesträng filter.       Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    - id: row
      type: System.Object
      description: "Att hämta åtgärdssökvägen till för raden."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna raden."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  id: GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till för den aktuella tabellen och för angiven åtgärd och vägar."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "I listan över vägar för åtgärden."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna åtgärden och flöden."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lägger till frågesträngar i åtgärden, baserat på den angivna primära nyckeln och virtuell sökväg."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues, string path);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "Lista över kolumnvärdena som utgör den primära nyckeln."
    - id: path
      type: System.String
      description: "Den virtuella sökvägen för åtgärden."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna primära nyckeln och virtuell sökväg, fråga strängvärden som läggs till den."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  id: GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar åtgärdssökvägen till för den angivna raden med hjälp av namnet på åtgärden och den virtuella sökvägen för åtgärden."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string GetActionPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: "Namnet på åtgärden."
    - id: row
      type: System.Object
      description: "Ett objekt som innehåller raden för åtgärdssökvägen till."
    - id: path
      type: System.String
      description: "Den virtuella sökvägen för åtgärden."
    return:
      type: System.String
      description: "Åtgärdssökvägen för den angivna raden."
  overload: System.Web.DynamicData.MetaTable.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  id: GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar metadata för den angivna kolumnen."
  syntax:
    content: public System.Web.DynamicData.MetaColumn GetColumn (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på den kolumn som ska hämta metadata för."
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Kolumnens metadata."
  overload: System.Web.DynamicData.MetaTable.GetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  id: GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar mängden kolumnvärdena."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetColumnValuesFromRoute (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Kontexten för den angivna webbegäran."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Mängden med kolumnvärdena."
  overload: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  id: GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den primära nyckeln för entiteten från route-värden."
  remarks: "Väg värdena kommer vanligtvis från begäran URL-frågesträngen."
  syntax:
    content: public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "En primär nyckel värdena för entiteter, om de påträffades. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  id: GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar värdet som ska användas som visningssträngen för en instans av en rad när raden används i sekundärnyckelrelationer."
  remarks: "Om raden är `null`, returneras en tom sträng. Om enhetsklassen innehåller en åsidosättning av den <xref:System.Web.DynamicData.MetaTable.ToString%2A>metoden, den åsidosatt <xref:System.Web.DynamicData.MetaTable.ToString%2A>returneras värdet.</xref:System.Web.DynamicData.MetaTable.ToString%2A> </xref:System.Web.DynamicData.MetaTable.ToString%2A> Annars returnerar-metoden den `ToString` innehåller värdet för den <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>-egenskapen för den angivna raden.</xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A>"
  syntax:
    content: public virtual string GetDisplayString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "Att hämta visningssträngen för raden."
    return:
      type: System.String
      description: "Visningsnamn för en instans av en rad."
  overload: System.Web.DynamicData.MetaTable.GetDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  id: GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar en lista med kolumner som är filtrera."
  remarks: "En kolumn går att filtrera om den används med den <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>attribut och `Enabled` -egenskapen för den <xref:System.Web.Mvc.FilterAttribute>attribut för kolumnen anges till `true`.</xref:System.Web.Mvc.FilterAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetFilteredColumns ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "En lista med kolumner som är filtrera."
  overload: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  id: GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar en ordlista med primär nyckel namn och värden för den angivna raden."
  remarks: ''
  example:
  - "The following example shows how to create a primary-key dictionary.  \n  \n```c#  \nprivate RouteValueDictionary GetRouteValues(MetaTable table, object row) {  \n    RouteValueDictionary routeValues = GetRouteValues();  \n    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  \n        routeValues[pk.Key] = pk.Value;  \n    }  \n    return routeValues;  \n}   \n```  \n  \n```vb#  \nPrivate Function GetRouteValues(ByVal table As MetaTable, _  \n        ByVal row As Object) As RouteValueDictionary   \n    Dim routeValues As RouteValueDictionary = GetRouteValues()   \n    For Each pk In table.GetPrimaryKeyDictionary(row)   \n        routeValues(pk.Key) = pk.Value   \n    Next   \n    Return routeValues   \nEnd Function   \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GetPrimaryKeyDictionary (object row);
    parameters:
    - id: row
      type: System.Object
      description: "En rad."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "En ordlista med primär nyckel namn och värden."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  id: GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar en kommaavgränsad lista med kolumnvärdena som representerar den primära nyckeln för den angivna raden."
  syntax:
    content: public string GetPrimaryKeyString (System.Collections.Generic.IList<object> primaryKeyValues);
    parameters:
    - id: primaryKeyValues
      type: System.Collections.Generic.IList{System.Object}
      description: "Lista över kolumnvärdena som utgör den primära nyckeln."
    return:
      type: System.String
      description: "En kommaavgränsad lista med kolumnvärdena. Om listan är tom returneras en tom sträng."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  id: GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar en kommaavgränsad lista med kolumnvärdena som representerar den primära nyckeln för den angivna raden."
  syntax:
    content: public string GetPrimaryKeyString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "Att hämta den primära nyckeln för raden."
    return:
      type: System.String
      description: "En kommaavgränsad lista med kolumnvärdena som representerar den primära nyckeln för raden."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  id: GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar en mängd med kolumnvärdena som representerar den primära nyckeln för den angivna raden."
  syntax:
    content: public System.Collections.Generic.IList<object> GetPrimaryKeyValues (object row);
    parameters:
    - id: row
      type: System.Object
      description: "Att hämta den primära nyckeln för raden."
    return:
      type: System.Collections.Generic.IList{System.Object}
      description: "En samling med kolumnvärden som representerar den primära nyckeln för raden."
  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery
  id: GetQuery
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar den &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -instans för typen som representerar tabellen."
  syntax:
    content: public System.Linq.IQueryable GetQuery ();
    parameters: []
    return:
      type: System.Linq.IQueryable
      description: "Den &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -instans för entitetstypen."
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  id: GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar den &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; -instans för typen som representerar tabellen med hjälp av datakontexten."
  remarks: "Om den `context` parametern är `null`, den här metoden skapar en ny kontext genom att anropa den <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>metoden.</xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Linq.IQueryable GetQuery (object context);
    parameters:
    - id: context
      type: System.Object
      description: "Kontexten för den <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> objekt."
    return:
      type: System.Linq.IQueryable
      description: "Den <xref:System.Linq.IQueryable>-instans för typen som representerar tabellen i datakontexten.</xref:System.Linq.IQueryable>"
  overload: System.Web.DynamicData.MetaTable.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  id: GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar en lista med kolumner som ska visas med scaffold-teknik."
  remarks: "Den här metoden returnerar alla kolumner vars <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>egenskap är inställd på `true` förutom följande:-lång sträng kolumner som är kolumner vars <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A>egenskap är inställd på `true` och vars `containerType` parametern är `true`.</xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> </xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>      -Och underordnade kolumner vars <xref:System.Web.UI.WebControls.DataBoundControlMode> <xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> värdet</xref:System.Web.UI.WebControls.DataBoundControlMode>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Databunden kontroll-läge."
    - id: containerType
      type: System.Web.DynamicData.ContainerType
      description: "Ett värde som anger om tabellen visas som en enskild entitet eller som en del av en lista över enheter."
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
      description: "En lista med kolumner som ska visas med scaffold-teknik."
  overload: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den metatable som är associerad med den angivna typen."
  remarks: "Den här metoden anropar <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> Om <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>returnerar `false`, en <xref:System.InvalidOperationException>undantag.</xref:System.InvalidOperationException> </xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>"
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "Typ av entitet."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Den metatable som är associerad med den angivna typen."
  overload: System.Web.DynamicData.MetaTable.GetTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt; metoden som anropades av den här metoden returnerade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  id: HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om tabellen har en primärnyckel."
  syntax:
    content: public bool HasPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellen har en primärnyckel. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initierar data som inte kanske är tillgängliga när konstruktorn anropas."
  remarks: "Den här metoden anropar den <xref:System.Web.DynamicData.MetaColumn.Initialize%2A>metod för varje kolumn i den <xref:System.Web.DynamicData.MetaTable>instans.</xref:System.Web.DynamicData.MetaTable> </xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Den här metoden kan inte anropas direkt. Om du vill anpassa initieringen kan härledas från den här klassen och åsidosätta den <xref:System.Web.DynamicData.MetaColumn.Initialize%2A>metoden.</xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Om du åsidosätta den här metoden kan anropa grundläggande kontrollen `Initialize` metod."
  example:
  - "The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.  \n  \n```c#  \nprotected  override void Initialize() {  \n    base.Initialize();  \n    MyOverridenInit();  \n}  \n```  \n  \n```vb#  \nProtected Overloads Overrides Sub Initialize()   \n    MyBase.Initialize()   \n    MyOverridenInit()   \nEnd Sub  \n```"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  id: IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om tabellen är skrivskyddad."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellen är skrivskyddade. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  id: ListActionPath
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar åtgärdssökvägen för listan åtgärden för tabellen."
  remarks: "Åtgärdssökvägen är en URL för en åtgärd för en specifik enhet. Mer information finns i <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>Översikt över klassen.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName>"
  syntax:
    content: public string ListActionPath { get; }
    return:
      type: System.String
      description: "Åtgärdssökvägen för listan åtgärden för tabellen."
  overload: System.Web.DynamicData.MetaTable.ListActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Model
  id: Model
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar metadata modellen som tillhör tabellen."
  remarks: "Mer information finns i <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>Översikt över klassen.</xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName>"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Modell för metadata som tillhör tabellen."
  overload: System.Web.DynamicData.MetaTable.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Name
  id: Name
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar det unika namnet för tabellen."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Det unika namnet på tabellen."
  overload: System.Web.DynamicData.MetaTable.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  id: PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar kolumnsamlingen som definierar den primära nyckeln."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> PrimaryKeyColumns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
      description: "En samling som innehåller kolumner för en primär nyckel."
  overload: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Provider
  id: Provider
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar providern för tabellen."
  syntax:
    content: public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }
    return:
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "Provider för tabellen."
  overload: System.Web.DynamicData.MetaTable.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  id: ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Återställer den cachelagrade metadata för tabellen."
  remarks: "För cachelagrade tabellmetadata består av den information som hämtas från datamodellen attribut och metadata om inbäddade kolumner. I metadatacache återskapas nästa gång eventuella metadata har begärts."
  syntax:
    content: public void ResetMetadata ();
    parameters: []
  overload: System.Web.DynamicData.MetaTable.ResetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  id: RootEntityType
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar rottyp av entitetens arvshierarki."
  remarks: "Om typen är högst upp i arvshierarkin eller inte har en Överordningstyp, returneras entitetstypen."
  syntax:
    content: public Type RootEntityType { get; }
    return:
      type: System.Type
      description: "Rottyp av entitetens arvshierarki."
  overload: System.Web.DynamicData.MetaTable.RootEntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.Scaffold
  id: Scaffold
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar eller anger ett värde som anger om tabellen ska visas."
  syntax:
    content: public virtual bool Scaffold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellen ska visas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.Scaffold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortColumn
  id: SortColumn
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> tabellen är sorterad efter värde."
  syntax:
    content: public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Kolumnen som tabellen sorteras efter."
  overload: System.Web.DynamicData.MetaTable.SortColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.SortDescending
  id: SortDescending
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar ett värde som anger om poster sorteras i fallande ordning när de används som överordnade i en sekundärnyckelrelation."
  remarks: "Du kan ange sorteringsordning med hjälp av den <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>attribut.</xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName>"
  syntax:
    content: public virtual bool SortDescending { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om poster sorteras i fallande ordning. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.SortDescending*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.ToString
  id: ToString
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar namnet på tabellen."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Namnet på tabellen."
  overload: System.Web.DynamicData.MetaTable.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  id: TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returnerar ett värde som anger om en angiven kolumn kan hittas."
  remarks: "Om den `columnName` -parametern är null, en <xref:System.InvalidOperationException>undantag.</xref:System.InvalidOperationException>"
  syntax:
    content: public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);
    parameters:
    - id: columnName
      type: System.String
      description: "Namnet på kolumnen som ska söka efter."
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "När den här metoden returnerar innehåller den <xref uid=&quot;langword_csharp_MetaColumn&quot; name=&quot;MetaColumn&quot; href=&quot;&quot;> </xref> objekt för `columnName`. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna kolumnen kan hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaTable.TryGetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Hämtar den metatable som är associerad med den angivna typen och tabellen."
  syntax:
    content: public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "Typ av entitet."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "När den här metoden returnerar innehåller den metatable som är associerad med den angivna typen. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "Den metatable som är associerad med den angivna angivna och tabell."
  overload: System.Web.DynamicData.MetaTable.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable(MetaModel,TableProvider)
  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)
  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaTable.Attributes
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
  fullName: System.Web.DynamicData.MetaTable.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection()
  nameWithType: MetaTable.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()
- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete(IPrincipal)
  nameWithType: MetaTable.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert(IPrincipal)
  nameWithType: MetaTable.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead(IPrincipal)
  nameWithType: MetaTable.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate(IPrincipal)
  nameWithType: MetaTable.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)
- uid: System.Web.DynamicData.MetaTable.Columns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
  fullName: System.Web.DynamicData.MetaTable.Columns
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaColumn>
  nameWithType: ReadOnlyCollection<MetaColumn>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn(ColumnProvider)
  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaChildrenColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn
  fullName: System.Web.DynamicData.MetaChildrenColumn
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn(ColumnProvider)
  nameWithType: MetaTable.CreateColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext()
  nameWithType: MetaTable.CreateContext()
  fullName: System.Web.DynamicData.MetaTable.CreateContext()
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn(ColumnProvider)
  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)
  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)
- uid: System.Web.DynamicData.MetaForeignKeyColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaForeignKeyColumn
  nameWithType: MetaForeignKeyColumn
  fullName: System.Web.DynamicData.MetaForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(ICustomTypeDescriptor)
  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable(Type)
  nameWithType: MetaTable.CreateTable(Type)
  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaTable.DataContextType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
  fullName: System.Web.DynamicData.MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
  fullName: System.Web.DynamicData.MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
  fullName: System.Web.DynamicData.MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
  fullName: System.Web.DynamicData.MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String)
  nameWithType: MetaTable.GetActionPath(String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)
- uid: System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object)
  nameWithType: MetaTable.GetActionPath(String,Object)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,RouteValueDictionary)
  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,IList<Object>,String)
  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)
- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath(String,Object,String)
  nameWithType: MetaTable.GetActionPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)
- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn(String)
  nameWithType: MetaTable.GetColumn(String)
  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute(HttpContext)
  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)
  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute()
  nameWithType: MetaTable.GetDataKeyFromRoute()
  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString(Object)
  nameWithType: MetaTable.GetDisplayString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns()
  nameWithType: MetaTable.GetFilteredColumns()
  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()
- uid: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<MetaColumn>
  nameWithType: IEnumerable<MetaColumn>
  fullName: System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.DynamicData.MetaColumn>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaColumn
    name: MetaColumn
    nameWithType: MetaColumn
    fullName: MetaColumn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary(Object)
  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(IList<Object>)
  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString(Object)
  nameWithType: MetaTable.GetPrimaryKeyString(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues(Object)
  nameWithType: MetaTable.GetPrimaryKeyValues(Object)
  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)
- uid: System.Web.DynamicData.MetaTable.GetQuery
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery()
  nameWithType: MetaTable.GetQuery()
  fullName: System.Web.DynamicData.MetaTable.GetQuery()
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery(Object)
  nameWithType: MetaTable.GetQuery(Object)
  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)
  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.ContainerType
  parent: System.Web.DynamicData
  isExternal: false
  name: ContainerType
  nameWithType: ContainerType
  fullName: System.Web.DynamicData.ContainerType
- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaTable.GetTable(Type)
  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize()
  nameWithType: MetaTable.Initialize()
  fullName: System.Web.DynamicData.MetaTable.Initialize()
- uid: System.Web.DynamicData.MetaTable.IsReadOnly
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
  fullName: System.Web.DynamicData.MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
  fullName: System.Web.DynamicData.MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Web.DynamicData.MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
  fullName: System.Web.DynamicData.MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
  fullName: System.Web.DynamicData.MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata()
  nameWithType: MetaTable.ResetMetadata()
  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()
- uid: System.Web.DynamicData.MetaTable.RootEntityType
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
  fullName: System.Web.DynamicData.MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
  fullName: System.Web.DynamicData.MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
  fullName: System.Web.DynamicData.MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
  fullName: System.Web.DynamicData.MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString()
  nameWithType: MetaTable.ToString()
  fullName: System.Web.DynamicData.MetaTable.ToString()
- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn(String,MetaColumn)
  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)
  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)
- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaTable.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaTable.#ctor*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable.MetaTable
- uid: System.Web.DynamicData.MetaTable.Attributes*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Attributes
  nameWithType: MetaTable.Attributes
- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: BuildAttributeCollection
  nameWithType: MetaTable.BuildAttributeCollection
- uid: System.Web.DynamicData.MetaTable.CanDelete*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanDelete
  nameWithType: MetaTable.CanDelete
- uid: System.Web.DynamicData.MetaTable.CanInsert*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanInsert
  nameWithType: MetaTable.CanInsert
- uid: System.Web.DynamicData.MetaTable.CanRead*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanRead
  nameWithType: MetaTable.CanRead
- uid: System.Web.DynamicData.MetaTable.CanUpdate*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CanUpdate
  nameWithType: MetaTable.CanUpdate
- uid: System.Web.DynamicData.MetaTable.Columns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Columns
  nameWithType: MetaTable.Columns
- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateChildrenColumn
  nameWithType: MetaTable.CreateChildrenColumn
- uid: System.Web.DynamicData.MetaTable.CreateColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateColumn
  nameWithType: MetaTable.CreateColumn
- uid: System.Web.DynamicData.MetaTable.CreateContext*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateContext
  nameWithType: MetaTable.CreateContext
- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateForeignKeyColumn
  nameWithType: MetaTable.CreateForeignKeyColumn
- uid: System.Web.DynamicData.MetaTable.CreateTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: CreateTable
  nameWithType: MetaTable.CreateTable
- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextPropertyName
  nameWithType: MetaTable.DataContextPropertyName
- uid: System.Web.DynamicData.MetaTable.DataContextType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DataContextType
  nameWithType: MetaTable.DataContextType
- uid: System.Web.DynamicData.MetaTable.DisplayColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayColumn
  nameWithType: MetaTable.DisplayColumn
- uid: System.Web.DynamicData.MetaTable.DisplayName*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: DisplayName
  nameWithType: MetaTable.DisplayName
- uid: System.Web.DynamicData.MetaTable.EntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: EntityType
  nameWithType: MetaTable.EntityType
- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ForeignKeyColumnsNames
  nameWithType: MetaTable.ForeignKeyColumnsNames
- uid: System.Web.DynamicData.MetaTable.GetActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetActionPath
  nameWithType: MetaTable.GetActionPath
- uid: System.Web.DynamicData.MetaTable.GetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumn
  nameWithType: MetaTable.GetColumn
- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetColumnValuesFromRoute
  nameWithType: MetaTable.GetColumnValuesFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDataKeyFromRoute
  nameWithType: MetaTable.GetDataKeyFromRoute
- uid: System.Web.DynamicData.MetaTable.GetDisplayString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetDisplayString
  nameWithType: MetaTable.GetDisplayString
- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetFilteredColumns
  nameWithType: MetaTable.GetFilteredColumns
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyDictionary
  nameWithType: MetaTable.GetPrimaryKeyDictionary
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyString
  nameWithType: MetaTable.GetPrimaryKeyString
- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetPrimaryKeyValues
  nameWithType: MetaTable.GetPrimaryKeyValues
- uid: System.Web.DynamicData.MetaTable.GetQuery*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetQuery
  nameWithType: MetaTable.GetQuery
- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetScaffoldColumns
  nameWithType: MetaTable.GetScaffoldColumns
- uid: System.Web.DynamicData.MetaTable.GetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: GetTable
  nameWithType: MetaTable.GetTable
- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: HasPrimaryKey
  nameWithType: MetaTable.HasPrimaryKey
- uid: System.Web.DynamicData.MetaTable.Initialize*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Initialize
  nameWithType: MetaTable.Initialize
- uid: System.Web.DynamicData.MetaTable.IsReadOnly*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaTable.IsReadOnly
- uid: System.Web.DynamicData.MetaTable.ListActionPath*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ListActionPath
  nameWithType: MetaTable.ListActionPath
- uid: System.Web.DynamicData.MetaTable.Model*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
- uid: System.Web.DynamicData.MetaTable.Name*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Name
  nameWithType: MetaTable.Name
- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: PrimaryKeyColumns
  nameWithType: MetaTable.PrimaryKeyColumns
- uid: System.Web.DynamicData.MetaTable.Provider*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Provider
  nameWithType: MetaTable.Provider
- uid: System.Web.DynamicData.MetaTable.ResetMetadata*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ResetMetadata
  nameWithType: MetaTable.ResetMetadata
- uid: System.Web.DynamicData.MetaTable.RootEntityType*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: RootEntityType
  nameWithType: MetaTable.RootEntityType
- uid: System.Web.DynamicData.MetaTable.Scaffold*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: Scaffold
  nameWithType: MetaTable.Scaffold
- uid: System.Web.DynamicData.MetaTable.SortColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortColumn
  nameWithType: MetaTable.SortColumn
- uid: System.Web.DynamicData.MetaTable.SortDescending*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: SortDescending
  nameWithType: MetaTable.SortDescending
- uid: System.Web.DynamicData.MetaTable.ToString*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: ToString
  nameWithType: MetaTable.ToString
- uid: System.Web.DynamicData.MetaTable.TryGetColumn*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetColumn
  nameWithType: MetaTable.TryGetColumn
- uid: System.Web.DynamicData.MetaTable.TryGetTable*
  parent: System.Web.DynamicData.MetaTable
  isExternal: false
  name: TryGetTable
  nameWithType: MetaTable.TryGetTable
