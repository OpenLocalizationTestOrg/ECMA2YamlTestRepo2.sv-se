### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.EncryptedPackageEnvelope
  id: EncryptedPackageEnvelope
  children:
  - System.IO.Packaging.EncryptedPackageEnvelope.Close
  - System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  - System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  - System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  - System.IO.Packaging.EncryptedPackageEnvelope.Flush
  - System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  - System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  - System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  - System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  - System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  langs:
  - csharp
  name: EncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope
  fullName: System.IO.Packaging.EncryptedPackageEnvelope
  type: Class
  summary: "Representerar en sammansatt OLE-fil som innehåller ett krypterade paket."
  remarks: "EncryptedPackageEnvelope har inga offentliga konstruktorer.  En EncryptedPackageEnvelope har skapats med hjälp av statiskhet <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, eller <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A>metoder.</xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>"
  syntax:
    content: 'public class EncryptedPackageEnvelope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close
  id: Close
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Close()
  nameWithType: EncryptedPackageEnvelope.Close()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Det krypterade paketet och den sammansatta OLE-filen som innehåller den stängs."
  remarks: ''
  example:
  - "The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Create(Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar och returnerar ett <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> på den angivna dataströmmen."
  remarks: "Den aktuella användaren har åtkomst till den nya filen."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Dataströmmen att skapa filen."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "Publiceringslicensen som är inbäddad i den sammansatta filen."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Ett objekt som fastställer vilka åtgärder som den aktuella användaren får utföra på det krypterade innehållet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den nyligen skapade <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>envelopeStream</code>ger inte läs-/ skrivbehörighet."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Create(String,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar och returnerar ett <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> och ger den namnet på angivna filen."
  remarks: "Om det finns redan en fil med det angivna namnet, skrivs över.       Den aktuella användaren har åtkomst till filen."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Namnet på den sammansatta OLE-filen."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "Publiceringslicensen som är inbäddad i den sammansatta filen."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Ett objekt som fastställer vilka åtgärder som den aktuella användaren får utföra på det krypterade innehållet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den nyligen skapade <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar och returnerar ett <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> (på det angivna stream) som använder det angivna okrypterad paketet som dess innehåll."
  remarks: "Den aktuella användaren har åtkomst till den nya filen."
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Dataströmmen att skapa filen."
    - id: packageStream
      type: System.IO.Stream
      description: "Dataströmmen som representerar det befintliga okrypterad paketet."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "Publiceringslicensen som är inbäddad i den sammansatta filen."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Ett objekt som fastställer vilka åtgärder som den aktuella användaren får utföra på det krypterade innehållet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den nyligen skapade <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeStream</code>or <code>packageStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>envelopeStream</code>ger inte läs-/ skrivbehörighet."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Skapar och returnerar ett <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> som använder det angivna okrypterad paketet som dess innehåll och ger den namnet på angivna filen."
  remarks: "Om det finns redan en fil med det angivna namnet, skrivs över.       Den aktuella användaren har åtkomst till filen."
  example:
  - "The following example shows how to use the CreateFromPackage method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Namnet på den sammansatta OLE-filen."
    - id: packageStream
      type: System.IO.Stream
      description: "Dataströmmen som representerar det befintliga okrypterad paketet."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "Publiceringslicensen som är inbäddad i den sammansatta filen."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Ett objekt som fastställer vilka åtgärder som den aktuella användaren får utföra på det krypterade innehållet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den nyligen skapade <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeFileName</code>or <code>packageStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  id: Dispose
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncryptedPackageEnvelope.Dispose()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Frigör alla resurser som används av den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  remarks: "Anropa Dispose när du är klar med <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</xref:System.IO.Packaging.EncryptedPackageEnvelope> Metoden Dispose lämnar den <xref:System.IO.Packaging.EncryptedPackageEnvelope>oanvändbar.</xref:System.IO.Packaging.EncryptedPackageEnvelope> När du anropar Dispose, måste du släppa alla referenser till den <xref:System.IO.Packaging.EncryptedPackageEnvelope>så skräpinsamlingen kan frigöra minne som den <xref:System.IO.Packaging.EncryptedPackageEnvelope>var upptar.</xref:System.IO.Packaging.EncryptedPackageEnvelope> </xref:System.IO.Packaging.EncryptedPackageEnvelope> Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropet avyttra innan du släpper senaste referens till <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</xref:System.IO.Packaging.EncryptedPackageEnvelope> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.IO.Packaging.EncryptedPackageEnvelope>objektets <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EncryptedPackageEnvelope.Dispose(Boolean)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten `Dispose()`metod och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.Object.Finalize%2A>       När den `disposing` parametern är true, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.IO.Packaging.EncryptedPackageEnvelope>referenser.</xref:System.IO.Packaging.EncryptedPackageEnvelope> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar ett värde som anger om filen har öppnats med åtkomst till läsa, skriva, eller båda."
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: "Den <xref href=&quot;System.IO.FileAccess&quot;> </xref> värde som användes för att öppna filen."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush
  id: Flush
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Flush()
  nameWithType: EncryptedPackageEnvelope.Flush()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Rensa dataströmmen för både den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> och dess innehåll."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  id: GetPackage
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: GetPackage()
  nameWithType: EncryptedPackageEnvelope.GetPackage()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar det krypterade paketet i den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  syntax:
    content: public System.IO.Packaging.Package GetPackage ();
    parameters: []
    return:
      type: System.IO.Packaging.Package
      description: "Den <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> i kuvertet."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  id: IsEncryptedPackageEnvelope(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: IsEncryptedPackageEnvelope(Stream)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar ett värde som anger om den angivna dataströmmen är en sammansatt OLE-fil med en dataström för krypterade paket."
  syntax:
    content: public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Dataströmmen som ska testas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna dataströmmen är en sammansatt OLE-fil med en krypterad paketström; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  id: IsEncryptedPackageEnvelope(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: IsEncryptedPackageEnvelope(String)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar ett värde som anger om den angivna filen är en sammansatt OLE-fil med en dataström för krypterade paket."
  remarks: ''
  example:
  - "The following example shows how to use this method to test for encryption.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static bool IsEncryptedPackageEnvelope (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Den fil som ska testas."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna filen är en sammansatt OLE-fil med en krypterad paketström; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: EncryptedPackageEnvelope.Open(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppna det krypterade paketet i den angivna dataströmmen."
  remarks: "Dataströmmen måste ha ett krypterade paket."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Dataströmmen som innehåller det krypterade paketet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> som har öppnats."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String)
  nameWithType: EncryptedPackageEnvelope.Open(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppna det krypterade paketet i den angivna filen som läst endast och delats."
  remarks: "Filen måste ha ett krypterade paket.       Öppna filen läses endast och delats."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Den fil som innehåller det krypterade paketet."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> som har öppnats."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileAccess)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String,FileAccess)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppna det krypterade paketet i den angivna filen som delats och med den angivna åtkomsten."
  remarks: "Filen måste ha ett krypterade paket.       Öppna filen har delats."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Den fil som innehåller det krypterade paketet."
    - id: access
      type: System.IO.FileAccess
      description: "Typ av åtkomst."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> som har öppnats."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String,FileAccess,FileShare)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Öppna det krypterade paketet i den angivna filen och ger den angivna åtkomst och delning."
  remarks: "Filen måste ha ett krypterade paket."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Den fil som innehåller det krypterade paketet."
    - id: access
      type: System.IO.FileAccess
      description: "Typ av åtkomst."
    - id: sharing
      type: System.IO.FileShare
      description: "Typ av delning."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> som har öppnats."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar grundläggande Paketegenskaper (till exempel rubrik och ämne) rättigheter hanterat dokument."
  remarks: "Dessa huvudegenskaper lagras i standard OLE-egenskapen strömmar (\\005SummaryInformation och \\005DocumentSummaryInformation). Core egenskaperna lagras också i själva paketet. Ansvarar för att hålla två uppsättningar med egenskaper som synkroniseras."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "Den <xref href=&quot;System.IO.Packaging.PackageProperties&quot;> </xref> för paketet."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  id: RightsManagementInformation
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar rights management information som lagras i den <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>, särskilt de <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> och <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>s lagras i den sammansatta OLE-filen som innehåller rights management skyddas paketet"
  remarks: ''
  example:
  - "The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the RightsManagementInformation property.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }
    return:
      type: System.IO.Packaging.RightsManagementInformation
      description: "Den <xref href=&quot;System.IO.Packaging.RightsManagementInformation&quot;> </xref> för paketet."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  id: StorageInfo
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hämtar ett objekt som ger åtkomst till sammansatt fil strömmar utanför det krypterade paketet."
  syntax:
    content: public System.IO.Packaging.StorageInfo StorageInfo { get; }
    return:
      type: System.IO.Packaging.StorageInfo
      description: "En <xref href=&quot;System.IO.Packaging.StorageInfo&quot;> </xref> som representerar dataströmmar i den sammansatta OLE-filen som ligger utanför det krypterade paketet."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Close()
  nameWithType: EncryptedPackageEnvelope.Close()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Close()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create(Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope
  parent: System.IO.Packaging
  isExternal: false
  name: EncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope
  fullName: System.IO.Packaging.EncryptedPackageEnvelope
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.CryptoProvider
  parent: System.Security.RightsManagement
  isExternal: false
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create(String,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose()
  nameWithType: EncryptedPackageEnvelope.Dispose()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EncryptedPackageEnvelope.Dispose(Boolean)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Flush()
  nameWithType: EncryptedPackageEnvelope.Flush()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Flush()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: GetPackage()
  nameWithType: EncryptedPackageEnvelope.GetPackage()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage()
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope(Stream)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope(String)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(Stream)
  nameWithType: EncryptedPackageEnvelope.Open(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(Stream)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String)
  nameWithType: EncryptedPackageEnvelope.Open(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String,FileAccess)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String,FileAccess,FileShare)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
- uid: System.IO.Packaging.RightsManagementInformation
  parent: System.IO.Packaging
  isExternal: false
  name: RightsManagementInformation
  nameWithType: RightsManagementInformation
  fullName: System.IO.Packaging.RightsManagementInformation
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
- uid: System.IO.Packaging.StorageInfo
  parent: System.IO.Packaging
  isExternal: false
  name: StorageInfo
  nameWithType: StorageInfo
  fullName: System.IO.Packaging.StorageInfo
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Close
  nameWithType: EncryptedPackageEnvelope.Close
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create
  nameWithType: EncryptedPackageEnvelope.Create
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose
  nameWithType: EncryptedPackageEnvelope.Dispose
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Flush
  nameWithType: EncryptedPackageEnvelope.Flush
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: GetPackage
  nameWithType: EncryptedPackageEnvelope.GetPackage
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open
  nameWithType: EncryptedPackageEnvelope.Open
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
