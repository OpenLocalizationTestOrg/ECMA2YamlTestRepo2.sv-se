### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Fungerar som en basklass för härledda wrapper konkreta klasser för att implementera funktionen programmet inställningar i Windows Forms-program."
  remarks: "ApplicationSettingsBase lägger till följande funktion att de <xref:System.Configuration.SettingsBase>-klassen, som används av webbaserade program:-förmågan att upptäcka attribut i en klass härledd, inställningar omslutning.</xref:System.Configuration.SettingsBase> ApplicationSettingsBase stöder deklarativ modell som används för omslutning klassegenskaper som beskrivs senare.      -Överordnad <xref:System.Configuration.ApplicationSettingsBase.Save%2A>och <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metoder.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      -Ytterligare verifiering-händelser som du kan hantera för att säkerställa att är korrekt av individuella inställningar.       I inställningar programarkitektur, för att komma åt en grupp egenskaper för inställningar måste att härleda en konkret adapterklass från ApplicationSettingsBase. Klassen wrapper anpassar ApplicationSettingsBase på följande sätt: - för varje egenskap för inställningar kan kommas åt en motsvarande starkt typbestämd offentlig egenskap läggs till wrapper-klassen. Den här egenskapen har `get` och `set` accessorer för läsning och skrivning programinställningar, men endast en `get` accessor för skrivskyddade inställningar.      -Anslagna attribut måste tillämpas på klassen wrapper offentliga egenskaper för att ange egenskaper för inställningsegenskapen, till exempel inställningens omfattningen (program eller användare), om inställningen ska ha stöd för roaming standardvärdet för inställningen inställningsprovidern som ska användas och så vidare. Varje egenskap krävs för att ange sitt omfång och kan använda antingen <xref:System.Configuration.ApplicationScopedSettingAttribute>eller <xref:System.Configuration.UserScopedSettingAttribute>.</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Inställningar för program som definitionsområde är skrivskyddade om standard <xref:System.Configuration.LocalFileSettingsProvider>används.</xref:System.Configuration.LocalFileSettingsProvider>       Klassen ApplicationSettingsBase använder reflektion för att identifiera dessa attribut vid körning. De flesta av den här informationen skickas till inställningar för providern lager som är ansvarig för lagring, beständiga format och så vidare.       När ett program har flera inställningar wrapper klasser, varje klass som definierar en *enhetsinställningsgruppen*. Varje grupp har följande egenskaper: – en grupp kan innehålla valfritt antal och typ av egenskapsinställningar.      -Om gruppnamnet inte uttryckligen anges av pynta vinjettklass med en <xref:System.Configuration.SettingsGroupNameAttribute>, och sedan ett namn genereras automatiskt.</xref:System.Configuration.SettingsGroupNameAttribute>       Som standard alla klient-baserade program använder den <xref:System.Configuration.LocalFileSettingsProvider>att tillhandahålla lagring.</xref:System.Configuration.LocalFileSettingsProvider> Eventuellt en alternativa inställningsprovider måste sedan vinjettklass eller egenskapen vara dekorerad med en motsvarande <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Mer information om hur du använder tillämpningsinställningar finns [programmet inställningar för Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initierar en instans av den <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> klassen till sitt ursprungsläge."
  remarks: "Standardkonstruktorn utformades för under antagandet att det finns ingen komponent som är associerade med den aktuella inställningar wrapper klassen som härleds från <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>       När en instans av en adapterklass skapas ärvda koden utförs följande åtgärder automatiskt: 1.  Återspegla över klassen.      2.  För varje egenskap på adapterprogram har markerats med antingen `[UserScopedSettingAttribute]` eller `[ApplicationScopedSettingAttribute]`, en motsvarande <xref:System.Configuration.SettingsProperty>har skapats.</xref:System.Configuration.SettingsProperty>      3.  Varje <xref:System.Configuration.SettingsProperty>har några av dess egenskaper uppsättning baserat på andra attribut som du kan också finns på den wrapper egenskaper, till exempel standardvärdet eller inställningar för leverantören.</xref:System.Configuration.SettingsProperty>      4.  Alla andra attribut bara placeras i ett attribut egenskapsuppsättning, <xref:System.Configuration.SettingsProperty.Attributes%2A>egenskapen för <xref:System.Configuration.SettingsProperty>klassen.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  Alla <xref:System.Configuration.SettingsProperty>objekt läggs till i en <xref:System.Configuration.SettingsPropertyCollection>representeras av <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>egenskapen för <xref:System.Configuration.ApplicationSettingsBase>klassen.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> Den här samlingen skickas sedan till den <xref:System.Configuration.SettingsBase.Initialize%2A>metoden.</xref:System.Configuration.SettingsBase.Initialize%2A>       Som underförstådda av steg 3 som beskrivs ovan <xref:System.Configuration.ApplicationSettingsBase>internt fungerar med flera egenskapsattribut, särskilt följande: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, och <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> Alla andra inställningar attribut skickas bara till lämplig underliggande provider."
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initierar en instans av den <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> klassen använder den angivna ägaren."
  remarks: "Den här konstruktorn är exakt samma som den <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>konstruktor med anropet: `ApplicationSettingsBase(owner, String.Empty)` information om hur reflektion används vid instansiering av en adapterklass finns i standard <xref:System.Configuration.ApplicationSettingsBase.%23ctor>konstruktor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Den komponent som ska fungera som ägare av inställningar för programobjektet."
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initierar en instans av den <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> klassen med angivna inställningar nyckeln."
  remarks: "Den här konstruktorn initierar den <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>egenskapen till värdet för den `settingsKey` parameter.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Den här egenskapen är användbar i disambiguating olika instanser av klassen inställningar wrapper i samma programdomän.       Information om hur reflektion används vid instansiering av en adapterklass finns i standard <xref:System.Configuration.ApplicationSettingsBase.%23ctor>konstruktor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "En <xref:System.String>som unikt identifierar separata instanser av klassen omslutning.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initierar en instans av den <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> klassen med hjälp av angivna ägare komponenten och inställningar för nyckeln."
  remarks: "Den <xref:System.ComponentModel.IComponent>objekt som angetts av den `owner` parametern fungerar som ägare till den aktuella instansen av den här klassen. inställningar för program</xref:System.ComponentModel.IComponent> Under initieringen av vinjettklass inställningar som härletts från <xref:System.Configuration.ApplicationSettingsBase>, ägarens plats efterfrågas för <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ApplicationSettingsBase> Om det finns ett används den istället för inbyggda inställningsprovider för alla egenskaper i klassen omslutning som anges av <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Den här konstruktorn initierar den <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>egenskapen till värdet för den `settingsKey` parameter.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Den här egenskapen är användbar i disambiguating olika instanser av klassen wrapper i samma programdomän.       Information om hur reflektion används vid instansiering av en adapterklass finns i standard <xref:System.Configuration.ApplicationSettingsBase.%23ctor>konstruktor.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Den komponent som ska fungera som ägare av inställningar för programobjektet."
    - id: settingsKey
      type: System.String
      description: "En <xref:System.String>som unikt identifierar separata instanser av klassen omslutning.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar inställningar programkontexten som är associerade med gruppen inställningar."
  remarks: "Varje inställningar wrapper-klass som härletts från <xref:System.Configuration.ApplicationSettingsBase>har en kontext som är kopplade till det.</xref:System.Configuration.ApplicationSettingsBase> Kontexten har skickats till inställningar-leverantör för varje egenskap för att identifiera hur egenskapen används. Kontexten fungerar därför som ett tips för att inställningsprovidern fastställa hur du bäst att bevara de associerade program värdena.       Däremot <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>ger inställningsprovidern att undvika tvetydigheten flera instanser av samma wrapper klass.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "En <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> som är associerade med gruppen inställningar."
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Returnerar värdet på inställningsegenskapen namngivna för den tidigare versionen av samma program."
  remarks: "Metoden GetPreviousVersion används ofta tillsammans med den <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>metoden när du migrerar inställningar under installationen av en ny version av ett program.</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på egenskapen settings vars värde ska returneras.</xref:System.String>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller värdet för den angivna <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> om hittas, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Egenskapen finns inte. Antal egenskaper är noll eller egenskapen kan inte hittas i datalagret."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar eller anger värdet för egenskapen settings angivet program."
  remarks: "Egenskapen Item, även kallat indexeraren rutinmässigt i inställningar-wrapper-klass som härletts från <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Objektet Binder offentlig egenskap i klassen wrapper till inställningar för motsvarande egenskap.       Objektet genererar flera händelser beroende på den åtgärd som utförs: – första gången en egenskap hämtas den <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>händelsen utlöses.</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      – När en egenskap anges den <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>händelsen utlöses.</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> Om hanteraren inte avbryter händelsen och sedan värdet på egenskapen och <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>händelsen utlöses.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "En <xref:System.String>som innehåller namnet på egenskapen för att komma åt.</xref:System.String>"
    return:
      type: System.Object
      description: "Om hitta värdet för inställningsegenskapen med namnet; Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Det finns inga egenskaper som är associerade med den aktuella wrapper eller gick inte att hitta den angivna egenskapen."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Ett försök gjordes att ange en skrivskyddad egenskap."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Det angivna värdet är av en typ som är inte kompatibel med egenskapen settings under en set-åtgärd."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det gick inte att parsa konfigurationsfilen."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genererar den <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref> händelse."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnPropertyChanged kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen."
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "En <xref:System.ComponentModel.PropertyChangedEventArgs>som innehåller informationen om händelsen.</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genererar den <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref> händelse."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnSettingChanging kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen."
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "En <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genererar den <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref> händelse."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnSettingsLoaded kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen."
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "En <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Genererar den <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref> händelse."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnSettingsSaving kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Källan för händelsen."
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "En <xref:System.ComponentModel.CancelEventArgs>som innehåller informationen om händelsen.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar insamlingen av egenskaper för inställningar i adapterprogram."
  remarks: "Den `get` accessorn för egenskapen egenskaper visar över metadata för inställningar wrapper-klass som härleds från <xref:System.Configuration.ApplicationSettingsBase>, för att dynamiskt bestämma vilken uppsättning av tillgängliga inställningar programegenskaper.</xref:System.Configuration.ApplicationSettingsBase>       Den <xref:System.Configuration.ApplicationSettingsBase>klassen internt identifierar vissa egenskaper för en programinställning, till exempel dess namn, egenskapstyp, inställningsprovidern, standardvärdet, läsa endast status och en inställning för serialisering.</xref:System.Configuration.ApplicationSettingsBase> Dessa egenskaper speglas som egenskaper i <xref:System.Configuration.SettingsProperty>klassen.</xref:System.Configuration.SettingsProperty> Alla andra attribut för inställningsegenskapen skickas bara till dess associerade inställningarna provider."
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> som innehåller alla de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objekt som används i den aktuella omslutning."
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Den tillhörande inställningsprovidern kunde inte hittas eller dess instansiering misslyckades."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inträffar när värdet för en egenskap för inställningar av programmet har ändrats."
  remarks: "PropertyChanged-händelse inträffar när en inställningsegenskapen ändras via den `set` accessorn för den <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metoden, eller för varje egenskap som återställs vid ett anrop till den <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>eller <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>metoder.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       Det finns ingen motsvarande `PropertyChanging` händelsen för den här klassen, i stället se den <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>händelse.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar en uppsättning egenskapsvärden."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "En <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> egenskapsvärden."
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar mängden programleverantörer inställningar som används av adapterprogram."
  remarks: "Den <xref:System.Configuration.SettingsProviderAttribute>avgör vilka inställningen providern används av en adapterklass inställningar eller en enskild egenskap.</xref:System.Configuration.SettingsProviderAttribute> Om det här attributet inte anges används ett klientprogram i <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "En <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> som innehåller alla de <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> objekt som används av egenskaper för inställningar för den aktuella inställningar omslutning."
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Uppdaterar egenskapsvärden för programmet inställningar från beständig lagring."
  remarks: "Metoden ladda rensar de för närvarande cachelagrade egenskapsvärden som orsakar en ny inläsning av dessa värden från beständig lagring när de används senare. Den här metoden utförs följande åtgärder:-egenskaperna för närvarande cachelagrade rensas genom att avmarkera den samling som representeras av den <xref:System.Configuration.SettingsBase.PropertyValues%2A>egenskapen.</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -Den genererar den <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>händelse för varje medlem i den <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>samling.</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       Läs in skiljer sig från <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>i att den tidigare kommer att läsa in den senaste värdeuppsättningen sparade programmet inställningar, medan denna kommer att läsa in sparade standardvärden.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Återställer inställningsvärden beständiga program till sina motsvarande standardegenskaperna."
  remarks: "Reset-metoden skriver över egenskaper för användarspecifika inställningar genom att återställa just nu beständiga värdet för varje programinställningar. Den här metoden utförs följande åtgärder:-anropar den <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>metoden på alla inställningsprovidern som har stöd för den här valfria metoden.</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      -Anropar den <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metod för att framtvinga en uppdatering av inställningar egenskapsvärden.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>står i kontrast med återställning i att den tidigare kommer att läsa in den senaste värdeuppsättningen sparade programmet inställningar, medan denna kommer att läsa in sparade standardvärden.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det gick inte att parsa konfigurationsfilen."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Lagrar de aktuella värdena för programegenskaperna inställningar."
  remarks: "Metoden spara skriver det aktuella värdet för varje inställningsegenskapen till arkivet associerade data. För varje egenskap för den här metoden anropar den <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>metoden på den associerade inställningsprovidern.</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       Den här metoden skiljer sig från basklassen implementeringen att den genererar den <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>händelsen innan värden skrivs.</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       Om endast inställningarna som anges är program som definitionsområde inställningar, spara kommer har ingen effekt och inga fel returneras om anropades med standard <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider> <xref:System.Configuration.LocalFileSettingsProvider>sparar bara användarspecifika inställningar.</xref:System.Configuration.LocalFileSettingsProvider>      > [!IMPORTANT] > Det finns ingen motsvarande belastningen metod eftersom värdena för programinställningar läses in automatiskt under initieringen av omslutning klass. Dessa värden sparas däremot inte automatiskt när ett program avslutas. Därför måste du explicit anropa metoden Spara för att spara aktuella värden för programinställningarna. Detta sker vanligtvis i <xref:System.Windows.Forms.Form.Closing>händelsehanteraren på primärt eller som innehåller <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closing>"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inträffar innan värdet för ett program inställningar-egenskapen ändras."
  remarks: "SettingChanging-händelse inträffar innan programmet inställningen value-egenskap ändras via den <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metoden.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Den här händelsen är inte aktiveras när den <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>eller <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>metoder kallas.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> SettingChanging kan avbrytas via <xref:System.Configuration.SettingChangingEventArgs>händelsen data klass.</xref:System.Configuration.SettingChangingEventArgs>       Du använder vanligtvis SettingChanging händelsen för att hantera omedelbara validering av en egenskap för enskilda inställningar. Mer information om validering finns [så här: Verifiera programinställningar](~/add/includes/ajax-current-ext-md.md).       Det finns ingen motsvarande `SettingChanged` händelsen för den här klassen, i stället se den <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>händelse.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Hämtar eller anger inställningstangent för inställningar för programgruppen."
  remarks: "Egenskapen SettingsKey har angetts för att aktivera klientkoden, i synnerhet inställningsprovidern att undvika tvetydigheten mellan flera instanser av klassen inställningar för samma program.       Om inte vinjettklass inställningar är utformat för singleton-mönster, kan det finnas flera instanser av samma program inställningar klass i ett enda program. Värdet för SettingsKey ska anges enligt hur egenskapsvärden är avsedd för att delas.      – Om egenskaper för inställningar av adapterprogram är avsedda att delas mellan alla instanser av adapterprogram i samma program, ska sedan SettingsKey ha samma värde i alla instanser. Det här är standardinställningen för <xref:System.Configuration.ApplicationSettingsBase>klass.</xref:System.Configuration.ApplicationSettingsBase>      – Om egenskaper för inställningar av adapterprogram är avsedda att vara per instans, ska SettingsKey ha ett unikt värde för varje instans. Den <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>version i konstruktorn gör att du kan initiera SettingsKey till en unik sträng.</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       Däremot den <xref:System.Configuration.ApplicationSettingsBase.Context%2A>egenskapen ger tips till inställningsprovidern att bevara värden på ett effektivt och korrekt sätt.</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       Den <xref:System.Configuration.SettingChangingEventArgs>klassen innehåller en liknande <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>egenskap som hjälper till att identifiera källan till den <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>händelse.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller inställningar för nyckeln för den aktuella inställningar för gruppen.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inträffar efter programinställningarna hämtas från lagring."
  remarks: "SettingsLoaded-händelse inträffar bara när första `get` åtkomsten till den första konfigurationsegenskapen används vanligtvis via den <xref:System.Configuration.ApplicationSettingsBase.Item%2A>metoden.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Efterföljande ska använda värden för egenskapen settings som cachelagras lokalt. Den <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>och <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>metoder att rensa alla cachelagrade värden så att den här händelsen aktiveras igen vid efterföljande Egenskapsåtkomst.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inträffar innan värden sparas i datalagret."
  remarks: "SettingsSaving-händelse utlöses av den <xref:System.Configuration.ApplicationSettingsBase.Save%2A>metoden innan den lagrar inställningar programegenskaper till deras associerade dataarkiv.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> Den associerade händelsehanteraren kan avbryta den här händelsen."
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Uppdaterar inställningar för program för att återspegla en nyare installationen av programmet."
  remarks: "Uppgradera metoden utför två åtgärder för att säkerställa en smidig övergång till en ny version av ett program:-skickas ett meddelande till alla motsvarande inställningar providers av förekomsten av uppgraderade program via ett anrop till deras <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>metod, under förutsättning att de har implementerats i <xref:System.Configuration.IApplicationSettingsProvider>gränssnitt.</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> Denna åtgärd utförs inte om vinjettklass inställningar har markerats med <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>      – Det läser värdena för alla inställningar för program.       Du kan åsidosätta standardbeteendet för uppgraderingen för att implementera anpassade uppgraderar eller sammanslagning beteende. Använd den <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>metod för att hämta enskilda värden för en inställning för den tidigare versionen av programmet.</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Exempel på anpassade uppgraderingar:-med nya princip standardvärden som åsidosätter en eller flera av de tidigare användardefinierade värdena eller tidigare standarder.      -Särskilda översättning av gamla värden ska vara kompatibel med nyare intervall, en egenskapsgrupp för olika inställningar och så vidare."
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Det gick inte att parsa konfigurationsfilen."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
