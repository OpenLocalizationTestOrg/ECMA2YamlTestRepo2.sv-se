### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  id: KeyedHashAlgorithm
  children:
  - System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  - System.Security.Cryptography.KeyedHashAlgorithm.Create
  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  - System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.KeyedHashAlgorithm.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  langs:
  - csharp
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
  type: Class
  summary: "Representerar den abstrakta klassen algoritmer måste härledas från vilken alla implementeringar kodad Hash-algoritm."
  remarks: "Hash-funktioner kartan binära strängar med en godtycklig längd på små binära strängar med fast längd. En kryptografisk hash-funktionen har egenskapen att är det omöjligt att hitta två distinkta indata som hash till samma värde. Små ändringar av data leder till stora, oförutsägbart förändringar hash-algoritmen.       En nycklad hashalgoritm är en nyckel-beroende, envägs hash-funktion som används som en message authentication code. Endast användare som känner till nyckeln kan kontrollera hash-algoritmen. Nycklad hash-algoritmer ange äkthetsbeviset utan sekretess.       Hash-funktioner är vanliga med digitala signaturer och dataintegritet. Den <xref:System.Security.Cryptography.HMACSHA1>klass är ett exempel på en nycklad hashalgoritm.</xref:System.Security.Cryptography.HMACSHA1>"
  example:
  - "The following code example demonstrates how to derive from the KeyedHashAlgorithm class.  \n  \n [!code-cs[KeyedHashAlgorithm#1](~/add/codesnippet/csharp/t-system.security.crypto_129_1.cs)]\n [!code-vb[KeyedHashAlgorithm#1](~/add/codesnippet/visualbasic/t-system.security.crypto_129_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class KeyedHashAlgorithm : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: KeyedHashAlgorithm()
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> klass."
  remarks: "Du kan inte skapa en instans av en abstrakt klass. Programkod som skapar en ny instans av en härledd klass."
  syntax:
    content: protected KeyedHashAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.KeyedHashAlgorithm.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: KeyedHashAlgorithm.Create()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av standardimplementering av en nycklad hashalgoritm."
  remarks: "Som standard använder denna överbelastning av <xref:System.Security.Cryptography.HMACSHA1>implementeringen av en nycklad hashalgoritm.</xref:System.Security.Cryptography.HMACSHA1> Om du vill ange en annan implementering använder den <xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29>överlagra, kan du ange algoritmnamnet på en i stället.</xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29> Konfigurationssystemet kryptografi definierar standardimplementering av <xref:System.Security.Cryptography.KeyedHashAlgorithm>klass.</xref:System.Security.Cryptography.KeyedHashAlgorithm>"
  syntax:
    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "En ny <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> instansen om standardinställningarna har ändrats."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: KeyedHashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av den angivna implementeringen av en nycklad hashalgoritm."
  remarks: "Den här metoden stöder ett antal olika algoritmer, inklusive MD5, SHA-1, SHA-256 och RIPEMD160. En fullständig lista finns i värdena som stöds för den `algName` parameter."
  syntax:
    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "Algoritmimplementeringen kodad Hash-algoritm att använda. I följande tabell visas de giltiga värdena för den `algName` parametern och algoritmer som du kan mappa till.       <table><thead><tr><th> Värdet för parametern       </th><th> Implementerar       </th></tr></thead><tbody><tr><td> System.Security.Cryptography.HMAC       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.KeyedHashAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr><tr><td> System.Security.Cryptography.MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "En ny instans av den angivna Nyckelbaserade hash-algoritmen."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och `Finalize` metod. `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. `Finalize`anropar `Dispose` med `disposing` inställd på `false`.       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Security.Cryptography.KeyedHashAlgorithm>referenser.</xref:System.Security.Cryptography.KeyedHashAlgorithm> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  id: Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hämtar eller anger nyckeln som ska användas i hash-algoritmen."
  remarks: "Den här egenskapen är offentliga accessor för den <xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue>fält.</xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue>"
  example:
  - "The following code example demonstrates how to override the Key property to retrieve the key used in the current <xref:System.Security.Cryptography.KeyedHashAlgorithm> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/csharp/p-system.security.crypto_121_1.cs)]\n [!code-vb[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/visualbasic/p-system.security.crypto_121_1.vb)]\n [!code-cpp[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/cpp/p-system.security.crypto_121_1.cpp)]"
  syntax:
    content: public virtual byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "Nyckeln för användning i hash-algoritmen."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Key*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ett försök gjordes att ändra egenskapen nyckeln efter hashing har startat."
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  id: KeyValue
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: KeyValue
  nameWithType: KeyedHashAlgorithm.KeyValue
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Nyckeln för användning i hash-algoritmen."
  remarks: "Det här fältet är tillgänglig via den <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A>egenskapen.</xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A>"
  syntax:
    content: protected byte[] KeyValue;
    return:
      type: System.Byte[]
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyedHashAlgorithm()
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create()
  nameWithType: KeyedHashAlgorithm.Create()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: KeyedHashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyValue
  nameWithType: KeyedHashAlgorithm.KeyValue
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create
  nameWithType: KeyedHashAlgorithm.Create
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: KeyedHashAlgorithm.Dispose
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
