### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.RsaSecurityKey
  id: RsaSecurityKey
  children:
  - System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)
  - System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  - System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey
  - System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.RsaSecurityKey.KeySize
  langs:
  - csharp
  name: RsaSecurityKey
  nameWithType: RsaSecurityKey
  fullName: System.IdentityModel.Tokens.RsaSecurityKey
  type: Class
  summary: "Representerar en säkerhetsnyckel som genereras med RSA-algoritm. Den här klassen kan inte ärvas."
  syntax:
    content: 'public sealed class RsaSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  - System.IdentityModel.Tokens.AsymmetricSecurityKey
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)
  id: '#ctor(System.Security.Cryptography.RSA)'
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: RsaSecurityKey(RSA)
  nameWithType: RsaSecurityKey.RsaSecurityKey(RSA)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.RsaSecurityKey(RSA)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Tokens.RsaSecurityKey&quot;> </xref> klassen med den angivna RSA-algoritmen."
  syntax:
    content: public RsaSecurityKey (System.Security.Cryptography.RSA rsa);
    parameters:
    - id: rsa
      type: System.Security.Cryptography.RSA
      description: "En <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> som representerar en RSA-algoritm."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rsa</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])
  id: DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: DecryptKey(String,Byte[])
  nameWithType: RsaSecurityKey.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Dekrypterar den angivna krypterade nyckeln."
  syntax:
    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den kryptografiska algoritm som används för att kryptera nyckeln. Algoritmer som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap&quot;> </xref> och <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap&quot;> </xref>."
    - id: keyData
      type: System.Byte[]
      description: "En matris med <xref:System.Byte>som innehåller den krypterade nyckeln.</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "En matris med <xref:System.Byte>som innehåller den krypterade nyckeln.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>algorithm</code>stöds inte. Algoritmer som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap&quot;> </xref> och <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])
  id: EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: EncryptKey(String,Byte[])
  nameWithType: RsaSecurityKey.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Krypterar den angivna nyckeln med hjälp av den angivna algoritmen."
  syntax:
    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den kryptografiska algoritmen för att kryptera nyckeln med."
    - id: keyData
      type: System.Byte[]
      description: "En matris med <xref:System.Byte>som innehåller nyckeln.</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "En matris med <xref:System.Byte>som innehåller den krypterade nyckeln.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>algorithm</code>stöds inte. Algoritmer som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap&quot;> </xref> och <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  id: GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar den angivna asymmetrisk krypteringsalgoritm."
  syntax:
    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool requiresPrivateKey);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den asymmetriska algoritmen för att skapa."
    - id: requiresPrivateKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När en privat nyckel krävs för att skapa en algoritm; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> som representerar den angivna asymmetrisk krypteringsalgoritm."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>requiresPrivateKey </code>är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> och en privat nyckel är inte tillgänglig."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)
  id: GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: GetHashAlgorithmForSignature(String)
  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar en kryptografisk algoritm som genererar ett hash-värde för en digital signatur."
  syntax:
    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Hash-algoritmen. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "En <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> som generar hashvärden för digitala signaturer."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>algorithm </code>stöds inte. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)
  id: GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: GetSignatureDeformatter(String)
  nameWithType: RsaSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar inaktiveringen formaterare algoritmen för digital signatur."
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Avinstallation formaterare algoritmen för digital signatur för att hämta en instans av. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: "En <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref> som representerar inaktiveringen formaterare algoritmen för digital signatur."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>algorithm </code>stöds inte. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)
  id: GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: GetSignatureFormatter(String)
  nameWithType: RsaSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar formaterare algoritmen för digital signatur."
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Formateraren algoritmen för digital signatur för att hämta en instans av. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: "En <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref> som representerar formaterare algoritmen för digital signatur."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>algorithm </code>stöds inte. Algoritmen som stöds är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey
  id: HasPrivateKey
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: HasPrivateKey()
  nameWithType: RsaSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar ett värde som anger om den privata nyckeln är tillgänglig."
  syntax:
    content: public override bool HasPrivateKey ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När den privata nyckeln är tillgänglig. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)
  id: IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: IsAsymmetricAlgorithm(String)
  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar ett värde som anger om den angivna algoritmen använder asymmetriska nycklar."
  syntax:
    content: public override bool IsAsymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den kryptografiska algoritmen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När den angivna algoritmen använder asymmetriska nycklar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)
  id: IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: IsSupportedAlgorithm(String)
  nameWithType: RsaSecurityKey.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar ett värde som anger om den angivna algoritmen stöds av den här klassen."
  syntax:
    content: public override bool IsSupportedAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den kryptografiska algoritmen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När den angivna algoritmen är <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap&quot;> </xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap&quot;> </xref>, eller <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)
  id: IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: IsSymmetricAlgorithm(String)
  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar ett värde som anger om den angivna algoritmen använder symmetriska nycklar."
  syntax:
    content: public override bool IsSymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Den kryptografiska algoritmen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>När den angivna algoritmen använder symmetriska nycklar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize
  id: KeySize
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  langs:
  - csharp
  name: KeySize
  nameWithType: RsaSecurityKey.KeySize
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Hämtar storlek i bitar i nyckeln."
  remarks: "Den <xref:System.Security.Cryptography.RSACryptoServiceProvider>stöder nyckellängder från 384 bitar till 16384 bitar i steg om 8 bitar om du har Microsoft Enhanced kryptografiprovidern installerad.</xref:System.Security.Cryptography.RSACryptoServiceProvider> Det stöder nyckellängder från 384 bitar till 512 bitar i steg om 8 bitar om du har den Microsoft grundläggande kryptografiprovider installerad."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "Storlek i bitar i nyckeln."
  overload: System.IdentityModel.Tokens.RsaSecurityKey.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: System.IdentityModel.Tokens.AsymmetricSecurityKey
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: RsaSecurityKey(RSA)
  nameWithType: RsaSecurityKey.RsaSecurityKey(RSA)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.RsaSecurityKey(RSA)
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: DecryptKey(String,Byte[])
  nameWithType: RsaSecurityKey.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: EncryptKey(String,Byte[])
  nameWithType: RsaSecurityKey.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(String,Byte[])
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature(String)
  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(String)
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetSignatureDeformatter(String)
  nameWithType: RsaSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetSignatureFormatter(String)
  nameWithType: RsaSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: HasPrivateKey()
  nameWithType: RsaSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey()
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm(String)
  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm(String)
  nameWithType: RsaSecurityKey.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(String)
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm(String)
  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: RsaSecurityKey.KeySize
  fullName: System.IdentityModel.Tokens.RsaSecurityKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.RsaSecurityKey.#ctor*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: RsaSecurityKey
  nameWithType: RsaSecurityKey.RsaSecurityKey
- uid: System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: DecryptKey
  nameWithType: RsaSecurityKey.DecryptKey
- uid: System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: EncryptKey
  nameWithType: RsaSecurityKey.EncryptKey
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm
  nameWithType: RsaSecurityKey.GetAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature
  nameWithType: RsaSecurityKey.GetHashAlgorithmForSignature
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetSignatureDeformatter
  nameWithType: RsaSecurityKey.GetSignatureDeformatter
- uid: System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: GetSignatureFormatter
  nameWithType: RsaSecurityKey.GetSignatureFormatter
- uid: System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: HasPrivateKey
  nameWithType: RsaSecurityKey.HasPrivateKey
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm
  nameWithType: RsaSecurityKey.IsAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm
  nameWithType: RsaSecurityKey.IsSupportedAlgorithm
- uid: System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm
  nameWithType: RsaSecurityKey.IsSymmetricAlgorithm
- uid: System.IdentityModel.Tokens.RsaSecurityKey.KeySize*
  parent: System.IdentityModel.Tokens.RsaSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: RsaSecurityKey.KeySize
