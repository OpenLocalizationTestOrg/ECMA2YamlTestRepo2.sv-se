### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "Representerar den metod som hanterar den <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> routade händelse."
  remarks: "Hanterar händelsen görs vanligtvis bara i element som stöder en rullningsbara region eller annars avsiktligt ange sina återgivning storlek mindre än den önskade kombinerade storleken av deras underordnade elementinnehåll och utförs endast genom att hantera avsiktligt händelsen när den har dirigeras uppåt i trädet element och har nått den första överordnade som har stöd för rullande region. En befintlig implementering som hanterar rullningsbara på ett sätt som är vanligtvis önskvärt för användarkontroller är <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> Om du härledd från <xref:System.Windows.Controls.ScrollViewer>, kan du registrera en klass hanterare för <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>och komplettera basklass hanteringen av händelsen.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> Du bör överväga att använda eller klass-hantering klassen definierats <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>händelsen i stället för <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer.ScrollChanged> Alternativt, om du skapar en helt anpassad klass som inte härleds från <xref:System.Windows.Controls.ScrollViewer>, du kan fortfarande lägga till klassen som hanterar genom att anropa <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>i klassen-instansiering.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  Mer information om hantering av klassen finns [märkning dirigerade händelser som hanterade och hantering av klassen](~/add/includes/ajax-current-ext-md.md).       Innehållselement kan orsaka att händelsen aktiveras av deras innehåll värdar (via anropar <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>och höja <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>från innehållsvärden).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> På liknande sätt kan du begära logiska trädet element som ska anslutas till vyn med hjälpmetoden <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       En <xref:System.Windows.Controls.ListBox>implementerar en relaterad men olika metod <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
