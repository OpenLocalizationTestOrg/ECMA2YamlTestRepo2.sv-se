### YamlMime:ManagedReference
items:
- uid: System.ApplicationId
  id: ApplicationId
  children:
  - System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  - System.ApplicationId.Copy
  - System.ApplicationId.Culture
  - System.ApplicationId.Equals(System.Object)
  - System.ApplicationId.GetHashCode
  - System.ApplicationId.Name
  - System.ApplicationId.ProcessorArchitecture
  - System.ApplicationId.PublicKeyToken
  - System.ApplicationId.ToString
  - System.ApplicationId.Version
  langs:
  - csharp
  name: ApplicationId
  nameWithType: ApplicationId
  fullName: System.ApplicationId
  type: Class
  summary: "Innehåller information som används för att unikt identifiera ett manifest-baserade program. Den här klassen kan inte ärvas."
  remarks: "En Programidentitet består av utgivarens offentliga nyckeln, namnet på programmet, processorarkitektur mål, kulturen för programmet och programversionen. Egenskaper för programmet identitetsvärden motsvarar informationen i programmanifestet. Mer information om programmanifestet finns [Application Manifest för ClickOnce](~/add/includes/ajax-current-ext-md.md).       ApplicationId används av den <xref:System.Security.Policy.ApplicationSecurityInfo>klassen för att identifiera ett program med manifestet.</xref:System.Security.Policy.ApplicationSecurityInfo>"
  example:
  - "The following code example displays the ApplicationId properties by obtaining the ApplicationId from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  \n  \n [!code-vb[System.ApplicationIdentity#1](~/add/codesnippet/visualbasic/t-system.applicationid_1.vb)]\n [!code-cs[System.ApplicationIdentity#1](~/add/codesnippet/csharp/t-system.applicationid_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationId
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  id: '#ctor(System.Byte[],System.String,System.Version,System.String,System.String)'
  parent: System.ApplicationId
  langs:
  - csharp
  name: ApplicationId(Byte[],String,Version,String,String)
  nameWithType: ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  fullName: System.ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.ApplicationId&quot;> </xref> klass."
  remarks: "Konstruktorn initierar den <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, och <xref:System.ApplicationId.Version%2A>Egenskaper i <xref:System.ApplicationId>.</xref:System.ApplicationId> </xref:System.ApplicationId.Version%2A> </xref:System.ApplicationId.PublicKeyToken%2A> </xref:System.ApplicationId.ProcessorArchitecture%2A> </xref:System.ApplicationId.Name%2A> </xref:System.ApplicationId.Culture%2A>"
  syntax:
    content: public ApplicationId (byte[] publicKeyToken, string name, Version version, string processorArchitecture, string culture);
    parameters:
    - id: publicKeyToken
      type: System.Byte[]
      description: "Matris med byte som motsvarar den offentliga nyckeln rådata."
    - id: name
      type: System.String
      description: "Namnet på programmet."
    - id: version
      type: System.Version
      description: "En <xref:System.Version>objekt som anger versionen av programmet.</xref:System.Version>"
    - id: processorArchitecture
      type: System.String
      description: "Processorarkitektur för programmet."
    - id: culture
      type: System.String
      description: "Kulturen för programmet."
  overload: System.ApplicationId.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>version </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>publicKeyToken </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name </code>är en tom sträng."
  platform:
  - net462
- uid: System.ApplicationId.Copy
  id: Copy
  parent: System.ApplicationId
  langs:
  - csharp
  name: Copy()
  nameWithType: ApplicationId.Copy()
  fullName: System.ApplicationId.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skapar och returnerar en identisk kopia av den aktuella identiteten för programmet."
  remarks: "Kopiera som returneras av den här metoden är lika med ursprungligt som genom den <xref:System.ApplicationId.Equals%2A>metoden.</xref:System.ApplicationId.Equals%2A> Hash-koderna för ursprungligt och kopiering är också lika."
  syntax:
    content: public ApplicationId Copy ();
    parameters: []
    return:
      type: System.ApplicationId
      description: "En <xref href=&quot;System.ApplicationId&quot;> </xref> objekt som representerar en exakt kopia av ursprungligt."
  overload: System.ApplicationId.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Culture
  id: Culture
  parent: System.ApplicationId
  langs:
  - csharp
  name: Culture
  nameWithType: ApplicationId.Culture
  fullName: System.ApplicationId.Culture
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar en sträng som representerar informationen kulturen för programmet."
  remarks: "Värdet för kultur kan innehålla språkinformation, till exempel &quot;sv-se&quot;.       Information om kultur-värden finns i <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  example:
  - "The following code example displays the Culture property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#8](~/add/codesnippet/visualbasic/p-system.applicationid.c_1.vb)]\n [!code-cs[System.ApplicationIdentity#8](~/add/codesnippet/csharp/p-system.applicationid.c_1.cs)]"
  syntax:
    content: public string Culture { get; }
    return:
      type: System.String
      description: "Kultur-information för programmet."
  overload: System.ApplicationId.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ApplicationId
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ApplicationId.Equals(Object)
  fullName: System.ApplicationId.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Anger om den angivna <xref href=&quot;System.ApplicationId&quot;> </xref> objekt motsvarar aktuellt <xref href=&quot;System.ApplicationId&quot;> </xref>."
  remarks: "Den här metoden åsidosätter den <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>metoden.</xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Den <xref href=&quot;System.ApplicationId&quot;> </xref> objekt för att jämföra till aktuellt <xref href=&quot;System.ApplicationId&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna <xref href=&quot;System.ApplicationId&quot;> </xref> objekt motsvarar aktuellt <xref href=&quot;System.ApplicationId&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ApplicationId.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.GetHashCode
  id: GetHashCode
  parent: System.ApplicationId
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ApplicationId.GetHashCode()
  fullName: System.ApplicationId.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar hash-koden för den aktuella identiteten för programmet."
  remarks: "Den här metoden genererar samma hash-kod för två objekt som har samma värden för sina <xref:System.ApplicationId.Name%2A>och <xref:System.ApplicationId.Version%2A>Egenskaper.</xref:System.ApplicationId.Version%2A> </xref:System.ApplicationId.Name%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden för den aktuella identiteten för programmet."
  overload: System.ApplicationId.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Name
  id: Name
  parent: System.ApplicationId
  langs:
  - csharp
  name: Name
  nameWithType: ApplicationId.Name
  fullName: System.ApplicationId.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar namnet på programmet."
  remarks: "Namnet är enkla, okrypterat namnet på programmet."
  example:
  - "The following code example displays the Name property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#7](~/add/codesnippet/visualbasic/p-system.applicationid.n_1.vb)]\n [!code-cs[System.ApplicationIdentity#7](~/add/codesnippet/csharp/p-system.applicationid.n_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Namnet på programmet."
  overload: System.ApplicationId.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.ProcessorArchitecture
  id: ProcessorArchitecture
  parent: System.ApplicationId
  langs:
  - csharp
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
  fullName: System.ApplicationId.ProcessorArchitecture
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar processorarkitektur mål för programmet."
  remarks: "Giltiga värden är &quot;msil&quot;, &quot;x86&quot;, &quot;ia64&quot; och &quot;amd64&quot;. Standardvärdet är &quot;msil&quot; eller Microsoft mellanliggande språk, vilket innebär att alla sammansättningar är plattformsoberoende, CLR kommer sammanställa dem när de behövs av programmet."
  example:
  - "The following code example displays the ProcessorArchitecture property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#9](~/add/codesnippet/visualbasic/p-system.applicationid.p_0_1.vb)]\n [!code-cs[System.ApplicationIdentity#9](~/add/codesnippet/csharp/p-system.applicationid.p_0_1.cs)]"
  syntax:
    content: public string ProcessorArchitecture { get; }
    return:
      type: System.String
      description: "Processorarkitektur för programmet."
  overload: System.ApplicationId.ProcessorArchitecture*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.PublicKeyToken
  id: PublicKeyToken
  parent: System.ApplicationId
  langs:
  - csharp
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
  fullName: System.ApplicationId.PublicKeyToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar den offentliga nyckeln token för programmet."
  remarks: "Token för offentlig nyckel och en representeras av SHA-1-hash för den offentliga nyckeln som programmet är signerad sista 8 byte.       Mer information finns i <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>.</xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>"
  example:
  - "The following code example displays the PublicKeyToken property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#11](~/add/codesnippet/visualbasic/p-system.applicationid.p_1_1.vb)]\n [!code-cs[System.ApplicationIdentity#11](~/add/codesnippet/csharp/p-system.applicationid.p_1_1.cs)]"
  syntax:
    content: public byte[] PublicKeyToken { get; }
    return:
      type: System.Byte[]
      description: "En bytematris som innehåller token för offentlig nyckel för programmet."
  overload: System.ApplicationId.PublicKeyToken*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.ToString
  id: ToString
  parent: System.ApplicationId
  langs:
  - csharp
  name: ToString()
  nameWithType: ApplicationId.ToString()
  fullName: System.ApplicationId.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Skapar och returnerar en strängrepresentation av programidentiteten."
  remarks: "Den här metoden åsidosätter den <xref:System.Object.ToString%2A?displayProperty=fullName>metoden.</xref:System.Object.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strängrepresentation av programidentiteten."
  overload: System.ApplicationId.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Version
  id: Version
  parent: System.ApplicationId
  langs:
  - csharp
  name: Version
  nameWithType: ApplicationId.Version
  fullName: System.ApplicationId.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar versionen av programmet."
  remarks: "Mer information finns i <xref:System.Version?displayProperty=fullName>.</xref:System.Version?displayProperty=fullName>"
  example:
  - "The following code example displays the Version property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#10](~/add/codesnippet/visualbasic/p-system.applicationid.v_1.vb)]\n [!code-cs[System.ApplicationIdentity#10](~/add/codesnippet/csharp/p-system.applicationid.v_1.cs)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "En <xref:System.Version>som anger versionen av programmet.</xref:System.Version>"
  overload: System.ApplicationId.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  parent: System.ApplicationId
  isExternal: false
  name: ApplicationId(Byte[],String,Version,String,String)
  nameWithType: ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  fullName: System.ApplicationId.ApplicationId(Byte[],String,Version,String,String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.ApplicationId.Copy
  parent: System.ApplicationId
  isExternal: false
  name: Copy()
  nameWithType: ApplicationId.Copy()
  fullName: System.ApplicationId.Copy()
- uid: System.ApplicationId
  parent: System
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationId
  fullName: System.ApplicationId
- uid: System.ApplicationId.Culture
  parent: System.ApplicationId
  isExternal: false
  name: Culture
  nameWithType: ApplicationId.Culture
  fullName: System.ApplicationId.Culture
- uid: System.ApplicationId.Equals(System.Object)
  parent: System.ApplicationId
  isExternal: false
  name: Equals(Object)
  nameWithType: ApplicationId.Equals(Object)
  fullName: System.ApplicationId.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ApplicationId.GetHashCode
  parent: System.ApplicationId
  isExternal: false
  name: GetHashCode()
  nameWithType: ApplicationId.GetHashCode()
  fullName: System.ApplicationId.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ApplicationId.Name
  parent: System.ApplicationId
  isExternal: false
  name: Name
  nameWithType: ApplicationId.Name
  fullName: System.ApplicationId.Name
- uid: System.ApplicationId.ProcessorArchitecture
  parent: System.ApplicationId
  isExternal: false
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
  fullName: System.ApplicationId.ProcessorArchitecture
- uid: System.ApplicationId.PublicKeyToken
  parent: System.ApplicationId
  isExternal: false
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
  fullName: System.ApplicationId.PublicKeyToken
- uid: System.ApplicationId.ToString
  parent: System.ApplicationId
  isExternal: false
  name: ToString()
  nameWithType: ApplicationId.ToString()
  fullName: System.ApplicationId.ToString()
- uid: System.ApplicationId.Version
  parent: System.ApplicationId
  isExternal: false
  name: Version
  nameWithType: ApplicationId.Version
  fullName: System.ApplicationId.Version
- uid: System.ApplicationId.#ctor*
  parent: System.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationId.ApplicationId
- uid: System.ApplicationId.Copy*
  parent: System.ApplicationId
  isExternal: false
  name: Copy
  nameWithType: ApplicationId.Copy
- uid: System.ApplicationId.Culture*
  parent: System.ApplicationId
  isExternal: false
  name: Culture
  nameWithType: ApplicationId.Culture
- uid: System.ApplicationId.Equals*
  parent: System.ApplicationId
  isExternal: false
  name: Equals
  nameWithType: ApplicationId.Equals
- uid: System.ApplicationId.GetHashCode*
  parent: System.ApplicationId
  isExternal: false
  name: GetHashCode
  nameWithType: ApplicationId.GetHashCode
- uid: System.ApplicationId.Name*
  parent: System.ApplicationId
  isExternal: false
  name: Name
  nameWithType: ApplicationId.Name
- uid: System.ApplicationId.ProcessorArchitecture*
  parent: System.ApplicationId
  isExternal: false
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
- uid: System.ApplicationId.PublicKeyToken*
  parent: System.ApplicationId
  isExternal: false
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
- uid: System.ApplicationId.ToString*
  parent: System.ApplicationId
  isExternal: false
  name: ToString
  nameWithType: ApplicationId.ToString
- uid: System.ApplicationId.Version*
  parent: System.ApplicationId
  isExternal: false
  name: Version
  nameWithType: ApplicationId.Version
