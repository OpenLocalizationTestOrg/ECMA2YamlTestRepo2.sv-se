### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerPrefixCollection
  id: HttpListenerPrefixCollection
  children:
  - System.Net.HttpListenerPrefixCollection.Add(System.String)
  - System.Net.HttpListenerPrefixCollection.Clear
  - System.Net.HttpListenerPrefixCollection.Contains(System.String)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  - System.Net.HttpListenerPrefixCollection.Count
  - System.Net.HttpListenerPrefixCollection.GetEnumerator
  - System.Net.HttpListenerPrefixCollection.IsReadOnly
  - System.Net.HttpListenerPrefixCollection.IsSynchronized
  - System.Net.HttpListenerPrefixCollection.Remove(System.String)
  - System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: HttpListenerPrefixCollection
  nameWithType: HttpListenerPrefixCollection
  fullName: System.Net.HttpListenerPrefixCollection
  type: Class
  summary: "Representerar den samling som används för att lagra identifierare URI (Uniform Resource)-prefix för <xref href=&quot;System.Net.HttpListener&quot;> </xref> objekt."
  remarks: "Den <xref:System.Net.HttpListener.Prefixes%2A>-egenskap returnerar instanser av den här samlingen.</xref:System.Net.HttpListener.Prefixes%2A>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its HttpListenerPrefixCollection.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_1_1.cs)]"
  syntax:
    content: 'public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection<string>, System.Collections.Generic.IEnumerable<string>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.String>
  - System.Collections.Generic.IEnumerable<System.String>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Lägger till ett prefix för identifierare URI (Uniform Resource) i samlingen."
  remarks: "Den här metoden lägger till ett URI-prefix till uppsättningen prefix som hanteras av den associerade <xref:System.Net.HttpListener>objektet.</xref:System.Net.HttpListener> När du kontrollerar `uriPrefix` för att säkerställa att det är giltigt, fallet ignoreras.       En URI-prefix-strängen består av ett schema (http eller https), en värd, en valfri port och en valfri sökväg, till exempel &quot;`http://www.contoso.com:8080/customerData``/`&quot;. Prefixet måste avslutas med ett snedstreck (&quot;/&quot;). Den <xref:System.Net.HttpListener>svarar på begäran med prefixet som närmast matchar en begärd URI.</xref:System.Net.HttpListener> Flera <xref:System.Net.HttpListener>objekt kan inte lägga till samma prefix.</xref:System.Net.HttpListener> En <xref:System.Net.HttpListenerException>undantag genereras om ett <xref:System.Net.HttpListener>lägger till ett prefix som redan använder.</xref:System.Net.HttpListener> </xref:System.Net.HttpListenerException>       Om du har angett en port värdelementet kan ersättas med &quot;`*`&quot; som indikerar att den <xref:System.Net.HttpListener>accepterar begäranden som skickas till porten om begärd URI inte matchar andra prefix.</xref:System.Net.HttpListener> Till exempel att ta emot alla begäranden som skickas till port 8080 när Begärd URI inte hanteras av någon annan <xref:System.Net.HttpListener>, prefixet &quot;`http://*:8080``/`&quot;.</xref:System.Net.HttpListener> På samma sätt att ange att den <xref:System.Net.HttpListener>accepterar alla förfrågningar som skickas till en port ersätta värdelementet med den &quot;`+`&quot;tecken&quot;`https://+:8080`/&quot;.</xref:System.Net.HttpListener> Den &quot;`*`&quot;och&quot;`+`&quot; tecken kan ingå i prefix som innehåller sökvägar.       Från och med .NET 4.5.3 och Windows 10, jokertecken underdomäner stöds i URI-prefix som hanteras av en <xref:System.Net.HttpListener>objektet.</xref:System.Net.HttpListener> Om du vill ange en underdomän jokertecken, Använd den &quot;*&quot; tecknet som en del av värdnamn i ett URI-prefix: till exempel `http://*.foo.com/`, och skicka detta som argument till metoden HttpListenerPrefixCollection.Add. Detta fungerar på .NET 4.5.3 och Windows 10. i tidigare versioner detta skulle Generera en<xref:System.Net.HttpListenerException></xref:System.Net.HttpListenerException>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/m-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public void Add (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "En <xref:System.String>som identifierar den URI-information som jämförs i inkommande begäranden.</xref:System.String> Prefixet måste avslutas med ett snedstreck (&quot;/&quot;)."
  overload: System.Net.HttpListenerPrefixCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uriPrefix</code>använder inte schemat http:// eller https://. Dessa är de enda scheman som stöds för <xref href=&quot;System.Net.HttpListener&quot;> </xref> objekt.       - eller - <code>uriPrefix</code> är inte en korrekt formaterad URI-prefix. Kontrollera att strängen avslutas med en &quot;/&quot;."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Net.HttpListener&quot;> </xref> som är associerade med den här samlingen är stängd."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Det gick inte att anropa en Windows-funktionen. Kontrollera undantaget <xref:System.Net.HttpListenerException.ErrorCode*>egenskapen fastställa orsaken till undantaget.</xref:System.Net.HttpListenerException.ErrorCode*> Detta undantag genereras om en annan <xref href=&quot;System.Net.HttpListener&quot;> </xref> redan har lagts till för prefixet <code> uriPrefix </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Clear
  id: Clear
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Tar bort alla prefix för identifierare URI (Uniform Resource) från samlingen."
  remarks: "Efter den här metoden anropas, och du kan inte starta den associerade <xref:System.Net.HttpListener>utan att lägga till nya prefixen; om du försöker göra det, genereras ett undantag.</xref:System.Net.HttpListener>"
  example:
  - "The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#6](~/add/codesnippet/csharp/m-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.HttpListenerPrefixCollection.Clear*
  exceptions:
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Det gick inte att anropa en Windows-funktionen. Kontrollera undantaget <xref:System.Net.HttpListenerException.ErrorCode*>egenskapen fastställa orsaken till undantaget.</xref:System.Net.HttpListenerException.ErrorCode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Net.HttpListener&quot;> </xref> som är associerade med den här samlingen är stängd."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerar en <xref:System.Boolean>-värde som anger om det angivna prefixet finns i samlingen.</xref:System.Boolean>"
  remarks: "Det angivna prefixet måste exakt matcha ett befintligt värde."
  example:
  - "The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.  \n  \n [!code-cs[Net_Listener_Basic#4](~/add/codesnippet/csharp/m-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public bool Contains (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "Ett <xref:System.String>värde som innehåller prefixet identifierare URI (Uniform Resource) ska testas.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här samlingen innehåller prefixet som anges av <code> uriPrefix </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopierar innehållet på en <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> till den angivna matrisen."
  remarks: "Matrisen måste kunna innehålla strängar och kan inte flerdimensionella."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int offset);
    parameters:
    - id: array
      type: System.Array
      description: "En endimensionell <xref:System.Array>som tar emot identifierare URI (Uniform Resource) prefixsträngar i den här samlingen.</xref:System.Array>"
    - id: offset
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>har fler än en dimension."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den här samlingen innehåller fler element än vad som kan lagras i <code> array </code> från <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Net.HttpListener&quot;> </xref> som är associerade med den här samlingen är stängd."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>array</code>Det går inte att lagra strängvärden."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopierar innehållet på en <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> till den angivna Strängmatrisen."
  remarks: "Matrisen måste kunna innehålla strängar och kan inte flerdimensionella."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public void CopyTo (string[] array, int offset);
    parameters:
    - id: array
      type: System.String[]
      description: "En flerdimensionell Strängmatrisen som tar emot identifierare URI (Uniform Resource) prefixsträngar i den här samlingen."
    - id: offset
      type: System.Int32
      description: "Det nollbaserade indexet i `array` vilka kopiera börjar."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>har fler än en dimension."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den här samlingen innehåller fler element än vad som kan lagras i <code> array </code> från <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Net.HttpListener&quot;> </xref> som är associerade med den här samlingen är stängd."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Count
  id: Count
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hämtar antalet prefix som finns i samlingen."
  remarks: ''
  example:
  - "The following code example displays the prefixes in a collection.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/p-system.net.httplistene_43_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller antalet prefix i den här samlingen.</xref:System.Int32>"
  overload: System.Net.HttpListenerPrefixCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerar ett objekt som kan användas för att gå igenom samlingen."
  remarks: "Det objekt som returneras av den här metoden placeras resultatuppsättningsmarkör först före det första elementet i den här samlingen. Du måste anropa den <xref:System.Collections.IEnumerator.MoveNext%2A>metoden innan du kan komma åt det första elementet.</xref:System.Collections.IEnumerator.MoveNext%2A> Om du vill få åtkomst till elementet i den aktuella positionen måste anropa den <xref:System.Collections.IEnumerator.Current%2A>egenskapen.</xref:System.Collections.IEnumerator.Current%2A>       Ändra inte samlingen när du använder uppräknaren. Om samlingen ändras medan en uppräknare Använd ett försök att ange placering genom att anropa <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>orsakar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       En detaljerad beskrivning av uppräknare finns i dokumentationen för den <xref:System.Collections.IEnumerator>klass och <xref:System.Collections.IEnumerable.GetEnumerator%2A>metod.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates enumerating through a collection. Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/m-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<string> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: "Ett objekt som implementerar det <xref:System.Collections.IEnumerator>gränssnitt och ger åtkomst till strängar i den här samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hämtar ett värde som anger om åtkomst till samlingen är skrivskyddad."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Hämtar ett värde som anger om åtkomst till samlingen synkroniseras (trådsäkra)."
  remarks: "Uppräkning av en samling är är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår vid ändringar som gjorts av andra trådar."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Den här egenskapen returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Tar bort den angivna identifieraren URI (Uniform Resource) från listan över prefix som hanteras av den <xref href=&quot;System.Net.HttpListener&quot;> </xref> objekt."
  remarks: "Om `uriPrefix` är inte i samlingen, den här metoden händer ingenting."
  syntax:
    content: public bool Remove (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "En <xref:System.String>som innehåller URI-prefix för att ta bort.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <code> uriPrefix </code> hittades i den <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> och borttagna, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Det gick inte att anropa en Windows-funktionen. Kontrollera den undantagsfelkod för att fastställa orsaken till undantaget."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Net.HttpListener&quot;> </xref> som är associerade med den här samlingen är stängd."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Returnerar ett objekt som kan användas för att gå igenom samlingen."
  remarks: "Det objekt som returneras av den här metoden placeras resultatuppsättningsmarkör först före det första elementet i den här samlingen. Du måste anropa den <xref:System.Collections.IEnumerator.MoveNext%2A>metoden innan du kan komma åt det första elementet.</xref:System.Collections.IEnumerator.MoveNext%2A> Om du vill få åtkomst till elementet i den aktuella positionen måste anropa den <xref:System.Collections.IEnumerator.Current%2A>egenskapen.</xref:System.Collections.IEnumerator.Current%2A>       Ändra inte samlingen när du använder uppräknaren. Om samlingen ändras medan en uppräknare Använd ett försök att ange placering genom att anropa <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>orsakar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       En detaljerad beskrivning av uppräknare finns i dokumentationen för den <xref:System.Collections.IEnumerator>klass och <xref:System.Collections.IEnumerable.GetEnumerator%2A>metod.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Ett objekt som implementerar det <xref:System.Collections.IEnumerator>gränssnitt och ger åtkomst till strängar i den här samlingen.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.HttpListenerException
  parent: System.Net
  isExternal: false
  name: HttpListenerException
  nameWithType: HttpListenerException
  fullName: System.Net.HttpListenerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerPrefixCollection.Clear
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerPrefixCollection.Count
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.HttpListenerPrefixCollection.Add*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add
  nameWithType: HttpListenerPrefixCollection.Add
- uid: System.Net.HttpListenerPrefixCollection.Clear*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear
  nameWithType: HttpListenerPrefixCollection.Clear
- uid: System.Net.HttpListenerPrefixCollection.Contains*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains
  nameWithType: HttpListenerPrefixCollection.Contains
- uid: System.Net.HttpListenerPrefixCollection.CopyTo*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpListenerPrefixCollection.CopyTo
- uid: System.Net.HttpListenerPrefixCollection.Count*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpListenerPrefixCollection.GetEnumerator
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove
  nameWithType: HttpListenerPrefixCollection.Remove
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
