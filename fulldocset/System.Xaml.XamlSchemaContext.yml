### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlSchemaContext
  id: XamlSchemaContext
  children:
  - System.Xaml.XamlSchemaContext.#ctor
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.Finalize
  - System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  - System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  - System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  - System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  - System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  - System.Xaml.XamlSchemaContext.ReferenceAssemblies
  - System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  - System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  langs:
  - csharp
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
  type: Class
  summary: "Definierar en återanvändbara kontext för tolkning eller XAML-typer och typer i sammansättningar som ligger bakom dem."
  remarks: "En XAML-schemat kontext tillhandahåller ett Abstraktionslager mellan ett schema eller ordförråd för XAML och en specifik parsern implementering. Schemat kan användas med olika XAML-Parser genom att infoga konceptet för en kontext som schemat och schema-kontexten fyller i informationen som behövs för att interagera med en specifik XAML-parser. Kontexten XAML-schemat innehåller till exempel fråga API: er som relaterar till XAML koncept eller CLR-bindning till XAML-typsystemet. XAML-schemat kontexten ansvarar också för att underhålla listan över sammansättningar inlästa sammansättningar som definierar där en XAML-parser söker efter säkerhetskopiering typer."
  syntax:
    content: public class XamlSchemaContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext()
  nameWithType: XamlSchemaContext.XamlSchemaContext()
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> klass."
  syntax:
    content: public XamlSchemaContext ();
    parameters: []
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(IEnumerable<Assembly>)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> klassen, baserat på en uppsättning referenssammansättningar."
  syntax:
    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies);
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "En enumerable uppsättning sammansättningen information objekt. Varje sammansättningsobjektet information anges av ett <xref:System.Reflection.Assembly>värde.</xref:System.Reflection.Assembly>"
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> -klassen, baserat på ett inställningsobjekt."
  remarks: "Inställningsobjektet lagrar information om textkonverteraren och markup tillägget felsökningsspecifikationer schema-kontexten. Mer information finns i <xref:System.Xaml.XamlSchemaContextSettings>.</xref:System.Xaml.XamlSchemaContextSettings>"
  syntax:
    content: public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);
    parameters:
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
      description: "För inställningsobjektet som ska användas för att konstruera den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>."
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> klassen, baserat på en uppsättning referenssammansättningar och ett inställningsobjekt."
  syntax:
    content: public XamlSchemaContext (System.Collections.Generic.IEnumerable<System.Reflection.Assembly> referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "En enumerable uppsättning sammansättningsinformation. Varje sammansättningsobjektet information anges av ett <xref:System.Reflection.Assembly>värde.</xref:System.Reflection.Assembly>"
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
      description: "För inställningsobjektet som ska användas för att konstruera den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>."
  overload: System.Xaml.XamlSchemaContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.Finalize
  id: Finalize
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: XamlSchemaContext.Finalize()
  fullName: System.Xaml.XamlSchemaContext.Finalize()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Innehåller en icke-standard <xref uid=&quot;langword_csharp_Finalize&quot; name=&quot;Finalize&quot; href=&quot;&quot;> </xref> -implementering som inte anropar <xref uid=&quot;langword_csharp_Dispose&quot; name=&quot;Dispose&quot; href=&quot;&quot;> </xref>."
  remarks: "XAML-schemat kontexter ska inte tas bort av automatisk skräpinsamling eller av manuella åtgärder. Även om XAML-schemat kontexter har inga ohanterade resurser <xref:System.Windows.Markup.XamlDeferLoadAttribute>Egenskaper kan fortfarande är aktiv och avyttring en kontext för XAML-schemat kan störa relaterade skjuta upp belastning.</xref:System.Windows.Markup.XamlDeferLoadAttribute>       <xref:System.AppDomain.AssemblyLoad>händelsehanterare som är ansluten internt som svaga referenser rensas av den här implementeringen.</xref:System.AppDomain.AssemblyLoad>"
  syntax:
    content: ~XamlSchemaContext ();
    parameters: []
  overload: System.Xaml.XamlSchemaContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  id: FullyQualifyAssemblyNamesInClrNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om en XAML-schemat och dess kontext använder fullständigt kvalificerat sammansättningsnamn i de värden som returneras av sökning API."
  remarks: "Den här egenskapen returnerar den <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>värde som har upprättats i inställningarna för den <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29>konstruktorn signatur.</xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> </xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName> Om andra signaturer användes för konstruktion eller om <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>inte specifikt har angetts till `true`, värdet för den här egenskapen är `false`.</xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName>       Värdet för den här egenskapen påverkar strängar som returneras av <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A> Om FullyQualifyAssemblyNamesInClrNamespaces `true`, assembly-delen av strängen rapporterar motsvarigheten till <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>.</xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>"
  syntax:
    content: public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en XAML-schemat och dess kontext använder fullständigt kvalificerat sammansättningsnamn i de värden som returneras av sökning API: er; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  id: GetAllXamlNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetAllXamlNamespaces()
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Söker sammansättningar som hålls av det här <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> och returnerar en uppsättning namnområden."
  remarks: "Den här metoden söker bara referenssammansättningar om de har passerat i konstruktion eller egenskapen inställningen. Om inga sammansättningar upprättas som referenssammansättningar logiken i den här metoden undersöker alla inlästa sammansättningar där detta <xref:System.Xaml.XamlSchemaContext>är aktiv.</xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<string> GetAllXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "En enumerable uppsättning namnområde identifierare. Dessa identifierare tillhandahålls som strängar."
  overload: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  id: GetAllXamlTypes(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetAllXamlTypes(String)
  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Söker sammansättningar som hålls av det här <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> och returnerar en uppsättning typer från det angivna XAML-namnområdet."
  syntax:
    content: public virtual System.Collections.Generic.ICollection<System.Xaml.XamlType> GetAllXamlTypes (string xamlNamespace);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML-namnområdet till returtyper för."
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlType}
      description: "En enumerable uppsättning XAML-typer. Varje XAML-typ i uppsättningen representeras av en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> objekt."
  overload: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  id: GetPreferredPrefix(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetPreferredPrefix(String)
  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en sträng som ska rapporteras som önskade prefix för konsumenterna kan använda när de mappa det angivna XAML-namnområdet."
  remarks: "Mest omedelbar konsumenten information är vanligtvis en XAML-skrivare. Andra indirekt användare inkluderar designverktyg.       Som en del i XAML-bindningen för common language runtime (CLR) kan du ange den här informationen genom att använda <xref:System.Windows.Markup.XmlnsPrefixAttribute>på nivån sammansättningen.</xref:System.Windows.Markup.XmlnsPrefixAttribute>"
  syntax:
    content: public virtual string GetPreferredPrefix (string xmlns);
    parameters:
    - id: xmlns
      type: System.String
      description: "XAML-namnområdet att hämta önskade prefix för."
    return:
      type: System.String
      description: "Använd en sträng som användare ska använda när de mappa det angivna XAML-namnområdet för markering."
  overload: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlns</code>är null."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  id: GetValueConverter``1(System.Type,System.Xaml.XamlType)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetValueConverter(Type,XamlType)
  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  syntax:
    content: 'protected System.Xaml.Schema.XamlValueConverter<TConverterBase> GetValueConverter<TConverterBase> (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;'
    parameters:
    - id: converterType
      type: System.Type
      description: "Som ska läggas till."
    - id: targetType
      type: System.Xaml.XamlType
      description: "Som ska läggas till."
    return:
      type: System.Xaml.Schema.XamlValueConverter`1
      description: "Som ska läggas till."
  overload: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  id: GetXamlDirective(System.String,System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlDirective(String,String)
  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> värde som representerar ett direktiv för XAML-språket eller för en viss implementering."
  remarks: "Åsidosätta den här metoden om du skapar en härledd klass från <xref:System.Xaml.XamlDirective>som en del av ett XAML typen system tillägget scenario.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML-namnområdet som innehåller namngivna direktivet."
    - id: name
      type: System.String
      description: "Namnet på direktivet att hämta."
    return:
      type: System.Xaml.XamlDirective
      description: "En <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> objekt som representerar det begärda direktivet."
  overload: System.Xaml.XamlSchemaContext.GetXamlDirective*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlNamespace</code>or <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  id: GetXamlType(System.Type)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(Type)
  nameWithType: XamlSchemaContext.GetXamlType(Type)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som baseras på en identifierare för CLR-typen."
  remarks: "Den här överlagring förutsätter att du använder CLR för säkerhetskopiering typsystemet. Om du inte använder typsystemet CLR, använder du <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>"
  syntax:
    content: public virtual System.Xaml.XamlType GetXamlType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typen för att hämta en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för."
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som matchar angivna indata <code> type </code>."
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  id: GetXamlType(System.Xaml.Schema.XamlTypeName)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(XamlTypeName)
  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som baseras på ett typnamn för XAML-system."
  syntax:
    content: public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);
    parameters:
    - id: xamlTypeName
      type: System.Xaml.Schema.XamlTypeName
      description: "XAML-typnamn för att hämta en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för."
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som matchar angivna indata <code> xamlTypeName </code>."
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>xamlTypeName</code> (<>*> or <>*>) is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlTypeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  id: GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: GetXamlType(String,String,XamlType[])
  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som baseras på en XAML-namnområdet och en sträng för typnamnet. Denna signatur kan ange Typargumenten i fall där den önskade typen är en generisk typ."
  syntax:
    content: protected virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, System.Xaml.XamlType[] typeArguments);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "XAML-namnområdet som innehåller den önskade typen."
    - id: name
      type: System.String
      description: "Namnet på den önskade typen sträng."
    - id: typeArguments
      type: System.Xaml.XamlType[]
      description: "Initieringen typargument för generisk typ."
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> som matchar villkor som indata."
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  id: OnAssemblyResolve(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: OnAssemblyResolve(String)
  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anropas när åtgärderna använder den här kontexten i schemat för att lösa en sammansättning som krävs för att lösa XAML-namnområden som den innehåller."
  remarks: "Den underliggande sammansättning upplösning teknik, vilket är ett internt API har inbyggda toleranser för annan sträng former av ett sammansättningsnamn som baseras på den <xref:System.Reflection.AssemblyName>konstruktionen beteende.</xref:System.Reflection.AssemblyName>       Syftet med detta API är att aktivera första möjlighet matchning mot kända uppsättningar av sammansättningar, t.ex. mot referenssammansättningar i stället för mot en globala sammansättningscachen. Om listan över referenssammansättningar fylls standardimplementering kan komma åt kända referenssammansättningar."
  syntax:
    content: protected virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Namnet på sammansättningen som ska läsas in. Se anmärkning."
    return:
      type: System.Reflection.Assembly
      description: "Löst sammansättningen."
  overload: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  id: ReferenceAssemblies
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en enumerable uppsättning referenssammansättningar i XAML schema-kontexten."
  syntax:
    content: public System.Collections.Generic.IList<System.Reflection.Assembly> ReferenceAssemblies { get; }
    return:
      type: System.Collections.Generic.IList{System.Reflection.Assembly}
      description: "En enumerable uppsättning referenssammansättningar i kontexten för schemat. Varje sammansättningsobjektet information anges av ett <xref:System.Reflection.Assembly>värde.</xref:System.Reflection.Assembly>"
  overload: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  id: SupportMarkupExtensionsWithDuplicateArity
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om en XAML-schemat och dess kontext har stöd för markeringstillägg som har två konstruktorer med samma aritet (antal indataparametrar)."
  remarks: "Den här egenskapen returnerar den <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>värde som har upprättats i inställningarna för den <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29>konstruktorn signatur.</xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> </xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName> Om andra signaturer används för konstruktion eller om <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>inte specifikt har angetts till `true`, värdet för den här egenskapen är `false`.</xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName>       Dubbla ariteten för markeringstillägg riktar specifikt sig inte i XAML-specifikationen [MS-XAML] avsnittet 6.6.7.2. Detta beror på att bilda XAML-objekt för attributsinformation för markeringstillägg är identiska oavsett dubbla aritet som kan finnas i markup tillägget implementeringen. Det faktiska anropet den markeringstilläggets och dess `ProvideValue` visar eventuella problem som är associerade med dubbla aritet. Beteende för att hantera dubblerade aritet är därför odefinierad och lämnas upp till varje implementerar XAML-schemat kontext och dess writer XAML-integrering. XAML-schemat standardkontexten som implementeras för .NET Framework-tjänster i XAML-åtgärder stöder inte dubbla aritet; olika .NET Framework XAML Services API: er genereras undantag vid bearbetning av markup tillägget användning med underliggande dubbla aritet.       Mer information om hur du definierar markeringstillägg finns [Markeringstillägg XAML översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool SupportMarkupExtensionsWithDuplicateArity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om schemat kontexten tillåter markeringstillägg som har dubbla aritet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  id: TryGetCompatibleXamlNamespace(System.String,System.String@)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  name: TryGetCompatibleXamlNamespace(String,String)
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar lyckats eller misslyckats i en begäran om en kompatibel XAML-namnområdet. En lyckad begäran rapporterar det XAML-namnområdet som en out-parameter."
  remarks: "Den här metoden använder internt, sökning följande ordning: 1.  En ordlista för internt implementerade kompatibilitet som har fyllts med en tidigare sökning.      2.  Den <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute>parametern utvärdering.</xref:System.Windows.Markup.XmlnsCompatibleWithAttribute>       Om ingen kompatibel namnområdet har identifierats och att den här metoden returnerar `false`, `compatibleNamespace` parametern utdata kan ha samma värde som den `xamlNamespace` indata."
  syntax:
    content: public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_xmlns&quot; name=&quot;xmlns&quot; href=&quot;&quot;> </xref> sträng för XAML-namnområdet som ska genomsökas efter ett kompatibelt resultat."
    - id: compatibleNamespace
      type: System.String
      description: "När den här metoden returnerar den <xref uid=&quot;langword_csharp_xmlns&quot; name=&quot;xmlns&quot; href=&quot;&quot;> </xref> sträng för en kompatibel XAML namnområde begäran. Detta kan vara identiskt med `xamlNamespace` om metoden returnerar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> compatibleNamespace </code> innehåller ett användbara resultat, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlSchemaContext.#ctor
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext()
  nameWithType: XamlSchemaContext.XamlSchemaContext()
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(IEnumerable<Assembly>)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
- uid: System.Xaml.XamlSchemaContextSettings
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContextSettings
  nameWithType: XamlSchemaContextSettings
  fullName: System.Xaml.XamlSchemaContextSettings
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>,XamlSchemaContextSettings)
- uid: System.Xaml.XamlSchemaContext.Finalize
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: Finalize()
  nameWithType: XamlSchemaContext.Finalize()
  fullName: System.Xaml.XamlSchemaContext.Finalize()
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlNamespaces()
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlTypes(String)
  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(String)
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlType>
  nameWithType: ICollection<XamlType>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetPreferredPrefix(String)
  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(String)
- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetValueConverter(Type,XamlType)
  nameWithType: XamlSchemaContext.GetValueConverter(Type,XamlType)
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter(Type,XamlType)
- uid: System.Xaml.Schema.XamlValueConverter`1
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlDirective(String,String)
  nameWithType: XamlSchemaContext.GetXamlDirective(String,String)
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(String,String)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(Type)
  nameWithType: XamlSchemaContext.GetXamlType(Type)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(Type)
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(XamlTypeName)
  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(XamlTypeName)
- uid: System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType(String,String,XamlType[])
  nameWithType: XamlSchemaContext.GetXamlType(String,String,XamlType[])
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(String,String,XamlType[])
- uid: System.Xaml.XamlType[]
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType[]
  spec.csharp:
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: OnAssemblyResolve(String)
  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
- uid: System.Collections.Generic.IList{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Assembly>
  nameWithType: IList<Assembly>
  fullName: System.Collections.Generic.IList<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: TryGetCompatibleXamlNamespace(String,String)
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(String,String)
- uid: System.Xaml.XamlSchemaContext.#ctor*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext.XamlSchemaContext
- uid: System.Xaml.XamlSchemaContext.Finalize*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: Finalize
  nameWithType: XamlSchemaContext.Finalize
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlNamespaces
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetAllXamlTypes
  nameWithType: XamlSchemaContext.GetAllXamlTypes
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetPreferredPrefix
  nameWithType: XamlSchemaContext.GetPreferredPrefix
- uid: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetValueConverter<TConverterBase>
  nameWithType: XamlSchemaContext.GetValueConverter<TConverterBase>
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlDirective
  nameWithType: XamlSchemaContext.GetXamlDirective
- uid: System.Xaml.XamlSchemaContext.GetXamlType*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: GetXamlType
  nameWithType: XamlSchemaContext.GetXamlType
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: OnAssemblyResolve
  nameWithType: XamlSchemaContext.OnAssemblyResolve
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  parent: System.Xaml.XamlSchemaContext
  isExternal: false
  name: TryGetCompatibleXamlNamespace
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace
