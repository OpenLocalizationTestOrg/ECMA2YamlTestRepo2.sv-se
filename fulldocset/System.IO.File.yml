### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "Innehåller statiska metoder för att skapa, kopiera, ta bort, flytta och öppning av en enskild fil, och hjälper till att skapa <xref href=&quot;System.IO.FileStream&quot;> </xref> objekt.       Om du vill bläddra .NET Framework källkoden för den här typen finns i [referenskälla](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lägger till rader till en fil och sedan stängs filen. Om den angivna filen inte finns, den här metoden skapar en fil, skriver de angivna raderna i filen och stänger sedan filen."
  remarks: "Metoden skapar filen om den inte finns, men inte skapa nya kataloger. Därför värdet för den `path` parameter måste innehålla befintliga kataloger."
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "Att lägga till rader till filen. Skapa filen om den inte redan finns."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Raderna som ska läggas till i filen."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en mer ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, katalogen finns inte eller är det på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges av <code> path </code> hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörighet att skriva till filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog."
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lägger till rader till en fil med hjälp av en angiven kodning och stänger sedan filen. Om den angivna filen inte finns, den här metoden skapar en fil, skriver de angivna raderna i filen och stänger sedan filen."
  remarks: "Metoden skapar filen om den inte finns, men inte skapa nya kataloger. Därför värdet för den `path` parameter måste innehålla befintliga kataloger.       Du kan använda den här metoden för att skapa en fil som innehåller följande:-resultatet av en [LINQ till objekt](~/add/includes/ajax-current-ext-md.md) fråga på raderna i en fil som hämtas med hjälp av den <xref:System.IO.File.ReadLines%2A>metoden.</xref:System.IO.File.ReadLines%2A>      -Innehållet i en samling som implementerar en <xref:System.Collections.Generic.IEnumerable%601>med strängar.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Att lägga till rader till filen. Skapa filen om den inte redan finns."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Raderna som ska läggas till i filen."
    - id: encoding
      type: System.Text.Encoding
      description: "Det tecken som kodning som ska användas."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en mer ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, katalogen finns inte eller är det på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges av <code> path </code> hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en fil, lägger till den angivna strängen till filen och stänger sedan filen. Om filen inte finns den här metoden skapar en fil, skriver den angivna strängen till filen och sedan stängs filen."
  remarks: "Den här metoden baserat på en sträng och en sökväg till filen, öppnar den angivna filen, lägger till strängen i slutet av filen och stänger sedan filen. Filreferensen är säkert att stänga av den här metoden även om undantag aktiveras.       Metoden skapar filen om den inte finns, men inte skapa nya kataloger. Därför värdet för den `path` parameter måste innehålla befintliga kataloger."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som ska läggas till den angivna strängen till."
    - id: contents
      type: System.String
      description: "Strängen som ska läggas till i filen."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, katalogen finns inte eller är det på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lägger till den angivna strängen till filen, att skapa filen om den inte redan finns."
  remarks: "Den här metoden baserat på en sträng och en sökväg till filen, öppnar den angivna filen, lägger till strängen i slutet av filen med den angivna kodningen och stänger sedan filen. Filreferensen är säkert att stänga av den här metoden även om undantag aktiveras.       Metoden skapar filen om den inte finns, men inte skapa nya kataloger. Därför värdet för den `path` parameter måste innehålla befintliga kataloger."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som ska läggas till den angivna strängen till."
    - id: contents
      type: System.String
      description: "Strängen som ska läggas till i filen."
    - id: encoding
      type: System.Text.Encoding
      description: "Det tecken som kodning som ska användas."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, katalogen finns inte eller är det på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en <xref:System.IO.StreamWriter>som lägger till UTF-8-kodat text till en befintlig fil eller till en ny fil om den angivna filen inte finns.</xref:System.IO.StreamWriter>"
  remarks: "Den här metoden motsvarar den <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>konstruktorn överlagring.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Om fil som anges av `path` finns inte, den har skapats. Om filen finns skrivåtgärder till den <xref:System.IO.StreamWriter>Lägg till text i filen.</xref:System.IO.StreamWriter> Ytterligare trådar har behörighet att läsa filen som är öppen.       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Den `path` parameter är inte skiftlägeskänsligt.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen ska läggas till."
    return:
      type: System.IO.StreamWriter
      description: "En dataström skrivare som lägger till UTF-8-kodad text till den angivna filen eller till en ny fil."
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, katalogen finns inte eller är det på en omappade enhet)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Kopierar en befintlig fil till en ny fil. Det går inte att skriva över en fil med samma namn."
  remarks: "Den här metoden motsvarar den <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>metodöverlagringen med den `overwrite` parametern `false`.</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       Den `sourceFileName` och `destFileName` parametrar kan ange information om relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns på den <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>metoden.</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> Den här metoden har inte stöd för jokertecken i parametrarna.       Attributen för den ursprungliga filen är kvar i den kopierade filen."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Kopiera filen."
    - id: destFileName
      type: System.String
      description: "Namnet på filen. Detta kan inte vara en katalog eller en befintlig fil."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>.       - eller - <code>sourceFileName</code> eller <code>destFileName</code> anger en katalog."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Sökvägen som anges i <code> sourceFileName </code> eller <code> destFileName </code> är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>Det finns.       - eller - ett i/o-fel har uppstått."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Kopierar en befintlig fil till en ny fil. En fil med samma namn skrivs över tillåts."
  remarks: "Den `sourceFileName` och `destFileName` parametrar kan ange information om relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den här metoden har inte stöd för jokertecken i parametrarna.       Attributen för den ursprungliga filen är kvar i den kopierade filen.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Kopiera filen."
    - id: destFileName
      type: System.String
      description: "Namnet på filen. Detta kan inte vara en katalog."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om målfilen kan skrivas över; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>.       - eller - <code>sourceFileName</code> eller <code>destFileName</code> anger en katalog."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Sökvägen som anges i <code> sourceFileName </code> eller <code> destFileName </code> är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       - eller - ett i/o-fel har uppstått."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar eller skriver över en fil i den angivna sökvägen."
  remarks: "Den <xref:System.IO.FileStream>objekt som skapas av den här metoden har en standard <xref:System.IO.FileShare>värdet för <xref:System.IO.FileShare>; Ingen annan process eller kod kan komma åt filen förrän den ursprungliga filreferensen har stängts.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       Den här metoden motsvarar den <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>metodöverlagringen med hjälp av standardbuffertstorleken.</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Om den angivna filen inte finns, skapas den; Om den finns och det inte är skrivskyddad, skrivs innehållet över.       Som standard beviljas fullständig läs-/ skrivåtkomst till nya filer för alla användare. Filen har öppnats med läs-och skrivbehörighet och måste stängas innan den kan öppnas av ett annat program.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen och namnet på den fil som skapas."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> som ger åtkomst till filen som anges i <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - <code> path </code> angett en fil är skrivskyddad."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar eller skriver över den angivna filen."
  remarks: "Den <xref:System.IO.FileStream>objekt som skapas av den här metoden har en standard <xref:System.IO.FileShare>värdet för <xref:System.IO.FileShare>; Ingen annan process eller kod kan komma åt filen förrän den ursprungliga filreferensen har stängts.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Den här metoden motsvarar den <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>konstruktorn överlagring.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Om den angivna filen inte finns, skapas den; Om den finns och det inte är skrivskyddad, skrivs innehållet över.       Som standard beviljas fullständig läs-/ skrivåtkomst till nya filer för alla användare. Filen har öppnats med läs-och skrivbehörighet och måste stängas innan den kan öppnas av ett annat program.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "Namnet på filen."
    - id: bufferSize
      type: System.Int32
      description: "Antalet byte som har buffrats för läser och skriver till filen."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> med den angivna buffertstorleken som ger åtkomst till filen som anges i <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - <code> path </code> angett en fil är skrivskyddad."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar eller skriver över den angivna filen, ange en buffertstorlek och en <xref href=&quot;System.IO.FileOptions&quot;> </xref> värde som beskriver hur du skapar eller skriva över filen."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Den här metoden motsvarar den <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>konstruktorn överlagring.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Om den angivna filen inte finns, skapas den; Om den finns och det inte är skrivskyddad, skrivs innehållet över.       Som standard beviljas fullständig läs-/ skrivåtkomst till nya filer för alla användare. Filen har öppnats med läs-och skrivbehörighet och måste stängas innan den kan öppnas av ett annat program.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "Namnet på filen."
    - id: bufferSize
      type: System.Int32
      description: "Antalet byte som har buffrats för läser och skriver till filen."
    - id: options
      type: System.IO.FileOptions
      description: "En av de <xref href=&quot;System.IO.FileOptions&quot;> </xref> värden som beskriver hur du skapar eller skriva över filen."
    return:
      type: System.IO.FileStream
      description: "En ny fil med den angivna buffertstorleken."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - <code> path </code> angett en fil är skrivskyddad."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar eller skriver över den angivna filen med den angivna buffertstorleken, alternativ och säkerhet."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Den här metoden motsvarar den <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>konstruktorn överlagring.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Om den angivna filen inte finns, skapas den; Om den finns och det inte är skrivskyddad, skrivs innehållet över.       Som standard beviljas fullständig läs-/ skrivåtkomst till nya filer för alla användare. Filen har öppnats med läs-och skrivbehörighet och måste stängas innan den kan öppnas av ett annat program.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "Namnet på filen."
    - id: bufferSize
      type: System.Int32
      description: "Antalet byte som har buffrats för läser och skriver till filen."
    - id: options
      type: System.IO.FileOptions
      description: "En av de <xref href=&quot;System.IO.FileOptions&quot;> </xref> värden som beskriver hur du skapar eller skriva över filen."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "En av de <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> värden som anger åtkomstkontrollen och granska säkerhet för filen."
    return:
      type: System.IO.FileStream
      description: "En ny fil med den angivna buffertstorleken, alternativ och säkerhet."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - <code> path </code> angett en fil är skrivskyddad."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar eller öppnar en fil för UTF-8-kodat text."
  remarks: "Den här metoden motsvarar den <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>konstruktorn överlagring med den `append` parametern `false`.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Om fil som anges av `path` finns inte, den har skapats. Om filen finns skrivs innehållet över. Ytterligare trådar har behörighet att läsa filen som är öppen.       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som ska öppnas för skrivning."
    return:
      type: System.IO.StreamWriter
      description: "En <xref:System.IO.StreamWriter>som skriver till den angivna filen med hjälp av UTF-8-kodning.</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "En fil som har krypterats med det aktuella kontot dekrypterar den <xref:System.IO.File.Encrypt*>metoden.</xref:System.IO.File.Encrypt*>"
  remarks: "Dekryptera-metoden kan du dekryptera en fil som har krypterats med den <xref:System.IO.File.Encrypt%2A>metoden.</xref:System.IO.File.Encrypt%2A>  Metoden dekryptera kan dekryptera filer som har krypterats med det aktuella användarkontot.       Metoden dekryptera kräver exklusiv åtkomst till filen som ska dekrypteras och ska generera ett undantag om filen används av en annan process. Om filen inte är krypterade, returnerar dekryptera ett värde som inte är noll, vilket indikerar att det lyckades.       Både den <xref:System.IO.File.Encrypt%2A>metoden och dekryptera-metoden använder kryptografiprovider (CSP) som installerats på datorn och filen krypteringsnycklarna i processen att anropa metoden.</xref:System.IO.File.Encrypt%2A>       Det aktuella filsystemet måste vara formaterad som NTFS och det aktuella operativsystemet måste vara Windows NT eller senare."
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "En sökväg som beskriver en fil att dekryptera."
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definierats av <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ogiltig enhet angavs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som beskrivs i den <code> path </code> gick inte att hitta parametern."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades. Till exempel är den krypterade filen redan öppen.       - eller - åtgärden stöds inte på den aktuella plattformen."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det aktuella operativsystemet inte är Windows NT eller senare."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Filsystemet är inte NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> path </code> ange parametern för en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> parametern anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Tar bort den angivna filen."
  remarks: "Ange ett namn med information om en relativ eller absolut sökväg för den `path` parameter. Jokertecken kan inte tas med. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Om filen som ska tas bort inte finns, undantag utan.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "Namnet på filen som ska tas bort. Jokertecken stöds inte."
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den angivna filen används.       - eller - det finns en öppen referens för filen och operativsystemet är Windows XP eller tidigare. Den här öppen referens kan bero på uppräkning av kataloger och filer. Mer information finns i [så här: Räkna upp kataloger och filer](~/add/includes/ajax-current-ext-md.md)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - filen är en körbar fil som används.       - eller - <code> path </code> är en katalog.       - eller - <code> path </code> angett en skrivskyddad fil."
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Krypterar en fil så att det konto som används för att kryptera filen kan dekryptera den."
  remarks: "Kryptera-metoden kan du kryptera en fil så att det konto som används för att anropa den här metoden kan dekryptera den. Använd den <xref:System.IO.File.Decrypt%2A>metod för att dekryptera en fil som krypterats med metoden kryptera.</xref:System.IO.File.Decrypt%2A>       Metoden kryptera kräver exklusiv åtkomst till filen som krypteras och misslyckas om filen används av en annan process.       Båda kryptera metoden och <xref:System.IO.File.Decrypt%2A>metod använda kryptografiprovider (CSP) som installerats på datorn och filen krypteringsnycklarna i processen att anropa metoden.</xref:System.IO.File.Decrypt%2A>       Den här metoden är inte tillgänglig i alla versioner av Windows. Det är exempelvis inte tillgänglig på Home-versioner.       Det aktuella filsystemet måste vara formaterad som NTFS."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "En sökväg som beskriver en fil för att kryptera."
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> path </code> parametern är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definierats av <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ogiltig enhet angavs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som beskrivs i den <code> path </code> gick inte att hitta parametern."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades.       - eller - åtgärden stöds inte på den aktuella plattformen."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Det aktuella operativsystemet inte är Windows NT eller senare."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Filsystemet är inte NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> path </code> ange parametern för en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> parametern anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Avgör om den angivna filen finns."
  remarks: "Exists-metoden ska inte användas för sökvägsvalideringen, kontrollerar bara den här metoden om filen som anges i `path` finns. Skicka en ogiltig sökväg till Exists returnerar `false`. Om du vill kontrollera om sökvägen innehåller ogiltiga tecken, kan du anropa den <xref:System.IO.Path.GetInvalidPathChars%2A>metod för att hämta de tecken som är ogiltiga för filsystemet.</xref:System.IO.Path.GetInvalidPathChars%2A> Du kan också skapa ett reguljärt uttryck för att testa om sökvägen är giltig för din miljö. Exempel på godkända sökvägar finns <xref:System.IO.File>.</xref:System.IO.File>       Om det finns en katalog finns i <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.</xref:System.IO.Directory.Exists%2A?displayProperty=fullName>       Vara medveten om att en annan process kan potentiellt göra något med filen mellan tid du anropa metoden Exists och utför en annan åtgärd på filen, till exempel <xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A>       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Om `path` beskriver en katalog som den här metoden returnerar `false`. Avslutande blanksteg tas bort från den `path` parametern innan du avgöra om filen finns.       Metoden Exists returnerar `false` om något fel uppstår vid försök att avgöra om den angivna filen finns. Detta kan inträffa i situationer som utlöser undantag, till exempel skicka ett filnamn med ogiltiga tecken eller för många tecken, en disk saknas eller, eller om anroparen inte har behörighet att läsa filen."
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen för att kontrollera."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om anroparen har behörigheterna som krävs och <code> path </code> innehåller namnet på en befintlig fil, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Den här metoden returnerar också <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om <code> path </code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, en ogiltig sökväg eller en tom sträng. Om anroparen inte har tillräcklig behörighet för att läsa den angivna filen inget undantag genereras och metoden returnerar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> oavsett förekomsten av <code> path </code>."
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hämtar en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innehåller åtkomstkontrollistan (ACL) åtkomstkontrollposterna för en angiven fil."
  remarks: "Använd metoden GetAccessControl för att hämta åtkomstkontrollistan (ACL) åtkomstkontrollposterna för en fil.       En ACL beskrivs enskilda användare och/eller grupper som har eller har inte behörighet, att specifika åtgärder på den angivna filen. Mer information finns i [så här: Lägg till eller ta bort poster för Access Control List](~/add/includes/ajax-current-ext-md.md).       I miljöer med NTFS- <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>beviljas användaren om användaren har <xref:System.Security.AccessControl.FileSystemRights>behörighet på den överordnade mappen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Att neka <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>, neka <xref:System.Security.AccessControl.FileSystemRights>på den överordnade katalogen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till en fil som innehåller en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som beskriver filens åtkomstkontroll åtkomstkontrollistan (ACL)."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innehåller åtkomstkontrollen regler för filen som beskrivs i den <code> path </code> parameter."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Det gick inte att hitta filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> path </code> ange parametern för en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> parametern anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hämtar en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innehåller den angivna typen i åtkomstkontrollistan (ACL) för åtkomstkontrollposter för en viss fil."
  remarks: "Använd metoden GetAccessControl för att hämta åtkomstkontrollistan (ACL) åtkomstkontrollposterna för en fil.       En ACL beskrivs enskilda användare och/eller grupper som har eller har inte behörighet, att specifika åtgärder på den angivna filen. Mer information finns i [så här: Lägg till eller ta bort poster för Access Control List](~/add/includes/ajax-current-ext-md.md).       I miljöer med NTFS- <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>beviljas användaren om användaren har <xref:System.Security.AccessControl.FileSystemRights>behörighet på den överordnade mappen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Att neka <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>, neka <xref:System.Security.AccessControl.FileSystemRights>på den överordnade katalogen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till en fil som innehåller en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som beskriver filens åtkomstkontroll åtkomstkontrollistan (ACL)."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "En av de <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> värden som anger vilken typ av åtkomst styr åtkomstkontrollistan (ACL) information för att ta emot."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt som innehåller åtkomstkontrollen regler för filen som beskrivs i den <code> path </code> parameter."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Det gick inte att hitta filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> path </code> ange parametern för en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> parametern anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hämtar den <xref href=&quot;System.IO.FileAttributes&quot;> </xref> av filen på sökvägen."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen."
    return:
      type: System.IO.FileAttributes
      description: "Den <xref href=&quot;System.IO.FileAttributes&quot;> </xref> av filen på sökvägen."
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är tomt, innehåller endast blanksteg eller innehåller ogiltiga tecken."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>representerar en fil och är ogiltig, t.ex. på en omappade enhet eller filen inte kan hittas."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>representerar en katalog och är ogiltig, t.ex. på en omappade enhet eller katalogen inte kan hittas."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den här filen används av en annan process."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datum och tid för den angivna filen eller katalogen."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet.       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC) justeras till lokal tid.       NTFS-formaterade enheter kan cachelagra information om en fil, till exempel Skapandetid för fil, under en kort tidsperiod. Därför kan det vara nödvändigt att explicit ange Skapandetid för en fil om du skriver över eller ersätta en befintlig fil.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få information om att skapa datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur som har angetts till datum och tid för den angivna filen eller katalogen.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datum och tid, i koordinerad universaltid (UTC) för den angivna filen eller katalogen."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet.       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC).       NTFS-formaterade enheter kan cachelagra information om en fil, till exempel Skapandetid för fil, under en kort tidsperiod. Därför kan det vara nödvändigt att explicit ange Skapandetid för en fil om du skriver över eller ersätta en befintlig fil.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få information om att skapa datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur som har angetts till datum och tid för den angivna filen eller katalogen.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datum och tid som den angivna filen eller katalogen senast användes."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet.       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC) justeras till lokal tid.       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få åtkomst till information om datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur uppsättningen datum och tid för den angivna filen eller katalogen senast användes.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datumet och tiden, i koordinerad universaltid (UTC) den angivna filen eller katalogen senast användes."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet.       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC).       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få åtkomst till information om datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur uppsättningen datum och tid för den angivna filen eller katalogen senast användes.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datum och tid som den angivna filen eller katalogen senast skrevs till."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet. Varje operativsystem hanterar skrivning senast enligt egna regler. För att förbättra prestanda kan ett operativsystem inte skriva senaste tidsvärdet till den exakta tidpunkten för senaste Skrivåtgärden, men kan ställa till en nära uppskattning i stället.       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC) justeras till lokal tid.       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få information om skrivning datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur som angetts för datum och tid som den angivna filen eller katalogen senast skrevs till.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Returnerar datumet och tiden, i koordinerad universaltid (UTC) som den angivna filen eller katalogen senast skrevs till."
  remarks: "> [!NOTE]> I den här metoden kan returnera ett felaktigt värde, eftersom den använder inbyggda funktioner som inte kan uppdateras kontinuerligt av operativsystemet. Varje operativsystem hanterar skrivning senast enligt egna regler. För att förbättra prestanda kan ett operativsystem inte skriva senaste tidsvärdet till den exakta tidpunkten för senaste Skrivåtgärden, men kan ställa till en nära uppskattning i stället.       Om filen som beskrivs i den `path` parametern finns inte, den här metoden returnerar midnatt, 1 januari, 1601 e. kr. (C.E.) Coordinated Universal Time (UTC).       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen eller katalogen som du vill få information om skrivning datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>struktur som angetts för datum och tid som den angivna filen eller katalogen senast skrevs till.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Flyttar en fil till en ny plats, möjlighet att ange ett annat namn."
  remarks: "Den här metoden fungerar diskvolymer och det undantag genereras inget om käll- och målmappen är samma. Observera att om du försöker ersätta en fil genom att flytta en fil med samma namn i den katalogen som du får <xref:System.IO.IOException>.</xref:System.IO.IOException> Du kan inte använda Move-metoden för att skriva över en befintlig fil.       Den `sourceFileName` och `destFileName` argument kan innehålla information om relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Om du försöker flytta filer mellan diskvolymer och att filen används, kopieras filen till målet, men tas inte bort från källan.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Namnet på filen för att flytta. Kan innehålla en relativ eller absolut sökväg."
    - id: destFileName
      type: System.String
      description: "Ny sökväg och namn för filen."
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målfilen finns redan.       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är en sträng med längden noll, innehåller bara blanksteg eller innehåller ogiltiga tecken som definierats i <xref:System.IO.Path.InvalidPathChars>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Sökvägen som anges i <code> sourceFileName </code> eller <code> destFileName </code> är ogiltig. (t.ex, det är på en omappade enhet)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>eller <code>destFileName</code> är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en <xref href=&quot;System.IO.FileStream&quot;> </xref> på angiven sökväg med läs-/ skrivbehörighet."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas."
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> värde som anger om en fil skapas om en finns inte och avgör om innehållet i befintliga filer ska behållas eller skrivas över."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> öppnas i den angivna läge och sökväg med läs-och skrivbehörighet och inte delas."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs.       - eller - <code>mode</code> är <xref href=&quot;System.IO.FileMode&quot;> </xref> och den angivna filen är en dold fil."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>Ange ett ogiltigt värde."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en <xref href=&quot;System.IO.FileStream&quot;> </xref> på den angivna sökvägen, med det angivna läget och åtkomst."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>"
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas."
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> värde som anger om en fil skapas om en finns inte och avgör om innehållet i befintliga filer ska behållas eller skrivas över."
    - id: access
      type: System.IO.FileAccess
      description: "En <xref href=&quot;System.IO.FileAccess&quot;> </xref> värde som anger de åtgärder som kan utföras på filen."
    return:
      type: System.IO.FileStream
      description: "En odelad <xref href=&quot;System.IO.FileStream&quot;> </xref> som ger åtkomst till den angivna filen med det angivna läget och åtkomst."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad och <code>access</code> är inte <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs.       - eller - <code>mode</code> är <xref href=&quot;System.IO.FileMode&quot;> </xref> och den angivna filen är en dold fil."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>eller <code>access</code> angav ett ogiltigt värde."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en <xref href=&quot;System.IO.FileStream&quot;> </xref> på den angivna sökvägen, med det angivna läget med läsa, skriva eller läs-/ skrivåtkomst och den angivna delningsalternativ."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas."
    - id: mode
      type: System.IO.FileMode
      description: "En <xref href=&quot;System.IO.FileMode&quot;> </xref> värde som anger om en fil skapas om en finns inte och avgör om innehållet i befintliga filer ska behållas eller skrivas över."
    - id: access
      type: System.IO.FileAccess
      description: "En <xref href=&quot;System.IO.FileAccess&quot;> </xref> värde som anger de åtgärder som kan utföras på filen."
    - id: share
      type: System.IO.FileShare
      description: "En <xref href=&quot;System.IO.FileShare&quot;> </xref> värde som anger vilken typ av åtkomst som andra trådar ha till filen."
    return:
      type: System.IO.FileStream
      description: "En <xref href=&quot;System.IO.FileStream&quot;> </xref> på den angivna sökvägen, med det angivna läget med läsa, skriva eller läs-/ skrivåtkomst och den angivna delningsalternativ."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad och <code>access</code> är inte <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs.       - eller - <code>mode</code> är <xref href=&quot;System.IO.FileMode&quot;> </xref> och den angivna filen är en dold fil."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>, <code>access</code>, eller <code>share</code> angav ett ogiltigt värde."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en befintlig fil för läsning."
  remarks: "Den här metoden motsvarar <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>konstruktorn överlagra med ett <xref:System.IO.FileMode>värde, <xref:System.IO.FileMode>ett <xref:System.IO.FileAccess>värde <xref:System.IO.FileAccess>och ett <xref:System.IO.FileShare>värde av <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen som ska öppnas för läsning."
    return:
      type: System.IO.FileStream
      description: "En skrivskyddad <xref href=&quot;System.IO.FileStream&quot;> </xref> på den angivna sökvägen."
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en befintlig UTF-8-kodad textfil för läsning."
  remarks: "Den här metoden motsvarar den <xref:System.IO.StreamReader.%23ctor%28System.String%29>konstruktorn överlagring.</xref:System.IO.StreamReader.%23ctor%28System.String%29>       Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen som ska öppnas för läsning."
    return:
      type: System.IO.StreamReader
      description: "En <xref:System.IO.StreamReader>på den angivna sökvägen.</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en befintlig fil eller skapar en ny fil för skrivning."
  remarks: "Den här metoden motsvarar den <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>konstruktorn överlagring med filen inställd på <xref:System.IO.FileMode>, tillgång <xref:System.IO.FileAccess>, och dela inställd på <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       Metoden OpenWrite öppnar en fil om en finns redan för sökvägen till filen eller skapar en ny fil om det inte finns. För en befintlig fil den inte lägga till den nya texten till den befintliga texten. I stället skrivs över de befintliga tecken med nya tecken. Om du skriver över en längre sträng (t.ex. &quot;Är ett test av metoden OpenWrite&quot;) med en kortare sträng (till exempel &quot;andra kör&quot;), filen innehåller en blandning av strängar (&quot;andra runtest för metoden OpenWrite&quot;).       Den `path` parametern kan ange information om relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Så här skaffar du den aktuella arbetskatalogen i <xref:System.IO.Directory.GetCurrentDirectory%2A>metod.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som ska öppnas för skrivning."
    return:
      type: System.IO.FileStream
      description: "En odelad <xref href=&quot;System.IO.FileStream&quot;> </xref> objektet på den angivna sökvägen med <xref href=&quot;System.IO.FileAccess&quot;> </xref> åtkomst."
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs.       - eller - <code> path </code> anges en skrivskyddad fil eller katalog."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en binär fil, läser in innehållet i filen i en bytematris och stänger sedan filen."
  remarks: "En sökväg till filen får den här metoden öppnar filen läses innehållet i filen till en bytematris och stänger sedan filen."
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas för läsning."
    return:
      type: System.Byte[]
      description: "En bytematris som innehåller innehållet i filen."
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den här åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en textfil, läser alla rader i filen och stänger sedan filen."
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas för läsning."
    return:
      type: System.String[]
      description: "En strängmatris som innehåller alla raderna i filen."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en fil, läser alla rader i filen med den angivna kodningen och stänger sedan filen."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas för läsning."
    - id: encoding
      type: System.Text.Encoding
      description: "Den kodning som tillämpas på innehållet i filen."
    return:
      type: System.String[]
      description: "En strängmatris som innehåller alla raderna i filen."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en textfil, läser alla rader i filen och stänger sedan filen."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas för läsning."
    return:
      type: System.String
      description: "En sträng som innehåller alla raderna i filen."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Öppnar en fil, läser alla rader i filen med den angivna kodningen och stänger sedan filen."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Filen öppnas för läsning."
    - id: encoding
      type: System.Text.Encoding
      description: "Den kodning som tillämpas på innehållet i filen."
    return:
      type: System.String
      description: "En sträng som innehåller alla raderna i filen."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges i <code> path </code> hittades inte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Läser raderna i en fil."
  remarks: "ReadLines och <xref:System.IO.File.ReadAllLines%2A>metoder skiljer sig på följande sätt: när du använder ReadLines du börjar räkna upp uppsättning strängar innan hela samlingen returneras; när du använder <xref:System.IO.File.ReadAllLines%2A>, måste du vänta för hela strängmatris returneras innan du har åtkomst till matrisen.</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> När du arbetar med mycket stora filer kan ReadLines därför mer effektivt.       Du kan använda metoden ReadLines för att göra följande:-utföra [LINQ till objekt](~/add/includes/ajax-current-ext-md.md) frågor på en fil att hämta en filtrerad uppsättning rader.      -Skriva returnerade linjesamlingen till en fil med den <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>metoden, eller lägga till dem i en befintlig fil med den <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>metoden.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      -Skapa en omedelbart ifyllda instans av en samling som tar en <xref:System.Collections.Generic.IEnumerable%601>samling med strängar för sin konstruktor, till exempel en <xref:System.Collections.Generic.IList%601>eller ett <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601>       Den här metoden använder <xref:System.Text.Encoding.UTF8%2A>för kodning värdet.</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "Filen som ska läsas."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Alla rader i filen och raderna som är resultatet av en fråga."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges av <code> path </code> hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Läsa raderna i en fil som har en angiven kodning."
  remarks: "Använd den här metoden för att ange en kodning för att använda läsa filen.       ReadLines och <xref:System.IO.File.ReadAllLines%2A>metoder skiljer sig på följande sätt: när du använder ReadLines du börjar räkna upp uppsättning strängar innan hela samlingen returneras.</xref:System.IO.File.ReadAllLines%2A> När du använder <xref:System.IO.File.ReadAllLines%2A>, måste du vänta för hela strängmatris returneras innan du har åtkomst till matrisen.</xref:System.IO.File.ReadAllLines%2A> När du arbetar med mycket stora filer kan ReadLines därför mer effektivt.       Du kan använda metoden ReadLines för att göra följande:-utföra [LINQ till objekt](~/add/includes/ajax-current-ext-md.md) frågor på en fil att hämta en filtrerad uppsättning rader.      -Skriva returnerade linjesamlingen till en fil med den <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>metoden, eller lägga till dem i en befintlig fil med den <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>metoden.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      -Skapa en omedelbart ifyllda instans av en samling som tar en <xref:System.Collections.Generic.IEnumerable%601>samling med strängar för sin konstruktor, till exempel en <xref:System.Collections.Generic.IList%601>eller ett <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Filen som ska läsas."
    - id: encoding
      type: System.Text.Encoding
      description: "Kodning som tillämpas på innehållet i filen."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Alla rader i filen och raderna som är resultatet av en fråga."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som anges av <code> path </code> hittades inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ersätter innehållet i en angiven fil med innehållet i en annan fil, ta bort den ursprungliga filen och säkerhetskopior av filen ersatta."
  remarks: "Ersätt metoden ersätter innehållet i en angiven fil med innehållet i en annan fil.  Dessutom skapas en säkerhetskopia av filen som har ersatts.       Om den `sourceFileName` och `destinationFileName` är den här metoden ska generera ett undantag i olika volymer. Om den `destinationBackupFileName` är på en annan volym från källfilen säkerhetskopian tas bort.       Skicka `null` till den `destinationBackupFileName` parametern om du inte vill skapa en säkerhetskopia av filen som ersätts."
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Namnet på en fil som ersätter filen som anges av `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "Namnet på filen som ersätts."
    - id: destinationBackupFileName
      type: System.String
      description: "Namnet på filen med säkerhetskopian."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen som beskrivs i den <code> destinationFileName </code> parametern var inte ett giltigt format.       - eller - sökvägen som beskrivs i den <code> destinationBackupFileName </code> parametern var inte ett giltigt format."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ogiltig enhet angavs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som beskrivs i aktuellt <xref href=&quot;System.IO.FileInfo&quot;> </xref> gick inte att hitta objektet.       - eller - filen som beskrivs i den <code> destinationBackupFileName </code> gick inte att hitta parametern."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Operativsystemet är Windows 98 andra utgåvan eller tidigare och filer system inte är NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> sourceFileName </code> eller <code> destinationFileName </code> parametern anger en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - källan eller målet parametrarna anger en katalog i stället för en fil.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ersätter innehållet i en angiven fil med innehållet i en annan fil, ta bort den ursprungliga filen och säkerhetskopior av filen ersatta och ignorerar eventuellt fel dokument."
  remarks: "Ersätt metoden ersätter innehållet i en angiven fil med innehållet i en annan fil.  Dessutom skapas en säkerhetskopia av filen som har ersatts.       Om den `sourceFileName` och `destinationFileName` är den här metoden ska generera ett undantag i olika volymer. Om den `destinationBackupFileName` är på en annan volym från källfilen säkerhetskopian tas bort.       Skicka `null` till den `destinationBackupFileName` parametern om du inte vill skapa en säkerhetskopia av filen som ersätts."
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Namnet på en fil som ersätter filen som anges av `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "Namnet på filen som ersätts."
    - id: destinationBackupFileName
      type: System.String
      description: "Namnet på filen med säkerhetskopian."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ignorera fel dokument (till exempel attribut och åtkomstkontrollistor (ACL)) från filen ersatta till ersättningsfil. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen som beskrivs i den <code> destinationFileName </code> parametern var inte ett giltigt format.       - eller - sökvägen som beskrivs i den <code> destinationBackupFileName </code> parametern var inte ett giltigt format."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "En ogiltig enhet angavs."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som beskrivs i aktuellt <xref href=&quot;System.IO.FileInfo&quot;> </xref> gick inte att hitta objektet.       - eller - filen som beskrivs i den <code> destinationBackupFileName </code> gick inte att hitta parametern."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Operativsystemet är Windows 98 andra utgåvan eller tidigare och filer system inte är NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> sourceFileName </code> eller <code> destinationFileName </code> parametern anger en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - källan eller målet parametrarna anger en katalog i stället för en fil.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Gäller åtkomstkontrollistan (ACL) åtkomstkontrollposter beskrivs av en <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objekt till den angivna filen."
  remarks: "Metoden SetAccessControl gäller åtkomstkontrollistan (ACL) för åtkomstkontrollposter för en fil som representerar noninherited ACL-lista.      > [!CAUTION] > Den ACL som angetts för den `fileSecurity` parametern ersätter befintliga ACL för filen. Om du vill lägga till behörigheter för en ny användare använder den <xref:System.IO.File.GetAccessControl%2A>metod för att hämta befintliga ACL, ändra den och sedan använda SetAccessControl för att tillämpa den tillbaka till filen.</xref:System.IO.File.GetAccessControl%2A>       En ACL beskrivs enskilda användare och/eller grupper som har eller har inte behörighet, att specifika åtgärder på den angivna filen. Mer information finns i [så här: Lägg till eller ta bort poster för Access Control List](~/add/includes/ajax-current-ext-md.md).       Metoden SetAccessControl kvarstår endast <xref:System.Security.AccessControl.FileSecurity>objekt som har ändrats efter att objektet skapats.</xref:System.Security.AccessControl.FileSecurity>  Om en <xref:System.Security.AccessControl.FileSecurity>objektet har inte ändrats, kommer inte sparas till en fil.</xref:System.Security.AccessControl.FileSecurity>  Därför det går inte att hämta en <xref:System.Security.AccessControl.FileSecurity>objekt från en fil och tillämpa samma objekt till en annan fil.</xref:System.Security.AccessControl.FileSecurity>       Kopiera ACL-information från en fil till en annan: 1.  Använd den <xref:System.IO.File.GetAccessControl%2A>metod för att hämta den <xref:System.Security.AccessControl.FileSecurity>objekt från källfilen.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  Skapa en ny <xref:System.Security.AccessControl.FileSecurity>objekt för målfilen.</xref:System.Security.AccessControl.FileSecurity>      3.  Använd den <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>eller <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>-metoden i källan <xref:System.Security.AccessControl.FileSecurity>datorobjektet för att hämta information om Behörigheter.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Använd den <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>eller <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>metod för att kopiera informationen hämtade i steg 3 till målet <xref:System.Security.AccessControl.FileSecurity>objektet.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  Ange mål <xref:System.Security.AccessControl.FileSecurity>objekt till filen med metoden SetAccessControl.</xref:System.Security.AccessControl.FileSecurity>       I miljöer med NTFS- <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>beviljas användaren om användaren har <xref:System.Security.AccessControl.FileSystemRights>behörighet på den överordnade mappen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Att neka <xref:System.Security.AccessControl.FileSystemRights>och <xref:System.Security.AccessControl.FileSystemRights>, neka <xref:System.Security.AccessControl.FileSystemRights>på den överordnade katalogen.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "En fil att lägga till eller ta bort åtkomstkontrollistan (ACL) för åtkomstkontrollposter från."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "En <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> -objektet som beskriver ACL-post ska gälla för den fil som beskrivs i den `path` parameter."
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Det gick inte att hitta filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den <code> path </code> ange parametern för en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code> path </code> parametern anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det angivna <xref href=&quot;System.IO.FileAttributes&quot;> </xref> av filen på den angivna sökvägen."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Vissa filattribut, såsom <xref:System.IO.FileAttributes>och <xref:System.IO.FileAttributes>, kan kombineras.</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> Andra attribut, till exempel <xref:System.IO.FileAttributes>, måste användas fristående.</xref:System.IO.FileAttributes>       Det går inte att ändra komprimeringsstatus av en <xref:System.IO.File>objekt med metoden SetAttributes.</xref:System.IO.File>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen."
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "En binär kombination av uppräkningsvärdena."
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är tomt, innehåller bara blanksteg, innehåller ogiltiga tecken eller Filattributet är ogiltig."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig och kan (till exempel på en omappade enhet)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Att det går inte hitta filen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tid då filen skapades."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS-formaterade enheter kan cachelagra filen metainformation, till exempel Skapandetid för fil, under en kort tidsperiod. Därför kan det vara nödvändigt att explicit ange Skapandetid för en fil om du skriver över eller ersätta en befintlig fil.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information för att skapa datum och tid."
    - id: creationTime
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för datum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när åtgärden utfördes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Anger ett värde utanför intervallet för datum, tider eller båda tillåts för den här åtgärden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tid i koordinerad universaltid (UTC) är att filen har skapats."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       NTFS-formaterade enheter kan cachelagra filen metainformation, till exempel Skapandetid för fil, under en kort tidsperiod. Därför kan det vara nödvändigt att explicit ange Skapandetid för en fil om du skriver över eller ersätta en befintlig fil.       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information för att skapa datum och tid."
    - id: creationTimeUtc
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för datum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när åtgärden utfördes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Anger ett värde utanför intervallet för datum, tider eller båda tillåts för den här åtgärden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tidpunkt som den angivna filen senast användes."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information om åtkomst datum och tid."
    - id: lastAccessTime
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för senaste åtkomstdatum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>Anger ett värde utanför intervallet för datum och tidpunkter som tillåts för den här åtgärden."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tid i koordinerad universaltid (UTC), att den angivna filen senast användes."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information om åtkomst datum och tid."
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för senaste åtkomstdatum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>Anger ett värde utanför intervallet för datum och tidpunkter som tillåts för den här åtgärden."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tid då filen senast skrevs till."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information om datum och tid."
    - id: lastWriteTime
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för den senaste skrivning datum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i lokal tid."
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>Anger ett värde utanför intervallet för datum och tidpunkter som tillåts för den här åtgärden."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Anger det datum och tid i koordinerad universaltid (UTC) som den angivna filen senast skrevs till."
  remarks: "Den `path` parameter är tillåtet att ange relativ eller absolut sökväg. Relativ sökvägsinformation tolkas som i förhållande till den aktuella arbetskatalogen. Den aktuella arbetskatalogen finns <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       En lista över vanliga i/o-aktiviteter, se [vanliga i/o-aktiviteter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "Den fil som du vill ange information om datum och tid."
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "En <xref:System.DateTime>som innehåller värdet som angetts för den senaste skrivning datum och tid för `path`.</xref:System.DateTime> Det här värdet uttrycks i UTC-tid."
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Gick inte att hitta den angivna sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>Anger ett värde utanför intervallet för datum och tidpunkter som tillåts för den här åtgärden."
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, skriver den angivna byte-matrisen till filen och stänger sedan filen. Om filen redan finns skrivs över."
  remarks: "Den här metoden baserat på en bytematris och en sökväg till filen, öppnar den angivna filen, skriver du innehållet i byte-matris till filen och stänger sedan filen."
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: bytes
      type: System.Byte[]
      description: "Byte att skriva till filen."
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller Bytematrisen är tom."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, en samling med strängar skriver till filen och stänger sedan filen."
  remarks: "Standardbeteendet för WriteAllLines-metoden är att skriva ut data med hjälp av UTF-8-kodning utan en byte-ordningsmarkering (BOM). Om det är nödvändigt att inkludera en UTF-8-identifierare, till exempel en byte-ordningsmarkering i början av en fil, använder den <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>metodöverlagringen med <xref:System.Text.Encoding.UTF8%2A>kodning.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       Om filen redan finns skrivs över.       Du kan använda den här metoden för att skapa innehållet för en samlingsklass som tar en <xref:System.Collections.Generic.IEnumerable%601>i sin konstruktor som en <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, eller en <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>klass.</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> </xref:System.Collections.Generic.HashSet%601.%23ctor%2A> </xref:System.Collections.Generic.List%601.%23ctor%2A> </xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Rader att skriva till filen."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, skriva till filen i den angivna Strängmatrisen och stänger sedan filen."
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.String[]
      description: "Strängmatrisen att skriva till filen."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil med hjälp av den angivna kodningen, skriver du en samling med strängar till filen och stänger sedan filen."
  remarks: "Om filen redan finns skrivs över.       Du kan använda den här metoden för att skapa en fil som innehåller följande:-resultatet av en [LINQ till objekt](~/add/includes/ajax-current-ext-md.md) fråga på raderna i en fil som hämtas med hjälp av den <xref:System.IO.File.ReadLines%2A>metoden.</xref:System.IO.File.ReadLines%2A>      -Innehållet i en samling som implementerar en <xref:System.Collections.Generic.IEnumerable%601>med strängar.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Rader att skriva till filen."
    - id: encoding
      type: System.Text.Encoding
      description: "Det tecken som kodning som ska användas."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av den <xref:System.IO.Path.GetInvalidPathChars*> metoden."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Anger en fil är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> är en katalog.       - eller - anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, skriver den angivna sträng-matrisen till filen med hjälp av den angivna kodningen och stänger sedan filen."
  remarks: "Om filen redan finns skrivs över.       Den här metoden baserat på en strängmatris och en sökväg till filen, öppnar den angivna filen, skriver Strängmatrisen till filen med den angivna kodningen och stänger sedan filen."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.String[]
      description: "Strängmatrisen att skriva till filen."
    - id: encoding
      type: System.Text.Encoding
      description: "En <xref:System.Text.Encoding>objekt som representerar teckenkodningen tillämpas Strängmatrisen.</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, skriver den angivna strängen till filen och stänger sedan filen. Om filen redan finns skrivs över."
  remarks: "Den här metoden använder UTF-8-kodning utan en Byte-ordning markering (BOM), så använder den <xref:System.Text.Encoding.GetPreamble%2A>metoden returnerar en tom bytematris.</xref:System.Text.Encoding.GetPreamble%2A> Om det är nödvändigt att inkludera en UTF-8-identifierare, till exempel en byte-ordningsmarkering i början av en fil, använder den <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>metodöverlagringen med <xref:System.Text.Encoding.UTF8%2A>kodning.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       Den här metoden baserat på en sträng och en sökväg till filen, öppnar den angivna filen, skriver strängen till filen och stänger sedan filen."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.String
      description: "Strängen som ska skriva till filen."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Skapar en ny fil, skriver den angivna strängen till filen med den angivna kodningen och stänger sedan filen. Om filen redan finns skrivs över."
  remarks: "Den här metoden baserat på en sträng och en sökväg till filen, öppnar den angivna filen, skriver strängen till filen med den angivna kodningen och stänger sedan filen. Filreferensen är säkert att stänga av den här metoden även om undantag aktiveras."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "Att skriva till filen."
    - id: contents
      type: System.String
      description: "Strängen som ska skriva till filen."
    - id: encoding
      type: System.Text.Encoding
      description: "Den teckenkodning som ska gälla för strängen."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>är en sträng med längden noll, innehåller bara blanksteg eller innehåller en eller flera ogiltiga tecken som definieras av <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Den angivna sökvägen, filnamnet eller båda vara längre än den systemdefinierade maximala längden. Till exempel på Windows-baserade plattformar sökvägar måste vara färre än 248 tecken och filnamn måste vara färre än 260 tecken."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna sökvägen är ogiltig (t.ex, det är på en omappade enhet)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod när filen öppnades."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Ange en fil som är skrivskyddad.       - eller - åtgärden stöds inte på den aktuella plattformen.       - eller - <code>path</code> anges en katalog.       - eller - anroparen har inte behörigheten som krävs."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>är ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheten som krävs."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
