### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Innehåller inställningar för autentiseringsuppgifter för en tjänst för säker konversation."
  remarks: "Säkra konversationer inkluderar flera meddelanden och använda en säkerhet kontexten Token (SCT) för att garantera säkerheten. SCT delas för livslängden för en session för kommunikation mellan de kommunicerande parterna. En tjänst kan utfärda två olika typer av SCTs:-först är en sessionsbaserad SCT som innehåller ett unikt id. Meddelanden utföra endast id och underhåller ett tillstånd mappning cacheminne som mappar mellan SCT-ID: n och innehållet (till exempel anspråk, säkerhetsnycklar och så vidare). En väl behaved klient måste skicka en SCT annullering att tjänsten optimera cache-resurser. Om du skapa en instans av den här klassen genom att anropa <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>med den `requireCancellation` parameter som är lika med `true`, SCT utfärdas på detta sätt.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -Andra är en fristående SCT som finns i en cookie på klienten. Den här SCT innehåller hela tillståndsinformationen, så kräver varken tillståndshantering från tjänsten eller SCT annullering från klienten. Detta kallas ibland ett &quot;cookie-läge&quot; SCT. Eftersom SCT innehåller hela tillståndsinformationen, är storleken större än i fallet med sessionen. Med sessionsbaserade SCTs lagrar tjänsten mycket tillståndsinformationen. Men eftersom det är fristående, den kan användas på tjänsten livstid och kvarstår över avstängning av tjänst och starta om."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar en samling av <xref:System.Type>anspråk för cookie-serialisering.</xref:System.Type>"
  remarks: "Att serialisera anspråk till SCT cookies [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] använder <xref:System.Runtime.Serialization.DataContractSerializer>som standard.</xref:System.Runtime.Serialization.DataContractSerializer> Eftersom anspråk resursen kan utökas [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] kan du ange en lista över kända resurstyper. Detta hjälper den <xref:System.Runtime.Serialization.DataContractSerializer>under deserialisering av anspråk i cookien så att den kan returnera de ursprungliga strikt typkontroll objekten.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "En samling av <xref:System.Type>anspråk för cookie-serialisering.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Hämtar eller anger en anpassad <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> för kodning och avkodning av cookie-serialisering."
  remarks: "I &quot;cookie-läge&quot; skickar en tjänst klienten en kontext säkerhetstoken (SCT) i form av en cookie till klienten så att den inte behöver underhålla alla säkerhetstillstånd. Klienten skickar cookien tillbaka i meddelandet med begäran så att tjänsten användas att ta bort skyddet och kontrollera begärandemeddelandet. Eftersom SCT ofta skickas över ett nätverk som inte är säkra, måste skyddas.       Som standard [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] använder den <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>klassen för att skydda cookien med Data Protection API (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Backend-tjänster måste köras under samma domänanvändarkonto för DPAPI ska fungera i en webbservergrupp. Med andra ord om tjänsten är värd för webbprogram, måste sedan arbetsprocessen Internet Information Services (IIS) konfigureras för att köras som en domänanvändare.       Den här egenskapen kan du använda en anpassad <xref:System.ServiceModel.Security.SecurityStateEncoder>att kryptera och dekryptera cookien och inte är beroende av DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "En <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> -objektet, vilket är en anpassning av <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
