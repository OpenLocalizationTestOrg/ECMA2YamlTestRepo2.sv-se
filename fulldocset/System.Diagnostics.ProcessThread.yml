### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.ProcessThread
  id: ProcessThread
  children:
  - System.Diagnostics.ProcessThread.BasePriority
  - System.Diagnostics.ProcessThread.CurrentPriority
  - System.Diagnostics.ProcessThread.Id
  - System.Diagnostics.ProcessThread.IdealProcessor
  - System.Diagnostics.ProcessThread.PriorityBoostEnabled
  - System.Diagnostics.ProcessThread.PriorityLevel
  - System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  - System.Diagnostics.ProcessThread.ProcessorAffinity
  - System.Diagnostics.ProcessThread.ResetIdealProcessor
  - System.Diagnostics.ProcessThread.StartAddress
  - System.Diagnostics.ProcessThread.StartTime
  - System.Diagnostics.ProcessThread.ThreadState
  - System.Diagnostics.ProcessThread.TotalProcessorTime
  - System.Diagnostics.ProcessThread.UserProcessorTime
  - System.Diagnostics.ProcessThread.WaitReason
  langs:
  - csharp
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread
  type: Class
  summary: "Representerar ett operativsystem tråd."
  remarks: "Använd ProcessThread för att få information om en tråd som körs på systemet. På så sätt kan du till exempel för att övervaka trådens prestandaegenskaper.      > [!IMPORTANT] > Den här typen implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>       En tråd är en sökväg till körningen via ett program. Det är den minsta enheten som Win32 schemaläggs. Det består av en hög CPU-register och en post i listan körning av Schemaläggaren i systemet.       En process som består av en eller flera trådar och koden, data och andra resurser för ett program i minnet. Programmets normala resurser är öppna filer, semaforer och dynamiskt allokerade minne. Varje resurs för en process som delas av alla processens trådar.       Ett program körs när systemet Schemaläggaren ger körning kontroll av programmets trådar. Schemaläggaren avgör vilka trådar ska köras och när. En tråd med lägre prioritet kan tvingas att vänta medan högre prioritet trådar slutföra sina uppgifter. På datorer med flera processorer, kan Schemaläggaren flytta enskilda trådar till olika processorer, vilket belastningsutjämning CPU.       Varje process startas med en enskild tråd som kallas för den primära tråden. En tråd kan skapa ytterligare trådar. Alla trådar i en process delar i processens adressutrymme.       Den primära tråden är inte nödvändigtvis finns på det första indexet i samlingen.      > [!NOTE] > Från och med .NET Framework version 2.0, möjligheten att referens prestandaräknaren data på andra datorer som har tagits bort för många av .NET Framework-metoder och egenskaper. Den här ändringen gjordes för att förbättra prestanda och för att aktivera icke-administratörer att använda klassen ProcessThread. Därför kan vissa program som inte att hämta undantag i tidigare versioner av .NET Framework kan nu att få ett <xref:System.NotSupportedException>.</xref:System.NotSupportedException> Metoder och egenskaper som påverkas är för många att lista här, men undantagsinformationen har lagts till i berörda medlem-avsnitt.       Trådar i en process köra separat och inte känner till varandra om du inte gör dem synliga till varandra. Trådar som delar gemensamma resurser måste dock samordna arbetet med hjälp av semaforer eller en annan metod för kommunikation mellan processer.       För att få en samling av alla ProcessThread-objekt som är associerade med den aktuella processen kan hämta den <xref:System.Diagnostics.Process.Threads%2A>egenskapen för den <xref:System.Diagnostics.Process>instans.</xref:System.Diagnostics.Process> </xref:System.Diagnostics.Process.Threads%2A>"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Diagnostics.Design.ProcessThreadDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class ProcessThread : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.BasePriority
  id: BasePriority
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
  fullName: System.Diagnostics.ProcessThread.BasePriority
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar basprioritet för tråden."
  remarks: "BasePriority är första prioritet för tråden. Du kan visa information om basprioritet via den Systemövervakaren prioritet Basräknare.       Operativsystemet beräknar en tråd basprioritet genom att kombinera trådens prioritetsintervall med processens prioritetsklass. Du kan ange processens <xref:System.Diagnostics.Process.PriorityClass%2A?displayProperty=fullName>egenskapen till ett av värdena i den <xref:System.Diagnostics.ProcessPriorityClass>-uppräkningen, som är <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, eller <xref:System.Diagnostics.ProcessPriorityClass>.</xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.Process.PriorityClass%2A?displayProperty=fullName> Du kan ange att trådens <xref:System.Diagnostics.ProcessThread.PriorityLevel%2A>egenskapen till ett intervall med värden som utrymmet trådens basprioritet.</xref:System.Diagnostics.ProcessThread.PriorityLevel%2A> Win32 använder fyra prioritet klasser med sju basprioritet per klass.       Trådens aktuella prioritet kan avvika från basprioritet. Operativsystemet kan till exempel ändra den <xref:System.Diagnostics.ProcessThread.CurrentPriority%2A>egenskap baserat på tid som gått ut eller andra ökar när en process måste placeras i andra för åtkomst till processorn.</xref:System.Diagnostics.ProcessThread.CurrentPriority%2A> Dessutom kan du ange den <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>egenskapen att orsaka tillfälligt öka prioriteten för en tråd när processen tas ur tillståndet vänta.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> Prioriteten återställs när processen återgår till tillståndet vänta."
  syntax:
    content: public int BasePriority { get; }
    return:
      type: System.Int32
      description: "Tråden som operativsystemet beräknar genom att kombinera processens prioritetsklass med prioritetsnivån för tråden associerade basprioritet."
  overload: System.Diagnostics.ProcessThread.BasePriority*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.CurrentPriority
  id: CurrentPriority
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
  fullName: System.Diagnostics.ProcessThread.CurrentPriority
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar den aktuella prioriteten för tråden."
  remarks: "Trådens aktuella prioritet kan avvika från basprioritet. Exempelvis kan operativsystemet ändra CurrentPriority egenskap baserat på tid som gått ut eller andra ökar när en process måste placeras i andra för åtkomst till processorn. Dessutom kan du ange den <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>egenskapen att orsaka tillfälligt öka prioriteten för en tråd när processen tas ur tillståndet vänta.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> Prioriteten återställs när processen återgår till tillståndet vänta."
  syntax:
    content: public int CurrentPriority { get; }
    return:
      type: System.Int32
      description: "Tråden, som kan avvika från basprioritet baserat på hur operativsystemet schemalägger tråden aktuella prioritet. Prioriteten kan tillfälligt ökat för en aktiv tråd."
  overload: System.Diagnostics.ProcessThread.CurrentPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.Id
  id: Id
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: Id
  nameWithType: ProcessThread.Id
  fullName: System.Diagnostics.ProcessThread.Id
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar den unika identifieraren för tråden."
  remarks: "Operativsystemet återanvänder tråd ID-nummer som unikt identifierar trådar endast under sin livslängd."
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "Unik identifierare som är associerad med en specifik tråd."
  overload: System.Diagnostics.ProcessThread.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.IdealProcessor
  id: IdealProcessor
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
  fullName: System.Diagnostics.ProcessThread.IdealProcessor
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Anger önskade processorn att köra på tråden."
  remarks: "IdealProcessor-värdet är nollbaserade.  Med andra ord, om du vill ange trådtilldelning för den första processorn egenskapen till noll.       Systemet schemalägger trådar på deras önskade processorer när det är möjligt.       En tråd kan migrera från processorn till processor, med varje migrering ladda processorcache. Ange en processor för en tråd kan förbättra prestanda under tunga systembelastningar genom att minska antalet gånger som laddas processorcache."
  example:
  - "The following example demonstrates how to set the IdealProcessor property for an instance of Notepad to the first processor.  \n  \n [!code-vb[ProcessThreadIdealProcessor#1](~/add/codesnippet/visualbasic/p-system.diagnostics.pro_25_1.vb)]\n [!code-cs[ProcessThreadIdealProcessor#1](~/add/codesnippet/csharp/p-system.diagnostics.pro_25_1.cs)]"
  syntax:
    content: public int IdealProcessor { set; }
    return:
      type: System.Int32
      description: "Prioriterade processor för den tråd som används när systemet planerar trådar för att avgöra vilka processorn för att köra tråden på."
  overload: System.Diagnostics.ProcessThread.IdealProcessor*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Systemet kunde inte ange tråd att starta på den angivna processorn."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  id: PriorityBoostEnabled
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
  fullName: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar eller anger ett värde som anger om operativsystemet tillfälligt bör öka prioriteten för den associera tråden när huvudfönstret i trådens processen får fokus."
  remarks: "När PriorityBoostEnabled är `true`, systemet förstärker tillfälligt trådens prioritet när den associera processen tas ur tillståndet vänta. Den här åtgärden förhindrar att andra processer att avbryta bearbetningen av den aktuella tråden. PriorityBoostEnabled påverkas alla befintliga trådar som alla trådar som skapas därefter av processen. Om du vill återställa normal beteende, ange den <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>egenskapen `false`.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>       PriorityBoostEnabled påverkar endast när tråden körs i en process som har en <xref:System.Diagnostics.Process.PriorityClass%2A>ange någon av dynamisk prioritet uppräkningsvärdena (<xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, eller <xref:System.Diagnostics.ProcessPriorityClass>).</xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.Process.PriorityClass%2A>      > [!NOTE] > Öka prioriteten för högt kan tömma resurser från grundläggande operativsystemet och funktioner i nätverket. Detta kan orsaka problem med andra operativsystem aktiviteter."
  syntax:
    content: public bool PriorityBoostEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om du vill höja trådens prioritet när användaren interagerar med processen gränssnitt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.ProcessThread.PriorityBoostEnabled*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta prioritet förstärkningen information.       - eller - det gick inte att ange prioritet förstärkningen information."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PriorityLevel
  id: PriorityLevel
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
  fullName: System.Diagnostics.ProcessThread.PriorityLevel
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar eller anger prioritetsnivån för tråden."
  remarks: "Prioritetsnivån är inte ett enskilt värde, utan i stället ett intervall med värden. Operativsystemet beräknar trådens basprioritet med hjälp av processens <xref:System.Diagnostics.Process.PriorityClass%2A>att välja ett värde från det intervall som anges i egenskapen PriorityLevel.</xref:System.Diagnostics.Process.PriorityClass%2A>"
  syntax:
    content: public System.Diagnostics.ThreadPriorityLevel PriorityLevel { get; set; }
    return:
      type: System.Diagnostics.ThreadPriorityLevel
      description: "En av de <xref href=&quot;System.Diagnostics.ThreadPriorityLevel&quot;> </xref> värden, att ange ett adressintervall som utrymmet trådens prioritet."
  overload: System.Diagnostics.ProcessThread.PriorityLevel*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta Trådinformation för prioritet nivå.       - eller - det gick inte att ange prioritetsnivån för tråden."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  id: PrivilegedProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
  fullName: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar mängden tid som tråden har använt för att köra kod i operativsystemets kärna."
  remarks: "Windows använder flera olika skyddsmekanismer och i roten på alla är skillnaden mellan användarläge och privilegierat läge. PrivilegedProcessorTime motsvarar hur lång tid som programmet har använt för att köra i privilegierat läge i operativsystemets kärna. Den <xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>egenskapen anger hur lång tid som programmet har använt för att köra kod i användarläge utanför system kärna.</xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>       Användarläge begränsar programmet på två sätt som viktiga. Först programmet direkt åtkomst till inte kringutrustning, men i stället måste anropa operativsystemets kärna för att hämta eller ange kringutrustning data. Operativsystemet kan därför se till att ett program inte förstör kringutrustning data som krävs av en annan. Programmet kan inte andra kan läsa eller ändra data som underhåller själva operativsystemet. Den här begränsningen förhindrar att program oavsiktligt eller avsiktligt skada kärnor. Om programmet måste operativsystemet för att utföra en åtgärd, anropar någon av systemets rutiner. Många av dessa övergången i privilegierat läge utföras och återgå smidigt till användarläge."
  syntax:
    content: public TimeSpan PrivilegedProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som anger hur lång tid som tråden har använt för att köra kod i operativsystemets kärna.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.PrivilegedProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta tråd tid."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity
  id: ProcessorAffinity
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
  fullName: System.Diagnostics.ProcessThread.ProcessorAffinity
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Anger de processorer som den associera tråden kan köras."
  remarks: "Processortillhörighet för en tråd är uppsättningen processorer som den har en relation till. Med andra ord de kan schemaläggas att köras på.       ProcessorAffinity representerar en bit varje processor. Bit 0 representerar processorn en, bit 1 representerar processorn två och så vidare. I följande tabell visas en delmängd av möjliga ProcessorAffinity för ett system med fyra processorer.      | Egenskapsvärdet (hexadecimalt) | Giltig processorer |   |---------------------------------------|----------------------|   | 0x0001 | 1 |   | 0x0002 | 2 |   | 0x0003 | 1 eller 2 |   | 0x0004 | 3 |   | 0x0005 | 1 eller 3 |   | 0x0007 | 1, 2 eller 3 |   | 0x000F | 1, 2, 3 eller 4 |       Du kan också ange den enda prioriterade processorn för en tråd genom att ange den <xref:System.Diagnostics.ProcessThread.IdealProcessor%2A>egenskapen.</xref:System.Diagnostics.ProcessThread.IdealProcessor%2A> En tråd kan migrera från processorn till processor, med varje migrering ladda processorcache. Ange en processor för en tråd kan förbättra prestanda under tunga systembelastningar genom att minska antalet gånger som laddas processorcache."
  example:
  - "The following example shows how to set the ProcessorAffinity property for an instance of Notepad to the first processor.  \n  \n [!code-vb[ProcessThreadIdealProcessor#1](~/add/codesnippet/visualbasic/p-system.diagnostics.pro_22_1.vb)]\n [!code-cs[ProcessThreadIdealProcessor#1](~/add/codesnippet/csharp/p-system.diagnostics.pro_22_1.cs)]"
  syntax:
    content: public IntPtr ProcessorAffinity { set; }
    return:
      type: System.IntPtr
      description: "En <xref:System.IntPtr>som pekar på en uppsättning med bits, som representerar en processor som tråden kan köras på.</xref:System.IntPtr>"
  overload: System.Diagnostics.ProcessThread.ProcessorAffinity*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att ange processortillhörigheten."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor
  id: ResetIdealProcessor
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ResetIdealProcessor()
  nameWithType: ProcessThread.ResetIdealProcessor()
  fullName: System.Diagnostics.ProcessThread.ResetIdealProcessor()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Återställer perfekt processor för den här tråden som anger att det finns ingen enskild perfekt processor. Med andra ord så att en processor är idealiskt."
  syntax:
    content: public void ResetIdealProcessor ();
    parameters: []
  overload: System.Diagnostics.ProcessThread.ResetIdealProcessor*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Idealiskt processorn kunde inte återställas."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.StartAddress
  id: StartAddress
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
  fullName: System.Diagnostics.ProcessThread.StartAddress
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar minnesadressen för den funktion som anropas av operativsystemet som den här tråden har startats."
  remarks: "Varje process startas med en enskild tråd som kallas för den primära tråden. En tråd kan skapa ytterligare trådar.       En process har ett virtuellt adressutrymme, körbar kod, data, objekthandtag, miljövariabler, en basprioritet, och lägsta och högsta tillåtna storlekar för uppsättningen. Alla trådar i en process dela dess virtuellt adressutrymme och systemresurser. Dessutom upprätthåller varje tråd undantagshanterare, en schemalagd prioritet och en uppsättning strukturer som sparas trådens kontext när tråden väntar på att schemaläggas. Trådens kontext innehåller trådens uppsättning datorn register, kernel-stacken, en tråd miljöblock och en grupp med användare i den tråd processen adressutrymme.       Alla Windows-tråd faktiskt körs i en funktion som tillhandahålls av systemet inte tillämpningsprogrammet-funktionen. Den första adressen för den primära tråden är därför samma (eftersom den representerar adressen för funktionen tillhandahålls av systemet) för varje Windows-process i systemet. Egenskapen StartAddress kan du hämta den första adressen för funktionen som är specifik för ditt program."
  syntax:
    content: public IntPtr StartAddress { get; }
    return:
      type: System.IntPtr
      description: "Trådens startadressen, som pekar på den programdefinierade funktion som tråden körs."
  overload: System.Diagnostics.ProcessThread.StartAddress*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.StartTime
  id: StartTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: StartTime
  nameWithType: ProcessThread.StartTime
  fullName: System.Diagnostics.ProcessThread.StartTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar startades av tråden i operativsystemet."
  syntax:
    content: public DateTime StartTime { get; }
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som representerar den tid som fanns i systemet när operativsystemet startas tråden.</xref:System.DateTime>"
  overload: System.Diagnostics.ProcessThread.StartTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta tråd tid."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ThreadState
  id: ThreadState
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
  fullName: System.Diagnostics.ProcessThread.ThreadState
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar det aktuella tillståndet för den här tråden."
  remarks: "<xref:System.Diagnostics.ProcessThread.WaitReason%2A>Egenskapsvärdet är endast giltigt när värdet ThreadState är <xref:System.Diagnostics.ThreadState>.</xref:System.Diagnostics.ThreadState> </xref:System.Diagnostics.ProcessThread.WaitReason%2A> Kontrollera därför ThreadState värdet innan du når den <xref:System.Diagnostics.ProcessThread.WaitReason%2A>egenskapen.</xref:System.Diagnostics.ProcessThread.WaitReason%2A>"
  syntax:
    content: public System.Diagnostics.ThreadState ThreadState { get; }
    return:
      type: System.Diagnostics.ThreadState
      description: "En <xref href=&quot;System.Diagnostics.ThreadState&quot;> </xref> som anger att trådens körning av, till exempel kör väntan på, eller har avslutats."
  overload: System.Diagnostics.ProcessThread.ThreadState*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime
  id: TotalProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
  fullName: System.Diagnostics.ProcessThread.TotalProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar den totala mängden tid som tråden har har använt processorn."
  remarks: "Egenskapen TotalProcessorTime anger den totala mängden tid att systemet har tagits tråden från tillståndet vänta och få prioritet på en processor. På ett system med flera processorer skulle det här värdet inkluderar tidsåtgången för varje processor om tråden används mer än en processor.       Egenskapen TotalProcessorTime är summan av de <xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>och <xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>Egenskaper.</xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A> </xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>"
  syntax:
    content: public TimeSpan TotalProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som anger hur lång tid som tråden har kontroll över processorn.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.TotalProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta tråd tid."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.UserProcessorTime
  id: UserProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
  fullName: System.Diagnostics.ProcessThread.UserProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar tidsperiod som den associera tråden har använt för att köra kod i programmet."
  remarks: "Windows NT använder flera olika skyddsmekanismer och i roten på alla är skillnaden mellan användarläge och privilegierat läge. UserProcessorTime motsvarar hur lång tid som programmet har använt för att köra i användarläge utanför operativsystemets kärna. Den <xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>motsvarar hur lång tid som programmet har använt för att köra kod i privilegierat läge i system-kärna.</xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>       Användarläge begränsar programmet på två sätt som viktiga. Först programmet direkt åtkomst till inte kringutrustning, men i stället måste anropa operativsystemets kärna för att hämta eller ange kringutrustning data. Operativsystemet kan därför se till att ett program inte förstör kringutrustning data som krävs av en annan. Programmet kan inte andra kan läsa eller ändra data som underhåller själva operativsystemet. Den här begränsningen förhindrar att program oavsiktligt eller avsiktligt skada kärnor. Om programmet måste operativsystemet för att utföra en åtgärd, anropar någon av systemets rutiner. Många av dessa övergången i privilegierat läge utföras och återgå smidigt till användarläge."
  syntax:
    content: public TimeSpan UserProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som anger hur lång tid som tråden har använt för att köra kod i programmet, i motsats till i operativsystemets kärna.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.UserProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att hämta tråd tid."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.WaitReason
  id: WaitReason
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
  fullName: System.Diagnostics.ProcessThread.WaitReason
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar orsaken till att tråden väntar."
  remarks: "Egenskapen WaitReason är endast giltigt när det <xref:System.Diagnostics.ProcessThread.ThreadState%2A>är <xref:System.Diagnostics.ThreadState>.</xref:System.Diagnostics.ThreadState> </xref:System.Diagnostics.ProcessThread.ThreadState%2A> Kontrollera därför den <xref:System.Diagnostics.ProcessThread.ThreadState%2A>värdet innan du får egenskapen WaitReason.</xref:System.Diagnostics.ProcessThread.ThreadState%2A>"
  syntax:
    content: public System.Diagnostics.ThreadWaitReason WaitReason { get; }
    return:
      type: System.Diagnostics.ThreadWaitReason
      description: "En <xref href=&quot;System.Diagnostics.ThreadWaitReason&quot;> </xref> som representerar orsaken till att tråden är i tillståndet vänta."
  overload: System.Diagnostics.ProcessThread.WaitReason*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tråden är inte i tillståndet vänta."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Plattformen är Windows 98 eller Windows ME."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Processen är på en fjärrdator."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.ProcessThread.BasePriority
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
  fullName: System.Diagnostics.ProcessThread.BasePriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessThread.CurrentPriority
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
  fullName: System.Diagnostics.ProcessThread.CurrentPriority
- uid: System.Diagnostics.ProcessThread.Id
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: Id
  nameWithType: ProcessThread.Id
  fullName: System.Diagnostics.ProcessThread.Id
- uid: System.Diagnostics.ProcessThread.IdealProcessor
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
  fullName: System.Diagnostics.ProcessThread.IdealProcessor
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
  fullName: System.Diagnostics.ProcessThread.PriorityBoostEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.ProcessThread.PriorityLevel
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
  fullName: System.Diagnostics.ProcessThread.PriorityLevel
- uid: System.Diagnostics.ThreadPriorityLevel
  parent: System.Diagnostics
  isExternal: false
  name: ThreadPriorityLevel
  nameWithType: ThreadPriorityLevel
  fullName: System.Diagnostics.ThreadPriorityLevel
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
  fullName: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
  fullName: System.Diagnostics.ProcessThread.ProcessorAffinity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ResetIdealProcessor()
  nameWithType: ProcessThread.ResetIdealProcessor()
  fullName: System.Diagnostics.ProcessThread.ResetIdealProcessor()
- uid: System.Diagnostics.ProcessThread.StartAddress
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
  fullName: System.Diagnostics.ProcessThread.StartAddress
- uid: System.Diagnostics.ProcessThread.StartTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartTime
  nameWithType: ProcessThread.StartTime
  fullName: System.Diagnostics.ProcessThread.StartTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.ProcessThread.ThreadState
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
  fullName: System.Diagnostics.ProcessThread.ThreadState
- uid: System.Diagnostics.ThreadState
  parent: System.Diagnostics
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Diagnostics.ThreadState
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
  fullName: System.Diagnostics.ProcessThread.TotalProcessorTime
- uid: System.Diagnostics.ProcessThread.UserProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
  fullName: System.Diagnostics.ProcessThread.UserProcessorTime
- uid: System.Diagnostics.ProcessThread.WaitReason
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
  fullName: System.Diagnostics.ProcessThread.WaitReason
- uid: System.Diagnostics.ThreadWaitReason
  parent: System.Diagnostics
  isExternal: false
  name: ThreadWaitReason
  nameWithType: ThreadWaitReason
  fullName: System.Diagnostics.ThreadWaitReason
- uid: System.Diagnostics.ProcessThread.BasePriority*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
- uid: System.Diagnostics.ProcessThread.CurrentPriority*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
- uid: System.Diagnostics.ProcessThread.Id*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: Id
  nameWithType: ProcessThread.Id
- uid: System.Diagnostics.ProcessThread.IdealProcessor*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
- uid: System.Diagnostics.ProcessThread.PriorityLevel*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ResetIdealProcessor
  nameWithType: ProcessThread.ResetIdealProcessor
- uid: System.Diagnostics.ProcessThread.StartAddress*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
- uid: System.Diagnostics.ProcessThread.StartTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartTime
  nameWithType: ProcessThread.StartTime
- uid: System.Diagnostics.ProcessThread.ThreadState*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
- uid: System.Diagnostics.ProcessThread.UserProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
- uid: System.Diagnostics.ProcessThread.WaitReason*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
