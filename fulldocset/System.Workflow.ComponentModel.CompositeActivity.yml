### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.CompositeActivity
  id: CompositeActivity
  children:
  - System.Workflow.ComponentModel.CompositeActivity.#ctor
  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  - System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  langs:
  - csharp
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
  type: Class
  summary: "Härledda av <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> som är basklass för alla aktiviteter som innehåller andra aktiviteter. En CompositeActivity ansvarar för att hantera körningen av underordnade aktiviteter."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]En CompositeActivity hanterar körningen av underordnade aktiviteter med hjälp av <xref:System.Workflow.ComponentModel.ActivityExecutionContext>klassmetoder och händelser som definierats på <xref:System.Workflow.ComponentModel.Activity>klass.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.ActivityExecutionContext>  Till exempel har en underordnad aktivitet schemalagts för körning med <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> <xref:System.Workflow.ComponentModel.ActivityExecutionContext>.</xref:System.Workflow.ComponentModel.ActivityExecutionContext> </xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> En aktivitet med status på CompositeActivity kan meddelas när en underordnad aktivitet har slutförts exekveringen genom att prenumerera på den <xref:System.Workflow.ComponentModel.Activity.Closed>händelse som definierats på <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity.Closed>       Arbetsflödets körtid tvingande vissa villkor på CompositeActivity körning av de mest grundläggande som är att en aktivitet med status på CompositeActivity inte kan flytta till den <xref:System.Workflow.ComponentModel.Activity.Closed>tillstånd om alla underordnade aktiviteter är fortfarande i en <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, eller <xref:System.Workflow.ComponentModel.Activity.Faulting>, tillstånd.</xref:System.Workflow.ComponentModel.Activity.Faulting> </xref:System.Workflow.ComponentModel.Activity.Compensating> </xref:System.Workflow.ComponentModel.Activity.Canceling> </xref:System.Workflow.ComponentModel.Activity.Executing> </xref:System.Workflow.ComponentModel.Activity.Closed>"
  example:
  - "This example shows a basic `CompositeActivity` that executes its first child activity for execution. When the child activity moves to the Closed state, the composite activity is notified and then completes its execution.  \n  \n```c#  \npublic class HasOneChildActivity : CompositeActivity  \n{  \n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \n    {  \n        Activity child = this.EnabledActivities[0];  \n        child.Closed += this.ChildClosed;  \n        executionContext.ExecuteActivity(child);  \n  \n        return ActivityExecutionStatus.Executing;  \n    }  \n  \n    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  \n    {  \n        e.Activity.Closed -= this.ChildClosed;  \n        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  \n  \n        executionContext.CloseActivity();  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.TypeDescriptionProvider(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityTypeDescriptorProvider))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))]

      [System.Workflow.ComponentModel.Serialization.ContentProperty("Activities")]

      public class CompositeActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity()
  nameWithType: CompositeActivity.CompositeActivity()
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;> </xref> klass."
  syntax:
    content: public CompositeActivity ();
    parameters: []
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity(IEnumerable<Activity>)
  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;> </xref> klass från en <xref:System.Object>som implementerar det <xref:System.Collections.IEnumerable>gränssnittet med typen <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Collections.IEnumerable> </xref:System.Object>"
  syntax:
    content: public CompositeActivity (System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity> children);
    parameters:
    - id: children
      type: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}
      description: "Den <xref:System.Object>implementera den <xref:System.Collections.IEnumerable>gränssnittet med typen <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Collections.IEnumerable> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CompositeActivity(String)
  nameWithType: CompositeActivity.CompositeActivity(String)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;> </xref> klass, tillsammans med namnet för den aktiviteten."
  syntax:
    content: public CompositeActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet för instansen."
  overload: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities
  id: Activities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Activities
  nameWithType: CompositeActivity.Activities
  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hämtar objektet som representerar samlingen <xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;> </xref>, för alla underordnade aktiviteter."
  remarks: "Representerar mängden med underordnade aktiviteter som hanteras av den sammansatta aktiviteten. Den här samlingen kan uppdateras."
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCollection Activities { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityCollection
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityCollection&quot;></xref>alla underordnade aktiviteter."
  overload: System.Workflow.ComponentModel.CompositeActivity.Activities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  id: ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gäller de <xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;> </xref> manifestet i parametern till den här instansen."
  syntax:
    content: protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);
    parameters:
    - id: workflowChanges
      type: System.Workflow.ComponentModel.WorkflowChanges
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.WorkflowChanges&quot;> </xref> ska gälla."
  overload: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowChanges</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  id: CanModifyActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hämtar eller anger ett värde som styr om de enskilda aktiviteterna inom <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>kan ändras.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  remarks: ''
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the CanModifyActivities permissive for this type.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: protected bool CanModifyActivities { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om de enskilda aktiviteterna inom <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>kan vara ändrade, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  overload: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositeActivity.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anrop <> </> *> på den här instansen och eventuellt anrop <> </> *> på alla underordnade aktiviteter på den här instansen."
  remarks: "Under hela livslängden för en aktivitet, flera .NET-objekt skapas eller tagits bort. Varje gång en arbetsflödesinstans tas bort från minnet .NET objekt motsvarar aktiviteterna i arbetsflödesträdet kasseras (den <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A>metoden anropas för varje aktivitet).</xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> När arbetsflödesinstansen laddas upp, skapas ett nytt .NET-objekt för varje aktivitet med tillstånd från motsvarande inaktiveras."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser som används av den här instansen och alla underordnade aktiviteter på den här instansen; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa de ohanterade resurserna av den här instansen."
  overload: System.Workflow.ComponentModel.CompositeActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  id: EnabledActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Hämtar skrivskyddad samling som representerar delmängden av <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>som är aktiverade.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity> EnabledActivities { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}
      description: "Skrivskyddad samling som representerar delmängden av <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>som är aktiverade.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  overload: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  id: GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: GetDynamicActivities(Activity)
  nameWithType: CompositeActivity.GetDynamicActivities(Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Returnerar en matris som innehåller alla körs instanser av den angivna aktiviteten."
  syntax:
    content: protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Den angivna <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    return:
      type: System.Workflow.ComponentModel.Activity[]
      description: "En matris förekomster av en aktivitet som körs för närvarande."
  overload: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas när ett undantagsfel genereras i samband med körningen av den här instansen."
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> för den här instansen."
    - id: exception
      type: System.Exception
      description: "Den <xref:System.Exception>som orsakade det här felet.</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> som resultat av ett försök att avbryta den här instansen."
  overload: System.Workflow.ComponentModel.CompositeActivity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: CompositeActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Initierar alla lämpliga underordnade aktiviteter av den här instansen och den angivna <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Den angivna <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.CompositeActivity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anrop när en aktivitet har lagts till."
  syntax:
    content: protected virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Den angivna <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>."
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Den angivna <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>addedActivity</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas när en aktivitet har tagits bort."
  remarks: "Aktuella implementeringen innehåller inga funktioner."
  syntax:
    content: protected virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Den angivna <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>."
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "Den angivna <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  id: OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas av workflow runtime engine varje gång den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> för den här aktiviteten har lästs in."
  syntax:
    content: protected override void OnActivityExecutionContextLoad (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "En <xref:System.Object>som implementerar <xref:System.IServiceProvider>och tillhandahåller tjänster till den här instansen.</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  id: OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas av workflow runtime engine varje gång den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> för den här aktiviteten tas bort."
  syntax:
    content: protected override void OnActivityExecutionContextUnload (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "En <xref:System.Object>som implementerar <xref:System.IServiceProvider>och tillhandahåller tjänster till den här instansen.</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  id: OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnListChanged(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Utför ytterligare bearbetning när den <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>egenskapsändringar.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  syntax:
    content: protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&quot;> </xref> sändning av händelsen."
  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  id: OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnListChanging(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Händelse som inträffar före en ändring som gjorts till den underliggande <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  syntax:
    content: protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
      description: "<xref:System.EventArgs>Om händelsen.</xref:System.EventArgs>"
  overload: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas när ändringar har gjorts till samlingen <xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>för den här instansen.</xref:System.Workflow.ComponentModel.CompositeActivity.Activities*>"
  remarks: "När åsidosätts i en härledd klass, ger bearbetning för den här händelsen."
  syntax:
    content: protected virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);
    parameters:
    - id: rootContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> som är associerade med den här instansen."
  overload: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  id: Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  langs:
  - csharp
  name: Uninitialize(IServiceProvider)
  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Anropas av workflow runtime engine när en aktivitet som går över till den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> tillstånd från den <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> tillstånd."
  remarks: "Den här metoden används för rensning av aktivitet, t.ex Rensa dependency-egenskaper och ta bort köer."
  syntax:
    content: protected override void Uninitialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "En <xref:System.Object>som implementerar <xref:System.IServiceProvider>och tillhandahåller tjänster till den här instansen.</xref:System.IServiceProvider> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity()
  nameWithType: CompositeActivity.CompositeActivity()
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity()
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity(IEnumerable<Activity>)
  nameWithType: CompositeActivity.CompositeActivity(IEnumerable<Activity>)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(IEnumerable<Activity>)
- uid: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Activity>
  nameWithType: IEnumerable<Activity>
  fullName: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity(String)
  nameWithType: CompositeActivity.CompositeActivity(String)
  fullName: System.Workflow.ComponentModel.CompositeActivity.CompositeActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Activities
  nameWithType: CompositeActivity.Activities
  fullName: System.Workflow.ComponentModel.CompositeActivity.Activities
- uid: System.Workflow.ComponentModel.ActivityCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCollection
  nameWithType: ActivityCollection
  fullName: System.Workflow.ComponentModel.ActivityCollection
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: ApplyWorkflowChanges(WorkflowChanges)
  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
  fullName: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)
- uid: System.Workflow.ComponentModel.WorkflowChanges
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowChanges
  nameWithType: WorkflowChanges
  fullName: System.Workflow.ComponentModel.WorkflowChanges
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositeActivity.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
  fullName: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Activity>
  nameWithType: ReadOnlyCollection<Activity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: GetDynamicActivities(Activity)
  nameWithType: CompositeActivity.GetDynamicActivities(Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(Activity)
- uid: System.Workflow.ComponentModel.Activity[]
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity[]
  spec.csharp:
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.CompositeActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: CompositeActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanged(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)
- uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCollectionChangeEventArgs
  nameWithType: ActivityCollectionChangeEventArgs
  fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanging(ActivityCollectionChangeEventArgs)
  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.CompositeActivity.#ctor*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity.CompositeActivity
- uid: System.Workflow.ComponentModel.CompositeActivity.Activities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Activities
  nameWithType: CompositeActivity.Activities
- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: ApplyWorkflowChanges
  nameWithType: CompositeActivity.ApplyWorkflowChanges
- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: CanModifyActivities
  nameWithType: CompositeActivity.CanModifyActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Dispose
  nameWithType: CompositeActivity.Dispose
- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: EnabledActivities
  nameWithType: CompositeActivity.EnabledActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: GetDynamicActivities
  nameWithType: CompositeActivity.GetDynamicActivities
- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: HandleFault
  nameWithType: CompositeActivity.HandleFault
- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Initialize
  nameWithType: CompositeActivity.Initialize
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: CompositeActivity.OnActivityChangeAdd
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: CompositeActivity.OnActivityChangeRemove
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextLoad
  nameWithType: CompositeActivity.OnActivityExecutionContextLoad
- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnActivityExecutionContextUnload
  nameWithType: CompositeActivity.OnActivityExecutionContextUnload
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanged
  nameWithType: CompositeActivity.OnListChanged
- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnListChanging
  nameWithType: CompositeActivity.OnListChanging
- uid: System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: CompositeActivity.OnWorkflowChangesCompleted
- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize*
  parent: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: Uninitialize
  nameWithType: CompositeActivity.Uninitialize
