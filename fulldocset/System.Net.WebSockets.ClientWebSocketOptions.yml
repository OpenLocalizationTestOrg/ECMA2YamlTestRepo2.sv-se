### YamlMime:ManagedReference
items:
- uid: System.Net.WebSockets.ClientWebSocketOptions
  id: ClientWebSocketOptions
  children:
  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  - System.Net.WebSockets.ClientWebSocketOptions.Cookies
  - System.Net.WebSockets.ClientWebSocketOptions.Credentials
  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  - System.Net.WebSockets.ClientWebSocketOptions.Proxy
  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  - System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  langs:
  - csharp
  name: ClientWebSocketOptions
  nameWithType: ClientWebSocketOptions
  fullName: System.Net.WebSockets.ClientWebSocketOptions
  type: Class
  summary: "Alternativ som ska användas med en <xref href=&quot;System.Net.WebSockets.ClientWebSocket&quot;> </xref> objekt."
  syntax:
    content: public sealed class ClientWebSocketOptions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  id: AddSubProtocol(System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: AddSubProtocol(String)
  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Lägger till en underprotokollet till förhandlas under handskakningen för WebSocket-anslutningen."
  syntax:
    content: public void AddSubProtocol (string subProtocol);
    parameters:
    - id: subProtocol
      type: System.String
      description: "WebSocket underprotokoll att lägga till."
  overload: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  id: ClientCertificates
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger en samling av sida klientcertifikat."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Returns <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;></xref>.       En samling av sida klientcertifikat."
  overload: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  id: Cookies
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger cookies som är kopplad till begäran."
  syntax:
    content: public System.Net.CookieContainer Cookies { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "Returnerar <xref:System.Net.CookieContainer>.</xref:System.Net.CookieContainer>       Cookies som är kopplad till begäran."
  overload: System.Net.WebSockets.ClientWebSocketOptions.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  id: Credentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger autentiseringsuppgifter för klienten."
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Returnerar <xref:System.Net.ICredentials>.</xref:System.Net.ICredentials>       Autentiseringsuppgifter för klienten."
  overload: System.Net.WebSockets.ClientWebSocketOptions.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  id: KeepAliveInterval
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger det WebSocket-protokollet intervallet i millisekunder."
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Returnerar <xref:System.TimeSpan>.</xref:System.TimeSpan>       Det WebSocket-protokollet intervallet i millisekunder."
  overload: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  id: Proxy
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger proxyn för WebSocket-begäranden."
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Returnerar <xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy>       Proxy för WebSocket-begäranden."
  overload: System.Net.WebSockets.ClientWebSocketOptions.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  id: SetBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetBuffer(Int32,Int32)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Anger klienten buffert parametrar."
  syntax:
    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: "Storlek i byte av klienten mottagningsbuffert."
    - id: sendBufferSize
      type: System.Int32
      description: "Storlek i byte av klienten skicka bufferten."
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  id: SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Anger klienten buffert parametrar."
  syntax:
    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize, ArraySegment<byte> buffer);
    parameters:
    - id: receiveBufferSize
      type: System.Int32
      description: "Storlek i byte av klienten mottagningsbuffert."
    - id: sendBufferSize
      type: System.Int32
      description: "Storlek i byte av klienten skicka bufferten."
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "Ta emot buffert som ska användas."
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  id: SetRequestHeader(System.String,System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: SetRequestHeader(String,String)
  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Skapar ett HTTP-huvud och dess värde."
  syntax:
    content: public void SetRequestHeader (string headerName, string headerValue);
    parameters:
    - id: headerName
      type: System.String
      description: "Namnet på det HTTP-huvudet."
    - id: headerValue
      type: System.String
      description: "Värdet för HTTP-huvudet."
  overload: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "Hämtar eller anger en <xref:System.Boolean>-värde som anger om standardautentiseringsuppgifter ska användas under WebSocket-handskakningen.</xref:System.Boolean>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Returnerar <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>standardautentiseringsuppgifter ska användas under WebSocket handskakning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: AddSubProtocol(String)
  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer(Int32,Int32)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer(Int32,Int32,ArraySegment<Byte>)
  nameWithType: ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(Int32,Int32,ArraySegment<Byte>)
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetRequestHeader(String,String)
  nameWithType: ClientWebSocketOptions.SetRequestHeader(String,String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(String,String)
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: AddSubProtocol
  nameWithType: ClientWebSocketOptions.AddSubProtocol
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetBuffer
  nameWithType: ClientWebSocketOptions.SetBuffer
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: SetRequestHeader
  nameWithType: ClientWebSocketOptions.SetRequestHeader
- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*
  parent: System.Net.WebSockets.ClientWebSocketOptions
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: ClientWebSocketOptions.UseDefaultCredentials
