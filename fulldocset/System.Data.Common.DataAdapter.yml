### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "Representerar en uppsättning av SQL-kommandon och en databasanslutning som används för att fylla i <xref href=&quot;System.Data.DataSet&quot;> </xref> och uppdatera datakällan."
  remarks: "DataAdapter som fungerar som en brygga mellan en <xref:System.Data.DataSet>och en datakälla för att hämta och spara data.</xref:System.Data.DataSet> DataAdapter ger den här bridge genom att mappa <xref:System.Data.Common.DataAdapter.Fill%2A>, som ändrar data i för <xref:System.Data.DataSet>att matcha data i datakällan och <xref:System.Data.IDataAdapter.Update%2A>, som ändrar data i datakällan som ska matcha data i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.IDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.Fill%2A>       Om du ansluter till en SQL Server-databas, kan du öka prestandan genom att använda den <xref:System.Data.SqlClient.SqlDataAdapter>tillsammans med dess associerade <xref:System.Data.SqlClient.SqlCommand>och <xref:System.Data.SqlClient.SqlConnection>objekt.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> För stöd för OLE DB-datakällor kan du använda DataAdapter-objektet med dess associerade <xref:System.Data.OleDb.OleDbCommand>och <xref:System.Data.OleDb.OleDbConnection>objekt.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> För stöd för ODBC-datakällor kan du använda DataAdapter-objektet med dess associerade <xref:System.Data.Odbc.OdbcCommand>och <xref:System.Data.Odbc.OdbcConnection>objekt.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> För Oracle-databaser använder DataAdapter-objektet med dess associerade <xref:System.Data.OracleClient.OracleCommand>och <xref:System.Data.OracleClient.OracleConnection>objekt.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       När en instans av DataAdapter skapas ställs egenskaperna läsning och skrivning till ursprungliga värden. En lista över dessa värden finns i konstruktorn DataAdapter."
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av en <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> klass."
  remarks: "När en instans av <xref:System.Data.Common.DataAdapter>skapas följande läsning och skrivning egenskaper anges till följande ursprungliga värden.</xref:System.Data.Common.DataAdapter>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|   | <xref:System.Data.Common.DataAdapter.TableMappings%2A>| En matris med <xref:System.Data.Common.DataAdapter.TableMappings%2A>objekt. |       Du kan ändra värdet för någon av dessa egenskaper via ett separat anrop till egenskapen.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av en <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> klass från ett befintligt objekt av samma typ."
  remarks: "Den här överlagring för den <xref:System.Data.Common.DataAdapter>konstruktorn är avsedd för användning av en .NET Framework-dataprovidern när du implementerar en liknande konstruktor för användning i en klon-implementering.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "En <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> objekt som används för att skapa den nya <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar eller anger ett värde som anger om <> </> *> anropas på en <xref href=&quot;System.Data.DataRow&quot;> </xref> när den har lagts till i <xref href=&quot;System.Data.DataTable&quot;> </xref> under någon av de * *fyller** åtgärder."
  remarks: "Om `false`, <xref:System.Data.DataRow.AcceptChanges%2A>inte anropas, och de nyligen tillagda raderna behandlas som infogade rader.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <xref:System.Data.DataRow.AcceptChanges*>anropas på den <xref href=&quot;System.Data.DataRow&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataRow.AcceptChanges*> Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar eller anger om <> </> *> anropas under en <> </> *>."
  remarks: "Under ett anrop till den `Update` metod för en `DataAdapter`, databasen kan skicka data till ADO.NET programmet som utdataparametrar eller som den första returnerade posten i en resultatuppsättning. ADO.NET kan hämta dessa värden och uppdatera motsvarande kolumner i den <xref:System.Data.DataRow>uppdateras.</xref:System.Data.DataRow> Som standard ADO.NET anropar den `AcceptChanges` metod för den `DataRow` efter uppdateringen. Men om du vill lägga till som den uppdaterade raden tillbaka upp till en annan <xref:System.Data.DataTable>, kanske du vill preserver det ursprungliga värdet för en primärnyckelkolumn.</xref:System.Data.DataTable> Till exempel en primärnyckelkolumn som motsvarar en automatiskt ökar kolumnen i databasen, till exempel en identity-kolumn kan innehålla nya värden som har tilldelats av databasen som inte matchar de ursprungliga värdena som tilldelats i den `DataRow`. Som standard `AcceptChanges` anropas implicit efter en uppdatering, och de ursprungliga värdena i raden, som kan ha varit <xref:System.Data.DataColumn.AutoIncrement%2A>värden som har tilldelats av ADO.NET, går förlorade.</xref:System.Data.DataColumn.AutoIncrement%2A> Du kan behålla de ursprungliga värdena i den `DataRow` genom att förhindra att `ADO.NET` från anropar `AcceptChanges` när den utför en uppdatering på en rad genom att ange egenskapen AcceptChangesDuringUpdate `false`, som bevarar de ursprungliga värdena.      > [!NOTE] > Inställningen av `AcceptChangesDuringUpdate` egenskapen `false` gäller alla dataändringar, inte bara infogas. Om du vill redigera eller ta bort rader i samma uppdatering och om du vill undertrycka anropet till `AcceptChanges` endast för infogningar och sedan i stället för inställningen `AccceptChangesDuringUpdate` till `false`, använda en händelsehanterare för den `RowUpdated` händelsen för den `DataAdapter`. I hanterare kan du kontrollera den <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>att avgöra om data ändras är en infogning och om `true`, anger du <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>egenskapen för <xref:System.Data.Common.RowUpdatedEventArgs>att <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> Mer information och exempel finns i [hämtar identitet eller Räknare-värden](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <> </> *> anropas under en <> </> *>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Skapar en kopia av den här instansen av <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  remarks: "Den här metoden är föråldrad. Den <xref:System.Data.Common.DataAdapter.%23ctor%2A>konstruktorn ska användas i stället för den här metoden.</xref:System.Data.Common.DataAdapter.%23ctor%2A>       Alla kommandon i <xref:System.Data.Common.DataAdapter.TableMappings%2A>, <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>, och <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>klonas.</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> Dock anslutningar för kommandona inte kopieras, men delas. Därför klonade <xref:System.Data.Common.DataAdapter>kan användas med samma anslutning som originalet.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "Klonad instans av <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar eller anger ett värde som anger om att generera ett undantag när ett fel påträffas under en uppdatering för raden."
  remarks: "Om `ContinueUpdateOnError` är inställd på `true`, inget undantag genereras när ett fel uppstår under uppdateringen av en rad. Uppdatering av raden har hoppats över och information om felet placeras i den <xref:System.Data.DataRow.RowError%2A>egenskapen för raden i fel.</xref:System.Data.DataRow.RowError%2A> Den <xref:System.Data.Common.DataAdapter>fortsätter att uppdatera efterföljande rader.</xref:System.Data.Common.DataAdapter>       Om `ContinueUpdateOnError` är inställd på `false`, genereras ett undantag när det uppstår ett fel under uppdateringen av en rad."
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uppdateringen fortsätta utan att generera ett undantag. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Skapar en ny <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "En ny tabell mappning samling."
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten <xref:System.IDisposable.Dispose%2A>metoden och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.Object.Finalize%2A>       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Data.Common.DataAdapter>referenser.</xref:System.Data.Common.DataAdapter> Den här metoden startar den `Dispose` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Frisläpp endast resurser som inte hanteras."
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till eller uppdaterar rader i den <xref href=&quot;System.Data.DataSet&quot;> </xref> som matchar de som finns i datakällan."
  remarks: "Metoden Fill hämtar rader från datakällan med instruktionen SELECT som anges av en associerad <xref:System.Data.IDbDataAdapter.SelectCommand%2A>egenskap.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Det anslutningsobjekt som är associerade med SELECT-instruktionen måste vara giltig, men behöver inte vara öppen. Om anslutningen är stängd innan Fill anropas är öppna för att hämta data, därefter stängd. Om anslutningen är öppen innan Fill anropas, förblir den öppen.       Åtgärden Fyll sedan lägger till rader till mål <xref:System.Data.DataTable>objekt i den <xref:System.Data.DataSet>, skapar den <xref:System.Data.DataTable>objekt om de inte redan finns.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> När du skapar <xref:System.Data.DataTable>objekt, Fill åtgärden normalt skapar endast namnet kolumnmetadata.</xref:System.Data.DataTable> Men om den <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>egenskap är inställd på `AddWithKey`, skapas också lämpliga primära nycklar och begränsningar.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Om den `SelectCommand` returnerar resultatet av en yttre koppling av `DataAdapter` inte anger ett <xref:System.Data.DataTable.PrimaryKey%2A>värde för den resulterande <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> Du måste uttryckligen definiera den primära nyckeln för att säkerställa att dubblettrader matcha korrekt. Mer information finns i [definierar primärnycklar](~/add/includes/ajax-current-ext-md.md).       Om dataadaptern påträffar dubbla kolumner medan en <xref:System.Data.DataTable>, det genererar namn för efterföljande kolumner med mönstret &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; och så vidare.</xref:System.Data.DataTable> Om inkommande data innehåller icke namngivna kolumner, placeras de i den <xref:System.Data.DataSet>enligt mönstret &quot;Kolumn1&quot;, &quot;Kolumn2&quot; och så vidare.</xref:System.Data.DataSet> När flera resultatmängder läggs till i <xref:System.Data.DataSet>varje resultatmängd är placerad i separata tabeller.</xref:System.Data.DataSet> Ytterligare resultatmängder är namngivna genom att integrerad värden till angivna tabellnamnet (till exempel &quot;Table&quot;, &quot;Tabell1&quot;, &quot;Tabell2&quot; och så vidare). Program med kolumnnamn och tabellnamn bör kontrollera inte uppstår står i konflikt med dessa namngivning mönster.       När SELECT-instruktion används för att fylla i <xref:System.Data.DataSet>returnerar flera resultat, till exempel en batch SQL-instruktioner om en av resultat som innehåller ett fel alla efterföljande resultat hoppas över och inte har lagts till i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       Du kan använda metoden Fill flera gånger i samma <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Om det finns en primärnyckel, slås inkommande rader samman med matchande rader som redan finns. Om det finns ingen primär nyckel, läggs inkommande rader till i <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Vid hantering av batch SQL-uttryck som kan returnera flera resultat, implementering av <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>för .NET Framework Data Provider för OLE DB hämtar schemainformation för endast det första resultatet.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Använd för att hämta schemainformation för flera resultat, <xref:System.Data.Common.DbDataAdapter.Fill%2A>med den <xref:System.Data.MissingSchemaAction>inställd på `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "En <xref href=&quot;System.Data.DataSet&quot;> </xref> med poster vid behov, schema."
    return:
      type: System.Int32
      description: "Antalet rader har lagts till eller uppdateras i den <xref href=&quot;System.Data.DataSet&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till eller uppdaterar rader i den <xref href=&quot;System.Data.DataTable&quot;> </xref> som matchar de som finns i datakällan med den <xref href=&quot;System.Data.DataTable&quot;> </xref> namn och det angivna <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Se anmärkning för `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` för ytterligare information."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> med poster."
    - id: dataReader
      type: System.Data.IDataReader
      description: "En instans av <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Antalet rader har lagts till eller uppdateras i den <xref href=&quot;System.Data.DataTable&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till eller uppdaterar rader i ett visst intervall i mängden <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt som matchar de i datakällan."
  remarks: "Se anmärkning för `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` för ytterligare information."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "En samling <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt med poster."
    - id: dataReader
      type: System.Data.IDataReader
      description: "En instans av <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "Det nollbaserade indexet för den första posten."
    - id: maxRecords
      type: System.Int32
      description: "Ett heltal som anger det maximala antalet poster."
    return:
      type: System.Int32
      description: "Antalet rader har lagts till eller uppdateras i den <xref href=&quot;System.Data.DataTable&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till eller uppdaterar rader i det angivna intervallet i den <xref href=&quot;System.Data.DataSet&quot;> </xref> som matchar de som finns i datakällan med den <xref href=&quot;System.Data.DataSet&quot;> </xref> och <xref href=&quot;System.Data.DataTable&quot;> </xref> namn."
  remarks: "Se anmärkning för `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` för ytterligare information."
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "En <xref href=&quot;System.Data.DataSet&quot;> </xref> med poster."
    - id: srcTable
      type: System.String
      description: "En sträng som anger namnet på källtabellen."
    - id: dataReader
      type: System.Data.IDataReader
      description: "En instans av <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "Det nollbaserade indexet för den första posten."
    - id: maxRecords
      type: System.Int32
      description: "Ett heltal som anger det maximala antalet poster."
    return:
      type: System.Int32
      description: "Antalet rader har lagts till eller uppdateras i den <xref href=&quot;System.Data.DataSet&quot;> </xref>. Detta inkluderar inte rader som påverkas av instruktioner som inte returnerar rader."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Returneras när ett fel inträffar under fill-åtgärd."
  remarks: "Den **FillError** händelse gör att en användare att fastställa huruvida åtgärden fill ska fortsätta när felet uppstår. Exempel på när den **FillError** händelsen kan inträffa är: - data som ska läggas till en `DataSet` kan inte konverteras till en common language runtime-typen utan att förlora precision.      -Raden läggs innehåller data som bryter mot ett villkor som måste tillämpas på en `DataColumn` i den `DataSet`."
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar eller anger den <xref href=&quot;System.Data.LoadOption&quot;> </xref> som avgör hur adaptern fyller i <xref href=&quot;System.Data.DataTable&quot;> </xref> från den <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till en <xref href=&quot;System.Data.DataTable&quot;> </xref> till den angivna <xref href=&quot;System.Data.DataSet&quot;> </xref> och konfigurerar schemat så att den matchar som datakällan baserat på den angivna <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "Metoden FillSchema hämtar schemat från datakällan med hjälp av <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Anslutningsobjektet som är associerade med den <xref:System.Data.IDbDataAdapter.SelectCommand%2A>måste vara giltiga, men behöver inte vara öppen.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Om anslutningen är stängd innan FillSchema anropas den öppnas för att hämta data och sedan stängs. Om anslutningen är öppen innan FillSchema anropas, förblir den öppen.       En åtgärd för FillSchema lägger till en <xref:System.Data.DataTable>till målet <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Lägger sedan till kolumner till den <xref:System.Data.DataColumnCollection>av den <xref:System.Data.DataTable>, och konfigurerar följande <xref:System.Data.DataColumn>Egenskaper om de finns på datakällan:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Du måste ange <xref:System.Data.DataColumn.AutoIncrementStep%2A>och <xref:System.Data.DataColumn.AutoIncrementSeed%2A>separat.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema konfigureras också på <xref:System.Data.DataTable.PrimaryKey%2A>och <xref:System.Data.DataTable.Constraints%2A>Egenskaper enligt följande regler: – om en eller flera primärnyckelkolumnerna returneras av <xref:System.Data.IDbDataAdapter.SelectCommand%2A>de används som primärnyckelkolumnerna för <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Om ingen primärnyckelkolumnerna returneras men unika kolumner, används unika kolumner som den primära nyckeln om, och om alla kolumner som unik är kan nollställas. Om någon av kolumnerna är null, en <xref:System.Data.UniqueConstraint>läggs till i <xref:System.Data.ConstraintCollection>, men <xref:System.Data.DataTable.PrimaryKey%2A>egenskapen har inte angetts.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Om både primär nyckel och unika kolumner returneras används primärnyckelkolumnerna som primärnyckelkolumnerna för <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Underliggande datalagret kan tillåta kolumnattribut som inte stöds i en <xref:System.Data.DataColumn>, vilket gör att vissa kolumnattribut inte översätter korrekt.</xref:System.Data.DataColumn> Till exempel [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tillåter en identity-kolumn med datatypen tinyint medan en <xref:System.Data.DataColumn>kan bara Int16, Int32 och Int64 har den <xref:System.Data.DataColumn.AutoIncrement%2A>egenskapsuppsättning.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`tyst ignorerar fall där det <xref:System.Data.DataColumn>inte korrekt speglar datakällan och genererar inget undantag.</xref:System.Data.DataColumn>       Observera att primärnycklar och unika begränsningar har lagts till i <xref:System.Data.ConstraintCollection>enligt föregående regler, men andra villkor läggs inte typer.</xref:System.Data.ConstraintCollection>       Om ett unikt grupperat index har definierats för en kolumn eller kolumner i en tabell med SQL Server och primärnyckelns begränsning har definierats i en separat uppsättning kolumner, och sedan namnen på kolumnerna i det grupperade indexet kommer att returneras. Använda en frågetipset med SELECT-instruktion som anger namnet på det primära nyckelindexet för att returnera namnet eller namnen på de primära nyckelkolumnerna. Mer information om hur du anger frågetips finns [frågetipset (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Om den <xref:System.Data.Common.DataAdapter>möten duplicerade kolumner medan en <xref:System.Data.DataTable>, det genererar namn för efterföljande kolumner, hur du använder mönstret &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, och så vidare.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> Om inkommande data innehåller icke namngivna kolumner, placeras de i den <xref:System.Data.DataSet>enligt mönstret &quot;Kolumn1&quot;, &quot;Kolumn2&quot; och så vidare.</xref:System.Data.DataSet> När flera resultatmängder läggs till i <xref:System.Data.DataSet>varje resultatmängd är placerad i separata tabeller.</xref:System.Data.DataSet> Ytterligare resultatmängder är namngivna genom att integrerad värden till angivna tabellnamnet (till exempel &quot;Table&quot;, &quot;Tabell1&quot;, &quot;Tabell2&quot; och så vidare). Program med kolumnnamn och tabellnamn bör kontrollera inte uppstår står i konflikt med dessa namngivning mönster.       FillSchema returnerar inte några rader. Använd <xref:System.Data.Common.DataAdapter.Fill%2A>metoden för att lägga till rader till <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > Vid hantering av batch SQL-uttryck som kan returnera flera resultat, implementering av <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>för .NET Framework Data Provider för OLE DB hämtar schemainformation för endast det första resultatet.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Använd för att hämta schemainformation för flera resultat, <xref:System.Data.Common.DbDataAdapter.Fill%2A>med den <xref:System.Data.MissingSchemaAction>inställd på `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Den <xref href=&quot;System.Data.DataSet&quot;> </xref> fylls med schemat från datakällan."
    - id: schemaType
      type: System.Data.SchemaType
      description: "En av de <xref href=&quot;System.Data.SchemaType&quot;> </xref> värden."
    return:
      type: System.Data.DataTable[]
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt som innehåller schemainformation returneras från datakällan."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till en <xref href=&quot;System.Data.DataTable&quot;> </xref> till den angivna <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Den <xref href=&quot;System.Data.DataTable&quot;> </xref> fyllas från den <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "En av de <xref href=&quot;System.Data.SchemaType&quot;> </xref> värden."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Den <xref href=&quot;System.Data.IDataReader&quot;> </xref> som ska användas som datakälla när du fyller i <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt som innehåller schemainformation returneras från datakällan."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lägger till en <xref href=&quot;System.Data.DataTable&quot;> </xref> till den angivna <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Den <xref href=&quot;System.Data.DataTable&quot;> </xref> fyllas från den <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "En av de <xref href=&quot;System.Data.SchemaType&quot;> </xref> värden."
    - id: srcTable
      type: System.String
      description: "Namnet på källtabellen ska användas för mappning av tabellen."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Den <xref href=&quot;System.Data.IDataReader&quot;> </xref> som ska användas som datakälla när du fyller i <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable[]
      description: "En referens till en samling <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt som har lagts till i <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar de parametrar som anges av användaren vid körning av en SQL SELECT-instruktion."
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "En matris med <xref href=&quot;System.Data.IDataParameter&quot;> </xref> objekt som innehåller parametrar som anges av användaren."
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger om en <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> har skapats."
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> har skapats, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger åtgärden som ska vidtas när inkommande data inte har en matchande tabell eller kolumn."
  remarks: "<xref:System.Data.Common.DataAdapter.TableMappings%2A>Egenskapen innehåller master mappningen mellan returnerade poster och <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "En av de <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är inte en av de <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger åtgärden som ska vidtas när befintliga <xref href=&quot;System.Data.DataSet&quot;> </xref> schema matchar inte inkommande data."
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "En av de <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är inte en av de <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anropas när ett fel uppstår under en <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Återställer <> </> *> till dess standardtillstånd och orsaker &lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt; ta hänsyn till <> </> *>."
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar eller anger om den <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> metoden ska returnera providerspecifika värden eller gemensamma CLS-kompatibel värden."
  remarks: "Standardvärdet är `false`."
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> metoden ska returnera providerspecifika värden; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> vanliga CLS-kompatibel returvärden."
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger om den <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>egenskapen ska sparas.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>egenskapen är beständiga, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger om den <xref:System.Data.Common.DataAdapter.FillLoadOption*>egenskapen ska sparas.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Data.Common.DataAdapter.FillLoadOption*>egenskapen är beständiga, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Avgör om en eller flera <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objekt finns och att de ska sparas."
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en eller flera <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objekten finns; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anger hur en källtabell mappas till en dataset-tabell."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.Common.DataAdapter>instans omvandlas till ett <xref:System.Data.IDataAdapter>gränssnitt.</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       Mer information finns i <xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "En samling som innehåller master mappningen mellan returnerade poster och <xref href=&quot;System.Data.DataSet&quot;> </xref>. Standardvärdet är en tom samling."
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hämtar en samling som innehåller master mappningen mellan en källtabell och en <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "När stämma ändras, <xref:System.Data.Common.DataAdapter>använder du den <xref:System.Data.Common.DataTableMappingCollection>samling som du vill associera kolumnnamn som används av datakällan med kolumnnamn som används av <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataTableMappingCollection> </xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "En samling som innehåller master mappningen mellan returnerade poster och <xref href=&quot;System.Data.DataSet&quot;> </xref>. Standardvärdet är en tom samling."
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Anropar respektive INSERT-, UPDATE- eller DELETE-instruktioner för varje infogas, uppdateras eller tas bort raden i det angivna <xref href=&quot;System.Data.DataSet&quot;> </xref> från en <xref href=&quot;System.Data.DataTable&quot;> </xref> med namnet &quot;Table&quot;."
  remarks: "Uppdateringen har utförts på grund av raden. För varje infogade, ändrats och tagits bort rad metoden Update avgör vilken typ av ändring som har utförts på den (Infoga, uppdatera eller ta bort). Beroende på vilken typ av ändring av `Insert`, `Update,` eller `Delete` kommandot mallen kör för att sprida den ändrade raden till datakällan. När programmet anropar metoden Update på <xref:System.Data.Common.DataAdapter>undersöker den <xref:System.Data.DataRow.RowState%2A>egenskapen och kör de nödvändiga INSERT-, UPDATE- eller ta bort rapporterna upprepade gånger för varje rad baserat terabyte index som konfigurerats i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DataAdapter> Uppdateringen kan till exempel köra en DELETE-instruktion, följt av en INSERT-instruktion och en annan DELETE-instruktion, på grund av sortering av rader i <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Det bör noteras att dessa uttryck inte utförs som en batchprocess; varje rad uppdateras individuellt. Ett program kan anropa den <xref:System.Data.DataSet.GetChanges%2A>metod i situationer där du måste styra sekvensen av instruktionen typer (till exempel infoga före uppdatering).</xref:System.Data.DataSet.GetChanges%2A> Mer information finns i [uppdatering datakällor med DataAdapters](~/add/includes/ajax-current-ext-md.md).       Om INSERT-, UPDATE- eller DELETE-instruktioner inte har angetts, metoden Update genererar ett undantag. Du kan dock skapa en <xref:System.Data.SqlClient.SqlCommandBuilder>eller <xref:System.Data.OleDb.OleDbCommandBuilder>objekt att automatiskt generera SQL-uttryck för enskild tabell uppdateringar om du ställer in den `SelectCommand` egenskapen för en .NET Framework-dataprovidern.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Sedan ytterligare SQL-uttryck som du inte anger genereras av den **CommandBuilder**. Den här generationen logiken kräver information om nyckelkolumn måste finnas i <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Mer information finns i [genererar kommandon med CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Metoden Update hämtar rader från tabellen som anges i första mappningen innan du utför en uppdatering. Uppdateringen uppdaterar raden med värdet för den <xref:System.Data.IDbCommand.UpdatedRowSource%2A>egenskapen.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> Returnerade överskridande rader ignoreras.       När alla data har lästs in till den <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>händelse inträffar, tillåter användaren att granska den stämts <xref:System.Data.DataSet>liksom alla utdataparametrar returneras av kommandot.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> När en rad har uppdaterats, accepteras ändringar i den rad som.       När du använder Update ordningen för körningen är följande: 1.  Värdena i den <xref:System.Data.DataRow>flyttas till parametervärden.</xref:System.Data.DataRow>      2.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Kommandot körs.      4.  Om kommandot anges till `FirstReturnedRecord`, och sedan först returnerade resultatet är placerad i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Om det finns utdataparametrar, är de placerade i <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  Den <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>händelsen utlöses.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>anropas.</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> Detta höjer både <xref:System.Data.DataTable.RowChanging?displayProperty=fullName>och <xref:System.Data.DataTable.RowChanged?displayProperty=fullName>händelser för uppdaterad <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataTable.RowChanged?displayProperty=fullName> </xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       Varje kommando som är associerad med <xref:System.Data.Common.DataAdapter>har vanligtvis en samling för parametrar som är kopplade till det.</xref:System.Data.Common.DataAdapter> Parametrar som är mappade till den aktuella raden via den `SourceColumn` och `SourceVersion` egenskaper för a.NET-dataprovidern `Parameter` klass. `SourceColumn`refererar till en <xref:System.Data.DataTable>kolumnen som den <xref:System.Data.Common.DataAdapter>referenser till hämta parametervärden för den aktuella raden.</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`refererar till omappade kolumnnamnet innan alla mappningar för tabellen har tillämpats. Om `SourceColumn` refererar till en kolumn som inte finns de åtgärder som vidtagits beror på något av följande <xref:System.Data.MissingMappingAction>värden.</xref:System.Data.MissingMappingAction>      | Uppräkningsvärdet | Åtgärd |   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| Använd källa kolumnnamn och tabellnamn i <xref:System.Data.DataSet>om det finns ingen mappning. |   | `MissingMappingAction.Ignore`| En <xref:System.SystemException>genereras.</xref:System.SystemException> </xref:System.Data.DataSet> När mappningarna uttryckligen anges, en saknas mappningen för en indataparameter beror vanligtvis på ett fel. |   | `MissingMappingAction.Error`| En <xref:System.SystemException>genereras. |       Den `SourceColumn` egenskapen också används för att mappa värde för utdata eller parametrar för in-/ utdata tillbaka till den `DataSet`.</xref:System.SystemException> Ett undantag genereras om det refererar till en kolumn som inte finns.       Den `SourceVersion` -egenskapen för en .NET-dataprovidern `Parameter` klassen bestämmer om du vill använda den ursprungliga, Current eller Proposed versionen av värdet i kolumnen. Den här funktionen används ofta för att inkludera ursprungliga värden i WHERE-satsen i en UPDATE-instruktion för att söka efter Optimistisk samtidighet överträdelser.       Anropar den <xref:System.Data.DataSet.AcceptChanges%2A>metoden eller <xref:System.Data.DataTable.AcceptChanges%2A>metoden genomför alla ändringar i <xref:System.Data.DataSet>eller <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> Om någon av dessa metoder anropas innan den <xref:System.Data.Common.DbDataAdapter.Update%2A>metoden anropas, inga ändringar sparas när den <xref:System.Data.Common.DbDataAdapter.Update%2A>metoden anropas, såvida inte ytterligare ändringar har gjorts sedan <xref:System.Data.DataSet.AcceptChanges%2A>eller <xref:System.Data.DataTable.AcceptChanges%2A>anropades.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > Om ett fel inträffar vid uppdatering av en rad genereras ett undantag och körningen av uppdateringen har upphört. Om du vill fortsätta uppdateringen utan att generera ett undantag när ett fel uppstår, ange den <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>egenskapen `true` innan anropar <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Du kan också svara mot fel på grundval av per rad i den `RowUpdated` en DataAdapter-händelse. Uppdateringen fortsätta utan att generera ett undantag i den `RowUpdated` händelse, anger du <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>egenskapen för <xref:System.Data.Common.RowUpdatedEventArgs>att <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> För alla kolumner som du sprids till käll-onUpdate data en parameter som ska läggas till i `InsertCommand`, `UpdateCommand`, eller `DeleteCommand`. Den `SourceColumn` egenskapen för parametern ska anges till namnet på kolumnen. Den här inställningen anger att värdet för parametern inte har angetts manuellt men hämtas från en viss kolumn i den för närvarande bearbetade raden."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Den <xref href=&quot;System.Data.DataSet&quot;> </xref> används för att uppdatera datakällan."
    return:
      type: System.Int32
      description: "Antalet rader som har uppdaterats från den <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Källtabellen är ogiltig."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Ett försök att köra en INSERT-, UPDATE- eller DELETE-sats resulterade i noll poster som påverkas."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
