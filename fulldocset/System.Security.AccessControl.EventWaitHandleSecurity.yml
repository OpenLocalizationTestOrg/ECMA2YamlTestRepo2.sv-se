### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.EventWaitHandleSecurity
  id: EventWaitHandleSecurity
  children:
  - System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  - System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  - System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  langs:
  - csharp
  name: EventWaitHandleSecurity
  nameWithType: EventWaitHandleSecurity
  fullName: System.Security.AccessControl.EventWaitHandleSecurity
  type: Class
  summary: "Representerar den windowssäkerhet för åtkomstkontroll tillämpas på en namngiven system väntereferens. Den här klassen kan inte ärvas."
  remarks: "Objektets EventWaitHandleSecurity anger behörighet som krävs för en namngiven system väntereferens, och även anger hur åtkomstförsök granskas. Åtkomstbehörigheter för att vänta referensen uttrycks regler med varje åtkomstregel som representeras av ett <xref:System.Security.AccessControl.EventWaitHandleAccessRule>objekt.</xref:System.Security.AccessControl.EventWaitHandleAccessRule> Varje granskning regel representeras av ett <xref:System.Security.AccessControl.EventWaitHandleAuditRule>objekt.</xref:System.Security.AccessControl.EventWaitHandleAuditRule>       Detta speglar underliggande Windows säkerhetssystem, där varje skyddbara objekt har högst en DACL access control list (DACL) som styr åtkomsten till det skyddade objektet och högst en system access control list (SACL) som anger vilka åtkomstförsök granskas. DACL och SACL är ordnade listor över åtkomstkontrollposter (ACE) som anger åtkomst och granskning för användare och grupper. En <xref:System.Security.AccessControl.EventWaitHandleAccessRule>eller <xref:System.Security.AccessControl.EventWaitHandleAuditRule>objekt kan representera mer än en ACE.</xref:System.Security.AccessControl.EventWaitHandleAuditRule> </xref:System.Security.AccessControl.EventWaitHandleAccessRule>      > [!NOTE] > Ett <xref:System.Threading.EventWaitHandle>objekt kan representera en väntereferens för lokal eller en namngiven system vänta referensen.</xref:System.Threading.EventWaitHandle> Windowssäkerhet för åtkomstkontroll är användbar bara för namngivna vänta hanteras.       EventWaitHandleSecurity, <xref:System.Security.AccessControl.EventWaitHandleAccessRule>, och <xref:System.Security.AccessControl.EventWaitHandleAuditRule>klasser dölja implementeringsinformation om ACL: er och ACE.</xref:System.Security.AccessControl.EventWaitHandleAuditRule> </xref:System.Security.AccessControl.EventWaitHandleAccessRule> De kan du ignorera&17; ACE typer och komplexiteten med att underhålla korrekt arv och spridning av åtkomsträttigheter. Dessa objekt är också för att förhindra att följande vanliga access control fel:-skapa en säkerhetsbeskrivning med en null DACL. En null-referens till en DACL låter alla användare att lägga till regler för åtkomst till ett objekt som kan vara att skapa en denial of service-attack. Ett nytt objekt EventWaitHandleSecurity börjar alltid med en tom DACL, vilket nekar all åtkomst för alla användare.      -Brott mot kanonisk ordning för ACE: er. Om ACE-lista i DACL inte sparas i kanonisk ordning, kan användare av misstag ska få åtkomst till det skyddade objektet. Till exempel att nekade åtkomsträttigheter alltid måste finnas före tillåtna åtkomsträttigheter. EventWaitHandleSecurity objekt Underhåll internt i rätt ordning.      -Manipulering security descriptor flaggor som ska vara under resource manager kontroll.      -Skapa ogiltig kombinationer av ACE-flaggor.      -Manipulering ärvda åtkomstkontrollposter. Arv och spridningen hanteras av resurshanteraren som svar på ändringar av regler för åtkomst och granskningsprinciper.      -Infoga meningslöst ACE: er i ACL: er.       Endast funktioner som inte stöds av .NET-säkerhetsobjekt är skadliga aktiviteter som bör undvikas av en majoritet av programutvecklare, till exempel följande:-lågnivå-aktiviteter som normalt utförs av hanteraren för filserverresurser.      -Tillägg eller borttagning av poster på ett sätt som inte underhåller kanonisk ordning.       Om du vill ändra säkerhet för Windows behörigheter för en namngiven väntereferens använder den <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>metod för att hämta objektet EventWaitHandleSecurity.</xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> Ändra säkerhetsobjektet genom att lägga till och ta bort regler och sedan använda <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>metod för att återansluta det.</xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>      > [!IMPORTANT] > Du ändrar objekttypen EventWaitHandleSecurity påverkar inte behörighet för en namngiven väntereferens förrän du anropar den <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>metod för att tilldela ändras-objekt till den namngivna väntereferens.</xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>       För att kopiera en väntereferens till en annan säkerhet för åtkomstkontroll i <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>metod för att få ett EventWaitHandleSecurity-objekt som representerar åtkomst och granskningsprinciper regler för första väntereferens och sedan använda den <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>metod eller en konstruktor som accepterar ett EventWaitHandleSecurity-objekt om du vill tilldela andra vänta de här reglerna hanteras.</xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName> </xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>       Användare med en investering i security descriptor definition language (SDDL) kan använda den <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>metod för att ange åtkomstregler för en namngiven väntereferens och <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>metod för att hämta en sträng som representerar åtkomstregler i SDDL-format.</xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> Detta rekommenderas inte för nyutveckling."
  example:
  - "The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType> rules and <xref:System.Security.AccessControl.AccessControlType> rules, and shows the combination of rights in compatible rules. The example creates an EventWaitHandleSecurity object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_14_1.cs)]\n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_14_1.vb)]"
  syntax:
    content: 'public sealed class EventWaitHandleSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: EventWaitHandleSecurity()
  nameWithType: EventWaitHandleSecurity.EventWaitHandleSecurity()
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.EventWaitHandleSecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.AccessControl.EventWaitHandleSecurity&quot;> </xref> klass med standardvärden."
  remarks: "En ny <xref:System.Security.AccessControl.EventWaitHandleSecurity>objektet börjar alltid med en lista med tom godtycklig behörighet (DACL), vilket nekar all åtkomst för alla användare.</xref:System.Security.AccessControl.EventWaitHandleSecurity>"
  syntax:
    content: public EventWaitHandleSecurity ();
    parameters: []
  overload: System.Security.AccessControl.EventWaitHandleSecurity.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den här klassen stöds inte på Windows 98 eller Windows ME."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: EventWaitHandleSecurity.AccessRightType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar uppräkningstypen som den <xref href=&quot;System.Security.AccessControl.EventWaitHandleSecurity&quot;> </xref> klassen som används för att representera åtkomsträttigheter."
  remarks: "Klasser som härleds från den <xref:System.Security.AccessControl.ObjectSecurity>klassen åsidosättning av <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>egenskapen och returnera den typ som de använder för att representera åtkomsträttigheter.</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> När du arbetar med matriser eller samlingar som innehåller flera typer av säkerhetsobjekt kan du använda den här egenskapen för att fastställa rätt uppräkningstypen ska användas med varje säkerhetsobjekt."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>objekt som representerar den <xref href=&quot;System.Security.AccessControl.EventWaitHandleRights&quot;> </xref> uppräkningen.</xref:System.Type>"
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: EventWaitHandleSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Skapar en ny access control-regel för den angivna användaren med angivna behörigheter, åtkomstkontroll och flaggor."
  remarks: "Det rekommenderade sättet att skapa regler för åtkomstkontroll är att använda konstruktorer av <xref:System.Security.AccessControl.EventWaitHandleAccessRule>klass.</xref:System.Security.AccessControl.EventWaitHandleAccessRule>      > [!NOTE] > Men arv och spridningen är meningslösa för namngiven händelser, det är fortfarande möjligt att ange dem. Detta rekommenderas inte, eftersom det onödan komplicerar underhåll av regler, till exempel genom att störa kombinationen av regler som annars skulle vara kompatibel."
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "En <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> som identifierar användaren eller gruppen regeln gäller för."
    - id: accessMask
      type: System.Int32
      description: "En binär kombination av <xref href=&quot;System.Security.AccessControl.EventWaitHandleRights&quot;> </xref> värden att ange behörighet för att tillåta eller neka, omvandlas till ett heltal."
    - id: isInherited
      type: System.Boolean
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "En av de <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> värden som anger om rättigheterna som tillåts eller nekas."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;> </xref> objekt som representerar de angivna rättigheterna för den angivna användaren."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, eller <code>type</code> anger ett ogiltigt värde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>accessMask</code> är noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>är inget av typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, eller av en typ som <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> som kan konverteras till typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: EventWaitHandleSecurity.AccessRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar typ som den <xref href=&quot;System.Security.AccessControl.EventWaitHandleSecurity&quot;> </xref> klassen som används för att representera åtkomstregler."
  remarks: "Klasser som härleds från den <xref:System.Security.AccessControl.ObjectSecurity>klassen åsidosättning av <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>egenskapen och returnera den typ som de använder för att representera åtkomstregler.</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> När du arbetar med matriser eller samlingar som innehåller flera typer av säkerhetsobjekt kan du använda den här egenskapen för att avgöra korrekt åtkomst regeltypen för användning med varje säkerhetsobjekt."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>objekt som representerar den <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;> </xref> klass</xref:System.Type>"
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AddAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.AddAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en matchande regeln för åtkomstkontroll som den nya regeln kan slås ihop. Om ingen sådan hittas, lägger du till den nya regeln."
  remarks: "Metoden AddAccessRule söker efter regler med samma användare eller grupp och samma <xref:System.Security.AccessControl.AccessControlType>som `rule`.</xref:System.Security.AccessControl.AccessControlType> Om inget hittas `rule` har lagts till. Om en matchande regel hittas, rättigheter i `rule` slås samman med den befintliga regeln."
  example:
  - "The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType> rules and <xref:System.Security.AccessControl.AccessControlType> rules, and shows the combination of rights in compatible rules. The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/add/codesnippet/csharp/729692a8-5e98-486a-9864-_1.cs)]\n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/729692a8-5e98-486a-9864-_1.vb)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "Regeln för åtkomstkontroll att lägga till."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AddAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.AddAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(EventWaitHandleAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en granskning regel som den nya regeln kan slås ihop. Om ingen sådan hittas, lägger du till den nya regeln."
  remarks: "Metoden AddAuditRule söker efter regler med samma användare eller grupp som `rule`. Om inget hittas `rule` har lagts till. Om en matchande regel hittas flaggor i `rule` slås samman till den befintliga regeln."
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: "Granskningsregeln att lägga till. Användare som anges av den här regeln bestämmer sökningen."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: EventWaitHandleSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Skapar en ny regel för granskning, ange den användare som regeln gäller för åtkomsträttigheter till gransknings- och resultatet som utlöser Granskningsregeln."
  remarks: "Det rekommenderade sättet att skapa audit regler är att använda konstruktorer av <xref:System.Security.AccessControl.EventWaitHandleAuditRule>klass.</xref:System.Security.AccessControl.EventWaitHandleAuditRule>      > [!NOTE] > Men arv och spridningen är meningslösa för namngiven händelser, det är fortfarande möjligt att ange dem. Detta rekommenderas inte, eftersom det onödan komplicerar underhåll av regler, till exempel genom att störa kombinationen av regler som annars skulle vara kompatibel."
  syntax:
    content: public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "En <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> som identifierar användaren eller gruppen regeln gäller för."
    - id: accessMask
      type: System.Int32
      description: "En binär kombination av <xref href=&quot;System.Security.AccessControl.EventWaitHandleRights&quot;> </xref> värden som anger de åtkomstbehörigheter som ska granskas omvandlas till ett heltal."
    - id: isInherited
      type: System.Boolean
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Meningslöst för namngiven vänta hanterar, eftersom de inte har ingen hierarki."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "En binär kombination av <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> värden som anger om du vill granska lyckade åtkomst, misslyckade åtkomst eller båda."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> objekt som representerar den angivna Granskningsregeln för den angivna användaren. Returtypen för metoden är basklass, <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>, men det returnera värdet kan typkonverteras på ett säkert sätt till den härledda klassen."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, eller <code>flags</code> anger ett ogiltigt värde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>accessMask</code> är noll."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>är inget av typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, eller av en typ som <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> som kan konverteras till typen <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: EventWaitHandleSecurity.AuditRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hämtar typ som den <xref href=&quot;System.Security.AccessControl.EventWaitHandleSecurity&quot;> </xref> klassen som används för att representera audit regler."
  remarks: "Klasser som härleds från den <xref:System.Security.AccessControl.ObjectSecurity>klassen åsidosättning av <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>egenskapen och returnera den typ som de använder för att representera audit rättigheter.</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> När du arbetar med matriser eller samlingar som innehåller flera typer av säkerhetsobjekt kan du använda den här egenskapen för att fastställa rätt audit regeltypen för användning med varje säkerhetsobjekt."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "En <xref:System.Type>objekt som representerar den <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> klass</xref:System.Type>"
  overload: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en regeln för åtkomstkontroll med samma användare och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> (Tillåt eller neka) som den angivna Åtkomstregeln och med kompatibla arv och spridningen flaggor; de rättigheter som ingår i den angivna Åtkomstregeln tas bort från den om en sådan regel hittas."
  remarks: "Aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>genomsöks efter en regel med samma användare och samma <xref:System.Security.AccessControl.AccessControlType>värdet som `rule`.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.EventWaitHandleSecurity> Om ingen sådan regel finns ingen åtgärd och returnerar-metoden `false`. Om matchningsregler påträffas sin kompatibilitet och arv flaggor kontrolleras för kompatibilitet med flaggorna som har angetts i `rule`. Om ingen kompatibel regel finns ingen åtgärd och returnerar-metoden `false`. Om en regel med kompatibla flaggor hittas rättigheter anges i `rule` tas bort från kompatibel regeln, och metoden returnerar `true`. Om `rule` anger rättigheter som inte finns i kompatibel regeln, ingen åtgärd utförs med avseende på dessa rättigheter. Om alla rättigheter som tas bort från regeln för kompatibla hela regeln tas bort från aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>objektet.</xref:System.Security.AccessControl.EventWaitHandleSecurity>      > [!IMPORTANT] > Men du kan ange arv och spridningen flaggor för händelsen åtkomstregler genom att skapa dem med den <xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A>metoden detta rekommenderas inte.</xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A> Arv och spridningen har ingen betydelse för namngiven händelser och de gör underhåll av åtkomstregler mer komplicerad."
  example:
  - "The following code example demonstrates the use of the RemoveAccessRule method to remove rights from an <xref:System.Security.AccessControl.AccessControlType> rule in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object. It also shows that other rights in `rule` are ignored.  \n  \n The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user. The rights allowed include <xref:System.Security.AccessControl.EventWaitHandleRights>, <xref:System.Security.AccessControl.EventWaitHandleRights>, and <xref:System.Security.AccessControl.EventWaitHandleRights>. The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.EventWaitHandleRights> and <xref:System.Security.AccessControl.EventWaitHandleRights> rights, and uses that rule with the RemoveAccessRule method to remove <xref:System.Security.AccessControl.EventWaitHandleRights> from the <xref:System.Security.AccessControl.AccessControlType> rule in the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object. The <xref:System.Security.AccessControl.EventWaitHandleRights> right in `rule` is ignored.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule#1](~/add/codesnippet/csharp/22dce09a-3e98-48e6-a61f-_1.cs)]\n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule#1](~/add/codesnippet/visualbasic/22dce09a-3e98-48e6-a61f-_1.vb)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;> </xref> som anger att användaren och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> söka efter och arv och spridningen flaggor som en matchande regel om att hitta, måste vara kompatibel med. Anger behörighet att ta bort från regeln som kompatibel om hittades."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en kompatibel regel hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleAll(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter alla åtkomstregler kontroll med samma användare och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> (Tillåt eller neka) som den angivna regeln och, om hittas, tar bort dem."
  remarks: "Aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>genomsöks efter regler som har samma användare och samma <xref:System.Security.AccessControl.AccessControlType>värdet som `rule`.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.EventWaitHandleSecurity> Alla rättigheter som anges av `rule` ignoreras när du utför den här sökningen. Alla regler har tagits bort. Om det finns inga matchande regler utförs ingen åtgärd."
  example:
  - "The following code example shows that the RemoveAccessRuleAll method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.  \n  \n The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType> rule. The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType> rule from the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll#1](~/add/codesnippet/visualbasic/a6ff73cc-4227-4079-abe7-_1.vb)]\n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll#1](~/add/codesnippet/csharp/a6ff73cc-4227-4079-abe7-_1.cs)]"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;> </xref> som anger att användaren och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> att söka efter. Alla rättigheter som anges av den här regeln ignoreras."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en regeln för åtkomstkontroll som exakt matchar den angivna regeln och, om hittas, tar bort den."
  remarks: "Regeln tas bort om du bara exakt `rule` i alla uppgifter, inklusive flaggor. Andra regler med samma användare och <xref:System.Security.AccessControl.AccessControlType>påverkas inte.</xref:System.Security.AccessControl.AccessControlType>      > [!IMPORTANT] > En regel representerar en eller flera underliggande åtkomstkontrollposter (ACE), och dessa poster dela eller kombineras efter behov när du ändrar säkerhetsregler åtkomst för en användare. Därför en regel kan inte längre finns i specifika form den hade när den har lagts till och i så fall RemoveAccessRuleSpecific-metoden kan inte ta bort den."
  example:
  - "The following code example shows that the RemoveAccessRuleSpecific method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.  \n  \n The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType> access rule. The example then passes the original <xref:System.Security.AccessControl.AccessControlType> rule to the RemoveAccessRuleSpecific method, and displays the results, showing that nothing is deleted. The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType> rule in the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and successfully uses the RemoveAccessRuleSpecific method to remove the rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific#1](~/add/codesnippet/csharp/4b0413fe-85b1-4175-8dfd-_1.cs)]\n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific#1](~/add/codesnippet/visualbasic/4b0413fe-85b1-4175-8dfd-_1.vb)]"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "Den <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;> </xref> att ta bort."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(EventWaitHandleAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en granskning regel med samma användare som den angivna regeln och med kompatibla arv och spridningen flaggor. Om det finns en kompatibel regel, tas de rättigheter som ingår i den angivna regeln bort från den."
  remarks: "Aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>genomsöks efter en granskning regel med samma användare som `rule`.</xref:System.Security.AccessControl.EventWaitHandleSecurity> Om ingen sådan regel finns ingen åtgärd och returnerar-metoden `false`. Om matchningsregler påträffas sin kompatibilitet och arv flaggor kontrolleras för kompatibilitet med flaggorna som har angetts i `rule`. Om ingen kompatibel regel finns ingen åtgärd och returnerar-metoden `false`. Om en regel med kompatibla flaggor hittas rättigheter anges i `rule` tas bort från kompatibel regeln, och metoden returnerar `true`. Om `rule` anger rättigheter som inte finns i kompatibel regeln, ingen åtgärd utförs med avseende på dessa rättigheter. Om alla rättigheter som tas bort från regeln för kompatibla hela regeln tas bort från aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>objektet.</xref:System.Security.AccessControl.EventWaitHandleSecurity>      > [!IMPORTANT] > Men du kan ange arv och spridningen flaggor för händelseregler för granskning, genom att skapa dem med den <xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A>metoden detta rekommenderas inte.</xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A> Arv och spridningen har ingen betydelse för namngiven händelser och de gör underhåll av audit regler mer komplicerad."
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> som anger för användaren att söka efter och arv och spridningen flaggor som en matchande regel om att hitta, måste vara kompatibel med. Anger behörighet att ta bort från regeln som kompatibel om hittades."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en kompatibel regel hittas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleAll(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(EventWaitHandleAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker för alla granska regler med samma användare som den angivna regeln och, om det hittas, tas bort."
  remarks: "Aktuellt <xref:System.Security.AccessControl.EventWaitHandleSecurity>genomsöks för granskningsregler som har samma användare som `rule`.</xref:System.Security.AccessControl.EventWaitHandleSecurity> Alla rättigheter som anges av `rule` ignoreras när du utför den här sökningen. Alla regler har tagits bort. Om det finns inga matchande regler utförs ingen åtgärd."
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.EventWaitHandleAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: "En <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> som anger att användare kan söka efter. Alla rättigheter som anges av den här regeln ignoreras."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Söker efter en granskning regel som exakt matchar den angivna regeln och, om hittas, tar bort den."
  remarks: "Regeln tas bort om du bara exakt `rule` i alla uppgifter, inklusive flaggor. Andra audit regler för samma användare påverkas inte.      > [!IMPORTANT] > En regel representerar en eller flera underliggande åtkomstkontrollposter (ACE), och dessa poster dela eller kombineras efter behov när du ändrar audit säkerhetsregler för en användare. Därför en regel kan inte längre finns i specifika form den hade när den har lagts till och i så fall RemoveAuditRuleSpecific-metoden kan inte ta bort den."
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.EventWaitHandleAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: "Den <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> att ta bort."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: ResetAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.ResetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Tar bort alla regler för åtkomstkontroll med samma användare som den angivna regeln, oberoende av <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref>, och lägger sedan till den angivna regeln."
  remarks: "Om det inte finns några åtkomstregler vars användaren matchar den angivna regeln `rule` har lagts till."
  example:
  - "The following code example shows how the ResetAccessRule method replaces all rules for the matching user with the rule specified for the match.  \n  \n The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user. The example then creates a new rule that allows the current user full control, and uses the ResetAccessRule method to replace both of the existing rules with the new rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule#1](~/add/codesnippet/csharp/831b1f62-72fc-4f57-bcc7-_1.cs)]\n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule#1](~/add/codesnippet/visualbasic/831b1f62-72fc-4f57-bcc7-_1.vb)]"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "The <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;></xref> to add. Användare som anges av den här regeln anger regler för att ta bort innan den här regeln har lagts till."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  id: SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: SetAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.SetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(EventWaitHandleAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Tar bort alla regler för åtkomstkontroll med samma användare och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> (Tillåt eller neka) som den angivna regeln och lägger sedan till den angivna regeln."
  remarks: "Om den angivna regeln har <xref:System.Security.AccessControl.AccessControlType>, effekten av den här metoden är att ta bort alla <xref:System.Security.AccessControl.AccessControlType>regler för den angivna användaren ersätta dem med den angivna regeln.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> Om den angivna regeln har <xref:System.Security.AccessControl.AccessControlType>, alla <xref:System.Security.AccessControl.AccessControlType>regler för den angivna användaren har ersatts med den angivna regeln.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>       Om det finns inga regler vars användare och <xref:System.Security.AccessControl.AccessControlType>matchar den angivna regeln `rule` läggs.</xref:System.Security.AccessControl.AccessControlType>"
  example:
  - "The following code example shows how the SetAccessRule method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.  \n  \n The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user. The example then creates a new rule that allows the current user full control, and uses the SetAccessRule method to replace the existing <xref:System.Security.AccessControl.AccessControlType> rule with the new rule. The rule that denies access is not affected.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object. Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule#1](~/add/codesnippet/visualbasic/2e843fc0-0bf3-426e-ae6b-_1.vb)]\n [!code-cs[System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule#1](~/add/codesnippet/csharp/2e843fc0-0bf3-426e-ae6b-_1.cs)]"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAccessRule
      description: "The <xref href=&quot;System.Security.AccessControl.EventWaitHandleAccessRule&quot;></xref> to add. Användaren och <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> fastställa regler för att ta bort innan den här regeln har lagts till för den här regeln."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  id: SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  langs:
  - csharp
  name: SetAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.SetAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(EventWaitHandleAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Tar bort alla granska regler med samma användare som den angivna regeln, oberoende av den <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> värdet och lägger sedan till den angivna regeln."
  remarks: "Om det finns inga audit regler vars användaren matchar den angivna regeln `rule` har lagts till."
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.EventWaitHandleAuditRule
      description: "The <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;></xref> to add. Användare som anges av den här regeln anger regler för att ta bort innan den här regeln har lagts till."
  overload: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.EventWaitHandleSecurity.#ctor
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: EventWaitHandleSecurity()
  nameWithType: EventWaitHandleSecurity.EventWaitHandleSecurity()
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.EventWaitHandleSecurity()
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: EventWaitHandleSecurity.AccessRightType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: EventWaitHandleSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: EventWaitHandleSecurity.AccessRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AddAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.AddAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleAccessRule
  nameWithType: EventWaitHandleAccessRule
  fullName: System.Security.AccessControl.EventWaitHandleAccessRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AddAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.AddAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(EventWaitHandleAuditRule)
- uid: System.Security.AccessControl.EventWaitHandleAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleAuditRule
  nameWithType: EventWaitHandleAuditRule
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: EventWaitHandleSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: EventWaitHandleSecurity.AuditRuleType
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRuleAll(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleAll(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(EventWaitHandleAuditRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRuleAll(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleAll(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(EventWaitHandleAuditRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: ResetAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.ResetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: SetAccessRule(EventWaitHandleAccessRule)
  nameWithType: EventWaitHandleSecurity.SetAccessRule(EventWaitHandleAccessRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(EventWaitHandleAccessRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: SetAuditRule(EventWaitHandleAuditRule)
  nameWithType: EventWaitHandleSecurity.SetAuditRule(EventWaitHandleAuditRule)
  fullName: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(EventWaitHandleAuditRule)
- uid: System.Security.AccessControl.EventWaitHandleSecurity.#ctor*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: EventWaitHandleSecurity
  nameWithType: EventWaitHandleSecurity.EventWaitHandleSecurity
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: EventWaitHandleSecurity.AccessRightType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: EventWaitHandleSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: EventWaitHandleSecurity.AccessRuleType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: EventWaitHandleSecurity.AddAccessRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: EventWaitHandleSecurity.AddAuditRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: EventWaitHandleSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: EventWaitHandleSecurity.AuditRuleType
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: EventWaitHandleSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: EventWaitHandleSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: EventWaitHandleSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: EventWaitHandleSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: EventWaitHandleSecurity.ResetAccessRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: EventWaitHandleSecurity.SetAccessRule
- uid: System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule*
  parent: System.Security.AccessControl.EventWaitHandleSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: EventWaitHandleSecurity.SetAuditRule
