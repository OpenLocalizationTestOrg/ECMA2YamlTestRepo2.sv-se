### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Tillåter att ett program att avgöra om en fjärransluten dator är tillgänglig över nätverket."
  remarks: "Program använder klassen Ping för att identifiera om en fjärrdator kan nås.       Nätverkstopologi kan bestämma om Ping har kan kontakta en fjärrvärd. Närvaro och konfiguration av proxyservrar, network address translation (NAT) utrustning eller brandväggar kan förhindra att Ping lyckas. En lyckad Ping anger bara att fjärrvärden kan nås i nätverket. förekomsten av högre nivå tjänster (till exempel en webbserver) på fjärrvärden är inte säkert.       Den här klassen innehåller liknande funktioner som kommandoradsverktyget Ping.exe. Den <xref:System.Net.NetworkInformation.Ping.Send%2A>och <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder ett postmeddelande ICMP Internet Control Message Protocol () echo begäran till en fjärrdator och väntar på ett ICMP echo reply-meddelande från datorn.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> En detaljerad beskrivning av ICMP-meddelanden finns i RFC 792, finns på [http://www.ietf.org](http://www.ietf.org/).       Följande typer används med Ping-klassen och beskrivs i detalj nedan.      | **Typnamn**|**beskrivning**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Definierar statuskoder som beskriver resultatet av en ICMP echo begärandemeddelandet. |   | <xref:System.Net.NetworkInformation.PingOptions>| Du kan konfigurera eller hämta inställningar som styr hur många gånger paketet med begäran ska kunna vidarebefordras (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), och om den kan vara fragmenterade (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Innehåller resultatet av en ICMP-ekobegäran. |   | <xref:System.Net.NetworkInformation.PingException>| Genereras om ett oåterkalleligt fel uppstår. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Innehåller data som är associerade med <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelser, som aktiveras när ett <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>-anrop eller har avbrutits. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| Det ombud som innehåller callback-metoden anropas när ett <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>-anrop eller har avbrutits. |       Den <xref:System.Net.NetworkInformation.Ping.Send%2A>och <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder returnera svar i en <xref:System.Net.NetworkInformation.PingReply>objektet.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> Den <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>egenskapen returnerar ett <xref:System.Net.NetworkInformation.IPStatus>värde som visar resultatet av begäran.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       När du skickar begäran, måste du ange fjärrdatorn. Du kan göra detta genom att tillhandahålla en värd sträng, en IP-adress i strängformat, eller en <xref:System.Net.IPAddress>objektet.</xref:System.Net.IPAddress>       Du kan också ange någon av följande typer av information:-Data för din begäran. Ange `buffer` kan du lära dig hur lång tid som krävs för ett paket med en viss storlek att skickas till och från fjärrdatorn och den högsta överföringsenheten för sökvägen. (Se <xref:System.Net.NetworkInformation.Ping.Send%2A>eller <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads som tar en `buffer` parameter.)      – Om paketet ICMP Echo fragmenterade under överföringen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Se egenskapen <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>och <xref:System.Net.NetworkInformation.Ping.Send%2A>eller <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads som tar en `options` parameter.)      -Hur många gånger routning noder, t.ex. routrar och gateways, kan vidarebefordra paketet innan den når måldatorn eller tas bort.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Se <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>och <xref:System.Net.NetworkInformation.Ping.Send%2A>eller <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads som tar en `options` parameter.)      -Tidsgränsen inom vilken svaret måste tas emot.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Se den <xref:System.Net.NetworkInformation.Ping.Send%2A>eller <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads som tar en `timeout` parameter.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       Ping-klassen innehåller både synkrona och asynkrona metoder för att skicka begäran. Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A> Om ditt program inte bör blockera, använda den asynkrona <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>körs i sin egen tråd som tilldelas automatiskt av trådpoolen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som kallas för <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelser.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       Du kan inte använda samma instans av klassen Ping för att skapa flera samtidiga ICMP-ekobegäranden. Anropar <xref:System.Net.NetworkInformation.Ping.Send%2A>vid ett <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anrop är pågår eller anropa <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>flera gånger innan alla tidigare anrop har slutförts orsaker <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> klass."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> objekt och eventuellt omhändertar hanterade resurser."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och <xref:System.ComponentModel.Component.Finalize%2A>metod.</xref:System.ComponentModel.Component.Finalize%2A> Offentligt `Dispose()` metoden anropar metoden skyddade Dispose med den `disposing` parametern `true`. <xref:System.ComponentModel.Component.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.ComponentModel.Component.Finalize%2A>       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Net.NetworkInformation.Ping>objekt referenser.</xref:System.Net.NetworkInformation.Ping> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> till versioner endast ohanterade resurser."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Genererar den <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> händelse."
  remarks: "Klasser som ärver från den <xref:System.Net.NetworkInformation.Ping>klassen kan åsidosätta den här metoden om du vill utföra ytterligare åtgärder, till exempel logga data i den `e` parameter.</xref:System.Net.NetworkInformation.Ping>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnPingCompleted kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> objekt som innehåller händelsedata."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inträffar när en asynkron åtgärd att skicka ett eko ICMP Internet Control Message Protocol ()-meddelande och ta emot motsvarande ICMP echo svarsmeddelandet har slutförts eller har avbrutits."
  remarks: "Program använder PingCompleted händelsen för att få information om status för slutförande och data som samlas in av ett anrop till en av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Den <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegat innehåller anropet tillbaka metoden anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar den här händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försöker skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress>"
  remarks: "Den här metoden skickar till värden som anges av `address` en 32 <xref:System.Byte>databuffert med ICMP echo-meddelandet.</xref:System.Byte> Metoden väntar fem sekunder för en ICMP echo reply-meddelande. Om den inte får ett svar i denna tid, metoden returnerar och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot, eller om orsaken till felet beskrivs om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försök att skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den angivna datorn och ta emot en motsvarande ICMP echo reply-meddelande från datorn."
  remarks: "Den här metoden skickar en 32 <xref:System.Byte>databuffert med ICMP echo-meddelandet.</xref:System.Byte> Metoden väntar fem sekunder för en ICMP echo reply-meddelande. Om den inte får ett svar i denna tid, metoden returnerar och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot, eller innehåller orsaken till felet, om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försöker skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress> Den här metoden kan du ange ett timeout-värde för åtgärden."
  remarks: "Om meddelandet ICMP echo svar inte emot inom den tid som anges i den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Paketet eller paket fragment kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot eller innehåller orsaken till felet om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försök att skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den angivna datorn och ta emot en motsvarande ICMP echo reply-meddelande från datorn. Den här metoden kan du ange ett timeout-värde för åtgärden."
  remarks: "Om meddelandet ICMP echo svar inte emot inom den tid som anges i den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot eller innehåller orsaken till felet om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försöker skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Om meddelandet ICMP echo svar inte emot inom den tid som anges i den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Paketet eller paket fragment kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot, eller innehåller orsaken till felet, om inget meddelande togs emot. Metoden returnerar <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> om paketet överskrider den högsta överföringsenheten (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>buffer</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>buffer</code> är större än 65 500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försök att skicka ett meddelande för echo av ICMP Internet Control Message Protocol () med den angivna bufferten till den angivna datorn och ta emot en motsvarande ICMP echo reply-meddelande från datorn. Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Om meddelandet ICMP echo svar inte emot inom den tid som anges i den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Paketet eller paket fragment kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.Send%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot eller innehåller orsaken till felet om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;).       - eller - <code>buffer</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>buffer</code> är större än 65 500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försöker skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>och ta emot ett motsvarande ICMP echo reply-meddelande från datorn.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för drift och kontroll fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
  remarks: "Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Om den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Använd den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>att ange det maximala antalet gånger meddelandet ICMP echo kan vidarebefordras innan den når sin destination.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot, eller innehåller orsaken till felet, om inget meddelande togs emot. Metoden returnerar <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> om paketet överskrider den högsta överföringsenheten (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>buffer</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>buffer</code> är större än 65 500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Försök att skicka ett meddelande för echo av ICMP Internet Control Message Protocol () med den angivna bufferten till den angivna datorn och ta emot en motsvarande ICMP echo reply-meddelande från datorn. Den här överlagring kan du ange ett timeout-värde för drift och kontroll fragmentering och Time-to-Live värden för ICMP-paketet."
  remarks: "Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Om den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Använd den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>att ange det maximala antalet gånger meddelandet ICMP echo kan vidarebefordras innan den når sin destination.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objekt som innehåller information om ICMP echo reply-meddelande om en togs emot eller innehåller orsaken till felet om inget meddelande togs emot."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng.       - eller - <code>buffer</code> är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, eller <code>buffer</code> är större än 65 500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress>"
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när ditt program inte bör blockera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop till den här metoden körs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Ange den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen, måste du lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Om ditt program bör blockera väntan på ett svar med någon av de <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Den här metoden skickar en 32 <xref:System.Byte>databuffert med ICMP echo-meddelandet.</xref:System.Byte> Metoden väntar fem sekunder för en ICMP echo reply-meddelande. Om den inte får ett svar i denna tid, metoden returnerar och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Paketet eller paket fragment kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till den <xref:System.Net.NetworkInformation.Ping.SendAsync*>metoden pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn."
  remarks: "Metoden SendAsync skickar meddelandet echo asynkront och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status för ditt program. Anropa metoden SendAsync när ditt program inte bör blockera. Varje anrop till den här metoden körs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Ange den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen, måste du lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Den här metoden skickar en 32 <xref:System.Byte>databuffert med ICMP echo-meddelandet.</xref:System.Byte> Metoden väntar fem sekunder för en ICMP echo reply-meddelande. Om den inte får ett svar som tiden metoden returnerar och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Paketet eller paket fragment kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till metoden SendAsync pågår."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Det gick inte att matcha till en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet Echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när ditt program inte bör blockera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>metoden pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett eko ICMP Internet Control Message Protocol ()-meddelande till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn. Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet Echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när ditt program inte bör blockera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Det gick inte att matcha till en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Den här metoden skickar meddelandet echo asynkront och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status för ditt program. Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när ditt program inte bör blockera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Ange den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen, måste du lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Om tillämpningsprogrammet blockerar väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett meddelande för echo av ICMP Internet Control Message Protocol () med den angivna bufferten till den angivna datorn och ett meddelande visas motsvarande ICMP echo svar från datorn. Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet Echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när ditt program inte bör blockera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Denna överlagring använder standardinställningarna för paket fragmentering och vidarebefordring av paket. Paketet som innehåller ICMP echo-meddelanden kan vara fragmenterad under överföring om den totala paketstorleken överskrider den maximala paketstorleken som kan överföras av någon av noderna routning mellan lokala och fjärranslutna datorer. För att förhindra fragmentering med någon av de <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoder som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> När <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Paketet eller paket fragment (om fragmenterad) kan vidarebefordras genom Routning noder 128 gånger innan det tas bort. Du kan ändra den här inställningen genom att använda en <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>överlagring som tar ett `options` parametern och ange den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>egenskapen till önskat värde.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Det gick inte att matcha till en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och ett meddelande visas motsvarande ICMP echo svar från datorn.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för drift och kontroll fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet Echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när programmet inte måste blockerar.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Om ditt program blockerar väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Om den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Använd den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>att ange det maximala antalet gånger meddelandet ICMP echo kan vidarebefordras innan den når sin destination.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En <xref:System.Net.IPAddress>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynkront försöker skicka ett meddelande för echo av ICMP Internet Control Message Protocol () med den angivna bufferten till den angivna datorn och ett meddelande visas motsvarande ICMP echo svar från datorn. Den här överlagring kan du ange ett timeout-värde för drift och kontroll fragmentering och Time-to-Live värden för ICMP-paketet."
  remarks: "Den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden skickar meddelandet Echo asynkront, och när åtgärden har slutförts (lyckas eller misslyckas), returnerar status i tillämpningsprogrammet.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Anropa den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metoden när programmet inte måste blockerar.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Varje anrop utförs i en separat tråd som tilldelas automatiskt av trådpoolen. När den asynkrona åtgärden har slutförts som den genererar den <xref:System.Net.NetworkInformation.Ping.PingCompleted>händelse.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Program använder en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>ombud som anger den metod som anropas när <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>genererar händelsen.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Du måste lägga till en <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegera till händelsen innan du anropar <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Den delegatmetod tar emot en <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objekt som innehåller en <xref:System.Net.NetworkInformation.PingReply>-objektet som beskriver resultatet av den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektet ärver den <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>egenskapen.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Den här egenskapen innehåller den `userToken` objekt skickades till den <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>anropa.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Om ditt program bör blockera väntan på ett svar, Använd den <xref:System.Net.NetworkInformation.Ping.Send%2A>metoder; dessa metoder är synkrona.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Om ICMP echo reply-meddelande inte är emot inom den tid som anges av den `timeout` parameter, ICMP echo misslyckas och <xref:System.Net.NetworkInformation.PingReply.Status%2A>egenskap är inställd på <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > När du anger mycket små tal för `timeout`, Ping-svar kan tas emot även om `timeout` millisekunder har förflutit.       Om den <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>egenskapen är `true` och totala paketets storlek överskrider den maximala paketstorleken som kan överföras med någon av noderna routning mellan lokala och fjärranslutna datorer misslyckas ICMP-ekobegäran.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Använd den <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>att ange det maximala antalet gånger meddelandet ICMP echo kan vidarebefordras innan den når sin destination.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Om paketet inte når sin destination efter det angivna antalet gånger vidarebefordras, ignoreras paketet och ICMP-ekobegäran misslyckas. När det händer kan <xref:System.Net.NetworkInformation.PingReply.Status%2A>anges till <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "En <xref:System.String>som identifierar den dator som är mål för meddelandet ICMP echo.</xref:System.String> Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: buffer
      type: System.Byte[]
      description: "Ett <xref:System.Int32>värde som anger det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    - id: userToken
      type: System.Object
      description: "Ett objekt som har överförts till metoden anropas när den asynkrona åtgärden har slutförts."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> är en IPv6-adress och den lokala datorn kör ett operativsystem tidigare än Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Det gick inte att matcha till en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> är större än 65 500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Avbryter alla väntande asynkrona begäranden att skicka meddelandet echo ICMP Internet Control Message Protocol () och får ett motsvarande ICMP echo reply-meddelande."
  remarks: "Anropa den här metoden om du vill avsluta samtal till <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>som inte har slutförts.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och tar emot ett motsvarande ICMP echo reply-meddelande från den datorn som en asynkron åtgärd.</xref:System.Net.IPAddress>"
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En IP-adress som identifierar den dator som är mål för ICMP echo-meddelandet."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skickar en ICMP Internet Control Message Protocol () echo-meddelande med angivna data bufferten till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Den dator som är mål för ICMP echo-meddelandet. Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och tar emot ett motsvarande ICMP echo reply-meddelande från den datorn som en asynkron åtgärd.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En IP-adress som identifierar den dator som är mål för ICMP echo-meddelandet."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skickar en ICMP Internet Control Message Protocol () echo-meddelande med angivna data bufferten till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn som en asynkron åtgärd. Den här överlagring kan du ange ett timeout-värde för åtgärden."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Den dator som är mål för ICMP echo-meddelandet. Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och tar emot ett motsvarande ICMP echo reply-meddelande från den datorn som en asynkron åtgärd.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden och en buffert som ska användas för skicka och ta emot."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En IP-adress som identifierar den dator som är mål för ICMP echo-meddelandet."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> överskrider 65,500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skickar en ICMP Internet Control Message Protocol () echo-meddelande med angivna data bufferten till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn som en asynkron åtgärd. Den här överlagring kan du ange ett timeout-värde för åtgärden och en buffert som ska användas för skicka och ta emot."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Den dator som är mål för ICMP echo-meddelandet. Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skicka ett meddelande med ICMP Internet Control Message Protocol () echo med den angivna bufferten till den dator som har det angivna <xref:System.Net.IPAddress>, och tar emot ett motsvarande ICMP echo reply-meddelande från den datorn som en asynkron åtgärd.</xref:System.Net.IPAddress> Den här överlagring kan du ange ett timeout-värde för åtgärden, en buffert som ska användas för skicka och ta emot, och kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "En IP-adress som identifierar den dator som är mål för ICMP echo-meddelandet."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>är mindre än noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett anrop till <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>pågår.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Ett undantag uppstod under skickas eller tas emot ICMP-meddelanden. Se det inre undantaget för exakt undantaget utlöstes."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> är inte en giltig IP-adress."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har tagits bort."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Storleken på <code> buffer </code> överskrider 65,500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Skickar en ICMP Internet Control Message Protocol () echo-meddelande med angivna data bufferten till den angivna datorn och ta emot ett motsvarande ICMP echo reply-meddelande från datorn som en asynkron åtgärd. Den här överlagring kan du ange ett timeout-värde för åtgärden, en buffert som ska användas för skicka och ta emot, och kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>> objekt slutförs efter ICMP-paketet har skickats och svaret har tagits emot.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Den dator som är mål för ICMP echo-meddelandet. Det angivna värdet för den här parametern kan vara ett värdnamn eller en strängrepresentation av en IP-adress."
    - id: timeout
      type: System.Int32
      description: "Det maximala antalet millisekunder (när du har skickat meddelandet echo) att vänta på ICMP echo reply-meddelande."
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som innehåller data som ska skickas med ICMP echo-meddelanden och returneras i svarsmeddelandet ICMP echo.</xref:System.Byte> Matrisen får inte innehålla mer än 65,500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "En <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objekt som används för att kontrollera fragmentering och Time-to-Live värden för ICMP echo meddelandepaketet."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Returnerar &lt;xref:System.Threading.Tasks.Task%601&gt;.       Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
