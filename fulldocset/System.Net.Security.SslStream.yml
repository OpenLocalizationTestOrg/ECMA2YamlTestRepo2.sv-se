### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Ger en dataström som används för kommunikation mellan klient-server som använder säkerhetsprotokollet Secure Socket Layer (SSL) för att autentisera servern och klienten (valfritt)."
  remarks: "SSL-protokollen bidra till att tillhandahålla sekretess och integritetskontroll för meddelanden som skickas med hjälp av en SslStream. En SSL-anslutning, till exempel som tillhandahålls av SslStream, ska användas vid kommunikation känslig information mellan en klient och en server. Använda en SslStream hjälper dig att förhindra att någon från läsning och manipulera informationen när den är under överföring i nätverket.       En instans av SslStream överför data med hjälp av en dataström som du anger när du skapar SslStream. Om du anger den här underliggande dataströmmen har möjlighet att ange om stänger SslStream stängs också den underliggande dataströmmen. Normalt klassen SslStream används tillsammans med den <xref:System.Net.Sockets.TcpClient>och <xref:System.Net.Sockets.TcpListener>klasser.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.TcpClient.GetStream%2A>Metoden innehåller en <xref:System.Net.Sockets.NetworkStream>lämplig för användning med SslStream klassen.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       När du har skapat en SslStream måste servern och du kan också klienten autentiseras. Servern måste ange X509 certifikat som upprättar bevis på dess identitet och kan begära att klienten också göra detta. Autentisering måste utföras innan de överförs informationen med hjälp av en SslStream. Klienter initierar autentisering med hjälp av den synkrona <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoder som blockerar tills autentiseringen har slutförts, eller den asynkrona <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metoder som inte blockerar väntar på att slutföra autentiseringen.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servrar initiera autentisering med hjälp av den synkrona <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Både klienten och servern måste initierar autentiseringen.       Autentiseringen utförs av providern SSPI (Security Support) channel-providern. Klienten får möjlighet att styra valideringen av servercertifikatet genom att ange en <xref:System.Net.Security.RemoteCertificateValidationCallback>Delegera när du skapar en SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> Servern kan också styra verifiering genom att tillhandahålla en <xref:System.Net.Security.RemoteCertificateValidationCallback>Delegera.</xref:System.Net.Security.RemoteCertificateValidationCallback> Den metod som refereras av delegaten innehåller den Fjärrpartnern certifikat och eventuella fel uppstod vid verifiering av certifikatet SSPI. Observera att om servern anger en delegat, anropas den delegatmetod oavsett om klientautentisering har begärts av servern. Om servern inte har begärt klientautentisering, serverns delegatmetod tar emot ett null-certifikat och en tom matris av certifikatfel.       Om servern kräver klientautentisering, måste klienten ange en eller flera certifikat för autentisering. Om klienten har mer än ett certifikat kan klienten kan tillhandahålla en <xref:System.Net.Security.LocalCertificateSelectionCallback>delegat att välja rätt certifikat för servern.</xref:System.Net.Security.LocalCertificateSelectionCallback> Klientens certifikat måste finnas i den aktuella användarens &quot;Den&quot; certifikatarkiv. Klientautentisering via certifikat stöds inte för den <xref:System.Security.Authentication.SslProtocols>(SSL version 2-protokollet).</xref:System.Security.Authentication.SslProtocols>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och SslStream inte längre användas.</xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.       När autentiseringen, även kallat SSL-handskakningen lyckas identiteten för servern (och eventuellt klienten) har upprättats och SslStream kan användas av klienten och servern för utbyte av meddelanden. Innan du skickar eller tar emot information, ska klienten och servern Kontrollera säkerhetstjänster och nivåer som tillhandahålls av SslStream att avgöra om protokollet, algoritmer och styrkor valt uppfyller deras behov för integritet och sekretess. Om de aktuella inställningarna inte är tillräckliga för bör dataströmmen stängas. Du kan kontrollera säkerhetstjänster som tillhandahålls av SslStream med hjälp av den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> I följande tabell visas de element som rapporterar kryptografiska inställningarna som används för autentisering, kryptering och datasignering.      | Elementet | Medlemmar |   |-------------|-------------|   | Säkerhetsprotokoll som används för att autentisera servern och du kan också klienten. | Egenskapen <xref:System.Net.Security.SslStream.SslProtocol%2A>och associerade <xref:System.Security.Authentication.SslProtocols>-uppräkningen. |   | Nyckelutbytesalgoritmen. | Egenskapen <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>och associerade <xref:System.Security.Authentication.ExchangeAlgorithmType>-uppräkningen. |   | Algoritmen meddelandet integritet. | Egenskapen <xref:System.Net.Security.SslStream.HashAlgorithm%2A>och associerade <xref:System.Security.Authentication.HashAlgorithmType>-uppräkningen. |   | Sekretess-algoritm meddelanden. | Egenskapen <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>och associerade <xref:System.Security.Authentication.CipherAlgorithmType>-uppräkningen. |   | Fördelarna med de valda algoritmerna. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, Och <xref:System.Net.Security.SslStream.CipherStrength%2A>Egenskaper. |       Efter en lyckad autentisering, kan du skicka data i den synkrona <xref:System.Net.Security.SslStream.Write%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginWrite%2A>metoder.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Du kan ta emot data med hjälp av den synkrona <xref:System.Net.Security.SslStream.Read%2A>eller asynkron <xref:System.Net.Security.SslStream.BeginRead%2A>metoder.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Om du har angett att den <xref:System.Net.Security.SslStream.%23ctor%2A>att den underliggande dataströmmen ska lämnas öppen kan du ansvarar för att stänga dataströmmen när du är klar med den.</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Om det program som skapar objektet SslStream körs med autentiseringsuppgifterna för Normal användare programmet inte kan komma åt certifikat som är installerade i lokala datorns Arkiv om behörigheten har angetts explicit till användaren gör.       SslStream förutsätter att en tidsgräns tillsammans med andra <xref:System.IO.IOException>när en genereras från inre dataström behandlas som allvarligt av dess anroparen.</xref:System.IO.IOException> Återanvända en SslStream-instans när en tidsgräns som returneras av skräpinsamlaren. Ett program bör <xref:System.IO.Stream.Close%2A>SslStream och Utlös ett undantag i dessa fall.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6 innehåller en ny säkerhetsfunktion som blockerar osäker chiffersviter och hash-algoritmer för anslutningar. Program använder TLS/SSL via API: er som HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. och aktivera .NET Framework 4.6 få mer säkra beteende som standard.       Utvecklare kanske vill inaktivera det här beteendet för att upprätthålla samverkan med sina befintliga SSL3-tjänster eller TLS med RC4-tjänster. [Den här artikeln](https://support.microsoft.com/kb/3069494) förklarar hur du ändrar koden så att den nya funktionen är inaktiverad.       .NET Framework 4.6.3 lägger till nya överlagringar för metoder som autentiseras SslStreams som inte anger en TLS-version, men i stället använda TLS-version som har definierats som standard i [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Använda metoderna i din app som ett sätt för att kunna ändra standard senare TLS version bästa praxis ändras över tiden, utan att behöva återskapa och distribuera din app."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klassen med hjälp av angivna <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Om ett värde har angetts i konfigurationsfilen för encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>för den <xref:System.Net.Security.SslStream>-instans som har skapats.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Användning av Null cipher krävs när kryptering är inställd på <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan inte läsas.       - eller - <code>innerStream</code> inte är skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> är lika med <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klassen med hjälp av den angivna <xref:System.IO.Stream>och strömma avslutas beteende.</xref:System.IO.Stream>"
  remarks: "När du anger `true` för den `leaveStreamOpen` parameter, stänger den <xref:System.Net.Security.SslStream>har ingen effekt den `innerStream` strömma; du måste stänga explicit `innerStream` när du inte längre behöver den.</xref:System.Net.Security.SslStream>       Om ett värde har angetts i konfigurationsfilen för encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>för den <xref:System.Net.Security.SslStream>-instans som har skapats.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Användning av Null cipher krävs när kryptering är inställd på <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Ett booleskt värde som anger beteendet stängningen av den <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream> Den här parametern anger om inre dataström lämnas öppna."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan inte läsas.       - eller - <code>innerStream</code> inte är skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> är lika med <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klassen med hjälp av den angivna <xref:System.IO.Stream>, strömma avslutas beteende och certifikat validering delegaten.</xref:System.IO.Stream>"
  remarks: "När du anger `true` för den `leaveStreamOpen` parameter, stänger den <xref:System.Net.Security.SslStream>har ingen effekt den `innerStream` strömma; du måste stänga explicit `innerStream` när du inte längre behöver den.</xref:System.Net.Security.SslStream>       Den `userCertificateValidationCallback` ombud `certificateErrors` argumentet innehåller alla Windows-felkoder som returneras av kanal Provider Interface SSPI (Security Support). Returvärdet för den metod som anropas av den `userCertificateValidationCallback` ombud avgör om autentiseringen lyckas.       Säkerhetsprotokollet och krypteringsalgoritmer är redan markerad när den `userCertificateValidationCallback` ombud-metoden har anropats. Du kan använda metoden för att avgöra om den valda kryptografiska algoritmer och styrkor är tillräcklig för ditt program. Om inte metoden ska returnera `false` att förhindra att den <xref:System.Net.Security.SslStream>skapas.</xref:System.Net.Security.SslStream>       Om ett värde har angetts i konfigurationsfilen för encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>för den <xref:System.Net.Security.SslStream>-instans som har skapats.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Användning av Null cipher krävs när kryptering är inställd på <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Ramen för cachelagrar SSL-sessioner som har skapats och försök att återanvända en cachelagrad session för en ny begäran om möjligt. Vid försök att återanvända en SSL-session i Framework används det första elementet i <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(om sådan finns), eller försök att återanvända en anonym sessioner om <xref:System.Net.HttpWebRequest.ClientCertificates%2A>är tom.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Klientcertifikat stöds inte i SSL-protokollet version 2."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Ett booleskt värde som anger beteendet stängningen av den <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream> Den här parametern anger om inre dataström lämnas öppna."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegera ansvaret för att validera certifikatet som tillhandahålls av fjärrparten."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan inte läsas.       - eller - <code>innerStream</code> inte är skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> är lika med <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klassen med hjälp av den angivna <xref:System.IO.Stream>, strömma avslutas beteende, ombud för verifiering av certifikat och certifikat markeringen delegaten.</xref:System.IO.Stream>"
  remarks: "När du anger `true` för den `leaveStreamOpen` parameter, stänger den <xref:System.Net.Security.SslStream>har ingen effekt den `innerStream` strömma; du måste stänga explicit `innerStream` när du inte längre behöver den.</xref:System.Net.Security.SslStream>       Den `userCertificateValidationCallback` ombud `certificateErrors` argumentet innehåller alla Windows-felkoder som returneras av kanal Provider Interface SSPI (Security Support). Returvärdet för den metod som anropas av den `userCertificateValidationCallback` ombud avgör om autentiseringen lyckas.       Säkerhetsprotokollet och krypteringsalgoritmer är redan markerad när den `userCertificateValidationCallback` ombud-metoden har anropats. Du kan använda metoden för att avgöra om den valda kryptografiska algoritmer och styrkor är tillräcklig för ditt program. Om inte metoden ska returnera `false` att förhindra att den <xref:System.Net.Security.SslStream>skapas.</xref:System.Net.Security.SslStream>       Den `userCertificateSelectionCallback` ombud är användbart när programmet har flera certifikat och dynamiskt måste välja ett certifikat. Certifikat i arkivet &quot;MY&quot; skickas till metoden anropas av delegaten.       Om ett värde har angetts i konfigurationsfilen för encryptionpolicy, den <xref:System.Net.Security.EncryptionPolicy>som standard <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>för den <xref:System.Net.Security.SslStream>-instans som har skapats.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Användning av Null cipher krävs när kryptering är inställd på <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Ramen för cachelagrar SSL-sessioner som har skapats och försök att återanvända en cachelagrad session för en ny begäran om möjligt. Vid försök att återanvända en SSL-session i Framework används det första elementet i P:System.Net.HttpWebRequest.ClientCertificates (om sådan finns) eller försök att återanvända en anonym sessioner om P:System.Net.HttpWebRequest.ClientCertificates är tomt."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Ett booleskt värde som anger beteendet stängningen av den <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream> Den här parametern anger om inre dataström lämnas öppna."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegera ansvaret för att validera certifikatet som tillhandahålls av fjärrparten."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "En <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegera ansvaret för att välja det certifikat som används för autentisering."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan inte läsas.       - eller - <code>innerStream</code> inte är skrivbar."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> är lika med <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> klassen med hjälp av den angivna<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Användning av Null cipher är obligatorisk när den `encryptionPolicy` parametern anges till <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Ett booleskt värde som anger beteendet stängningen av den <xref:System.IO.Stream>objekt som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> för att skicka och ta emot data.</xref:System.IO.Stream> Den här parametern anger om inre dataström lämnas öppna."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "En <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegera ansvaret för att validera certifikatet som tillhandahålls av fjärrparten."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "En <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegera ansvaret för att välja det certifikat som används för autentisering."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>kan inte läsas.       - eller - <code>innerStream</code> inte är skrivbar.       - eller - <code>encryptionPolicy</code> är inte giltig."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <code>innerStream</code> är lika med <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att autentisera servern och du kan också klienten i en klient / server-anslutning."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Inga klientcertifikat används i autentiseringen. Listan över återkallade certifikat kontrolleras inte under autentiseringen. Det angivna värdet för `targetHost` måste matcha namnet på serverns certifikat.       När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som delar detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - serverautentisering med den här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att autentisera servern och du kan också klienten i en klient / server-anslutning. Autentiseringen använder det angivna certifikatet insamling och SSL-protokollet."
  remarks: "När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.      > [!NOTE] > Klientcertifikat stöds inte i SSL-protokollet version 2."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som ska dela det <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som innehåller klientcertifikat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att autentisera servern och du kan också klienten i en klient / server-anslutning som en asynkron åtgärd."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Inga klientcertifikat används i autentiseringen. Listan över återkallade certifikat kontrolleras inte under autentiseringen. Det angivna värdet för `targetHost` måste matcha namnet på serverns certifikat.       När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som delar detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerar <xref:System.Threading.Tasks.Task>task-objekt som representerar den asynkrona åtgärden.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - serverautentisering med den här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att autentisera servern och du kan också klienten i en klient / server-anslutning som en asynkron åtgärd. Autentiseringen använder det angivna certifikatet insamling och SSL-protokollet."
  remarks: "När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.      > [!NOTE] > Klientcertifikat stöds inte i SSL-protokollet version 2."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som ska dela det <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som innehåller klientcertifikat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerar <xref:System.Threading.Tasks.Task>task-objekt som representerar den asynkrona åtgärden.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar för att autentisera servern och du kan också klienten i en klient / server-anslutning med det angivna certifikatet."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Listan över återkallade certifikat kontrolleras inte under autentiseringen. Klienten behöver inte ange ett certifikat för autentisering.       Den här metoden blockerar tills åtgärden har slutförts. Om du vill förhindra att blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certifikatet som används för att autentisera servern."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - klientautentisering med hjälp av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metoden stöds inte på Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar för att autentisera servern och klienten i en klient / server-anslutning med hjälp av angivna certifikat, krav och security-protokollet (valfritt)."
  remarks: "Den här metoden blockerar tills åtgärden har slutförts. Om du vill förhindra att blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som används för att autentisera servern."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om klienten får en förfrågan om ett certifikat för autentisering.</xref:System.Boolean> Observera att detta är endast en begäran--om inget certifikat har angetts servern accepterar fortfarande anslutningsbegäran."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>är inte ett giltigt <xref:System.Security.Authentication.SslProtocols> värde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - klientautentisering med hjälp av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metoden stöds inte på Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar för att autentisera servern och du kan också klienten i en klient / server-anslutning med det angivna certifikatet som en asynkron åtgärd."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Listan över återkallade certifikat kontrolleras inte under autentiseringen. Klienten behöver inte ange ett certifikat för autentisering.       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Certifikatet som används för att autentisera servern."
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerar <xref:System.Threading.Tasks.Task>task-objekt som representerar den asynkrona åtgärden.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - klientautentisering med hjälp av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>metoden stöds inte på Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar för att autentisera servern och du kan också klienten i en klient / server-anslutning med hjälp av angivna certifikat, krav och säkerhetsprotokoll som en asynkron åtgärd."
  remarks: "Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som används för att autentisera servern."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om klienten får en förfrågan om ett certifikat för autentisering.</xref:System.Boolean> Observera att detta är endast en begäran--om inget certifikat har angetts servern accepterar fortfarande anslutningsbegäran."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Returnerar <xref:System.Threading.Tasks.Task>task-objekt som representerar den asynkrona åtgärden.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att påbörja en asynkron åtgärd för att autentisera servern och du kan också klienten."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Inga klientcertifikat används i autentiseringen. Listan över återkallade certifikat kontrolleras inte under autentiseringen.       Det angivna värdet för `targetHost` måste matcha namnet på serverns certifikat.       Asynkron autentisering-åtgärden måste utföras genom att anropa den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalt metoden anropas av den `asyncCallback` delegera.       Den här metoden blockerar inte när åtgärden har slutförts. Om du vill blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Detaljerad information om hur du använder asynkrona programmeringsmiljö finns [anropar asynkront synkrona metoder](~/add/includes/ajax-current-ext-md.md) om du får en <xref:System.Security.Authentication.AuthenticationException>använder den här <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som delar detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när autentiseringen är slutförd.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om åtgärden. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - serverautentisering med den här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av klienter för att påbörja en asynkron åtgärd för att autentisera servern och eventuellt klienten med de angivna certifikat och security-protokollet."
  remarks: "Det angivna värdet för `targetHost` måste matcha namnet på serverns certifikat.       Asynkron autentisering-åtgärden måste utföras genom att anropa den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalt metoden anropas av den `asyncCallback` delegera.       Den här metoden blockerar inte när åtgärden har slutförts. Om du vill blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Detaljerad information om hur du använder asynkrona programmeringsmiljö finns [anropar asynkront synkrona metoder](~/add/includes/ajax-current-ext-md.md) om du får en <xref:System.Security.Authentication.AuthenticationException>använder den här <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.      > [!NOTE] > Klientcertifikat stöds inte i SSL-protokollet version 2."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Namnet på den server som delar detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Den <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som innehåller klientcertifikat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när autentiseringen är slutförd.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om åtgärden. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>är inte ett giltigt <xref:System.Security.Authentication.SslProtocols> värde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - serverautentisering med den här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar att påbörja en asynkron åtgärd för att autentisera klienten och (valfritt) server i en klient / server-anslutning."
  remarks: "Den här metoden autentiserar med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Listan över återkallade certifikat kontrolleras inte under autentiseringen. Klienten behöver inte ange ett certifikat för autentisering.       Asynkron autentisering-åtgärden måste utföras genom att anropa den <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalt metoden anropas av den `asyncCallback` delegera.       Den här metoden blockerar inte när åtgärden har slutförts. Om du vill blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Detaljerad information om hur du använder asynkrona programmeringsmiljö finns [anropar asynkront synkrona metoder](~/add/includes/ajax-current-ext-md.md) om du får en <xref:System.Security.Authentication.AuthenticationException>använder den här <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som används för att autentisera servern."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när autentiseringen är slutförd.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om åtgärden. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - klientautentisering med hjälp av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metoden stöds inte på Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anropas av servrar för att påbörja en asynkron åtgärd för att autentisera servern och klienten med den angivna certifikat, krav och säkerhetsprotokoll (valfritt)."
  remarks: "Asynkron autentisering-åtgärden måste utföras genom att anropa den <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>metoden.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Normalt metoden anropas av den `asyncCallback` delegera.       Den här metoden blockerar inte när åtgärden har slutförts. Om du vill blockera tills åtgärden har slutförts, kan du använda en av de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metoden överlagringar.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Detaljerad information om hur du använder asynkrona programmeringsmiljö finns [anropar asynkront synkrona metoder](~/add/includes/ajax-current-ext-md.md) om du får en <xref:System.Security.Authentication.AuthenticationException>använder den här <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate som används för att autentisera servern."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om klienten får en förfrågan om ett certifikat för autentisering.</xref:System.Boolean> Observera att detta är endast en begäran--om inget certifikat har angetts servern accepterar fortfarande anslutningsbegäran."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "En <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under autentiseringen.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när autentiseringen är slutförd.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om åtgärden. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>är inte ett giltigt <xref:System.Security.Authentication.SslProtocols> värde."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering har inträffat.       - eller - serverautentisering med den här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> har försökt tidigare.       - eller - autentisering pågår redan."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metoden stöds inte på Windows 95, Windows 98 eller Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Börjar en asynkron läsning som läser data från dataströmmen och lagrar den i den angivna matrisen."
  remarks: "Om kryptering och eller signering aktiveras Läsåtgärden läser data från den underliggande dataströmmen, kontrollerar integriteten för data och dekrypterar den. Asynkron läsåtgärd måste utföras genom att anropa den <xref:System.Net.Security.SslStream.EndRead%2A>metoden.</xref:System.Net.Security.SslStream.EndRead%2A> Normalt metoden anropas av den `asyncCallback` delegera.       Den här metoden blockerar inte när åtgärden har slutförts. Använd för att blockera tills åtgärden har slutförts i <xref:System.Net.Security.SslStream.Read%2A>metod.</xref:System.Net.Security.SslStream.Read%2A>       Detaljerad information om hur du använder asynkrona programmeringsmiljö finns [anropar asynkront synkrona metoder](~/add/includes/ajax-current-ext-md.md) den <xref:System.Net.Security.SslStream>klassen stöder inte flera samtidiga läsåtgärder.</xref:System.Net.Security.SslStream>       Du kan inte anropa den här metoden förrän du har autentiserats. Att autentisera anrop till en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som tar emot byte lästes in från strömmen.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Den nollbaserade platsen i `buffer` som du vill börja lagra data läses från den här dataströmmen."
    - id: count
      type: System.Int32
      description: "Maximalt antal byte som ska läsas från dataströmmen."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när Läsåtgärden har slutförts.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om läsningen. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; längden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Läsningen misslyckades.       - eller - kryptering används, men det gick inte att dekryptera data."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns redan en läsning pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Börjar en asynkron skrivåtgärd som skriver <xref:System.Byte>s från den angivna bufferten till dataströmmen.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som tillhandahåller byte som ska skrivas till dataströmmen.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Den nollbaserade platsen i `buffer` som du vill börja läsa byte som ska skrivas till dataströmmen."
    - id: count
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger antalet byte som ska läsas från `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "En <xref:System.AsyncCallback>delegat som refererar till metoden som ska anropas när åtgärden har slutförts.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Ett användardefinierat objekt som innehåller information om åtgärden. Det här objektet har överförts till den `asyncCallback` delegera när åtgärden har slutförts."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>objekt som anger status för den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; längden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skrivåtgärden misslyckades."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns redan pågår en skrivåtgärd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>värde som anger om den underliggande dataströmmen är läsbar.</xref:System.Boolean>"
  remarks: "Om autentiseringen har inträffat, den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.CanRead%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.CanRead%2A>       Den underliggande dataströmmen som anges när du skapar en instans av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om autentisering har genomförts och den underliggande dataströmmen är läsbart; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>värde som anger om den underliggande dataströmmen är sökbar.</xref:System.Boolean>"
  remarks: "Försök inte att ange placering av den <xref:System.Net.Security.SslStream>objekt eller dess underliggande dataström.</xref:System.Net.Security.SslStream>       Den underliggande dataströmmen som anges när du skapar en instans av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Den här egenskapen returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>värde som anger om den underliggande dataströmmen stöder timeout.</xref:System.Boolean>"
  remarks: "Den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.CanTimeout%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.CanTimeout%2A>       Den underliggande dataströmmen som anges när du skapar en instans av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den underliggande dataströmmen stöder timeout; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>värde som anger om den underliggande dataströmmen är skrivbar.</xref:System.Boolean>"
  remarks: "Om autentiseringen har inträffat, den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.CanWrite%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.CanWrite%2A>       Den underliggande dataströmmen som anges när du skapar en instans av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om autentisering har genomförts och den underliggande dataströmmen är skrivbar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>värde som anger om listan över återkallade certifikat är markerat under verifieringsprocessen certifikatet.</xref:System.Boolean>"
  remarks: "Listan över återkallade certifikat innehåller certifikat som har återkallats av utfärdare. Markerar listan negativt påverkar prestanda, men ger bättre säkerhet."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om listan över återkallade certifikat är markerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar ett värde som identifierar bulk-krypteringsalgoritmen som används av detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Värdet <xref:System.Security.Authentication.CipherAlgorithmType>måste anges för egenskapen CipherAlgorithm när den <xref:System.Net.Security.EncryptionPolicy>uppräkningsvärdet används för att skapa en <xref:System.Net.Security.SslStream>instans.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]och [!INCLUDE[winxp](~/add/includes/winxp-md.md)] stöder inte den <xref:System.Security.Authentication.CipherAlgorithmType>värde.</xref:System.Security.Authentication.CipherAlgorithmType> Så även om <xref:System.Security.Authentication.CipherAlgorithmType>värdet används för att skapa en <xref:System.Net.Security.SslStream>instans, <xref:System.Net.Security.EncryptionPolicy>egenskapen kommer att <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> Den <xref:System.Security.Authentication.CipherAlgorithmType>värde returneras bara i Windows Vista och senare.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "En <xref:System.Security.Authentication.CipherAlgorithmType>värde.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen CipherAlgorithm användes innan slutförs autentiseringen eller autentiseringen misslyckades."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar ett värde som identifierar styrkan hos den cipher-algoritm som används av detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Värdet för den här egenskapen är noll tills autentiseringen sker.       Den här egenskapen returnerar ett av följande värden: - 0 - 40-56-80-128-168 192 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger styrkan hos algoritmen i bitar.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten `Dispose()`metod och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.Object.Finalize%2A>       När den `disposing` parametern är true, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Net.Security.SslStream>referenser.</xref:System.Net.Security.SslStream> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Avslutar en väntande asynkron autentisering utförs igång med ett tidigare anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Om åtgärden inte har slutförts, blockerar den här metoden tills det fungerar. När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.       Om du vill utföra den här åtgärden synkront med någon av de <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>instans som returnerades av ett anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>skapades inte av ett anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finns inga väntande server-autentisering för att slutföra."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Avslutar en väntande asynkron autentisering klientåtgärden igång med ett tidigare anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Om åtgärden inte har slutförts, blockerar den här metoden tills det fungerar. När autentiseringen lyckas, måste du kontrollera den <xref:System.Net.Security.SslStream.IsEncrypted%2A>och <xref:System.Net.Security.SslStream.IsSigned%2A>Egenskaper för att avgöra vilka säkerhetstjänster som används av <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Kontrollera den <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>egenskapen fastställa om ömsesidig autentisering inträffade.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Om autentiseringen misslyckas visas en <xref:System.Security.Authentication.AuthenticationException>, och detta <xref:System.Net.Security.SslStream>är inte längre användas.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Du bör stänga det här objektet och ta bort alla referenser till den så att den kan samlas in av skräpinsamlingen.       Om du vill utföra den här åtgärden synkront med någon av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metod.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>instans som returnerades av ett anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>skapades inte av ett anrop till <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Autentiseringen misslyckades och det här objektet lämnas i ett instabilt tillstånd."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finns inga väntande klientautentisering för att slutföra."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "En asynkron läsåtgärd igång med ett tidigare anrop till <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*> slutar"
  remarks: "Om åtgärden inte har slutförts, blockerar den här metoden tills det fungerar.       Använd för att utföra den här åtgärden synkront den <xref:System.Net.Security.SslStream.Read%2A>metoden.</xref:System.Net.Security.SslStream.Read%2A>       Du kan inte anropa den här metoden förrän du har autentiserats. Att autentisera anrop till en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>-instans som returnerades av ett anrop till <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "En <xref:System.Int32>värde som anger antalet byte lästes in från strömmen underliggande.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>skapades inte av ett anrop till <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Läsningen misslyckades."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Avslutar en asynkron skrivning igång med ett tidigare anrop till <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Om åtgärden inte har slutförts, blockerar den här metoden tills det fungerar.       Ett program kan inte anropa den här metoden förrän du har autentiserats. För att autentisera, anropar en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Använd för att utföra den här åtgärden synkront den <xref:System.Net.Security.SslStream.Write%2A>metoden.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>-instans som returnerades av ett anrop till <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>skapades inte av ett anrop till <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skrivåtgärden misslyckades."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Gör alla buffrade data skrivs till den underliggande enheten."
  remarks: "Den här metoden startar <xref:System.IO.Stream.Flush%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar den algoritm som används för att autentisering Meddelandekoder (Mac)."
  remarks: "Algoritmer för meddelandeautentisering genererar hashar för meddelanden och signaturer som används för att identifiera manipulation och förfalskning."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "En <xref:System.Security.Authentication.HashAlgorithmType>värde.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen HashAlgorithm användes innan slutförs autentiseringen eller autentiseringen misslyckades."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar ett värde som identifierar styrkan hos den hashalgoritm som används av den här instansen."
  remarks: "Värdet för den här egenskapen är noll tills autentiseringen sker."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger styrkan hos den <xref:System.Security.Authentication.HashAlgorithmType>algoritmen i bitar.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Giltiga värden är 128 eller 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>-värde som anger om autentisering lyckades.</xref:System.Boolean>"
  remarks: "Klienter autentiserar genom att anropa den <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servrar som autentiserar genom att anropa den <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om autentiseringen lyckas inträffade. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>-värde som anger om detta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> använder datakryptering.</xref:System.Boolean>"
  remarks: "Kryptering förhindrar för att skydda data, nämligen ser den till att data är i överföringen, den inte kan dechiffreras av tredje part."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om data krypteras innan det överförs i nätverket och dekrypteras när den når Fjärrslutpunkten; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>-värde som anger om både servern och klienten har autentiserats.</xref:System.Boolean>"
  remarks: "Ömsesidig autentisering har angetts av servern när servern vill klienten för att tillhandahålla ett certifikat för autentisering."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om servern har verifierats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>-värde som anger om den lokala sidan för anslutningen används av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> autentiserades som servern.</xref:System.Boolean>"
  remarks: "Om autentisering misslyckades inte eller, den här egenskapen returnerar `false`.       För att autentisera som servern anropar den <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den lokala slutpunkten har autentiserats som serversidan av autentiserad anslutning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar en <xref:System.Boolean>-värde som anger om data som skickas med hjälp av den här dataströmmen är signerad.</xref:System.Boolean>"
  remarks: "Data som bidrar till att skydda integriteten för data-signering, nämligen hjälper mottagaren att se om data har manipulerats under överföringen."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om data har signerats innan du kommer att sändas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar nyckelutbyte-algoritm som används av det här <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Värdet för den här egenskapen är <xref:System.Security.Authentication.ExchangeAlgorithmType>förrän autentiseringen sker.</xref:System.Security.Authentication.ExchangeAlgorithmType>       Nyckelutbytesalgoritmen skyddar information som används för att skapa delade nycklar."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Ett <xref:System.Security.Authentication.ExchangeAlgorithmType>värde.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar ett värde som identifierar styrkan hos den nyckelutbytesalgoritm som används av den här instansen."
  remarks: "Värdet för den här egenskapen är noll tills autentiseringen sker.       I vanliga fall värdet för den här egenskapen är något av följande: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Ett <xref:System.Int32>värde som anger styrkan hos den <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmen i bitar.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar längden på den underliggande dataströmmen."
  remarks: "Den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.Length%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.Length%2A> Om den underliggande dataströmmen inte är sökbar utlöser ett undantag vanligtvis i den här metoden. Den körning av den underliggande dataströmmen bestämmer körning typ av undantag som genereras."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Längden på den underliggande dataströmmen."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Hämtar värdet för den här egenskapen stöds inte när den underliggande dataströmmen är en <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar certifikatet som används för att autentisera den lokala slutpunkten."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Ett X509Certificate-objekt som representerar det certifikat som tillhandahålls för autentisering eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inget certifikat har angetts."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering misslyckades eller inte har uppstått."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar eller anger den aktuella positionen i den underliggande dataströmmen."
  remarks: "Den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.Position%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.Position%2A> Om den underliggande dataströmmen inte är sökbar utlöser ett undantag vanligtvis i den här metoden. Den körning av den underliggande dataströmmen bestämmer körning typ av undantag som genereras."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Den aktuella positionen i den underliggande dataströmmen."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den här egenskapen stöds inte.       - eller - hämtar värdet för den här egenskapen stöds inte när den underliggande dataströmmen är en <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Läser data från den här dataströmmen och lagrar den i den angivna matrisen."
  remarks: "Metoden läser maximalt `count` byte från strömmen och lagrar dem i `buffer` början på `offset`. Du kan inte utföra flera samtidiga läsåtgärder.       Du kan inte anropa den här metoden förrän du har autentiserats. Att autentisera anrop till en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Använd för att utföra den här åtgärden asynkront den <xref:System.Net.Security.SslStream.BeginRead%2A>metoden.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som tar emot byte läsa från dataströmmen.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller den nollbaserade platsen i `buffer` som du vill börja lagra data läses från den här dataströmmen.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller det maximala antalet byte som ska läsas från den här dataströmmen.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "En <xref:System.Int32>värde som anger antalet lästa byte.</xref:System.Int32> Returnerar 0 om det finns inga fler data som ska läsas kan."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; längden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Läsningen misslyckades. Kontrollera det inre undantaget om att ta reda på orsaken till felet."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns redan en läsning pågår."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar eller anger hur lång tid en Läsåtgärd blockerar väntar på att data."
  remarks: "Den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.ReadTimeout%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.ReadTimeout%2A> När du ställer in den här egenskapen den <xref:System.IO.Stream.ReadTimeout%2A>på den underliggande dataströmmen värdet till det angivna värdet.</xref:System.IO.Stream.ReadTimeout%2A>       Om den underliggande dataströmmen är en <xref:System.Net.Sockets.NetworkStream>, ReadTimeout anges i millisekunder och är inställd på <xref:System.Threading.Timeout.Infinite>som standard så som läsa operations gör timeout inte.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som anger hur lång tid som ska gå innan en synkron läser åtgärden misslyckas.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar certifikatet som används för att autentisera fjärrslutpunkten."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Ett X509Certificate-objekt som representerar det certifikat som tillhandahålls för autentisering eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om inget certifikat har angetts."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentisering misslyckades eller inte har uppstått."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Genererar en <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Anropa inte den här metoden. Den ärvs, men stöds inte av <xref:System.Net.Security.SslStream>klassen.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Det här värdet ignoreras."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Det här värdet ignoreras."
    return:
      type: System.Int64
      description: "Alltid utlöser <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Sökning stöds inte av <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objekt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Anger längden på den underliggande dataströmmen."
  remarks: "Den här metoden startar <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>på den underliggande dataströmmen som anges när detta <xref:System.Net.Security.SslStream>har skapats.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Ett <xref:System.Int64>värde som anger längden på dataströmmen.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar ett värde som anger säkerhetsprotokoll som används för att autentisera anslutningen."
  remarks: "Säkerhetsprotokoll som stöds anges när den <xref:System.Net.Security.SslStream>har skapats.</xref:System.Net.Security.SslStream> Om inga säkerhetsprotokoll skickades till konstruktorn skapas instansen med hjälp av <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Det faktiska protokoll som används för autentisering har valts baserat på de protokoll som stöds av klienten och servern."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "Den <xref:System.Security.Authentication.SslProtocols>värde som representerar det protokoll som används för autentisering.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar den <xref:System.Net.TransportContext>används för autentisering med hjälp av utökat skydd.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "Den <xref:System.Net.TransportContext>objekt som innehåller den bindning Kanaltoken (CBT) används för utökat skydd.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Skriver den angivna data till den här strömmen."
  remarks: "Den här metoden blockerar när åtgärden har slutförts. Om du vill förhindra att blockera när åtgärden har slutförts, använda den <xref:System.Net.Security.SslStream.BeginWrite%2A>metoden.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Du kan inte anropa den här metoden förrän du har autentiserats. Att autentisera anrop till en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Den <xref:System.Net.Security.SslStream>klassen stöder inte flera samtidiga skrivåtgärder.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som tillhandahåller de byte som skrivs till dataströmmen.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skrivåtgärden misslyckades."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns redan pågår en skrivåtgärd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Skriv det angivna antalet <xref:System.Byte>s till en underliggande dataström med den angivna bufferten och offset.</xref:System.Byte>"
  remarks: "Den här metoden blockerar när åtgärden har slutförts. För att förhindra blockerar när åtgärden har slutförts åtgärden har slutförts ska du använda den <xref:System.Net.Security.SslStream.BeginWrite%2A>metoden.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Du kan inte anropa den här metoden förrän du har autentiserats. Att autentisera anrop till en av de <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, eller <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metoder.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Den <xref:System.Net.Security.SslStream>klassen stöder inte flera samtidiga skrivåtgärder.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "En <xref:System.Byte>matris som tillhandahåller de byte som skrivs till dataströmmen.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller den nollbaserade platsen i `buffer` som du vill börja läsa byte som ska skrivas till dataströmmen.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "En <xref:System.Int32>som innehåller antalet byte som ska läsas från `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; längden på <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Skrivåtgärden misslyckades."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns redan pågår en skrivåtgärd."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Det här objektet har stängts."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autentiseringen har inte utförts."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hämtar eller anger tidsperiod som en skrivåtgärd blockerar väntar på att data."
  remarks: "Den här egenskapen returnerar värdet som returneras genom att anropa <xref:System.IO.Stream.WriteTimeout%2A>på den underliggande dataströmmen.</xref:System.IO.Stream.WriteTimeout%2A> För set-åtgärder, det angivna värdet anger den <xref:System.IO.Stream.WriteTimeout%2A>värde i den underliggande dataströmmen.</xref:System.IO.Stream.WriteTimeout%2A>       Om den underliggande dataströmmen är en <xref:System.Net.Sockets.NetworkStream>, WriteTimeout anges i millisekunder och är inställd på <xref:System.Threading.Timeout.Infinite>som standard så som skriva operations gör timeout inte.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "En <xref:System.Int32>som anger hur lång tid det tar innan en synkron skrivåtgärd misslyckas.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
