### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.SecurityTokenService
  id: SecurityTokenService
  children:
  - System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  - System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.GetIssuerName
  - System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  - System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  - System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Principal
  - System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Request
  - System.IdentityModel.SecurityTokenService.Scope
  - System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  - System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  - System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  langs:
  - csharp
  name: SecurityTokenService
  nameWithType: SecurityTokenService
  fullName: System.IdentityModel.SecurityTokenService
  type: Class
  summary: "Den abstrakt basklass som definierar egenskaper och metoder för en säkerhetstokentjänst (STS)."
  remarks: "Du måste vara härledd från SecurityTokenService-klass för att skapa en Säkerhetstokentjänst. I din anpassade klass måste du, åtminstone, åsidosätta den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>och <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metoder.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Med dessa åsidosättningar är STS som skapats med hjälp av standardimplementering av alla andra metoder som definierats i klassen kan utfärda säkerhetstoken som svar på säkerhet token-förfrågningar (RST). Det vill säga implementeras problemet bindningen som har definierats i WS-Trust-specifikationen. Den här bindningen är implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Ingen av de andra WS-Trust bindningarna (förnya Avbryt och verifiera) implementeras i standardfallet som och ett lämpligt fel returneras till anroparen om en RST som motsvarar en av dessa bindningar har påträffats. Du kan självklart åsidosätta lämpliga-metoder (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, och <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) att implementera dessa bindningar i din STS.</xref:System.IdentityModel.SecurityTokenService.Validate%2A> </xref:System.IdentityModel.SecurityTokenService.Cancel%2A> </xref:System.IdentityModel.SecurityTokenService.Renew%2A>      > [!IMPORTANT] > Implementera en produktionsklara STS innebär att noggrann planering och betydande resurser för att minska de potentiella säkerhetsriskerna som är inbyggd i exponera dessa tjänster. De flesta utvecklare som använder Windows Identity Foundation (WIF) kommer utveckla program som flytta över till en STS för Identitetshantering i stället utveckla en STS sig själv. WIF ger ett Visual Studio-tillägg, identitet och åtkomst-verktyg för Visual Studio 2012 hjälper utvecklare som testar lösningar i utvecklingsmiljön. Det här verktyget innehåller en STS `LocalSTS`, som du kan konfigurera om du vill hantera specifika anspråk till det program som du utvecklar. Mer information om identitets- och verktyget finns [identitet och åtkomst-verktyg för Visual Studio 2012](~/add/includes/ajax-current-ext-md.md). I vissa fall kan `LocalSTS` ger inte funktioner som behövs för att kunna testa programmet, till exempel i ett scenario som innebär att utveckla en anpassad token hanterare för användning av ett program. I dessa fall måste du vara härledd från SecurityTokenService att skapa en eller flera enkla STSs som kan distribueras i din utvecklingsmiljö och som kan användas för att testa funktioner i programmet. Resten av det här avsnittet fokuserar på de metoder som visas av SecurityTokenService-klass som gör det möjligt att implementera en enkel STS och utöka pipeline för utfärdande.       Följande lista innehåller en kort översikt över metoderna viktig till utvecklaren för användning i en test- eller utvecklingsmiljö.      - <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>Metod.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Den här metoden returnerar en <xref:System.IdentityModel.Scope>objekt som innehåller information om RP.</xref:System.IdentityModel.Scope> Det här objektet används i resten av pipeline för utfärdande och innehåller information om den signering och kryptering autentiseringsuppgifter ska användas i svaret, samt de `AppliesTo` och `ReplyTo` (vid behov) adresser. Du måste åsidosätta den här metoden.      - <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>Metod.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Den här metoden returnerar ett <xref:System.Security.Claims.ClaimsIdentity>objekt som innehåller anspråk för att återgå till RP.</xref:System.Security.Claims.ClaimsIdentity> Du måste åsidosätta den här metoden.      - <xref:System.IdentityModel.SecurityTokenService.Issue%2A>Metod.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Den här metoden implementerar tokenbegäran pipelinen, som bearbetar ett inkommande säkerhet tokenbegäran (RST) och returnerar ett svar (RSTR) till anroparen som innehåller en token som kan användas för att autentisera med ett RP. Många av de andra metoderna som definieras i härledda SecurityTokenService-klassen anropas från den här metoden, inklusive den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>och <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metoder.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Du har inte att åsidosätta den här metoden, men en förståelse av den implementerar tokenbegäran pipeline kan vara till hjälp.       En STS konfigureras via <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>klass.</xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>"
  example:
  - "The code examples that are used in the SecurityTokenService topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of a passive STS using the SecurityTokenService class.  \n  \n [!code-cs[WIFCustomTokenSTS#3](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#3)]  \n  \n The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=fullName> method from the code behind in the `default.aspx.cs` file.  \n  \n [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]"
  syntax:
    content: public abstract class SecurityTokenService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  id: '#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)'
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Anropas från härledda klasser för att initiera den <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> klassen med hjälp av angivna konfigurationsinställningar."
  remarks: "Använd den här konstruktorn för att initiera scope-providern och token utfärdarcertifikatet."
  syntax:
    content: protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);
    parameters:
    - id: securityTokenServiceConfiguration
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "En <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> som innehåller inställningar för STS."
  overload: System.IdentityModel.SecurityTokenService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityTokenServiceConfiguration</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, börjar en asynkron WS-Trust avbryta begäran."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av åtgärden asynkron Avbryt.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd som associeras med de asynkrona avbryta åtgärden."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till asynkron Avbryt åtgärden.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  id: BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass börjar ett asynkront anrop till den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>"
  remarks: "Standardimplementering av den här metoden genererar <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som innehåller information om förlitande part kopplad till begäran."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av den asynkrona åtgärden.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd som associeras med den asynkrona åtgärden."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass börjar ett asynkront anrop för den <xref:System.IdentityModel.SecurityTokenService.GetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
  remarks: "Standardimplementering av den här metoden genererar <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av den asynkrona åtgärden.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd som associeras med den asynkrona åtgärden."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till asynkron Avbryt åtgärden.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, börjar en asynkron begäran för WS-Trust-problemet."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av asynkrona problemet igen.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller statusinformation som associeras med operationen asynkron problemet."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som refererar till asynkron problemet igen.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, börjar en asynkron förnya WS-Trust-begäran."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av den asynkrona förnya åtgärden.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd som associeras med de asynkrona förnya igen."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>att förnya refererar till den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, börjar en asynkron Validera WS-Trust-begäran."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: callback
      type: System.AsyncCallback
      description: "Den <xref:System.AsyncCallback>delegat som får ett meddelande om genomförandet av den asynkrona Validera åtgärden.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd som associeras med de asynkrona Validera åtgärden."
    return:
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>att validera refererar till den asynkrona åtgärden.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass bearbetar en WS-Trust avbryta begäran."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Skapar en instans av en <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  remarks: "Anropas under utfärdande efter <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "Inkommande tokenbegäran."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <> </> *> objektet som returneras från <> </> *>."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "<xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  overload: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Slutför asynkron WS-Trust avbryta begäran när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginCancel*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginCancel*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  id: EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, är du klar asynkront anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>"
  remarks: "Standardimplementering av den här metoden genererar <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> </xref:System.IAsyncResult>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "En <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> som innehåller samlingen av anspråk som kommer att placeras i utfärdade säkerhetstoken."
  overload: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  id: EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass, är du klar asynkront anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  remarks: "Standardimplementering av den här metoden genererar <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som kapslar in informationen förlitande part (RP) kopplad till begäran (RST) som angetts i anropet till den <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  overload: System.IdentityModel.SecurityTokenService.EndGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  id: EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Slutför asynkron problemet för WS-Trust-begäran när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginIssue*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginIssue*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.EndIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  id: EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Slutför asynkron förnya WS-Trust-begäran när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginRenew*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginRenew*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.EndRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  id: EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Slutför asynkron Validera WS-Trust-begäran när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>som returneras av ett anrop till den <xref:System.IdentityModel.SecurityTokenService.BeginValidate*>metoden.</xref:System.IdentityModel.SecurityTokenService.BeginValidate*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.EndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  id: GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar namnet på säkerhetstokentjänst (STS)."
  remarks: "Den här metoden anropas från standardvärdet utfärdande pipeline implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Standardimplementering returnerar den <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>egenskapen från konfigurationen som nås via det <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>egenskap.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>"
  syntax:
    content: protected virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Utfärdarens namn."
  overload: System.IdentityModel.SecurityTokenService.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass returnerar den här metoden en mängd utdata ämnen som ska ingå i Utfärdad token."
  remarks: "GetOutputClaimsIdentity-metoden anropas från utfärdande-pipelinen, som implementeras av den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Returnerar en <xref:System.Security.Claims.ClaimsIdentity>som innehåller anspråk för att inkludera i utfärdade säkerhetstoken baserat på begäranden av token (den `principal` parametern), inkommande RST (den `request` parametern), och förlitande part för token är avsedda (den `scope` parametern).</xref:System.Security.Claims.ClaimsIdentity> Logiken i den här metoden handlar främst besvara följande frågor:- **som anspråkstyper ska inkluderas i svaret, utifrån RP som den är avsedd?** Vanligtvis detta per RP från en lista över anspråkstyper som krävs för varje RP eller på grundval av per begäran bestäms genom att undersöka den <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>egenskapen för begäran.</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> Logik och information för att fastställa anspråk ska ingå i svaret är dock helt upp till din implementering.      - **Som anspråksvärden ska tilldelas till anspråk i svaret?** För en identitetsleverantör (IP STS) Detta innebär oftast med ett eller flera anspråk i begäranden <xref:System.Security.Claims.ClaimsPrincipal>(som tillhandahålls av den `principal` parametern) åtkomst till en butik (eller annan enhet) för att returnera värden för obligatoriska anspråkstyper.</xref:System.Security.Claims.ClaimsPrincipal> För en Federationsleverantör (R-STS) innebär detta vanligtvis att utföra någon typ av bearbetning på den begärande inkommande anspråk för att uppfylla begäran. Utför kanske filtrering eller omvandling på vissa anspråk som presenteras av begäranden när du skickar andra via oförändrade. Naturligtvis, som i fallet med bestämmer vilka anspråk som ska ingå i svaret, är information och logiken för hur du fastställer värdena för dessa anspråk din implementering."
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to override the GetOutputClaimsIdentity method to return claims for your STS. In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.  \n  \n [!code-cs[WIFCustomTokenSTS#6](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#6)]"
  syntax:
    content: protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som innehåller information om förlitande part kopplad till begäran. Det här är den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> objekt som returnerades av den <xref:System.IdentityModel.SecurityTokenService.GetScope*>metoden.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "En <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> som innehåller samlingen av anspråk som kommer att placeras i utfärdade säkerhetstoken."
  overload: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar bevistoken ska ingå i svaret (RSTR)."
  remarks: "Den här metoden anropas från standardvärdet utfärdande pipeline implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Standardimplementering returnerar en beskrivning som bevis eller genererar ett lämpliga undantag."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar den inkommande tokenbegäran (RST)."
    - id: scope
      type: System.IdentityModel.Scope
      description: "Den <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> instans som innehåller information om den förlitande parten."
    return:
      type: System.IdentityModel.Tokens.ProofDescriptor
      description: "En <xref href=&quot;System.IdentityModel.Tokens.ProofDescriptor&quot;> </xref> som representerar nyskapade bevis beskrivningen. Bevis beskrivningen kan vara en asymmetrisk bevis beskrivning en symmetrisk bevis beskrivning eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i fallet med ägar-token."
  overload: System.IdentityModel.SecurityTokenService.GetProofToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar den begärande bevis kryptering av autentiseringsuppgifter."
  remarks: "Den här metoden anropas från den <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>       Standardimplementering gör följande. Returnerar `null` om det finns inga krypteringstoken som anges i begäran (den <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName>egenskapen är `null`).</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> Annars, om den kan hämta token som en <xref:System.IdentityModel.Tokens.X509SecurityToken>, returnerar autentiseringsuppgifter baserat på denna token.</xref:System.IdentityModel.Tokens.X509SecurityToken> Om den inte kan lösa token som en <xref:System.IdentityModel.Tokens.X509SecurityToken>, en <xref:System.IdentityModel.RequestFailedException>genereras.</xref:System.IdentityModel.RequestFailedException> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar den inkommande tokenbegäran (RST)."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "En <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> objekt som representerar begäranden kryptering av autentiseringsuppgifter."
  overload: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Skapar svar (RSTR) som innehåller Utfärdad token med hjälp av den angivna begäran (RST) och token säkerhetsbeskrivningen."
  remarks: "GetResponse-metoden anropas som det sista steget från utfärdande-pipelinen, som implementeras av den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Den skapar och returnerar svaret (RSTR) med hjälp av den ursprungliga inkommande begäranden (RST) och token beskrivningen bygger under föregående steg i pipeline för utfärdande.       Standardimplementering skapar RSTR genom att skicka RST som anges i begäranparametern till konstruktorn <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName>anropar metoden <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName>på token beskrivningen skickades till GetResponse att tillämpa dess egenskaper på den nyligen skapade RSTR som anger egenskapen <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>på RSTR med hjälp av egenskapen <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>på token beskrivningen och slutligen egenskapen <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>på RSTR enligt följande tabell :      | `RST.ReplyTo` egenskapen | Egenskapen <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>. | `RSTR.ReplyTo` egenskapen |   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   | Ange | Ange inte | Ange inte |   | Ange | Ange | <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|   | Ange inte | Ange | Ange inte |   | Ange inte | Ange inte | Not Set|</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "RST som innehåller tokenbegäran."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Den token beskrivare som innehåller informationen som ska användas för Utfärdad token."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "Svaret (RSTR) eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om svaret inte kan skapas från den angivna begäran och token beskrivning. Standardimplementering returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den <code> tokenDescriptor </code> parametern är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.SecurityTokenService.GetResponse*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar en <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> objekt som innehåller information om förlitande part (RP) som är associerade med den angivna begäranden (RST). Du måste åsidosätta den här metoden i implementeringen av den <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> klass."
  remarks: "GetScope-metoden anropas från utfärdande pipeline efter den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metoden och ska returnera ett <xref:System.IdentityModel.Scope>objekt som har konfigurerats för den inkommande begäranden.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> (Pipeline för utfärdande är implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.)</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Den <xref:System.IdentityModel.Scope>objekt innehåller information om RP som är associerade med säkerhet tokenbegäran (RST).</xref:System.IdentityModel.Scope> Detta omfattar information om autentiseringsuppgifter för kryptering och signering som ska användas med RP och om att kryptera utfärdade token och/eller symmetriska nycklar i svaret. Vissa vanliga aktiviteter som utförs i metoden GetScope är:-avgöra om RP som är avsedd för token är en känd RP. Hur detta görs beror på din implementering. Om den avsedda RP inte är en giltig RP för den här STS sedan utlösa metoden <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>      – Avgör den signering kontoautentiseringsuppgifter som ska användas i svaret (RSTR) och ange den <xref:System.IdentityModel.Scope.SigningCredentials%2A>egenskapen därefter.</xref:System.IdentityModel.Scope.SigningCredentials%2A>      – Avgör om svaret och/eller alla inkluderade symmetriska nycklar ska krypteras och autentiseringsuppgifterna som ska användas för kryptering. Ange den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, och <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>Egenskaper i enlighet därmed.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>          > [!IMPORTANT] > Som standard den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>och <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>Egenskaper anges `true` att förhindra att STS utfärdar token som inte är säker.</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> Det rekommenderas att de här egenskaperna aldrig anges till `false` i en produktionsmiljö.      – Ta reda på adressen som svaret ska returneras. Ange antingen den <xref:System.IdentityModel.Scope.AppliesToAddress%2A>eller <xref:System.IdentityModel.Scope.ReplyToAddress%2A>egenskapen därefter.</xref:System.IdentityModel.Scope.ReplyToAddress%2A> </xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows an implementation of the GetScope method. This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=fullName> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.  \n  \n [!code-cs[WIFCustomTokenSTS#4](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#4)]  \n[!code-cs[WIFCustomTokenSTS#5](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#5)]  \n[!code-cs[WIFCustomTokenSTS#7](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#7)]"
  syntax:
    content: protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar den klient som begäran."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar den inkommande begäranden (RST)."
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som kapslar in RP-information kopplad till begäran."
  overload: System.IdentityModel.SecurityTokenService.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  id: GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar lämplig Säkerhetstokenhanteraren för att utfärda en säkerhetstoken för den angivna typen."
  remarks: "I standardimplementeringen om `requestedTokenType` är `null` eller en tom sträng standardalternativ tokentypen från konfigurationen. Detta anges av den <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>egenskapen för STS-konfigurationsobjekt som nås via det <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>egenskap.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>       Den här metoden anropas från standardvärdet utfärdande pipeline implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);
    parameters:
    - id: requestedTokenType
      type: System.String
      description: "En sträng som innehåller den begärda tokentypen URI."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "En <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> som representerar hanteraren som ska användas för att skapa säkerhetstoken utfärdade token. Returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den begärda tokentypen inte stöds (det finns ingen hanterare har konfigurerats för den angivna tokentypen)."
  overload: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  id: GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar livslängd för Utfärdad token."
  remarks: "Den här metoden anropas vanligtvis med giltighetstid som anlänt i RST. I standardimplementeringen beräknas livslängd för token enligt följande tabell.      | Skapade (i) | Upphör att gälla (i) | Skapade (i) | Upphör att gälla (ut) |   |--------------------|--------------------|--------------------|---------------------|   | `null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| <xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | C | `null`| C | C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | `null`| E | <xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| E |   | C | E | C | E |       Den här metoden anropas från standardvärdet utfärdande pipeline implementerad i den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);
    parameters:
    - id: requestLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> som representerar den begärda livslängden."
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> som representerar den beviljade livslängden."
  overload: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Utfärdar en säkerhetstoken."
  remarks: "Den här metoden implementerar problemet bindningen som har definierats i WS-Trust-specifikationen. Standardimplementering av metoden problemet bearbetar inkommande begäran (RST) via en pipeline för utfärdande (anspråk utfärdande) och returnerar ett svar (RSTR) som innehåller en säkerhetstoken med lämpliga anspråk för att autentisera begäranden hos RP eller ett lämpliga undantag. Pipeline för utfärdande i standardimplementering består av anrop till följande metoder (av den <xref:System.IdentityModel.SecurityTokenService>klassen).</xref:System.IdentityModel.SecurityTokenService>      1.  Den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metod för att kontrollera begäran (RST).</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>      2.  Den <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metod för att hämta en <xref:System.IdentityModel.Scope>objekt som innehåller information om förlitande part (RP) kopplad till begäran.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Du måste åsidosätta den här metoden. Om <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>returnerar `null`, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A>      3.  Den <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>metod för att returnera en säkerhetsbeskrivning för token baserat på RST och <xref:System.IdentityModel.Scope>objekt returneras i föregående steg.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> Säkerhetsbeskrivningen för token (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) innehåller information om begäran i ett formulär som kan användas av en token hanterare.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> Den <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName>egenskap är inställd på den beskrivning som returneras av anropet.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> Om `null` returneras eller om den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>egenskapen på beskrivningen är `null`, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException> </xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> Undantaget genereras även om den <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>egenskapen är `true` men <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>-egenskapen i returnerade beskrivningen är `null`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>      4.  Den <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>metod för att hämta en token lämplig hanterare baserat på vilken typ av token som begärdes.</xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> Om `null` returneras en <xref:System.NotImplementedException>genereras.</xref:System.NotImplementedException>      5.  Den <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>metod för att hämta Utfärdarens namn för token.</xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> Genererar en <xref:System.InvalidOperationException>om namnet är `null` eller tomt, annars anges den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>egenskapen i beskrivningen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> </xref:System.InvalidOperationException>      6.  Den <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>metod för att hämta livslängd för token och anger den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>-egenskapen i beskrivningen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> </xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>      7.  Den <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metod för att hämta bevistoken ska ingå i utfärdade token och anger den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>-egenskapen i beskrivningen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> </xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>      8.  Den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metod för att hämta de anspråk som ska ingå i utfärdade token och anger den <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>-egenskapen i beskrivningen.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Du måste åsidosätta den här metoden.      9. Den <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>metoden för att skapa ett svar (RSTR) som innehåller Utfärdad token.</xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>       Du kan åsidosätta metoden problemet för att implementera en anpassad utfärdande pipeline; men detta behövs vanligtvis inte i utvecklings- och testmiljöer för vilka de flesta anpassade implementeringar av den <xref:System.IdentityModel.SecurityTokenService>klass är avsedda.</xref:System.IdentityModel.SecurityTokenService> Många av dessa fall du åsidosätta den <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>och <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metoder och du kan också åsidosätta den <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metod för att ge en användbar STS för din miljö.</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Om ytterligare anpassning krävs tillhandahåller du den ofta genom att åsidosätta de metoder som implementerar varje steg i standard pipeline för utfärdande som anges ovan."
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som innehåller utfärdade säkerhetstoken."
  overload: System.IdentityModel.SecurityTokenService.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Principal
  id: Principal
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar eller anger objektet som associeras med den aktuella instansen."
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal Principal { get; set; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar den aktuella huvudnamn."
  overload: System.IdentityModel.SecurityTokenService.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Bearbetar en WS-Trust förnya begäran när åsidosätts i en härledd klass."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.Renew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Request
  id: Request
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar eller anger säkerhet tokenbegäran (RST) som är associerade med den aktuella instansen."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som innehåller en begäran."
  overload: System.IdentityModel.SecurityTokenService.Request*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Scope
  id: Scope
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar eller anger den omfattning som är associerade med den aktuella instansen."
  syntax:
    content: public System.IdentityModel.Scope Scope { get; set; }
    return:
      type: System.IdentityModel.Scope
      description: "En <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> som representerar konfigurationen för utfärdande-begäran."
  overload: System.IdentityModel.SecurityTokenService.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  id: SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar eller anger den <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenDescriptor&quot;> </xref> som är associerade med den aktuella instansen."
  syntax:
    content: protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Token säkerhetsbeskrivningen som är associerad med den aktuella instansen."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett försök att ange egenskapen till <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> inträffar."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  id: SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Hämtar ägaren konfigurationsinstans."
  syntax:
    content: public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }
    return:
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "En <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> som innehåller konfiguration för den aktuella instansen."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "När åsidosätts i en härledd klass bearbetar en WS-Trust verifiera begäran."
  remarks: "Standardimplementering av den här metoden genererar <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "En <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> som representerar token beställaren identitet."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar Tokenbegäran för säkerhet. Detta inkluderar begäran meddelande samt annan klient relaterad information, till exempel autentiseringskontexten."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> som representerar RSTR som ska returneras till anroparen."
  overload: System.IdentityModel.SecurityTokenService.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Verifierar säkerhet tokenbegäran (RST) inkapslad av den här instansen."
  remarks: "ValidateRequest-metoden anropas från pipeline för utfärdande (den <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metoden) att validera inkommande RST.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> RST verifieras mot STS krav (principen) och ett lämpligt undantag om den inte är giltigt.       Standardimplementering av den <xref:System.IdentityModel.SecurityTokenService>klassen stöder endast RST RSTR mönstret och problemet bindning av WS-Trust-specifikationen (den <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>egenskapen för begäran måste anges till <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>).</xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName> </xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> </xref:System.IdentityModel.SecurityTokenService> Standardimplementering av den här metoden tillämpar dessa krav (och andra anges i avsnittet undantag). Du kan åsidosätta den här metoden om du måste tillämpa olika verifieringskraven för din anpassade STS."
  syntax:
    content: protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "En <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> som representerar begäran."
  overload: System.IdentityModel.SecurityTokenService.ValidateRequest*
  exceptions:
  - type: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    commentId: T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> för begäran inte egenskapen <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue&quot;> </xref>.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> -egenskapen för begäran är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en av konstanterna som definierats i den <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes&quot;> </xref> klass.       - eller - <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> av är <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer&quot;> </xref> och <xref uid=&quot;langword_csharp_KeySize&quot; name=&quot;KeySize&quot; href=&quot;&quot;> </xref> -element saknas, men dess värde är inte lika med noll."
  - type: System.IdentityModel.UnsupportedTokenTypeBadRequestException
    commentId: T:System.IdentityModel.UnsupportedTokenTypeBadRequestException
    description: "STS stöder inte tokentypen för begäran (baserat på värdet för den <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>egenskapen för begäran).</xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: InvalidRequestException
  nameWithType: InvalidRequestException
  fullName: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
- uid: System.IdentityModel.UnsupportedTokenTypeBadRequestException
  parent: System.IdentityModel
  isExternal: false
  name: UnsupportedTokenTypeBadRequestException
  nameWithType: UnsupportedTokenTypeBadRequestException
  fullName: System.IdentityModel.UnsupportedTokenTypeBadRequestException
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
- uid: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityToken
  nameWithType: RequestSecurityToken
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
- uid: System.IdentityModel.Scope
  parent: System.IdentityModel
  isExternal: false
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.ProofDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: ProofDescriptor
  nameWithType: ProofDescriptor
  fullName: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Principal
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Request
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.#ctor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService
  nameWithType: SecurityTokenService.SecurityTokenService
- uid: System.IdentityModel.SecurityTokenService.BeginCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel
  nameWithType: SecurityTokenService.BeginCancel
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope
  nameWithType: SecurityTokenService.BeginGetScope
- uid: System.IdentityModel.SecurityTokenService.BeginIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue
  nameWithType: SecurityTokenService.BeginIssue
- uid: System.IdentityModel.SecurityTokenService.BeginRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew
  nameWithType: SecurityTokenService.BeginRenew
- uid: System.IdentityModel.SecurityTokenService.BeginValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate
  nameWithType: SecurityTokenService.BeginValidate
- uid: System.IdentityModel.SecurityTokenService.Cancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel
  nameWithType: SecurityTokenService.Cancel
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel
  nameWithType: SecurityTokenService.EndCancel
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope
  nameWithType: SecurityTokenService.EndGetScope
- uid: System.IdentityModel.SecurityTokenService.EndIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue
  nameWithType: SecurityTokenService.EndIssue
- uid: System.IdentityModel.SecurityTokenService.EndRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew
  nameWithType: SecurityTokenService.EndRenew
- uid: System.IdentityModel.SecurityTokenService.EndValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate
  nameWithType: SecurityTokenService.EndValidate
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName
  nameWithType: SecurityTokenService.GetIssuerName
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.GetProofToken*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken
  nameWithType: SecurityTokenService.GetProofToken
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse
  nameWithType: SecurityTokenService.GetResponse
- uid: System.IdentityModel.SecurityTokenService.GetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope
  nameWithType: SecurityTokenService.GetScope
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler
  nameWithType: SecurityTokenService.GetSecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime
  nameWithType: SecurityTokenService.GetTokenLifetime
- uid: System.IdentityModel.SecurityTokenService.Issue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue
  nameWithType: SecurityTokenService.Issue
- uid: System.IdentityModel.SecurityTokenService.Principal*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew
  nameWithType: SecurityTokenService.Renew
- uid: System.IdentityModel.SecurityTokenService.Request*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate
  nameWithType: SecurityTokenService.Validate
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest
  nameWithType: SecurityTokenService.ValidateRequest
