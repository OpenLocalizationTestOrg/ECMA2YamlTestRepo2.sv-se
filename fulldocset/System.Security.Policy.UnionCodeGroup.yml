### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.UnionCodeGroup
  id: UnionCodeGroup
  children:
  - System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  - System.Security.Policy.UnionCodeGroup.Copy
  - System.Security.Policy.UnionCodeGroup.MergeLogic
  - System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: UnionCodeGroup
  nameWithType: UnionCodeGroup
  fullName: System.Security.Policy.UnionCodeGroup
  type: Class
  summary: "Representerar en grupp vars Principframställning är unionen av den aktuella Kodgruppen Principframställning och kommentar för alla dess matchande underordnade grupper. Den här klassen kan inte ärvas."
  remarks: "Grupper är byggblocken i säkerhetspolicy för kodåtkomst. Varje princip består av en rotkodgruppen som kan ha underordnade grupper (och så vidare), som utgör ett träd. Varje grupp har ett villkor för medlemskap som avgör om en angiven sammansättning tillhör det eller inte, baserat på sammansättningsbevis för sammansättningen. Tillämpa principen endast grupper med villkor för medlemskap som matchar en angiven sammansättning och deras underordnade grupper.       UnionCodeGroup är den vanligaste typen av Kodgruppen; kommentar för alla matchande underordnade grupper (och genom filnamnstillägget deras underordnade grupper) kombinerat med behörighet för gruppen med matchande överordnade. Därför utgör villkor för medlemskap matchar den här Kodgruppen unionen av dess Principframställning av och alla dess underordnade grupper som också matchar bevis.       UnionCodeGroup kodgrupper är kodgrupper som skapats av verktyget CASPOL (se [Caspol.exe (Code Access princip säkerhetsverktyget)](~/add/includes/ajax-current-ext-md.md))."
  syntax:
    content: >-
      [System.Obsolete("This type is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UnionCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.AttributeString
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Object)
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.GetHashCode
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.PermissionSetName
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)'
  parent: System.Security.Policy.UnionCodeGroup
  langs:
  - csharp
  name: UnionCodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: UnionCodeGroup.UnionCodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.UnionCodeGroup.UnionCodeGroup(IMembershipCondition,PolicyStatement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Policy.UnionCodeGroup&quot;> </xref> klass."
  remarks: "Den här konstruktorn skapar en grundläggande kodgrupp och ska anropas från konstruktorerna i anpassade grupper. Du kan lägga till underordnade grupper med hjälp av den <xref:System.Security.Policy.CodeGroup.AddChild%2A>metoden.</xref:System.Security.Policy.CodeGroup.AddChild%2A>"
  syntax:
    content: public UnionCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "Ett villkor för medlemskap som testar bevis för att avgöra om den här Kodgruppen gäller principen."
    - id: policy
      type: System.Security.Policy.PolicyStatement
      description: "Kommentar för Kodgruppen i form av en behörighetsgrupp och attribut att ge koden som matchar villkoren för medlemskap."
  overload: System.Security.Policy.UnionCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Typ av den <code> membershipCondition </code> är inte giltig.       - eller - typ av den <code> policy </code> är inte giltig."
  platform:
  - net462
- uid: System.Security.Policy.UnionCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.UnionCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: UnionCodeGroup.Copy()
  fullName: System.Security.Policy.UnionCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gör en djup kopia av den aktuella gruppen i koden."
  remarks: "Den här metoden gör en djup kopia av Kodgruppen så att kopior av alla objekt som innehåller Kodgruppen görs också."
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "En motsvarande kopia av den aktuella Kodgruppen, inklusive villkor för medlemskap och underordnade grupper."
  overload: System.Security.Policy.UnionCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.UnionCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.UnionCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: UnionCodeGroup.MergeLogic
  fullName: System.Security.Policy.UnionCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hämtar merge-logiken."
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "Alltid strängen &quot;Union&quot;."
  overload: System.Security.Policy.UnionCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.UnionCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: UnionCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.UnionCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Löser princip för gruppen och dess underordnade för en uppsättning bevis."
  remarks: "Den här metoden utvärderar Kodgruppen genom att först kontrollera villkor för medlemskap mot den angivna bevisen angivna bevis för en sammansättning som ska läsas in. Om det finns en matchning i den här metoden returnerar en kommentar för Kodgruppen, inklusive utvärdering av underordnade grupper.       Alla underordnade grupper vars villkor för medlemskap matchar bevis också matchas för union kodgrupper och alla resulterande principrapporter utgör en union av av den överordnade unionkodgruppen för princip-satsen. Varje typ av underordnade koden avgör hur dess underordnade grupper tillämpas beroende på hur deras respektive Lös metoder fungerar.       Säkerhetssystem .NET Framework använder Lös på nivåerna princip för att avgöra vilka behörigheter som ska tilldelas till kod som har lästs in från de resulterande principrapporter och begäran koden i sammansättningen.       Om inte matchar den angivna bevisen villkor för medlemskap, den här metoden returnerar `null`, annars den anger behörighetsgruppen ska returneras (P) motsvarar Kodgruppen Principframställning och går sedan vidare. För varje underordnad Kodgruppen löser metoden Kodgruppen med samma bevis; Om resultatet inte är `null`, anger P lika med unionen av P och underordnade Kodgruppen princip-satsen. Den returnerar sedan P, som nu unionen av den aktuella Kodgruppen Principframställning och alla underordnade grupp hanteringsprinciper."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Sammansättningsbevis för sammansättningen."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "En kommentar som består av de behörigheter som utfärdats av Kodgruppen med valfria attribut eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om gruppen inte fungerar (villkor för medlemskap matchar inte den angivna bevisen)."
  overload: System.Security.Policy.UnionCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Mer än en grupp (inklusive gruppen överordnad kod och alla underordnade grupper) har markerats <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.UnionCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: UnionCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Matchar matchar grupper."
  remarks: "Den här metoden utvärderar Kodgruppen genom att först kontrollera villkor för medlemskap mot den angivna bevisen angivna bevis för en sammansättning som ska läsas in. Om det finns en matchning i den här metoden returnerar en rotkodgruppen. Kodgruppen som returneras kan innehålla underordnade grupper, vilket i sin tur kan också innehålla underordnade grupper, så det returnera värdet visar en fullständig uppsättning grupper som har matchat bevis tillhandahålls."
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Sammansättningsbevis för sammansättningen."
    return:
      type: System.Security.Policy.CodeGroup
      description: "En fullständig uppsättning grupper som har matchat bevis."
  overload: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: UnionCodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: UnionCodeGroup.UnionCodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.UnionCodeGroup.UnionCodeGroup(IMembershipCondition,PolicyStatement)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.UnionCodeGroup.Copy
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: UnionCodeGroup.Copy()
  fullName: System.Security.Policy.UnionCodeGroup.Copy()
- uid: System.Security.Policy.UnionCodeGroup.MergeLogic
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: UnionCodeGroup.MergeLogic
  fullName: System.Security.Policy.UnionCodeGroup.MergeLogic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: UnionCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.UnionCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: UnionCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.UnionCodeGroup.#ctor*
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: UnionCodeGroup
  nameWithType: UnionCodeGroup.UnionCodeGroup
- uid: System.Security.Policy.UnionCodeGroup.Copy*
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: Copy
  nameWithType: UnionCodeGroup.Copy
- uid: System.Security.Policy.UnionCodeGroup.MergeLogic*
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: UnionCodeGroup.MergeLogic
- uid: System.Security.Policy.UnionCodeGroup.Resolve*
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: UnionCodeGroup.Resolve
- uid: System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.UnionCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: UnionCodeGroup.ResolveMatchingCodeGroups
