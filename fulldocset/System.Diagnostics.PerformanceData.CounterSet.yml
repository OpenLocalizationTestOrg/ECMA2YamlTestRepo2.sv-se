### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterSet
  id: CounterSet
  children:
  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  - System.Diagnostics.PerformanceData.CounterSet.Dispose
  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceData.CounterSet.Finalize
  langs:
  - csharp
  name: CounterSet
  nameWithType: CounterSet
  fullName: System.Diagnostics.PerformanceData.CounterSet
  type: Class
  summary: "Definierar en uppsättning logiska räknare."
  remarks: "Anropa den <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>metoden när du är klar att ta bort registreringen av din leverantör och frigör alla hanterade och ohanterade resurser.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: 'public class CounterSet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.PerformanceData.CounterSet&quot;> </xref> klass."
  remarks: "Registrerar din leverantör. Anropar den <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>metoden tar bort registreringen.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "GUID som identifierar leverantören av räknardata. Använd det Guid som angetts i manifestet."
    - id: counterSetGuid
      type: System.Guid
      description: "GUID som identifierar räknaruppsättningen för en provider. Använd det Guid som angetts i manifestet."
    - id: instanceType
      type: System.Diagnostics.PerformanceData.CounterSetInstanceType
      description: "Identifierar typ av uppsättning räknare exempelvis om uppsättning räknare är en uppsättning med räknare eller flera instanser."
  overload: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Det finns inte tillräckligt med minne är tillgängligt för att slutföra åtgärden."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Stöder inte tidigare än Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En av parametrarna är NULL eller ogiltigt."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Det gick inte att anropa för en underliggande Win32-funktionen."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Lägger till en räknare räknaruppsättningen med hjälp av den angivna räknaren identifierare och skriv."
  remarks: "Du måste lägga till räknare räknaruppsättningen innan du skapar en instans av uppsättning räknare."
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifierar räknaren. Använd samma värde som du använde i manifestet för att definiera räknaren."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifierar Räknartypen. Räknartypen anger hur räknardata beräknas, ett genomsnitt räknas ut och visas."
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identifierare för räknaren finns redan i uppsättningen eller är negativt eller Räknartypen är NULL eller ogiltigt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Du kan inte lägga till räknare räknaruppsättningen när du skapar en instans av räknaren."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Lägger till en räknare räknaruppsättningen med hjälp av den angivna räknare identifieraren och typ och ett namn för räknaren."
  remarks: "Du måste lägga till räknare räknaruppsättningen innan du skapar en instans av uppsättning räknare."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifierar räknaren. Använd samma värde som du använde i manifestet för att definiera räknaren."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifierar Räknartypen. Räknartypen anger hur räknardata beräknas, ett genomsnitt räknas ut och visas."
    - id: counterName
      type: System.String
      description: "Namnet på räknaren. Du kan använda det här namnet för att indexera räknaren i uppsättningen räknarinstansen. (Se &lt;xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName&gt;.)"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identifierare för räknaren finns redan i uppsättningen eller är negativt eller Räknartypen är NULL eller ogiltigt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Du kan inte lägga till räknare räknaruppsättningen när du skapar en instans av räknaren."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  id: CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Skapar en instans av uppsättning räknare."
  remarks: "Anropa den här metoden en gång för single instance räknaren uppsättningar och en eller flera gånger för flera instans uppsättningar.       Providern anger när en instans skapas. Om räknardata är mer statisk kan providern skapa en instans vid initiering. Till exempel kan antalet processorer på en dator betraktas som statisk, så att en provider som ger räknardata för processorer kan skapa en instans för varje processor på datorn vid initiering. För räknare som är mer dynamiskt, till exempel disk eller bearbeta räknare skapar providers nya instanser som svar på en ny USB-enhet som läggs till eller en ny process skapas.       Providern bör hålla data uppdaterade alltid räknaren."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Namnet på instansen. Namnet måste vara unikt."
    return:
      type: System.Diagnostics.PerformanceData.CounterSetInstance
      description: "En instans av den uppsättning räknare som ska innehålla räknardata."
  overload: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Namnet på instansen är NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Du måste lägga till räknare räknaruppsättningen innan du skapar en instans av uppsättning räknare."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  id: Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Frigör alla ohanterade resurser som används av det här objektet."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Versioner som används för alla resurser som inte hanteras av det här objektet och eventuellt släpp hanterade resurser."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Om detta anropades från metoden Dispose <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> om den anropas från slutföraren."
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  id: Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Frigör resurser innan objektet har frigjorts av skräpinsamling."
  remarks: "Den här metoden anropas automatiskt av körningen."
  syntax:
    content: ~CounterSet ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstanceType
  nameWithType: CounterSetInstanceType
  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceData.CounterType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterType
  nameWithType: CounterType
  fullName: System.Diagnostics.PerformanceData.CounterType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
- uid: System.Diagnostics.PerformanceData.CounterSetInstance
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstance
  nameWithType: CounterSetInstance
  fullName: System.Diagnostics.PerformanceData.CounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet
  nameWithType: CounterSet.CounterSet
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter
  nameWithType: CounterSet.AddCounter
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance
  nameWithType: CounterSet.CreateCounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose
  nameWithType: CounterSet.Dispose
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize
  nameWithType: CounterSet.Finalize
