### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService
  id: ITypeDescriptorFilterService
  children:
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  langs:
  - csharp
  name: ITypeDescriptorFilterService
  nameWithType: ITypeDescriptorFilterService
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService
  type: Interface
  summary: "Tillhandahåller ett gränssnitt för att ändra uppsättningen medlem beskrivningar för en komponent i designläge."
  remarks: "Gränssnittet ITypeDescriptorFilterService tillhandahåller ett gränssnitt som tillåter ändringar av egenskaper, händelser och klassnivå attribut för en komponent i designläge. Den här ändringen sker via en uppsättning beskrivningar som en komponent som ger via <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> Typen descriptor att söka i en komponent platsen för tjänsten ITypeDescriptorFilterService och om den finns, typen descriptor skickar alla metadata som den har samlats in på tjänsten. Tjänsten kan ändra metadata genom att lägga till, ta bort och ändra befintliga egenskaperna för komponenten.       Till exempel egenskaper för en komponent kan ändras via ett anrop till den <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>metoden.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> Hämtar en ordlista som innehåller egenskapsnamn och deras beskrivningar för egenskap av typen <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> för filtertjänsten Ändringarna som implementeras med hjälp av följande logik.      | Ändring | Implementering |   |------------------|--------------------|   | Ta bort | Ta bort motsvarande post i ordlistan. |   | Tillägg | Lägga till ett lämpligt alternativ i ordlistan. |   | Ändring | Anropa befintliga egenskapen beskrivning metoder, ersätta den kopplade egenskap Beskrivning posten eller ersätta hela egenskapen nyckel/värde-par i ordlistan. |       Returvärdet för <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>avgör om den här uppsättningen egenskaper är löst.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> Om den här metoden returnerar `true`, <xref:System.ComponentModel.TypeDescriptor>för den här komponenten kan cachelagra resultaten.</xref:System.ComponentModel.TypeDescriptor> Det här cacheminnet bibehålls tills antingen komponenten samlas in som skräp eller <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>typen descriptor-metoden anropas.</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  example:
  - "The following code example demonstrates a designer that uses the ITypeDescriptorFilterService to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \n  \n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements ITypeDescriptorFilterService, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original ITypeDescriptorFilterService. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \n  \n [!code-cs[ITypeDescriptorFilterService#1](~/add/codesnippet/csharp/t-system.componentmodel._32_1.cs)]\n [!code-vb[ITypeDescriptorFilterService#1](~/add/codesnippet/visualbasic/t-system.componentmodel._32_1.vb)]\n [!code-cpp[ITypeDescriptorFilterService#1](~/add/codesnippet/cpp/t-system.componentmodel._32_1.cpp)]"
  syntax:
    content: public interface ITypeDescriptorFilterService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Filtrerar de attribut som en komponent som visar via en <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Den här metoden anropas när en användare begär en uppsättning attribut för en komponent. Attribut som läggs till i ordlistan med attributets <xref:System.Attribute.TypeId%2A>som nycklarna och attributet faktiska som värde.</xref:System.Attribute.TypeId%2A> Implementerare för den här tjänsten kan lägga till, ta bort eller ändra befintliga attributet poster i ordlistan."
  syntax:
    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Komponenten att filtrera attribut."
    - id: attributes
      type: System.Collections.IDictionary
      description: "En ordlista över de attribut som kan ändras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om filtrerad attributuppsättning ska cachelagras; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om filter-tjänsten måste fråga igen."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Händelser som en komponent som visar via en <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Den här metoden anropas när en användare begär en uppsättning händelser för en komponent. Händelser har lagts till i ordlistan med händelsenamn som nycklarna och motsvarande <xref:System.ComponentModel.EventDescriptor>objekt som värden.</xref:System.ComponentModel.EventDescriptor> Implementerare för den här tjänsten kan lägga till, ta bort eller ändra händelseposter i ordlistan."
  syntax:
    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Komponenten att filtrera händelser för."
    - id: events
      type: System.Collections.IDictionary
      description: "En ordlista med händelser som kan ändras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en uppsättning filtreras händelser ska cachelagras; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om filter-tjänsten måste fråga igen."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Filtrerar egenskaperna som en komponent som visar via en <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Den här metoden anropas när en användare begär en uppsättning egenskaper för en komponent. Egenskaperna läggs till i ordlistan med egenskapsnamnen som nycklarna och motsvarande <xref:System.ComponentModel.PropertyDescriptor>objekt som värden.</xref:System.ComponentModel.PropertyDescriptor> Implementerare för den här tjänsten kan lägga till, ta bort eller ändra egenskapen poster i ordlistan."
  syntax:
    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Komponenten till för filteregenskaper för."
    - id: properties
      type: System.Collections.IDictionary
      description: "En ordlista med egenskaper som kan ändras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om uppsättningen filtrerade egenskaper ska cachelagras; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om filter-tjänsten måste fråga igen."
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes
  nameWithType: ITypeDescriptorFilterService.FilterAttributes
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents
  nameWithType: ITypeDescriptorFilterService.FilterEvents
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties
  nameWithType: ITypeDescriptorFilterService.FilterProperties
