### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Container
  id: Container
  children:
  - System.ComponentModel.Container.#ctor
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Dispose(System.Boolean)
  - System.ComponentModel.Container.Finalize
  - System.ComponentModel.Container.GetService(System.Type)
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  langs:
  - csharp
  name: Container
  nameWithType: Container
  fullName: System.ComponentModel.Container
  type: Class
  summary: "Kapslar in noll eller flera komponenter."
  remarks: "Klassen behållare är standardimplementering för den <xref:System.ComponentModel.IContainer>gränssnitt.</xref:System.ComponentModel.IContainer>       Behållare är objekt som kapslar in och spåra noll eller flera komponenter. I den här kontexten avser inneslutning logiska inneslutning, inte visual inneslutning. Du kan använda komponenter och behållare i en mängd olika scenarier, inklusive scenarier som är både visual och inte visual.       Komponenterna i en behållare spåras i en först in, först ut lista som också definierar ordningen för komponenter i behållaren. Tillagda komponenter läggs till i slutet av listan."
  syntax:
    content: 'public class Container : IDisposable, System.ComponentModel.IContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IContainer
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Container.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Container&quot;> </xref> klass."
  syntax:
    content: public Container ();
    parameters: []
  overload: System.ComponentModel.Container.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  id: Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till den angivna <xref href=&quot;System.ComponentModel.Component&quot;> </xref> till den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>. Komponenten är namnlösa."
  remarks: "Den här metoden kan åsidosättas med en härledd klass.       Den nya <xref:System.ComponentModel.Component>har lagts till i slutet av listan.</xref:System.ComponentModel.Component>"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Att lägga till komponenten."
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  id: Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lägger till den angivna <xref href=&quot;System.ComponentModel.Component&quot;> </xref> till den <xref href=&quot;System.ComponentModel.Container&quot;> </xref> och tilldelar den ett namn."
  remarks: "Den här metoden kan åsidosättas med en härledd klass.       Den nya <xref:System.ComponentModel.Component>har lagts till i slutet av listan.</xref:System.ComponentModel.Component>"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Att lägga till komponenten."
    - id: name
      type: System.String
      description: "Unikt, skiftlägeskänsliga namn att tilldela komponenten.       - eller - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vilket lämnar komponenten namnlösa."
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>är inte unikt."
  platform:
  - net462
- uid: System.ComponentModel.Container.Components
  id: Components
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar alla komponenter i den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Den här metoden kan åsidosättas med en härledd klass.       Komponenterna i samlingen lagras i samma ordning som de har lagts till i <xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container>"
  syntax:
    content: public virtual System.ComponentModel.ComponentCollection Components { get; }
    return:
      type: System.ComponentModel.ComponentCollection
      description: "En samling som innehåller komponenterna i den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  overload: System.ComponentModel.Container.Components*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Skapar en webbplats <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> för den angivna <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> och tilldelar det angivna namnet på webbplatsen."
  remarks: "Om den `name` parametern är `null`, <xref:System.ComponentModel.IComponent>läggs till i <xref:System.ComponentModel.Container>utan ett namn.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.IComponent>       Den här metoden kan åsidosättas med en härledd klass. Administratörer som behöver åsidosätta metoden CreateSite kan ge en anpassad implementering via en klass som implementerar det <xref:System.ComponentModel.ISite>gränssnittet.</xref:System.ComponentModel.ISite>"
  syntax:
    content: protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Den <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> att skapa en plats för."
    - id: name
      type: System.String
      description: "Namnet ska tilldelas `component`, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att hoppa över tilldelningen namn."
    return:
      type: System.ComponentModel.ISite
      description: "Den nya platsen."
  overload: System.ComponentModel.Container.CreateSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose
  id: Dispose
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Frigör alla resurser som används av den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "När <xref:System.ComponentModel.Container.Dispose%2A>du är klar med hjälp av <xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> Den <xref:System.ComponentModel.Container.Dispose%2A>metoden lämnar kvar det <xref:System.ComponentModel.Container>oanvändbar.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> När du anropar <xref:System.ComponentModel.Container.Dispose%2A>, måste du släppa alla referenser till den <xref:System.ComponentModel.Container>så skräpinsamlingen kan frigöra minne som den <xref:System.ComponentModel.Container>var använder.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropa <xref:System.ComponentModel.Container.Dispose%2A>innan du släpper senaste referens till <xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.ComponentModel.Container>objektets `Finalize` metod.</xref:System.ComponentModel.Container>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>, och du kan också släpper hanterade resurser."
  remarks: "Den här metoden anropas av allmänheten `Dispose` metod och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> `Dispose`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.Object.Finalize%2A>       När den `disposing` parametern är true, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.ComponentModel.Container>referenser.</xref:System.ComponentModel.Container> Den här metoden startar den `Dispose`metod för varje refererade till objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Finalize
  id: Finalize
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Släpper ohanterade resurser och utför andra rensningsåtgärder innan den <xref href=&quot;System.ComponentModel.Container&quot;> </xref> frigöras vid en skräpinsamling."
  remarks: "Den här metoden åsidosätter <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Programkod bör inte anropa den här metoden. ett objekt `Finalize` metoden anropas automatiskt under skräpinsamling, såvida inte slutförande av skräpinsamlingen har inaktiverats av ett anrop till den <xref:System.GC.SuppressFinalize%2A>metoden.</xref:System.GC.SuppressFinalize%2A>       Mer information finns i [Finalize-metoderna och destruktorer](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md), och [åsidosätter metoden Slutför](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~Container ();
    parameters: []
  overload: System.ComponentModel.Container.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar serviceobjektet för den angivna typen, om den är tillgänglig."
  remarks: "Standardimplementering av den här metoden returnerar den aktuella instansen av klassen om `service` är en <xref:System.ComponentModel.IContainer>, annars returneras `null`.</xref:System.ComponentModel.IContainer> Du kan åsidosätta den här metoden för att ge en anpassad implementering för att returnera ett serviceobjekt. Mer information finns i <xref:System.IServiceProvider.GetService%2A?displayProperty=fullName>metod.</xref:System.IServiceProvider.GetService%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Den <xref:System.Type>av tjänsten för att hämta.</xref:System.Type>"
    return:
      type: System.Object
      description: "En <xref:System.Object>implementera den begärda tjänsten eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om tjänsten inte kan matchas.</xref:System.Object>"
  overload: System.ComponentModel.Container.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en komponent från den <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Den här metoden kan åsidosättas med en härledd klass."
  syntax:
    content: public virtual void Remove (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Komponenten som ska tas bort."
  overload: System.ComponentModel.Container.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  id: RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tar bort en komponent från den <xref href=&quot;System.ComponentModel.Container&quot;> </xref> utan inställningen <xref:System.ComponentModel.IComponent.Site*>till <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IComponent.Site*>"
  remarks: "Metoden RemoveWithoutUnsiting rensar platsen som vanligt, men anger inte komponentens <xref:System.ComponentModel.IComponent.Site%2A>egenskapen `null`.</xref:System.ComponentModel.IComponent.Site%2A>"
  syntax:
    content: protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Komponenten som ska tas bort."
  overload: System.ComponentModel.Container.RemoveWithoutUnsiting*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  id: ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Anger om component-namn är unikt för den här behållaren."
  remarks: "ValidateName-metoden anropas av den <xref:System.ComponentModel.Container.Add%2A>metod för att bestämma om namnet på den `component` som läggs till är unikt för den här <xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Add%2A> Om den `name` parametern är inte `null` och är inte unikt, en <xref:System.ArgumentException>genereras.</xref:System.ArgumentException>"
  syntax:
    content: protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Den namngivna komponenten."
    - id: name
      type: System.String
      description: "Komponentnamnet för att verifiera."
  overload: System.ComponentModel.Container.ValidateName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>är inte unikt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Container.#ctor
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Container.Components
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
- uid: System.ComponentModel.ComponentCollection
  parent: System.ComponentModel
  isExternal: false
  name: ComponentCollection
  nameWithType: ComponentCollection
  fullName: System.ComponentModel.ComponentCollection
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Container.Dispose
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Container.Finalize
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
- uid: System.ComponentModel.Container.GetService(System.Type)
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
- uid: System.ComponentModel.Container.#ctor*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container
  nameWithType: Container.Container
- uid: System.ComponentModel.Container.Add*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add
  nameWithType: Container.Add
- uid: System.ComponentModel.Container.Components*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
- uid: System.ComponentModel.Container.CreateSite*
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite
  nameWithType: Container.CreateSite
- uid: System.ComponentModel.Container.Dispose*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose
  nameWithType: Container.Dispose
- uid: System.ComponentModel.Container.Finalize*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize
  nameWithType: Container.Finalize
- uid: System.ComponentModel.Container.GetService*
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService
  nameWithType: Container.GetService
- uid: System.ComponentModel.Container.Remove*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove
  nameWithType: Container.Remove
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting*
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting
  nameWithType: Container.RemoveWithoutUnsiting
- uid: System.ComponentModel.Container.ValidateName*
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName
  nameWithType: Container.ValidateName
