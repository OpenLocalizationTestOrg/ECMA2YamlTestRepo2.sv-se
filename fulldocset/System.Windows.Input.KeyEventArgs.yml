### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.KeyEventArgs
  id: KeyEventArgs
  children:
  - System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)
  - System.Windows.Input.KeyEventArgs.DeadCharProcessedKey
  - System.Windows.Input.KeyEventArgs.ImeProcessedKey
  - System.Windows.Input.KeyEventArgs.InputSource
  - System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.KeyEventArgs.IsDown
  - System.Windows.Input.KeyEventArgs.IsRepeat
  - System.Windows.Input.KeyEventArgs.IsToggled
  - System.Windows.Input.KeyEventArgs.IsUp
  - System.Windows.Input.KeyEventArgs.Key
  - System.Windows.Input.KeyEventArgs.KeyStates
  - System.Windows.Input.KeyEventArgs.SystemKey
  langs:
  - csharp
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
  type: Class
  summary: "Tillhandahåller data för den <xref href=&quot;System.Windows.UIElement.KeyUp&quot;> </xref> och <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> dirigerade händelser, samt relaterade ansluten och förhandsgranska händelser."
  remarks: "Den här händelseklassen data används med följande bifogade händelser:- <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>- <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>- <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>- <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>händelse dataklassen används också med följande dirigerade händelser för grundläggande element.</xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName> </xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName> </xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName> </xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName> Dessa dirigerade händelser vidarebefordra ovanstående bifogade händelser för att göra dem mer tillgänglig för generella elementet modellen i [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].      - <xref:System.Windows.UIElement.KeyUp?displayProperty=fullName>- <xref:System.Windows.UIElement.KeyDown?displayProperty=fullName>- <xref:System.Windows.UIElement.PreviewKeyUp?displayProperty=fullName>- <xref:System.Windows.UIElement.PreviewKeyDown?displayProperty=fullName>- <xref:System.Windows.ContentElement.KeyUp?displayProperty=fullName>- <xref:System.Windows.ContentElement.KeyDown?displayProperty=fullName>- <xref:System.Windows.ContentElement.PreviewKeyUp?displayProperty=fullName>- <xref:System.Windows.ContentElement.PreviewKeyDown?displayProperty=fullName>Bifogade händelser och baselementet dirigerade händelser dela sina händelsedata och den genomströmning och tunnlar versioner av dirigerade händelser också dela händelsedata.</xref:System.Windows.ContentElement.PreviewKeyDown?displayProperty=fullName> </xref:System.Windows.ContentElement.PreviewKeyUp?displayProperty=fullName> </xref:System.Windows.ContentElement.KeyDown?displayProperty=fullName> </xref:System.Windows.ContentElement.KeyUp?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewKeyDown?displayProperty=fullName> </xref:System.Windows.UIElement.PreviewKeyUp?displayProperty=fullName> </xref:System.Windows.UIElement.KeyDown?displayProperty=fullName> </xref:System.Windows.UIElement.KeyUp?displayProperty=fullName> Detta kan påverka hanterade egenskaperna för händelsen som transporteras skapades. Mer information finns i [indata översikt](~/add/includes/ajax-current-ext-md.md).       En nyckel kan vara i både dig och toggled eller ned och växlas tillstånd. Därför avgör om en nyckel som är upp eller ned inte är så enkelt som kontrollerar den <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A>värdet som ett numeriskt värde.</xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> I stället bör du kontrollera värdet genom att behandla det som en flagguppräkning. Använd en `AND` jämförelse av den första biten. Du kan också använda helper egenskaperna <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>, och <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A>för att avgöra om en viss nyckel är upp, ned eller toggled.</xref:System.Windows.Input.KeyEventArgs.IsToggled%2A> </xref:System.Windows.Input.KeyEventArgs.IsDown%2A> </xref:System.Windows.Input.KeyEventArgs.IsUp%2A>"
  syntax:
    content: 'public class KeyEventArgs : System.Windows.Input.KeyboardEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Input.KeyboardEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.Input.KeyboardEventArgs.KeyboardDevice
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)
  id: '#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)'
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
  nameWithType: KeyEventArgs.KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
  fullName: System.Windows.Input.KeyEventArgs.KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref> klass."
  syntax:
    content: public KeyEventArgs (System.Windows.Input.KeyboardDevice keyboard, System.Windows.PresentationSource inputSource, int timestamp, System.Windows.Input.Key key);
    parameters:
    - id: keyboard
      type: System.Windows.Input.KeyboardDevice
      description: "Den logiska tangentbord enheten som är associerade med den här händelsen."
    - id: inputSource
      type: System.Windows.PresentationSource
      description: "Indatakällan."
    - id: timestamp
      type: System.Int32
      description: "Tidpunkten då indata inträffade."
    - id: key
      type: System.Windows.Input.Key
      description: "Den nyckel som refereras av händelsen."
  overload: System.Windows.Input.KeyEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey
  id: DeadCharProcessedKey
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: DeadCharProcessedKey
  nameWithType: KeyEventArgs.DeadCharProcessedKey
  fullName: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar den nyckel som är en del av döda viktiga sammansättning att skapa ett kombinerade tecken."
  remarks: "En inaktiv nyckel, när trycks ned, ger inga synliga tecken men anger att nyckeln ska kombineras med tecken som genereras av nästa bokstaven trycks ned.  Om <xref:System.Windows.Input.KeyEventArgs.Key%2A>returnerar <xref:System.Windows.Input.Key?displayProperty=fullName>, du kan använda den här egenskapen för att hämta själva nyckeln som har angetts.</xref:System.Windows.Input.Key?displayProperty=fullName> </xref:System.Windows.Input.KeyEventArgs.Key%2A>"
  syntax:
    content: public System.Windows.Input.Key DeadCharProcessedKey { get; }
    return:
      type: System.Windows.Input.Key
      description: "Den nyckel som är en del av döda viktiga sammansättning att skapa ett kombinerade tecken."
  overload: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.ImeProcessedKey
  id: ImeProcessedKey
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: ImeProcessedKey
  nameWithType: KeyEventArgs.ImeProcessedKey
  fullName: System.Windows.Input.KeyEventArgs.ImeProcessedKey
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar tangenten refererar till händelsen, om nyckeln kommer att bearbetas av en [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public System.Windows.Input.Key ImeProcessedKey { get; }
    return:
      type: System.Windows.Input.Key
      description: "Den <xref href=&quot;System.Windows.Input.Key&quot;> </xref> refererar till händelsen."
  overload: System.Windows.Input.KeyEventArgs.ImeProcessedKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.InputSource
  id: InputSource
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: InputSource
  nameWithType: KeyEventArgs.InputSource
  fullName: System.Windows.Input.KeyEventArgs.InputSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar Indatakällan som tillhandahöll den här indata."
  syntax:
    content: public System.Windows.PresentationSource InputSource { get; }
    return:
      type: System.Windows.PresentationSource
      description: "Indatakällan."
  overload: System.Windows.Input.KeyEventArgs.InputSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: KeyEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.KeyEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Anropar händelsehanterare på ett sätt för typspecifika, vilket kan öka effektiviteten för händelsen system."
  remarks: "Den här implementeringen kastar generiska hanteraren som en <xref:System.Windows.Input.KeyEventHandler>och aktiverar det.</xref:System.Windows.Input.KeyEventHandler> Mer information om den här implementeringen mönstret och skälen för den finns <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>och [dirigerade händelser översikt](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "Allmän hanteraren att anropa på typspecifika sätt."
    - id: genericTarget
      type: System.Object
      description: "Målet att anropa hanteraren."
  overload: System.Windows.Input.KeyEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.IsDown
  id: IsDown
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: IsDown
  nameWithType: KeyEventArgs.IsDown
  fullName: System.Windows.Input.KeyEventArgs.IsDown
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar ett värde som anger om nyckeln refererar till händelsen är i läget ner."
  remarks: "Den <xref:System.Windows.Input.Keyboard>klassen ger också information om tillståndet för nycklarna på tangentbordet.</xref:System.Windows.Input.Keyboard> Till exempel den <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>metoden returnerar om en angiven nyckel är nere.</xref:System.Windows.Input.Keyboard.IsKeyDown%2A>"
  example:
  - "The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is down by obtaining the state of the IsDown property.  \n  \n [!code-cs[keyargssnippetsample#KeyEventArgsIsDown](~/add/codesnippet/csharp/KeyArgsSnippetSample/Window1.xaml.cs#keyeventargsisdown)]\n [!code-vb[keyargssnippetsample#KeyEventArgsIsDown](~/add/codesnippet/visualbasic/keyargssnippetsample/window1.xaml.vb#keyeventargsisdown)]"
  syntax:
    content: public bool IsDown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.KeyEventArgs.IsDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.IsRepeat
  id: IsRepeat
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: IsRepeat
  nameWithType: KeyEventArgs.IsRepeat
  fullName: System.Windows.Input.KeyEventArgs.IsRepeat
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar ett värde som anger om tangenten refererar till händelsen är en upprepad nyckel."
  remarks: ''
  example:
  - "The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is a repeated key by obtaining the state of the IsRepeat property.  \n  \n [!code-cs[keyargssnippetsample#KeyEventArgsIsRepeat](~/add/codesnippet/csharp/KeyArgsSnippetSample/Window1.xaml.cs#keyeventargsisrepeat)]\n [!code-vb[keyargssnippetsample#KeyEventArgsIsRepeat](~/add/codesnippet/visualbasic/keyargssnippetsample/window1.xaml.vb#keyeventargsisrepeat)]"
  syntax:
    content: public bool IsRepeat { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln upprepas; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Det finns inget standardvärde."
  overload: System.Windows.Input.KeyEventArgs.IsRepeat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.IsToggled
  id: IsToggled
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: IsToggled
  nameWithType: KeyEventArgs.IsToggled
  fullName: System.Windows.Input.KeyEventArgs.IsToggled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar ett värde som anger om nyckeln refererar till händelsen är i tillståndet toggled."
  remarks: "Den <xref:System.Windows.Input.Keyboard>klassen ger också information om tillståndet för nycklarna på tangentbordet.</xref:System.Windows.Input.Keyboard> Till exempel den <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>metoden returnerar om en angiven nyckel är inaktiverad.</xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>"
  example:
  - "The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is toggled by obtaining the state of the IsToggled property.  \n  \n [!code-cs[keyargssnippetsample#KeyEventArgsIsToggled](~/add/codesnippet/csharp/KeyArgsSnippetSample/Window1.xaml.cs#keyeventargsistoggled)]\n [!code-vb[keyargssnippetsample#KeyEventArgsIsToggled](~/add/codesnippet/visualbasic/keyargssnippetsample/window1.xaml.vb#keyeventargsistoggled)]"
  syntax:
    content: public bool IsToggled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är inaktiverad; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Det finns inget standardvärde."
  overload: System.Windows.Input.KeyEventArgs.IsToggled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.IsUp
  id: IsUp
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: IsUp
  nameWithType: KeyEventArgs.IsUp
  fullName: System.Windows.Input.KeyEventArgs.IsUp
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar ett värde som anger om nyckeln refererar till händelsen är i tillståndet dig."
  remarks: "Den <xref:System.Windows.Input.Keyboard>klassen ger också information om tillståndet för nycklarna på tangentbordet.</xref:System.Windows.Input.Keyboard>  Till exempel den <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>metoden returnerar om en angiven är Utskriftsforma</xref:System.Windows.Input.Keyboard.IsKeyUp%2A>"
  example:
  - "The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is up by obtaining the state of the IsUp property.  \n  \n [!code-cs[keyargssnippetsample#KeyEventArgsIsUp](~/add/codesnippet/csharp/KeyArgsSnippetSample/Window1.xaml.cs#keyeventargsisup)]\n [!code-vb[keyargssnippetsample#KeyEventArgsIsUp](~/add/codesnippet/visualbasic/keyargssnippetsample/window1.xaml.vb#keyeventargsisup)]"
  syntax:
    content: public bool IsUp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om nyckeln är. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Det finns inget standardvärde."
  overload: System.Windows.Input.KeyEventArgs.IsUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.Key
  id: Key
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: Key
  nameWithType: KeyEventArgs.Key
  fullName: System.Windows.Input.KeyEventArgs.Key
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar tangentbord nyckeln som associeras med händelsen."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.KeyEventHandler> and checks whether the key associated with the <xref:System.Windows.Input.KeyEventArgs> is the <xref:System.Windows.Input.Key> key.  \n  \n [!code-cs[keydown#KeyDownSample](~/add/codesnippet/csharp/KeyDown/Window1.xaml.cs#keydownsample)]\n [!code-vb[keydown#KeyDownSample](~/add/codesnippet/visualbasic/KeyDown/Window1.xaml.vb#keydownsample)]"
  syntax:
    content: public System.Windows.Input.Key Key { get; }
    return:
      type: System.Windows.Input.Key
      description: "Den <xref href=&quot;System.Windows.Input.Key&quot;> </xref> refererar till händelsen."
  overload: System.Windows.Input.KeyEventArgs.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.KeyStates
  id: KeyStates
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: KeyStates
  nameWithType: KeyEventArgs.KeyStates
  fullName: System.Windows.Input.KeyEventArgs.KeyStates
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar status för tangenten som är associerade med den här händelsen."
  remarks: "En nyckel kan vara i både dig och toggled eller ned och växlas tillstånd. Därför kan är avgöra om en nyckel är uppåt eller nedåt inte lika enkelt som att nyckellägen värdet som ett numeriskt värde. I stället bör du kontrollera värdet genom att behandla det som en flagguppräkning. Använd en `AND` jämförelse av den första biten. Du kan också använda helper egenskaperna <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>, och <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A>för att avgöra om en viss nyckel är upp, ned eller toggled.</xref:System.Windows.Input.KeyEventArgs.IsToggled%2A> </xref:System.Windows.Input.KeyEventArgs.IsDown%2A> </xref:System.Windows.Input.KeyEventArgs.IsUp%2A>"
  example:
  - "The following example checks whether a key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is down by performing a bitwise `AND` comparison on the KeyStates of the key and the <xref:System.Windows.Input.KeyStates> enumeration value.  \n  \n [!code-cs[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/add/codesnippet/csharp/KeyArgsSnippetSample/Window1.xaml.cs#keyeventargskeystatesdown)]\n [!code-vb[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/add/codesnippet/visualbasic/keyargssnippetsample/window1.xaml.vb#keyeventargskeystatesdown)]"
  syntax:
    content: public System.Windows.Input.KeyStates KeyStates { get; }
    return:
      type: System.Windows.Input.KeyStates
      description: "Status för nyckeln."
  overload: System.Windows.Input.KeyEventArgs.KeyStates*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyEventArgs.SystemKey
  id: SystemKey
  parent: System.Windows.Input.KeyEventArgs
  langs:
  - csharp
  name: SystemKey
  nameWithType: KeyEventArgs.SystemKey
  fullName: System.Windows.Input.KeyEventArgs.SystemKey
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar tangenten refererar till händelsen, om nyckeln kommer att bearbetas av systemet."
  syntax:
    content: public System.Windows.Input.Key SystemKey { get; }
    return:
      type: System.Windows.Input.Key
      description: "Den <xref href=&quot;System.Windows.Input.Key&quot;> </xref> refererar till händelsen."
  overload: System.Windows.Input.KeyEventArgs.SystemKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.KeyboardEventArgs
  isExternal: false
  name: System.Windows.Input.KeyboardEventArgs
- uid: System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
  nameWithType: KeyEventArgs.KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
  fullName: System.Windows.Input.KeyEventArgs.KeyEventArgs(KeyboardDevice,PresentationSource,Int32,Key)
- uid: System.Windows.Input.KeyboardDevice
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardDevice
  nameWithType: KeyboardDevice
  fullName: System.Windows.Input.KeyboardDevice
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.Key
  parent: System.Windows.Input
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: System.Windows.Input.Key
- uid: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: DeadCharProcessedKey
  nameWithType: KeyEventArgs.DeadCharProcessedKey
  fullName: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey
- uid: System.Windows.Input.KeyEventArgs.ImeProcessedKey
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: ImeProcessedKey
  nameWithType: KeyEventArgs.ImeProcessedKey
  fullName: System.Windows.Input.KeyEventArgs.ImeProcessedKey
- uid: System.Windows.Input.KeyEventArgs.InputSource
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: InputSource
  nameWithType: KeyEventArgs.InputSource
  fullName: System.Windows.Input.KeyEventArgs.InputSource
- uid: System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: KeyEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.KeyEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.KeyEventArgs.IsDown
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsDown
  nameWithType: KeyEventArgs.IsDown
  fullName: System.Windows.Input.KeyEventArgs.IsDown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.KeyEventArgs.IsRepeat
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsRepeat
  nameWithType: KeyEventArgs.IsRepeat
  fullName: System.Windows.Input.KeyEventArgs.IsRepeat
- uid: System.Windows.Input.KeyEventArgs.IsToggled
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsToggled
  nameWithType: KeyEventArgs.IsToggled
  fullName: System.Windows.Input.KeyEventArgs.IsToggled
- uid: System.Windows.Input.KeyEventArgs.IsUp
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsUp
  nameWithType: KeyEventArgs.IsUp
  fullName: System.Windows.Input.KeyEventArgs.IsUp
- uid: System.Windows.Input.KeyEventArgs.Key
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: Key
  nameWithType: KeyEventArgs.Key
  fullName: System.Windows.Input.KeyEventArgs.Key
- uid: System.Windows.Input.KeyEventArgs.KeyStates
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: KeyEventArgs.KeyStates
  fullName: System.Windows.Input.KeyEventArgs.KeyStates
- uid: System.Windows.Input.KeyStates
  parent: System.Windows.Input
  isExternal: false
  name: KeyStates
  nameWithType: KeyStates
  fullName: System.Windows.Input.KeyStates
- uid: System.Windows.Input.KeyEventArgs.SystemKey
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: SystemKey
  nameWithType: KeyEventArgs.SystemKey
  fullName: System.Windows.Input.KeyEventArgs.SystemKey
- uid: System.Windows.Input.KeyEventArgs.#ctor*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs.KeyEventArgs
- uid: System.Windows.Input.KeyEventArgs.DeadCharProcessedKey*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: DeadCharProcessedKey
  nameWithType: KeyEventArgs.DeadCharProcessedKey
- uid: System.Windows.Input.KeyEventArgs.ImeProcessedKey*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: ImeProcessedKey
  nameWithType: KeyEventArgs.ImeProcessedKey
- uid: System.Windows.Input.KeyEventArgs.InputSource*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: InputSource
  nameWithType: KeyEventArgs.InputSource
- uid: System.Windows.Input.KeyEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: KeyEventArgs.InvokeEventHandler
- uid: System.Windows.Input.KeyEventArgs.IsDown*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsDown
  nameWithType: KeyEventArgs.IsDown
- uid: System.Windows.Input.KeyEventArgs.IsRepeat*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsRepeat
  nameWithType: KeyEventArgs.IsRepeat
- uid: System.Windows.Input.KeyEventArgs.IsToggled*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsToggled
  nameWithType: KeyEventArgs.IsToggled
- uid: System.Windows.Input.KeyEventArgs.IsUp*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: IsUp
  nameWithType: KeyEventArgs.IsUp
- uid: System.Windows.Input.KeyEventArgs.Key*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: Key
  nameWithType: KeyEventArgs.Key
- uid: System.Windows.Input.KeyEventArgs.KeyStates*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: KeyEventArgs.KeyStates
- uid: System.Windows.Input.KeyEventArgs.SystemKey*
  parent: System.Windows.Input.KeyEventArgs
  isExternal: false
  name: SystemKey
  nameWithType: KeyEventArgs.SystemKey
