### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntry
  id: EventLogEntry
  children:
  - System.Diagnostics.EventLogEntry.Category
  - System.Diagnostics.EventLogEntry.CategoryNumber
  - System.Diagnostics.EventLogEntry.Data
  - System.Diagnostics.EventLogEntry.EntryType
  - System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  - System.Diagnostics.EventLogEntry.EventID
  - System.Diagnostics.EventLogEntry.Index
  - System.Diagnostics.EventLogEntry.InstanceId
  - System.Diagnostics.EventLogEntry.MachineName
  - System.Diagnostics.EventLogEntry.Message
  - System.Diagnostics.EventLogEntry.ReplacementStrings
  - System.Diagnostics.EventLogEntry.Source
  - System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.EventLogEntry.TimeGenerated
  - System.Diagnostics.EventLogEntry.TimeWritten
  - System.Diagnostics.EventLogEntry.UserName
  langs:
  - csharp
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
  type: Class
  summary: "Kapslar in en enskild post i händelseloggen. Den här klassen kan inte ärvas."
  remarks: "Du vanligtvis kommer inte att skapa instanser av EventLogEntry direkt när du arbetar med <xref:System.Diagnostics.EventLog>klass.</xref:System.Diagnostics.EventLog> Den <xref:System.Diagnostics.EventLog.Entries%2A>medlem i den <xref:System.Diagnostics.EventLog>klassen innehåller en mängd EventLogEntry instanser som du iterera över vid läsning av med hjälp av den <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName>index klassmedlem.</xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Entries%2A>      > [!IMPORTANT] > Den här typen implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of the EventLogEntry class. In this example, a `switch` statement uses console input to search for event log entries for the specified event type.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Category
  id: Category
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar texten som associeras med den <xref:System.Diagnostics.EventLogEntry.CategoryNumber*>-egenskapen för den här posten.</xref:System.Diagnostics.EventLogEntry.CategoryNumber*>"
  remarks: "Varje program (händelsekälla) kan definiera en egen numrerade kategorier och textsträngar som de har mappats. Loggboken kan använda kategorin för att filtrera händelser i loggen."
  syntax:
    content: public string Category { get; }
    return:
      type: System.String
      description: "Kategoritexten som programspecifika."
  overload: System.Diagnostics.EventLogEntry.Category*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det gick inte att allokera utrymmet för en infogning strängar som är kopplade till kategorin."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  id: CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar antalet händelseloggposten kategori."
  remarks: "Varje program (händelsekälla) kan definiera en egen numrerade kategorier och textsträngar som de har mappats. Loggboken kan använda kategorin för att filtrera händelser i loggen. Kategorier måste vara numrerade i följd som börjar med 1. Kategorinummer anges av den <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName>egenskapen.</xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> Loggboken kan visa kategorin som ett numeriskt värde eller den kan använda kategorin som en resurs-ID för att visa en lokaliserad kategori-sträng. Mer information finns i <xref:System.Diagnostics.EventInstance>.</xref:System.Diagnostics.EventInstance>"
  syntax:
    content: public short CategoryNumber { get; }
    return:
      type: System.Int16
      description: "Programspecifika kategori-numret för den här posten."
  overload: System.Diagnostics.EventLogEntry.CategoryNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Data
  id: Data
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar binära data som är associerad med transaktionen."
  remarks: "Hämta den här egenskapen skapar en matris som innehåller en kopia av postens händelsespecifika binära data som Loggboken visar formatet kombinerade hexadecimalt och text. Händelse-specifika data används ibland för lagring av information som programmet bearbetar oberoende av Loggboken, till exempel, för att göra rapporter från loggfilen."
  syntax:
    content: public byte[] Data { get; }
    return:
      type: System.Byte[]
      description: "En matris med byte som innehåller binära data som är associerad med transaktionen."
  overload: System.Diagnostics.EventLogEntry.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EntryType
  id: EntryType
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar händelsetypen för den här posten."
  remarks: "Alla händelsetyper ha väldefinierade gemensamma data och kan du också inkludera händelse-specifika data. Varje händelse är av en enda typ som programmet anger när händelsen rapporteras. Loggboken använder händelsetypen för att avgöra vilken ikon som ska visas i listan i händelseloggen."
  example:
  - "The following code example demonstrates the use of the EntryType property. In this example, a `switch` statement uses console input to search for event log entries for the specified EntryType.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: public System.Diagnostics.EventLogEntryType EntryType { get; }
    return:
      type: System.Diagnostics.EventLogEntryType
      description: "Händelsetypen som är associerade med posten i händelseloggen."
  overload: System.Diagnostics.EventLogEntry.EntryType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  id: Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Utför en jämförelse mellan två poster i händelseloggen."
  remarks: "Den här metoden utförs en byte för byte jämförelse mellan de båda objekten. Kontrollerar inte om två <xref:System.Diagnostics.EventLogEntry>instanser referera till samma objekt.</xref:System.Diagnostics.EventLogEntry>"
  syntax:
    content: public bool Equals (System.Diagnostics.EventLogEntry otherEntry);
    parameters:
    - id: otherEntry
      type: System.Diagnostics.EventLogEntry
      description: "Den <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> objekt är identiska, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLogEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EventID
  id: EventID
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar programspecifika händelse-ID för den aktuella transaktionen för händelsen."
  remarks: "Det här värdet representerar händelse-ID för posten i händelseloggen logg med högsta två bitar maskeras ut. Den <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>egenskap för en post i händelseloggen representerar fullständig 32-bitars resursidentifieraren för händelsen i resursfilen meddelande för händelsekällan.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A> Två händelseloggposter från samma källa kan ha matchande händelse-ID-värden, men har olika <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>värden på grund av skillnader i de övre två bitarna för händelse-ID: t.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A>       Om programmet skrev händelse posten med en av de <xref:System.Diagnostics.EventLog.WriteEntry%2A>metoder, händelse-ID-egenskapen matchar det valfria `eventId` parameter.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Om programmet skrev en händelse med hjälp av <xref:System.Diagnostics.EventLog.WriteEvent%2A>eller Win32 API `ReportEvent`, händelse-ID-egenskap stämmer med resursidentifieraren för händelsen, med upp två bits maskerade utlöses.</xref:System.Diagnostics.EventLog.WriteEvent%2A>"
  syntax:
    content: public int EventID { get; }
    return:
      type: System.Int32
      description: "Programspecifika identifierare för meddelandet."
  overload: System.Diagnostics.EventLogEntry.EventID*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Index
  id: Index
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar index för den här posten i händelseloggen."
  remarks: "Det här antalet är inte nödvändigtvis nollbaserade."
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "Indexet för den här posten i händelseloggen."
  overload: System.Diagnostics.EventLogEntry.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.InstanceId
  id: InstanceId
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar resurs-identifieraren som anger att meddelandetexten i posten händelse."
  remarks: "Egenskapen InstanceId identifierar en händelsepost för en konfigurerad händelsekälla. InstanceId för en post i händelseloggen representerar fullständig 32-bitars resursidentifieraren för händelsen i resursfilen meddelande för händelsekällan. <xref:System.Diagnostics.EventLogEntry.EventID%2A>Egenskapen är lika med InstanceId med högsta två bitar maskeras utlöses.</xref:System.Diagnostics.EventLogEntry.EventID%2A> Två händelseloggposter från samma källa kan ha matchande <xref:System.Diagnostics.EventLogEntry.EventID%2A>värden, men som har olika värden för InstanceId på grund av skillnader i de översta två bitarna i resursidentifieraren.</xref:System.Diagnostics.EventLogEntry.EventID%2A>       Om programmet skrev händelse posten med en av de <xref:System.Diagnostics.EventLog.WriteEntry%2A>metoder, egenskapen InstanceId matchar det valfria `eventId` parameter.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Om programmet skrev en händelse med hjälp av <xref:System.Diagnostics.EventLog.WriteEvent%2A>, InstanceId-egenskap stämmer med resurs-identifieraren som angetts i den <xref:System.Diagnostics.EventInstance.InstanceId%2A>av den `instance` parameter.</xref:System.Diagnostics.EventInstance.InstanceId%2A> </xref:System.Diagnostics.EventLog.WriteEvent%2A> Om programmet skrev händelse med hjälp av Win32 API `ReportEvent`, InstanceId-egenskap stämmer med resurs-identifieraren som angetts i den `dwEventID` parameter.       För information om definierar händelsemeddelanden och skapa händelseloggen resursfiler finns i avsnittet &quot;Meddelande kompileraren&quot; i Platform SDK-dokumentationen på [http://msdn.microsoft.com](http://msdn.microsoft.com/). Mer information om händelseloggen identifierare finns i avsnittet &quot;Händelse-ID: N&quot; i Platform SDK."
  example:
  - "The following code example searches an event log for entries with a particular resource identifier. The code example displays the event message for each matching entry, and counts the total number of matching entries in the log. The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.  \n  \n [!code-cpp[EventLog_WriteEvent#10](~/add/codesnippet/cpp/p-system.diagnostics.eve_20_1.cpp)]\n [!code-vb[EventLog_WriteEvent#10](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_20_1.vb)]\n [!code-cs[EventLog_WriteEvent#10](~/add/codesnippet/csharp/p-system.diagnostics.eve_20_1.cs)]"
  syntax:
    content: public long InstanceId { get; }
    return:
      type: System.Int64
      description: "Resursidentifieraren som motsvarar en strängdefinition i resursfilen meddelande av händelsekällan."
  overload: System.Diagnostics.EventLogEntry.InstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.MachineName
  id: MachineName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar namnet på den dator där den här posten skapades."
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "Namnet på den dator som innehåller i händelseloggen."
  overload: System.Diagnostics.EventLogEntry.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Message
  id: Message
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar lokaliserad meddelandet som är associerade med den här händelsen posten."
  remarks: "Hämta den här egenskapen öppnas i registret för att fastställa namnet på .dll-fil som innehåller lokaliserad text. Om du får ett fel i registret vid testning av källkoden måste du kontrollera att DLL-filen finns på datorn. Fånga upp fel i sin tilldelning om infogningssträngar ingår i meddelandet."
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "Det formaterade lokaliserade text för meddelandet. Detta inkluderar associerade ersättningssträngar."
  overload: System.Diagnostics.EventLogEntry.Message*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Det gick inte att allokera utrymmet för en infogning strängar som är associerad med meddelandet."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  id: ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar ersättningssträngar som är associerade med posten i händelseloggen."
  remarks: "Den här egenskapen hämtas endast ersättningssträngar för posten. Om du vill hämta hela meddelandet, läsa den <xref:System.Diagnostics.EventLogEntry.Message%2A>egenskapen.</xref:System.Diagnostics.EventLogEntry.Message%2A>       Egenskapen ReplacementStrings innehåller lokaliserade versioner av ersättningssträngar som används i posten i händelseloggen. Om du anger resursfiler som innehåller strängar för varje språk för ditt program måste generera du händelseloggmeddelanden på det språk som används på datorn. Göra genom att skapa en instans av den <xref:System.Resources.ResourceManager>klass för resurs-sammansättningen som innehåller din ersättningssträngar.</xref:System.Resources.ResourceManager> Den första parametern för den <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>konstruktorn identifierar sammansättningen resurs som ska användas.</xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Använd den <xref:System.Resources.ResourceManager.GetString%2A>metod för att ange lokaliserade meddelanden för logghändelser instansen.</xref:System.Resources.ResourceManager.GetString%2A> Följande kod ställer automatiskt in meddelandet språk för den aktuella kulturen.      ```   ResourceManager LocRM = new ResourceManager(&quot;ReplacementStrings.TestStrings&quot;,          typeof(Program).Assembly);   EventLog e1 = new EventLog(&quot;LocTest&quot;, &quot;MyMachine&quot;, &quot;LocTest&quot;);   // Get the string associated with the current culture.   e1.WriteEntry(LocRM.GetString(&quot;strMessage&quot;),      EventLogEntryType.Information);   ```"
  syntax:
    content: public string[] ReplacementStrings { get; }
    return:
      type: System.String[]
      description: "En matris som innehåller ersättningssträngar lagras i posten."
  overload: System.Diagnostics.EventLogEntry.ReplacementStrings*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Source
  id: Source
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar namnet på programmet som genererats av den här händelsen."
  remarks: "Händelsekällan anger vad loggade händelsen. Det är ofta namnet på programmet eller namnet på en underkomponenten för programmet om programmet är stor. Program och tjänster vanligtvis skriva till (och därför är källor för) programloggen eller en anpassad logg. Enhetsdrivrutiner skriva vanligtvis i systemloggen."
  example:
  - "The following code example demonstrates the use of the Source property. In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  If a match is found, the Source property information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_27_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_27_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_27_1.vb)]"
  syntax:
    content: public string Source { get; }
    return:
      type: System.String
      description: "Namnet som registrerats med händelseloggen som källa för den här händelsen."
  overload: System.Diagnostics.EventLogEntry.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Fyller på en <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> med de data som behövs för att serialisera målobjektet."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> att fylla i med data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Målet (se <xref:System.Runtime.Serialization.StreamingContext>) för den här serialisering.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  id: TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar lokal tid då händelsen skapades."
  remarks: "Den här medlemmen innehåller den tid då händelsen skapades. Det kan inte vara samma som den tid när händelseinformationen har skrivits till händelseloggen. I det senare läsa den <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>egenskapen.</xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>       Det är vanligtvis en fördröjning mellan tiden då en händelse genereras och den tid som den är inloggad. Det är mer viktigt att veta när händelsen skapades, om du inte vill se om det finns en betydande fördröjning i loggning. Som kan inträffa om loggfilerna finns på en annan server och har en flaskhals."
  syntax:
    content: public DateTime TimeGenerated { get; }
    return:
      type: System.DateTime
      description: "Lokal tid då händelsen skapades."
  overload: System.Diagnostics.EventLogEntry.TimeGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  id: TimeWritten
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar den lokala tiden då den här händelsen har skrivits i loggen."
  remarks: "Den här medlemmen innehåller den tid som en händelse information skrivs till händelseloggen. Detta kan inte samtidigt som när händelsen skapades. I det senare läsa den <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>egenskapen.</xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>"
  syntax:
    content: public DateTime TimeWritten { get; }
    return:
      type: System.DateTime
      description: "Den lokala tiden då den här händelsen har skrivits i loggen."
  overload: System.Diagnostics.EventLogEntry.TimeWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.UserName
  id: UserName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar namnet på den användare som ansvarar för den här händelsen."
  remarks: "Den här egenskapen är ofta tomt för händelser i loggar än säkerhetsloggen."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "Säkerhetsidentifieraren (SID) som unikt identifierar en användare eller grupp."
  overload: System.Diagnostics.EventLogEntry.UserName*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Det gick inte att hämta kontoinformation för användarens SID."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Diagnostics.EventLogEntry.Category
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Diagnostics.EventLogEntry.Data
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.EntryType
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntry.EventID
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntry.Index
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.EventLogEntry.MachineName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.Source
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
- uid: System.Diagnostics.EventLogEntry.Category*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
- uid: System.Diagnostics.EventLogEntry.CategoryNumber*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
- uid: System.Diagnostics.EventLogEntry.Data*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
- uid: System.Diagnostics.EventLogEntry.EntryType*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntry.Equals*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals
  nameWithType: EventLogEntry.Equals
- uid: System.Diagnostics.EventLogEntry.EventID*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
- uid: System.Diagnostics.EventLogEntry.Index*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
- uid: System.Diagnostics.EventLogEntry.MachineName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
- uid: System.Diagnostics.EventLogEntry.Source*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Diagnostics.EventLogEntry.TimeGenerated*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
- uid: System.Diagnostics.EventLogEntry.TimeWritten*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
