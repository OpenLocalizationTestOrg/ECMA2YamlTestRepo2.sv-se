### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeListConverter
  id: TypeListConverter
  children:
  - System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  - System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: TypeListConverter
  nameWithType: TypeListConverter
  fullName: System.ComponentModel.TypeListConverter
  type: Class
  summary: "Ger en typkonverterare som kan användas för att fylla i en listruta med tillgängliga typer."
  remarks: "Du måste ange en lista över typer till konstruktorn av detta `abstract` klass.       Mer information om typen konverterare finns det <xref:System.ComponentModel.TypeConverter>basklassen och [så här: Implementera en typkonverterare](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Aldrig ska du skapa en instans av en TypeListConverter. Istället anropa <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>metoden <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Mer information finns i exemplen i <xref:System.ComponentModel.TypeConverter>grundläggande klass.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: 'public abstract class TypeListConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  id: '#ctor(System.Type[])'
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.TypeListConverter&quot;> </xref> klassen med hjälp av typen array som tillgängliga typer."
  remarks: "De typer som anges i den `types` parametern kan användas för att fylla i en listruta med tillgängliga typer."
  syntax:
    content: protected TypeListConverter (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "Matris av typen <xref:System.Type>ska användas som tillgängliga typer.</xref:System.Type>"
  overload: System.ComponentModel.TypeListConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar ett värde som anger om den här konverteraren kan konvertera det angivna <xref:System.Type>källobjektet har skapats med hjälp av den angivna kontexten.</xref:System.Type>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: sourceType
      type: System.Type
      description: "Den <xref:System.Type>av källobjektet.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här konverteraren kan utföra konverteringen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar ett värde som anger om den här konverteraren kan konvertera ett objekt till den angivna måltypen med kontexten."
  remarks: "Den `context` parametern kan användas för att extrahera ytterligare information om den här konverteraren anropas från miljön. Detta kan vara `null`, därför alltid kontrollera. Dessutom egenskaper på context-objektet kan returnera `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: destinationType
      type: System.Type
      description: "En <xref:System.Type>som motsvarar den typ som du vill konvertera till.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här konverteraren kan utföra konverteringen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Konverterar det angivna objektet till den egna typen av konverteraren."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "En <xref:System.Globalization.CultureInfo>som anger kulturen som används för att representera teckensnitt.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>omvandla.</xref:System.Object>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som representerar det konvertera värdet.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Konverterar det angivna värdeobjektet till den angivna måltypen."
  remarks: "Den här metoden konverterar oftast typer till och från string-objekt.       Den `context` parametern kan användas för att extrahera ytterligare information om den här konverteraren anropas från miljön. Detta kan vara `null`, därför alltid kontrollera. Dessutom egenskaper på context-objektet kan returnera `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Ett valfritt <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Om du inte anger antas den aktuella kulturen."
    - id: value
      type: System.Object
      description: "Den <xref:System.Object>omvandla.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Den <xref:System.Type>att konvertera värde till.</xref:System.Type>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som representerar den konverterade <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Konverteringen kan inte utföras."
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar en samling med standard värden för denna verifierare är avsedd för datatypen."
  remarks: "Den `context` parametern kan användas för att extrahera ytterligare information om den här konverteraren anropas från miljön. Detta kan vara `null`, därför alltid kontrollera. Dessutom egenskaper på context-objektet kan returnera `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "En <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>som innehåller en standarduppsättning med giltiga värden eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om datatypen inte stöder en standarduppsättning med värden.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeListConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar ett värde som anger om listan över standard värden returneras från den <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>metoden är en lista.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*>"
  remarks: "Den `context` parametern kan användas för att extrahera ytterligare information om den här konverteraren anropas från miljön. Detta kan vara `null`, därför alltid kontrollera. Dessutom egenskaper på context-objektet kan returnera `null`.       När listan är exklusiv inga andra värden är giltiga förutom listan över värden som standard den <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>metoden ger.</xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eftersom den <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>returneras från <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>är en komplett lista över möjliga värden.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Den här metoden returnerar aldrig <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hämtar ett värde som anger om det här objektet har stöd för en standarduppsättning med värden som kan registreras i en lista med de angivna kontexten."
  remarks: "Den `context` parametern kan användas för att extrahera ytterligare information om den här konverteraren anropas från miljön. Detta kan vara `null`, därför alltid kontrollera. Dessutom egenskaper på context-objektet kan returnera `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Eftersom <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>måste användas för att hitta en gemensam uppsättning värden har stöd för objektet.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> Den här metoden returnerar aldrig <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.#ctor*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter
  nameWithType: TypeListConverter.TypeListConverter
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeListConverter.CanConvertFrom
- uid: System.ComponentModel.TypeListConverter.CanConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeListConverter.CanConvertTo
- uid: System.ComponentModel.TypeListConverter.ConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeListConverter.ConvertFrom
- uid: System.ComponentModel.TypeListConverter.ConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeListConverter.ConvertTo
- uid: System.ComponentModel.TypeListConverter.GetStandardValues*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeListConverter.GetStandardValues
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeListConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeListConverter.GetStandardValuesSupported
