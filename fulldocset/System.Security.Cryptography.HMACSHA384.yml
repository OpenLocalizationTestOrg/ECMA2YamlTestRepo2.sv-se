### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACSHA384
  id: HMACSHA384
  children:
  - System.Security.Cryptography.HMACSHA384.#ctor
  - System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  langs:
  - csharp
  name: HMACSHA384
  nameWithType: HMACSHA384
  fullName: System.Security.Cryptography.HMACSHA384
  type: Class
  summary: "Beräknar ett Hash-baserad meddelandeautentiseringskod (HMAC) med hjälp av den <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> hash-funktionen."
  remarks: "HMACSHA384 är en typ av nycklad hashalgoritm som konstrueras utifrån SHA-384 hash-funktionen och som används som en hashbaserad meddelandeautentiseringskod (HMAC). Processen HMAC kombinerar en hemlig nyckel med meddelandedata, och hashar resultatet. Hash-värdet är blandad med den hemliga nyckeln igen och hashas en andra gång. Utgående hash är 384 bitar långt.       En HMAC kan användas för att avgöra om ett meddelande som skickas via en icke-säkra kanal har manipulerats, förutsatt att avsändaren och mottagaren dela en hemlig nyckel. Avsändaren beräknar hash-värdet för den ursprungliga informationen och skickar både den ursprungliga informationen och hash-värdet som ett enda meddelande. Mottagaren beräknar hash-värdet för det mottagna meddelandet och kontrollerar att den beräknade HMAC matchar överförda HMAC.       Om de ursprungliga och beräknade hash-värdena matchar autentisera meddelandet. Om de inte matchar, har data eller hash-värdet ändrats. HMAC ger skydd mot manipulation eftersom kännedom om den hemliga nyckeln som krävs för att ändra meddelandet och återskapa rätt hash-värdet.       HMACSHA384 godkänner alla viktiga storlekar och ger en hash-sekvens som är 384 bitar långt."
  example:
  - "The following example shows how to sign a file by using the HMACSHA384 object, and then how to verify the file.  \n  \n [!code-cs[HMACSHA384#1](~/add/codesnippet/csharp/t-system.security.crypto_31_1.cs)]\n [!code-vb[HMACSHA384#1](~/add/codesnippet/visualbasic/t-system.security.crypto_31_1.vb)]\n [!code-cpp[HMACSHA384#1](~/add/codesnippet/cpp/t-system.security.crypto_31_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACSHA384 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: HMACSHA384()
  nameWithType: HMACSHA384.HMACSHA384()
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> klassen med hjälp av en slumpmässigt genererad nyckel."
  remarks: "Den här konstruktorn använder en 64-byte, slumpmässigt genererad nyckel."
  syntax:
    content: public HMACSHA384 ();
    parameters: []
  overload: System.Security.Cryptography.HMACSHA384.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: HMACSHA384(Byte[])
  nameWithType: HMACSHA384.HMACSHA384(Byte[])
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> klassen med hjälp av angivna viktiga data."
  remarks: ''
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA384> class.
  syntax:
    content: public HMACSHA384 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Den hemliga nyckeln för <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> kryptering. Nyckeln kan vara valfri längd. Den rekommenderade storleken är dock 128 byte. Om nyckeln är mer än 128 byte lång, den hash-kodas (med SHA-384) att härleda en 128 byte-nyckel. Om det är mindre än 128 byte kan utökas den till 128 byte."
  overload: System.Security.Cryptography.HMACSHA384.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  id: ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Innehåller en lösning för den [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] implementering av den <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> algoritm, vilket är inte konsekvent med den [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] implementeringen av algoritmen."
  remarks: "Syftet med egenskapen ProduceLegacyHmacValues booleskt värde är att aktivera [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] program att interagera med [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] program. När du anger egenskapen till `true`, <xref:System.Security.Cryptography.HMACSHA384>objektet genererar värden som matchar de värden som produceras av det [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].</xref:System.Security.Cryptography.HMACSHA384> Du bör ange den här egenskapen endast en gång när du har skapat HMAC-objektet. Du behöver återställa din nyckel efteråt, som visas i följande exempel.      ```   public static void Test()       {       HMACSHA384 hmac = new HMACSHA384();       hmac.ProduceLegacyHmacValues = true;       hmac.Key = // ...Get the HMAC key.       // ...       // Use the HMAC algorithm.       // ...       }   ```"
  syntax:
    content: public bool ProduceLegacyHmacValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här aktiverar du [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] program att interagera med [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] program, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACSHA384.#ctor
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384()
  nameWithType: HMACSHA384.HMACSHA384()
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384()
- uid: System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384(Byte[])
  nameWithType: HMACSHA384.HMACSHA384(Byte[])
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMACSHA384.#ctor*
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384
  nameWithType: HMACSHA384.HMACSHA384
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues*
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
