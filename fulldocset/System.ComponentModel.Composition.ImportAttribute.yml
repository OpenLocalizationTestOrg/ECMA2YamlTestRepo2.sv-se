### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportAttribute
  id: ImportAttribute
  children:
  - System.ComponentModel.Composition.ImportAttribute.#ctor
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportAttribute.AllowDefault
  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportAttribute.ContractName
  - System.ComponentModel.Composition.ImportAttribute.ContractType
  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportAttribute.Source
  langs:
  - csharp
  name: ImportAttribute
  nameWithType: ImportAttribute
  fullName: System.ComponentModel.Composition.ImportAttribute
  type: Class
  summary: "Anger att ett värde för egenskapen eller fältet parameter måste tillhandahållas med den <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>.object"
  remarks: "I det attributet programmeringsmodellen används ImportAttribute att deklarera import eller beroenden för en viss del. Det kan skapa snygga en egenskap, ett fält eller en metod. Under sammansättning, fylls import av en del av den <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>objektet som tillhör den delen med hjälp av export till som <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>objektet.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Om en import matchar en viss export beror i första hand jämföra kontraktnamn och kontrakttypen. Normalt behöver du inte ange något av följande när du använder import-attributet i koden och de automatiskt ska härledas från typen av dekorerade medlem. Om importen måste matcha en export av en annan typ (till exempel en underklass för typ av dekorerade medlem eller ett gränssnitt som implementerats av medlemmen), måste sedan kontrakttypen anges explicit. Kontraktnamn kan även uttryckligen anges, till exempel att skilja mellan flera kontrakt med samma typ, men det är oftast bättre att göra detta via metadata. Mer information om metadata finns <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</xref:System.ComponentModel.Composition.PartMetadataAttribute>"
  example:
  - "The following example shows three classes with members decorated with the ImportAttribute, and three exports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klass, importerar exporten med standardnamnet för kontraktet."
  remarks: "Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap, fält eller parametern att den är markerad med det här attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klass, importerar exporten med angivet kontraktnamn."
  remarks: "Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap, fält eller parameter som har markerats med det här attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Kontraktnamn för import, export eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;) att använda standardnamnet för kontraktet."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klass, importerar exporten med kontraktnamn som härletts från den angivna typen."
  remarks: "Kontraktnamn är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metoden på `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metod på typen egenskap, fält eller parameter som har markerats med det här attributet.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Typen att härleda kontraktnamn för export från, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att använda standardnamnet för kontraktet."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> klass, importerar exporten med angivna kontraktnamn och typ."
  syntax:
    content: public ImportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "Kontraktnamn för import, export eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;) att använda standardnamnet för kontraktet."
    - id: contractType
      type: System.Type
      description: "Typ av exporten att importera."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  id: AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar eller anger ett värde som anger om egenskapen, fält eller parametern sätts till standardvärdet för dess typ när en export med kontraktnamn inte finns i behållaren."
  remarks: "Standardvärdet för typ av en egenskap, fält eller parametern är `null` för referenstyper och noll för numeriska värdetyper. För andra värdetyper kommer standardvärdet att varje fält av värdetypen initieras till noll om fältet är en värdetyp eller `null` om fältet är en referenstyp."
  syntax:
    content: public bool AllowDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen, fält eller parametern sätts till standardvärdet för dess typ när det finns ingen export med den <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>i den <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar eller anger ett värde som anger om egenskapen eller fältet kommer att sätta exporter med ett matchande kontraktet har ändrats i behållaren."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om egenskapen eller fältet tillåter recomposition när du exporterar med matchande <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>läggs till eller tas bort från den <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar kontraktnamn exporten att importera."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "Kontraktnamn exporten att importera. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar typ av exporten att importera."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Typ av exporten att importera."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar eller anger ett värde som anger att importverktyget kräver en specifik <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> för exporten används för att uppfylla importen."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Ett av följande värden: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, om importverktyget inte kräver en specifik <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Detta är standardinställningen.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>att kräva att alla använda export delas av alla delar i behållaren.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>att kräva att alla använda export icke-delad i en behållare. I det här fallet får varje del sin egen instans."
  overload: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Hämtar eller anger ett värde som anger scope från vilka importen kan uppfyllas."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Ett värde som anger scope från vilka importen kan uppfyllas."
  overload: System.ComponentModel.Composition.ImportAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute
  nameWithType: ImportAttribute.ImportAttribute
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
