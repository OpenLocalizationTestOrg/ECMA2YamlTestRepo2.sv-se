### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "Stöder den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> styr och tillhandahåller ett gränssnitt för databundna kontroller att utföra åtgärder för SQL-data mot relationsdatabaser."
  remarks: "Klassen SqlDataSourceView är avsedd att användas av databundna kontroller och inte som ett programmerbara objekt i sidkoden.       Kontroller för datakällor ASP.NET innehåller en eller flera listor med data som representeras av Visa datakällobjekt. SqlDataSourceView-klassen utökar den <xref:System.Web.UI.DataSourceView>klassen, definierar funktionerna i den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen som är associerade och implementerar funktionen grundläggande data för datakällkontrollen.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceView> SqlDataSourceView-klassen implementerar funktionen data för den <xref:System.Web.UI.WebControls.SqlDataSource>styra, inklusive den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, och <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>Åtgärder, sortering, filtrering och hantering av inställningar som är kvar i vyn tillstånd.</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Även om SqlDataSourceView objektet inte visas direkt för sidan utvecklare av den <xref:System.Web.UI.WebControls.SqlDataSource>styra många av egenskaperna är.</xref:System.Web.UI.WebControls.SqlDataSource> Den mest grundläggande åtgärden som utför en datakällvy är hämta data från den underliggande databasen med hjälp av den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metod som hämtar en <xref:System.Collections.IEnumerable>uppsättning dataobjekt.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> SqlDataSourceView-klassen implementerar hämta data från relationsdatabaser med hjälp av SQL-frågor. SQL-frågor kan parameteriseras för större flexibilitet och säkerhet. Följande metoder för hämtning av data, egenskaper och händelser som implementerats av SqlDataSourceView och exponeras direkt av dess <xref:System.Web.UI.WebControls.SqlDataSource>kontroll att sidan utvecklare och andra anropare: – <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>-händelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Selected>händelse i SqlDataSourceView objekt stöder uppdaterar data i en relationsdatabas med SQL-kommandon.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> SQL-kommandon kan parameteriseras för större flexibilitet och säkerhet. Databundna kontroller, till exempel den <xref:System.Web.UI.WebControls.GridView>och <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureras för att utföra uppdateringar automatiskt med hjälp av SqlDataSourceView, medan andra kontroller kan inte.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Följande update-metoder, egenskaper och händelser som implementerats av SqlDataSourceView och exponeras direkt av dess <xref:System.Web.UI.WebControls.SqlDataSource>kontroll att sidan utvecklare och andra anropare: – <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.Updating>-händelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Updated>händelse i SqlDataSourceView stöder lägga till nya rader med data i en relationsdatabas.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> SQL-kommandon som anges i den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>egenskapen kan parameteriseras för större flexibilitet och säkerhet.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Databundna kontroller, till exempel den <xref:System.Web.UI.WebControls.GridView>och <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureras för att utföra infogningar automatiskt med SqlDataSourceView, medan andra kontroller kan inte.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Följande Infoga metoder, egenskaper, och händelser som implementerats av SqlDataSourceView och exponeras direkt av dess <xref:System.Web.UI.WebControls.SqlDataSource>kontroll att sidan utvecklare och andra anropare: – <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>-händelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>händelse i SqlDataSourceView objekt också stöder ta bort data från en relationsdatabas.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Precis som med andra kommandon, SQL-kommandon som anges i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>egenskapen kan parameteriseras för större flexibilitet och säkerhet.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Databundna kontroller, till exempel den <xref:System.Web.UI.WebControls.GridView>och <xref:System.Web.UI.WebControls.DetailsView>, kan konfigureras för att utföra borttagningar automatiskt med SqlDataSourceView, medan andra kontroller kan inte.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Följande bort metoder, egenskaper och händelser som implementerats av SqlDataSourceView och exponeras direkt av dess <xref:System.Web.UI.WebControls.SqlDataSource>kontroll att sidan utvecklare och andra anropare: – <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>egenskap - den <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>-händelse – den <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>händelse datahämtning är mer kraftfulla när instruktionen som används för att filtrera data under hämtning av data är dynamiska.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Med andra ord en SQL-fråga med en statisk där satsen inte är så flexibla och kraftfulla som en SQL-fråga där värdena i WHERE-satsen är bundna till värden som kan ändras, till exempel värden som visas i kontroller på sidan Web Forms. I stället för att bygga en SQL-fråga och ange den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen på varje sidinläsning som du kan använda den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>och <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>Egenskaper för att använda dynamisk filtrering för datahämtning.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> De här egenskaperna implementerats av SqlDataSourceView och exponeras direkt av dess <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen databundna kontroller och andra anropare.</xref:System.Web.UI.WebControls.SqlDataSource>       Du kan sortera de data som du kan hämta med den <xref:System.Web.UI.WebControls.SqlDataSource>kontroll genom att lägga till en ORDER BY-sats, vilket gör att databasen för att utföra ordning för dig när du hämtar data eller genom att sortera data i minnet när den har hämtats.</xref:System.Web.UI.WebControls.SqlDataSource> Du kan ange ett uttryck som sorteringen ska SqlDataSourceView genom att ange den <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>egenskapen för den <xref:System.Web.UI.DataSourceSelectArguments>objekt som har överförts till den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Syntaxen för den <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>egenskapen är samma som syntaxen för en <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>egenskap.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Om du använder en lagrad procedur för att hämta data, kan du också använda den <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>att ange en parameter som används för sortering av resultaten av ett lagrat proceduranrop.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>       När flera användare kan ändra databasen samtidigt, finns risken för samtidighetskonflikt. Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen har kontroller samtidighet via den <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource> Funktionen är implementerad i den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>       Som många andra webbserverkontroller, SqlDataSourceView implementerar den <xref:System.Web.UI.IStateManager>gränssnitt och använder Visa status för att spåra dess status över sidförfrågningar.</xref:System.Web.UI.IStateManager> Implementeringar av den <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>och egenskapen och <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, och <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>metoder som tillhandahålls för att aktivera spårning av Visa tillståndet för kontrollen.</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> Mer information finns i [översikt över ASP.NET Management](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> klass som den anges <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll som ägare till den aktuella vyn."
  remarks: "Konstruktorn SqlDataSourceView anropas av den <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>metod för att returnera en ny instans av en datakällvy med det angivna `name` parameter.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen som är associerade med bara ett <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt åt gången och alltid namn till vyn `Table`, även om namngivning begränsningen införts av <xref:System.Web.UI.WebControls.SqlDataSource>kontroll, inte <xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> Du kan åsidosätta den <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>metod för att stödja vyer med en annan namnkonvention.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>       Den <xref:System.Web.HttpContext>objekt som skickas via den `context` parametern används av datakällvyn åtkomst parametern objekt som den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>och <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>Egenskaper.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "Datakällkontrollen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> är kopplat."
    - id: name
      type: System.String
      description: "Ett unikt namn för datakällvyn inom omfånget för datakällkontrollen som äger den."
    - id: context
      type: System.Web.HttpContext
      description: "Aktuellt <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om en åtgärd för hämtning av data avbryts när någon parameter som är i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>samling utvärderas till <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>"
  remarks: "Värdet för den <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>egenskapen lagras i visningsstatus.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om en åtgärd för hämtning av data avbryts när en parameter som ingår i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>samling utvärderades till <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen stöder borttagningen."
  remarks: "CanDelete egenskapen returnerar `true` om den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> En delete-åtgärden fortfarande misslyckas alla dataegenskaper inte har angetts eller är inte korrekt."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om åtgärden stöds; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har stöd för insert-åtgärden."
  remarks: "CanInsert egenskapen returnerar `true` om den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> En insert-åtgärden fortfarande misslyckas alla dataegenskaper inte har angetts eller är inte korrekt."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om åtgärden stöds; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen stöder sidindelning av data som hämtas."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet stöder inte sidindelning.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen stöder hämtning av det totala antalet datarader, förutom en uppsättning data."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>objektet stöder inte hämtning radantal.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontrollen stöder en sorterad vy på data som hämtas."
  remarks: "CanSort egenskapen returnerar `true`, om aktuellt <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>egenskap är inställd på den <xref:System.Web.UI.WebControls.SqlDataSourceMode>värde och <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-egenskapen anges.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om sortering stöds; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt som är associerad med aktuellt <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har stöd för uppdateringen."
  remarks: "CanUpdate egenskapen returnerar `true` om den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> En delete-åtgärden fortfarande misslyckas alla dataegenskaper inte har angetts eller är inte korrekt."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om åtgärden stöds; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger det värde som anger hur <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll utför uppdateringar och tar bort när ändringar i data i en rad i den underliggande databasen vid tidpunkten för åtgärden."
  remarks: "Egenskapen ConflictDetection bestämmer om parametrar för gamla och nya värdena som tillämpas på den `Update` metoden. Till exempel om kommandot som anges av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen returnerar en <xref:System.Data.DataSet>objekt med kolumnerna `Name` och `Number`, och ConflictDetection-egenskap är inställd på den <xref:System.Web.UI.ConflictOptions>värde, skapas parametrar för `Name` och `Number` för uppdateringen.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Om egenskapen ConflictDetection anges till den <xref:System.Web.UI.ConflictOptions>värde, skapas parametrar för `Name`, `Number`, `original_Name`, och `original_Number`.</xref:System.Web.UI.ConflictOptions> (Det exakta namnet på parametrarna för de ursprungliga värdena är beroende av den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Sedan den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt anger om metoden som anges i den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>egenskapen har parametrar som matchar.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Samtidighetskontroll är en teknik som datalager använda för att styra hur data läsa och ändra i arkivet när flera klienter ansluter till och ändra samma data. En klient läser data och visar dem till en användare medan en annan klient läser samma data och visar dem till en annan användare. Om båda användarna uppdatera data och skicka den till datalagringen, kan vissa oväntat resultat uppstå, eftersom båda klienterna kan uppdatera olika värden för samma data. Detta betraktas som en konflikt. Genom att ange egenskapen ConflictDetection till den <xref:System.Web.UI.ConflictOptions>värde, uppdateringen kan du jämföra de gamla och nya värdena till den ursprungliga datakällan för att identifiera konflikter och hantera dem efter behov.</xref:System.Web.UI.ConflictOptions>       Värdet för ConflictDetection-egenskapen är lagrade i vyn tillstånd."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "En av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> värden. Standardvärdet är den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> värde."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det markerade värdet är inte en av de <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en borttagning åtgärden med den <> </> *> SQL-sträng, eventuella parametrar som anges i den <> </> *> samling och de värden som finns i den angivna <code> keys </code> och <code> oldValues </code> samlingar."
  remarks: "Ta bort metodanrop den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>metoden och skickar den `keys` och `oldValues` parametrar.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av objektet eller raden nyckelvärdena för det <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>tas bort.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som innehåller radvärdena som utvärderas endast om den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>egenskap är inställd på den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> värde.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som tas bort från den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger SQL-strängen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> använder för att ta bort data från den underliggande databasen."
  remarks: "Eftersom olika databaser använder olika sorters SQL, syntaxen för SQL-strängen är beroende av den aktuella ADO.NET providern som används som identifieras av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Om SQL-strängen är en fråga med parametrar eller ett kommando, beroende platshållare för parametern också ADO.NET-provider som används. Om providern är till exempel den <xref:System.Data.SqlClient?displayProperty=fullName>, vilket är standardprovidern för den <xref:System.Web.UI.WebControls.SqlDataSource>klass, platshållare för parametern är `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men om providern är inställd på den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, platshållare för parametern är `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       DeleteCommand kan vara en SQL-sträng eller namnet på en lagrad procedur, om den underliggande databasen stöder lagrade procedurer.       Värdet för egenskapen är DeleteCommand lagras i vyn tillstånd."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-sträng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> använder för att ta bort data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om texten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen är en SQL-instruktion eller namnet på en lagrad procedur.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Värdet för DeleteCommandType-egenskapen är lagrade i vyn tillstånd."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "En av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden. Standardvärdet är den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värde."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det markerade värdet är inte en av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när en delete-åtgärden har slutförts."
  remarks: "Hantera händelsen tagits bort för att undersöka värden för utdataparametrar när en delete-åtgärden har slutförts. Utdataparametrarna är tillgängliga från den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objekt som associeras med händelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar Parametersamlingen som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-egenskapen innehåller en SQL-fråga med parametrar, DeleteParameters samlingen innehåller någon <xref:System.Web.UI.WebControls.Parameter>objekt som motsvarar platshållarna i SQL-sträng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>       Parameternamn kan påverkas av den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>egenskapen specifikt om namnet identifierar en primär nyckel, till exempel en nyckel som anges med hjälp av den `DataKeyNames` egenskap för en databunden kontroll eller i bort och uppdatera scenarier där den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>egenskap är inställd på den <xref:System.Web.UI.ConflictOptions>värde och en uppsättning `oldValues` har överförts till metoden för motsvarande data.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> I det här fallet Formatsträngen som tillämpas på varje parameternamn i den `oldValues` samling.       Ordningen för parametrarna i samlingen DeleteParameters kan vara viktigt beroende på ADO.NET-provider. Den <xref:System.Data.OleDb?displayProperty=fullName>och <xref:System.Data.Odbc?displayProperty=fullName>providers associera parametrarna i samlingen enligt den ordning som parametrarna som visas i parametriserade SQL-frågan.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>providern som är standard ADO.NET-provider för den <xref:System.Web.UI.WebControls.SqlDataSource>styra, associerar parametrarna i samlingen genom att matcha namnet på parametern med platshållare i SQL-frågan.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> -värde som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar före en borttagningsåtgärd."
  remarks: "Hanterar händelsen ta bort om du vill utföra ytterligare initieringen åtgärder som är specifika för ditt program för att verifiera värdena för parametrarna, eller att ändra parametern värden innan de <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utför borttagningsåtgärden.</xref:System.Web.UI.WebControls.SqlDataSource>       Anslutningen till den underliggande datakällan är inte ännu öppen när händelsen hanterardelegaten anropas. Därför kan du inte avbryta den <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>åtgärden direkt genom att anropa den <xref:System.Data.Common.DbCommand.Cancel%2A>metoden på den <xref:System.Data.Common.DbCommand>objekt som exponeras av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objekt.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Du kan dock avbryter åtgärden genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>till `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en borttagning åtgärden med den <> </> *> SQL-sträng, eventuella parametrar som anges i den <> </> *> samling och de värden som finns i den angivna <code> keys </code> och <code> oldValues </code> samlingar."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerar den ärvda <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>metod för att ta bort data från en databas.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Sidan utvecklare och databunden kontroll författare anropa inte metoden ExecuteDelete direkt; Använd i stället offentligt exponerade <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>metod.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       De värden som finns i den `keys` samling utvärderas och samman med alla värden som finns i den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>samling.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>egenskap är inställd på den <xref:System.Web.UI.ConflictOptions>värde, de värden som finns i den `oldValues` samling formateras med den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>egenskapen och är också samman.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Innan borttagningen utförs den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Du kan hantera den här händelsen för att undersöka värden för parametrarna och utföra eventuella förbearbetning innan en borttagning.       Att genomföra en raderingsåtgärd den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt versioner en <xref:System.Data.Common.DbCommand>objekt med den <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>text och alla tillhörande <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>Egenskaper, och kör sedan den <xref:System.Data.Common.DbCommand>objekt i den underliggande databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> När borttagningen är klar på <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Du kan hantera den här händelsen för att granska alla returvärden och felkoder och till eventuella efterbearbetning."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av objektet eller raden nyckelvärdena för åtgärden ExecuteDelete att ta bort.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som innehåller radvärdena som utvärderas endast om den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>egenskap är inställd på den <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> värde.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som tas bort från den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en insert-åtgärden med den <> </> *> SQL-sträng, eventuella parametrar som anges i den <> </> *> samling och de värden som finns i den angivna <code> values </code> samling."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerar den ärvda <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>metod för att infoga data i en databas.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Sidan utvecklare och databunden kontroll författare anropa inte metoden ExecuteInsert direkt; Använd i stället offentligt exponerade <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>metod.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Innan insert-åtgärden utförs den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Du kan hantera den här händelsen för att undersöka värden för parametrarna och utföra eventuella förbearbetning innan insert.       För en insert-åtgärden på <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt versioner en <xref:System.Data.Common.DbCommand>objekt med den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>text och alla tillhörande <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>Egenskaper, och kör sedan den <xref:System.Data.Common.DbCommand>objekt i den underliggande databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> När infogningen har slutförts på <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Du kan hantera den här händelsen för att granska alla returvärden och felkoder och till eventuella efterbearbetning."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>för värden som används med den <> </> *> egenskapen att utföra Databasåtgärden insert.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <> </> *>-egenskapen är inte en SQL-fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som infogas i den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan inte upprätta en anslutning till den underliggande datakällan."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den aktuella användaren saknar behörighet för att få åtkomst till databasen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar data från den underliggande databasen med hjälp av den <> </> *> SQL-sträng och eventuella parametrar som används i den <> </> *> samling."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerar den ärvda ExecuteSelect-metoden för att hämta data från en-databas.</xref:System.Web.UI.WebControls.SqlDataSourceView> Sidan utvecklare och databunden kontroll författare anropa inte metoden ExecuteSelect direkt; Använd i stället offentligt exponerade <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metod.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Innan datahämtning av utförs av <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Du kan hantera den här händelsen för att undersöka värden för parametrarna och utföra eventuella bearbetning i förväg innan data hämtas.       Att utföra åtgärden, den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt versioner en <xref:System.Data.Common.DbCommand>objekt med den <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>text och alla tillhörande <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, och kör den mot den underliggande databasen.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> När åtgärden har slutförts på <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSource.Selected>händelse.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Du kan hantera den här händelsen om du vill kontrollera eventuella returvärden felkoder och eventuella efterbearbetning.       ExecuteSelect-metoden returnerar en <xref:System.Data.DataView>objekt om de <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>är inställd på <xref:System.Web.UI.WebControls.SqlDataSourceMode>, eller en <xref:System.Data.IDataReader>objekt om <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>anges till <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> Stäng den <xref:System.Data.IDataReader>objekt när du har läst informationen.</xref:System.Data.IDataReader>       Om den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>anges till <xref:System.Web.UI.WebControls.SqlDataSourceMode>och cachelagring är aktiverat, <xref:System.Web.UI.WebControls.SqlDataSourceView>hämtar data från och sparar data till cachen under åtgärden.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Cachen har skapats, borttagna eller uppdaterad baserat på cachelagringsbeteendet som anges av en kombination av de <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>och <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>Egenskaper.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > När du använder klientpersonifiering under Windows-autentisering, data cachelagras när den första användaren kommer åt data. Om en annan användare begär samma data, hämtas data från cacheminnet. Data hämtas inte genom att göra ett annat anrop till databasen för att verifiera användarens åtkomst till data. Om du förväntar dig att flera användare att komma åt data, och du vill att varje hämtning av data till verifieras av databasens säkerhetskonfigurationer, Använd inte cachelagring.       Om den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>är inställd på <xref:System.Web.UI.WebControls.SqlDataSourceMode>och en <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>har angetts, utvärderas tillsammans med någon angivna <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>och det resulterande filtret används i listan över data under en åtgärd för hämtning av data.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objekt som används för åtgärder med data utöver hämta grundläggande data för begäran."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>lista över datarader.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en uppdatering igen med den <> </> *> SQL-sträng, eventuella parametrar som finns i den <> </> *> samling och de värden som finns i den angivna <code> keys </code>, <code> values </code>, och <code> oldValues </code> samlingar."
  remarks: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen implementerar ärvda ExecuteUpdate-metoden för att uppdatera data i en databas.</xref:System.Web.UI.WebControls.SqlDataSourceView> Sidan utvecklare och databunden kontroll författare anropa inte metoden ExecuteUpdate direkt; Använd i stället offentligt exponerade <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>metod.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Värdena i den `keys` och `values` samlingar utvärderas och samman med alla värden som innehåller den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>samling.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>egenskap är inställd på <xref:System.Web.UI.ConflictOptions>, värdena i den `oldValues` samling formateras med den <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>och också samman.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Innan uppdateringen utförs den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Du kan hantera den här händelsen för att undersöka värden för parametrarna och utföra eventuella förbearbetning innan en uppdatering.       Att utföra åtgärden, den <xref:System.Web.UI.WebControls.SqlDataSourceView>bygger en <xref:System.Data.Common.DbCommand>objekt med den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>text och alla tillhörande <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>Egenskaper, och kör sedan den <xref:System.Data.Common.DbCommand>objekt i den underliggande databasen.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> När åtgärden har slutförts på <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>metoden anropas för att öka den <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>händelse.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Du kan hantera den här händelsen för att granska alla returvärden och felkoder och till eventuella efterbearbetning."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av primära nycklar som ska användas med den <> </> *> egenskapen för att utföra uppdateringen för databasen.</xref:System.Collections.IDictionary> Om det finns inga nycklar som är associerad med frågan eller om den <> </> *>-egenskapen är inte en SQL-fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av värden som ska användas med den <> </> *> egenskapen för att utföra uppdateringen för databasen.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <> </> *> är inte en parametriserade SQL fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som representerar de ursprungliga värdena i databasen.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen är inte en SQL-fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som uppdateras i den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den aktuella användaren saknar behörighet för att få åtkomst till databasen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett filteruttryck som används när den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>metoden anropas.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>"
  remarks: "Syntaxen som används för egenskapen FilterExpression är en sträng-typ format-syntax. Du kan inkludera parametrar i egenskapen FilterExpression. Om parameterns typ är sträng eller ett tecken, skriver du parametern med enkla citattecken. Citattecken behövs inte, om parametern är en numerisk typ.       Den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>samlingen innehåller de parametrar som utvärderas platshållare som finns i den <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>       Den <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen stöder filtrering data endast när i `DataSet` läge.</xref:System.Web.UI.WebControls.SqlDataSource>       Värdet för FilterExpression-egenskapen är lagrade i vyn tillstånd.      > [!IMPORTANT] > Du validera parametervärdet eventuella filter som du får från klienten. Körningen bara ersätter parametervärdet i filteruttrycket och tillämpar den till den <xref:System.Data.DataView>objekt som returneras av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Om du använder den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som en säkerhetsåtgärd att begränsa antalet objekt som ska returneras, måste du verifiera parametervärden innan filtreringen sker.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "En sträng som representerar ett filteruttryck som används när data hämtas med hjälp av den <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metoden.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapen FilterExpression angavs när den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> läge."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar före en filteråtgärd."
  remarks: "Hanterar händelsen filtrering för att utföra verifiering åtgärder på filter parametervärden innan den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt utför en filteråtgärd.</xref:System.Web.UI.WebControls.SqlDataSourceView> Du kan avbryta den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>objekt `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Händelsen aktiveras endast om den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Du validera parametervärdet eventuella filter som du får från klienten. Körningen bara ersätter parametervärdet i filteruttrycket och tillämpar den till den <xref:System.Data.DataView>objekt som returneras av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Om du använder den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som en säkerhetsåtgärd att begränsa antalet objekt som ska returneras, måste du verifiera parametervärden innan filtreringen sker.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar en samling parametrar som är associerade med en platshållare för parametrar i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>sträng.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  remarks: "Parametrarna i samlingen FilterParameters är associerade med de parametrar som anges i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Platshållare för parametrar som anges i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>utvärderas i ordning och matchas med parameter-objekt i samlingen FilterParameters när den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden anropas.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > Du validera parametervärdet eventuella filter som du får från klienten. Körningen bara ersätter parametervärdet i filteruttrycket och tillämpar den till den <xref:System.Data.DataView>objekt som returneras av den <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metoden.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Om du använder den <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>egenskapen som en säkerhetsåtgärd att begränsa antalet objekt som ska returneras, måste du verifiera parametervärden innan filtreringen sker.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som innehåller en uppsättning parametrar som är associerade med alla platshållarna hittades i den <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en insert-åtgärden med den <> </> *> SQL-sträng, eventuella parametrar som anges i den <> </> *> samling och de värden som finns i den angivna <code> values </code> samling."
  remarks: "Infoga metodanrop den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>metoden och skickar den `values` parameter.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>med parametrar för den <> </> *> egenskap som ska användas för att utföra Databasåtgärden insert.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <> </> *> är inte en parametriserade SQL fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som infogas i den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan inte upprätta en anslutning till den underliggande datakällan."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger SQL-strängen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet används för att infoga data i den underliggande databasen."
  remarks: "Eftersom olika databaser använder olika sorters SQL, syntaxen för SQL-strängen är beroende av den aktuella ADO.NET providern som används som identifieras av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Om SQL-strängen är en fråga med parametrar eller ett kommando, beroende platshållare för parametern också ADO.NET-provider som används. Om providern är till exempel den <xref:System.Data.SqlClient?displayProperty=fullName>, vilket är standardprovidern för den <xref:System.Web.UI.WebControls.SqlDataSource>klass, platshållare för parametern är `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men om providern är inställd på den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, platshållare för parametern är `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen InsertCommand kan vara en SQL-sträng eller namnet på en lagrad procedur om datakällan stöder lagrade procedurer.       Värdet för objektet InsertCommand-egenskapen är lagrade i vyn tillstånd."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-sträng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> används för att infoga data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om texten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen är en SQL-instruktion eller namnet på en lagrad procedur.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Värdet för InsertCommandType-egenskapen är lagrade i vyn tillstånd."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "En av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden. Värdet är den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värde."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det markerade värdet är inte en av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när en insert-åtgärden har slutförts."
  remarks: "Hantera händelsen infogade om du vill kontrollera värdena för utdataparametrar när en insert-åtgärden har slutförts. Utdataparametrarna är tillgängliga från den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objekt som associeras med händelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar före en infogning."
  remarks: "Hanterar händelsen Infoga om du vill utföra ytterligare initieringen åtgärder som är specifika för ditt program för att verifiera värdena för parametrarna, eller att ändra parametern värden innan de <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utför infogningen.</xref:System.Web.UI.WebControls.SqlDataSource>       Anslutningen till den underliggande datakällan är inte ännu öppen när händelsen hanterardelegaten anropas. Därför kan du kan inte avbryta databasen direkt genom att anropa den <xref:System.Data.Common.DbCommand.Cancel%2A>metoden på den <xref:System.Data.Common.DbCommand>objekt som exponeras av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objekt.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> Du kan dock avbryta databasen genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>till `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar Parametersamlingen som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-egenskapen innehåller en SQL-fråga med parametrar, mängden InsertParameters samlingen innehåller någon <xref:System.Web.UI.WebControls.Parameter>objekt som motsvarar platshållarna i SQL-sträng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>       Ordningen för parametrarna i samlingen mängden InsertParameters kan vara viktigt beroende på ADO.NET-provider. Den <xref:System.Data.OleDb?displayProperty=fullName>och <xref:System.Data.Odbc?displayProperty=fullName>providers associera parametrarna i samlingen enligt den ordning som parametrarna som visas i parametriserade SQL-frågan.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>providern som är standard ADO.NET-provider för den <xref:System.Web.UI.WebControls.SqlDataSource>styra, associerar parametrarna i samlingen genom att matcha namnet på parametern med en platshållare alias i SQL-frågan.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt sparas ändringar i sitt visningstillstånd."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om datakällvyn har markerats för att spara sitt tillstånd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Återställer tidigare sparad visningsstatus för datakällvyn."
  remarks: "Den här metoden används främst av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] infrastrukturen och är inte avsedd att användas direkt från din kod.  Control-utvecklare kan dock åsidosätta den här metoden om du vill ange hur en anpassad Serverkontrollen återställer sitt visningstillstånd. Mer information finns i [översikt över ASP.NET Management](~/add/includes/ajax-current-ext-md.md).       Metoden LoadViewState återställer visa statusinformation för den <xref:System.Web.UI.WebControls.SqlDataSourceView>objekt från en tidigare begäran som sparats i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>metoden.</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Ett objekt som representerar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> tillstånd att återställa."
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger en formatsträng ska gälla för namnen på de parametrar som skickas till den <> </> *> eller <> </> *> metod."
  remarks: "Formatsträngen OldValuesParameterFormatString tillämpas på primärnycklar, till exempel de som identifieras av den `DataKeyNames` på databundna kontrollen eller ta bort egenskapen och uppdatera scenarier där det <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>egenskap är inställd på den <xref:System.Web.UI.ConflictOptions>värde och en uppsättning `oldValues` har överförts till metoden för motsvarande data.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> I det här fallet Formatsträngen som tillämpas på varje parameternamn i den `oldValues` samling. Mer information finns i <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>       Värdet för egenskapen är OldValuesParameterFormatString lagras i vyn tillstånd."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "En sträng som representerar en formatsträng som tillämpas på namnen på alla <code> oldValues </code> parametrar skickades till den <> </> *> eller <> </> *> metoder. Standardvärdet är &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref> händelse efter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har slutförts en borttagningsåtgärd."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleted kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref> händelse innan den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll försöker en borttagningsåtgärd."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnDeleting kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref> händelse innan den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll filtrerar resultaten av en select-åtgärden."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnFiltering kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref> händelse efter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har slutförts insert-åtgärden."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserted kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref> händelse innan den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll försöker en infogning."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnInserting kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref> händelse efter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har slutförts en åtgärd för hämtning av data."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelected kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref> händelse innan den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll försöker en åtgärd för hämtning av data."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnSelecting kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref> händelse efter den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll har slutförts uppdatering."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdated kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref> händelse innan den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kontroll försöker uppdatering."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoden OnUpdating kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar den sträng som används som prefix i parametern platshållare i en SQL-fråga."
  remarks: "SQL-frågor och kommandon kan parameteriseras i att de innehåller platshållare för värden som är bundna till frågan vid körning. Beroende på den ADO.NET-provider som har angetts för den <xref:System.Web.UI.WebControls.SqlDataSource>kontroll som identifieras av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen parametrarna utvärderas av alias eller deras ordning i den <xref:System.Web.UI.WebControls.ParameterCollection>objekt.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Om den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>har inte angetts eller är inställt på den <xref:System.Data.SqlClient?displayProperty=fullName>parametrar utvärderas av alias och egenskapen ParameterPrefix används för att lägga till ett parameterprefix till den <xref:System.Web.UI.WebControls.Parameter.Name%2A>egenskapen för varje <xref:System.Web.UI.WebControls.Parameter>objekt i en <xref:System.Web.UI.WebControls.ParameterCollection>under en hämtning av data eller data manipulation.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Om den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskap är inställd på den <xref:System.Data.OleDb?displayProperty=fullName>eller <xref:System.Data.Odbc?displayProperty=fullName>, parametrarna utvärderas av ordning och ParameterPrefix och <xref:System.Web.UI.WebControls.Parameter.Name%2A>Egenskaper ignoreras.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Om du utökar den <xref:System.Web.UI.WebControls.SqlDataSourceView>klassen, som du kan åsidosätta egenskapen ParameterPrefix för att tillhandahålla ett prefix än den `&quot;@&quot;` sträng, om det behövs.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "Den &quot;@&quot; sträng."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Jämför de funktioner som krävs för en <> </> *>-åtgärd mot de som vyn har stöd för och är anropas av den <> </> *> metod."
  remarks: "Metoden RaiseUnsupportedCapabilityError används av datakällvyn för att undersöka var och en av de funktioner som har begärts av en databunden kontroll, som representeras av den <xref:System.Web.UI.DataSourceSelectArguments>objekt som har överförts till den <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metoden och jämföra dessa funktioner för de funktioner som stöds av datakällvyn.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> För de funktioner som representeras av det <xref:System.Web.UI.DataSourceSelectArguments>objektet och stöds inte av datakällvyn, en <xref:System.NotSupportedException>undantagsfel genereras.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "En av de <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> värden som jämförs funktioner som har stöd för vyn."
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Datakällan har inte den valda <code> capability </code> aktiverat."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sparar ändringarna visningsstatus för den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> kontrollen eftersom den tid som sidan har skickas tillbaka till servern."
  remarks: "Metoden SaveViewState används främst av kontrollen utvecklare.       Visa status är anhopning av värden för egenskaper för en serverkontroll. Dessa värden placeras i <xref:System.Web.UI.Control.ViewState%2A>egenskapen för server-kontroll, vilket är en instans av <xref:System.Web.UI.StateBag>klassen.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Den <xref:System.Web.UI.Control.ViewState%2A>för Serverkontrollen sparas sedan ett string-objekt när spara tillstånd steg i livscykeln för server-kontroll.</xref:System.Web.UI.Control.ViewState%2A>       När visningsstatus sparas string-objekt som har kvar efter att spara tillstånd steg i livscykeln för server-kontroll returneras till klienten som en variabel som lagras i ett HTML- `Hidden` element. När du skapar anpassade kontroller kan du förbättra effektiviteten genom att åsidosätta metoden SaveViewState och ändra den `ViewState` egenskapen för serverkontroll. Mer information finns i [översikt över ASP.NET Management](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Det objekt som innehåller ändringar i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> visa tillstånd, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om det finns inga visningstillstånd som är associerad med objektet."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar data från den underliggande databasen med hjälp av den <> </> *> SQL-sträng och eventuella parametrar som används i den <> </> *> samling."
  remarks: "Välj metodanrop den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>metoden och skickar den `selectArgs` parameter.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>       Den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>metoden returnerar en <xref:System.Data.DataView>objekt, om den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>egenskap är inställd på den <xref:System.Web.UI.WebControls.SqlDataSourceMode>värdet eller det returnerar en <xref:System.Data.IDataReader>objekt om den <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>egenskap är inställd på den <xref:System.Web.UI.WebControls.SqlDataSourceMode>värde.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Stäng den <xref:System.Data.IDataReader>objekt när du har läst informationen.</xref:System.Data.IDataReader>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "En <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> används för att begäran åtgärder på data utöver grundläggande datahämtning."
    return:
      type: System.Collections.IEnumerable
      description: "En <xref:System.Collections.IEnumerable>lista över datarader.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <code> selectArgs </code> skickades till Markera metod anger att datakällan ska utföra vissa ytterligare arbete vid hämtning av data för att aktivera sidindelning i eller gå igenom data som hämtas, men datakällkontrollen stöder inte den begärda kapaciteten."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan inte upprätta en anslutning till den underliggande datakällan."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger SQL-strängen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet används för att hämta data från den underliggande databasen."
  remarks: "Eftersom olika databaser använder olika sorters SQL, syntaxen för SQL-strängen är beroende av den aktuella ADO.NET providern som används som identifieras av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Om SQL-strängen är en fråga med parametrar eller ett kommando, beroende platshållare för parametern också ADO.NET-provider som används. Om providern är till exempel den <xref:System.Data.SqlClient?displayProperty=fullName>, vilket är standardprovidern för den <xref:System.Web.UI.WebControls.SqlDataSource>klass, platshållare för parametern är `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men om providern är inställd på den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, platshållare för parametern är `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen SelectCommand kan vara en SQL-sträng eller namnet på en lagrad procedur om datakällan stöder lagrade procedurer.      > [!IMPORTANT] > Det är säkrare att använda en lagrad procedur än en SQL-instruktion för egenskapen SelectCommand.       Värdet för egenskapen SelectCommand lagras i vyn tillstånd."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-sträng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> används för att hämta data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om texten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen är en SQL-fråga eller namnet på en lagrad procedur.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Värdet för SelectCommandType-egenskapen är lagrade i vyn tillstånd."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "En av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden. Standardvärdet är den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värde."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det markerade värdet är inte en av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när en åtgärd för hämtning av data har slutförts."
  remarks: "Hantera den valda händelsen för att undersöka värden för utdataparametrar när en åtgärd för hämtning av data har slutförts. Utdataparametrarna är tillgängliga från den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objekt som associeras med händelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar före en åtgärd för hämtning av data."
  remarks: "Hanterar händelsen du väljer om du vill utföra ytterligare initieringen åtgärder som är specifika för ditt program för att verifiera värdena för parametrarna, eller att ändra parametern värden innan de <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utför åtgärden för hämtning av data.</xref:System.Web.UI.WebControls.SqlDataSource>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar Parametersamlingen som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-egenskapen innehåller en SQL-fråga med parametrar, SelectParameters samlingen innehåller någon <xref:System.Web.UI.WebControls.Parameter>objekt som motsvarar platshållarna i SQL-sträng.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>       Ordningen för parametrarna i SelectParameters-samlingen kan vara viktigt beroende på ADO.NET-provider. Den <xref:System.Data.OleDb?displayProperty=fullName>och <xref:System.Data.Odbc?displayProperty=fullName>providers associera parametrarna i samlingen enligt den ordning som parametrarna som visas i parametriserade SQL-frågan.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>providern som är standard ADO.NET-provider för den <xref:System.Web.UI.WebControls.SqlDataSource>styra, associerar parametrarna i samlingen genom att matcha namnet på parametern med en platshållare alias i SQL-frågan.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> -värde som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger namnet på en lagrad procedur-parameter som används för att sortera data som hämtas när datahämtning utförs med hjälp av en lagrad procedur."
  remarks: "Egenskapen SortParameterName utvärderas bara när SQL kommando som finns i den <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>egenskapen är namnet på en lagrad procedur.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> I det här fallet om egenskapen SortParameterName anges innehåller den namnet på en parameter som används för att sortera resultaten av den lagrade proceduren.       Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>egenskapen, till egenskapen SortParameterName är före.</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>       Värdet för den egenskapen SortParameterName lagras i vyn tillstånd."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Namnet på en lagrad procedur-parameter som används för att sortera data som hämtas när datahämtning utförs med hjälp av en lagrad procedur."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivning av den här medlemmen finns <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Web.UI.WebControls.SqlDataSourceView>instans omvandlas till den <xref:System.Web.UI.IStateManager>gränssnitt.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om datakällvyn har markerats för att spara sitt tillstånd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Web.UI.WebControls.SqlDataSourceView>instans omvandlas till den <xref:System.Web.UI.IStateManager>gränssnitt.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Ett objekt som representerar den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> tillstånd att återställa."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivning av den här medlemmen finns <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;> </xref>."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Web.UI.WebControls.SqlDataSourceView>instans omvandlas till den <xref:System.Web.UI.IStateManager>gränssnitt.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Det objekt som innehåller ändringar i den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> visa tillstånd, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om det finns inga visningstillstånd som är associerad med objektet."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "En beskrivning av den här medlemmen finns <xref:System.Web.UI.IStateManager.TrackViewState*>.</xref:System.Web.UI.IStateManager.TrackViewState*>"
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Web.UI.WebControls.SqlDataSourceView>instans omvandlas till den <xref:System.Web.UI.IStateManager>gränssnitt.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gör den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objekt att spåra ändringar av sitt visningstillstånd så att ändringarna kan lagras i den <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objekt för kontroll- och beständiga över begäranden för samma sida."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Utför en uppdatering igen med den <> </> *> SQL-sträng, eventuella parametrar som finns i den <> </> *> samling och de värden som finns i den angivna <code> keys </code>, <code> values </code>, och <code> oldValues </code> samlingar."
  remarks: "Uppdatera metodanrop den <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>metoden och skickar den `keys`, `values`, och `oldValues` parametrar.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Mer information finns i <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av primära nycklar som ska användas med den <> </> *> egenskapen för att utföra uppdateringen för databasen.</xref:System.Collections.IDictionary> Om det finns inga nycklar som är associerad med frågan eller om den <> </> *> är inte en parametriserade SQL fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>av värden som ska användas med den <> </> *> egenskapen för att utföra uppdateringen för databasen.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <> </> *> är inte en parametriserade SQL fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som representerar de ursprungliga värdena i databasen.</xref:System.Collections.IDictionary> Om det finns inga parametrar som är associerad med frågan eller om den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>är inte en parametriserade SQL fråga, skicka <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Ett värde som representerar antalet rader som uppdateras i den underliggande databasen."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> kan inte upprätta en anslutning till den underliggande datakällan."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>egenskapen är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger SQL-strängen som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objektet används för att uppdatera data i den underliggande databasen."
  remarks: "Eftersom olika databaser använder olika sorters SQL, syntaxen för SQL-strängen är beroende av den aktuella ADO.NET providern som används som identifieras av den <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Om SQL-strängen är en fråga med parametrar eller ett kommando, beroende platshållare för parametern också ADO.NET-provider som används. Om providern är till exempel den <xref:System.Data.SqlClient?displayProperty=fullName>, vilket är standardprovidern för den <xref:System.Web.UI.WebControls.SqlDataSource>klass, platshållare för parametern är `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Men om providern är inställd på den <xref:System.Data.Odbc?displayProperty=fullName>eller <xref:System.Data.OleDb?displayProperty=fullName>, platshållare för parametern är `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md).       Egenskapen UpdateCommand kan vara en SQL-sträng eller namnet på en lagrad procedur om datakällan stöder lagrade procedurer.       Värdet för egenskapen är UpdateCommand lagras i vyn tillstånd."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "En SQL-sträng som den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> använder för att uppdatera data."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar eller anger ett värde som anger om texten i den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen är en SQL-instruktion eller namnet på en lagrad procedur.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Värdet för UpdateCommandType-egenskapen är lagrade i vyn tillstånd."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "En av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden. Standardvärdet är den <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värde."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Det markerade värdet är inte en av de <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> värden."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar när en update-åtgärden har slutförts."
  remarks: "Hantera händelsen uppdaterad för att undersöka värden för utdataparametrar när en update-åtgärden har slutförts. Utdataparametrarna är tillgängliga från den <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objekt som associeras med händelsen.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hämtar Parametersamlingen som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Om den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-egenskapen innehåller en SQL-fråga med parametrar, UpdateParameters samlingen innehåller någon <xref:System.Web.UI.WebControls.Parameter>objekt som motsvarar platshållarna som finns i SQL-strängen.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>       Parameternamn kan påverkas av den <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>egendom; specifikt om namnet identifierar en primär nyckel, till exempel en nyckel som anges med hjälp av den `DataKeyNames` egenskap, eller ta bort i och uppdatera scenarier där den <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>egenskap är inställd på den <xref:System.Web.UI.ConflictOptions>värde och en uppsättning `oldValues` skickas till metoden för motsvarande data.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> I det här fallet Formatsträngen som tillämpas på varje parameternamn i den `oldValues` samling.       Ordningen för parametrarna i samlingen UpdateParameters kan vara viktigt beroende på ADO.NET-provider. Den <xref:System.Data.OleDb?displayProperty=fullName>och <xref:System.Data.Odbc?displayProperty=fullName>providers associera parametrarna i samlingen enligt den ordning som parametrarna som visas i parametriserade SQL-frågan.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Den <xref:System.Data.SqlClient?displayProperty=fullName>providern som är standard ADO.NET-provider för den <xref:System.Web.UI.WebControls.SqlDataSource>styra, associerar parametrarna i samlingen genom att matcha namnet på parametern med en platshållare alias i SQL-frågan.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Mer information om parametriserade SQL-frågor och kommandon finns [med parametrar med SqlDataSource kontrollen](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> -värde som innehåller de parametrar som används av den <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>egenskapen.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inträffar före uppdatering."
  remarks: "Hanterar händelsen uppdatera om du vill utföra ytterligare initieringen åtgärder som är specifika för ditt program för att verifiera värdena för parametrarna, eller att ändra parametern värden innan de <xref:System.Web.UI.WebControls.SqlDataSource>kontrollen utför uppdateringsåtgärden.</xref:System.Web.UI.WebControls.SqlDataSource>       Anslutningen till den underliggande datakällan är inte ännu öppen när händelsen hanterardelegaten anropas. Därför kan du inte avbryta direkt genom att anropa den <xref:System.Data.Common.DbCommand.Cancel%2A>metoden på den <xref:System.Data.Common.DbCommand>objekt som exponeras av den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objekt.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> Du kan dock avbryta databasen genom att ange den <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>egenskapen för den <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>till `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
