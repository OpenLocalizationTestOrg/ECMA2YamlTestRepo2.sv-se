### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableCollection
  id: DataTableCollection
  children:
  - System.Data.DataTableCollection.Add
  - System.Data.DataTableCollection.Add(System.Data.DataTable)
  - System.Data.DataTableCollection.Add(System.String)
  - System.Data.DataTableCollection.Add(System.String,System.String)
  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  - System.Data.DataTableCollection.Clear
  - System.Data.DataTableCollection.CollectionChanged
  - System.Data.DataTableCollection.CollectionChanging
  - System.Data.DataTableCollection.Contains(System.String)
  - System.Data.DataTableCollection.Contains(System.String,System.String)
  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  - System.Data.DataTableCollection.IndexOf(System.String)
  - System.Data.DataTableCollection.IndexOf(System.String,System.String)
  - System.Data.DataTableCollection.Item(System.Int32)
  - System.Data.DataTableCollection.Item(System.String)
  - System.Data.DataTableCollection.Item(System.String,System.String)
  - System.Data.DataTableCollection.List
  - System.Data.DataTableCollection.Remove(System.Data.DataTable)
  - System.Data.DataTableCollection.Remove(System.String)
  - System.Data.DataTableCollection.Remove(System.String,System.String)
  - System.Data.DataTableCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
  type: Class
  summary: "Representerar en uppsättning tabeller för de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "DataTableCollection innehåller alla <xref:System.Data.DataTable>objekt för en viss <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Åtkomst till DataTableCollection av en <xref:System.Data.DataSet>, använder den <xref:System.Data.DataSet.Tables%2A>egenskapen.</xref:System.Data.DataSet.Tables%2A> </xref:System.Data.DataSet>       DataTableCollection använder metoder som <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, och <xref:System.Data.DataTableCollection.Remove%2A>att hantera objekt i samlingen.</xref:System.Data.DataTableCollection.Remove%2A> </xref:System.Data.DataTableCollection.Clear%2A> </xref:System.Data.DataTableCollection.Add%2A>       Använd den <xref:System.Data.DataTableCollection.Contains%2A>metod för att avgöra om en viss tabell (anges med namn eller index) är i samlingen.</xref:System.Data.DataTableCollection.Contains%2A>       Om du vill navigera från en tabell till en annan, använder den <xref:System.Data.DataTable.ChildRelations%2A>eller <xref:System.Data.DataTable.ParentRelations%2A>-egenskapen för den <xref:System.Data.DataTable>att komma åt insamling av <xref:System.Data.DataRelation>objekt.</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataTable.ChildRelations%2A> Du kan också använda den <xref:System.Data.DataSet.Relations%2A>egenskapen navigera i de överordnade/underordnade relationerna i den `DataTables` i ett visst <xref:System.Data.DataSet>samling.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>"
  example:
  - "The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \n  \n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add
  id: Add
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en ny <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt med hjälp av ett standardnamn och lägger till den samlingen."
  remarks: "Eftersom inget namn anges i `DataTable` skapas med hjälp av ett standardnamn i förhållande till dess ordning. Standardnamnet är &quot;Tabell1.&quot;       Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har lagts till i samlingen.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Den nyligen skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  id: Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lägger till den angivna <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> i samlingen."
  remarks: "Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har lagts till i samlingen.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]"
  syntax:
    content: public void Add (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> objekt att lägga till."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Värdet som angetts för tabellen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tabellen redan tillhör den här samlingen eller tillhör en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "En tabell i samlingen har samma namn. Jämförelse är inte skiftlägeskänsliga."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt med det angivna namnet och lägger till den samlingen."
  remarks: "Om antingen `null` eller en tom sträng (&quot;&quot;) som skickas i ett standardnamn anges för den nyligen skapade `DataTable`. Det här namnet är baserad på den ordning som tabellen har lagts till (&quot;tabell&1;&quot;, &quot;Tabell2&quot; och så vidare).       Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar om tabellen har lagts till i samlingen.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet som ska ge den skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Den nyligen skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "En tabell i samlingen har samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt med det angivna namnet och lägger till den samlingen."
  remarks: "Om antingen `null` eller en tom sträng (&quot;&quot;) som skickas i ett standardnamn anges för den nyligen skapade `DataTable`. Det här namnet är baserad på den ordning som tabellen har lagts till (&quot;tabell&1;&quot;, &quot;Tabell2&quot; och så vidare).       Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar om tabellen har lagts till i samlingen.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "Namnet som ska ge den skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    - id: tableNamespace
      type: System.String
      description: "Namnområden som ska ge den skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Den nyligen skapade <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "En tabell i samlingen har samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  id: AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar delarna av den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> matris till slutet av samlingen."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.DataTable[] tables);
    parameters:
    - id: tables
      type: System.Data.DataTable[]
      description: "Matris med <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt som ska läggas till i samlingen."
  overload: System.Data.DataTableCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  id: CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kontrollerar om den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet kan tas bort från samlingen."
  remarks: ''
  example:
  - "The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> i samlingen för att kontrollera mot."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om tabellen kan tas bort; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Clear
  id: Clear
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort samlingen för alla <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt."
  remarks: "Ta bort en viss `DataTable` från samlingen, använder du den <xref:System.Data.DataTableCollection.Remove%2A>metoden.</xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \n  \n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataTableCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inträffar efter den <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> ändras eftersom <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt läggs till eller tas bort."
  remarks: 'Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanging
  id: CollectionChanging
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inträffar när den <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> ändras eftersom <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt läggs till eller tas bort."
  remarks: 'Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanging event.  \n  \n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om en <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet finns i samlingen."
  remarks: "Anger namnet på den <xref:System.Data.DataTable>objektet med hjälp av den <xref:System.Data.DataTable.TableName%2A>egenskapen.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> Om du lägger till en <xref:System.Data.DataTable>i samlingen med den <xref:System.Data.DataTableCollection.Add%2A>metoden och skickar inga argument i tabell ges ett standardnamn utifrån den ordning som tabellen har lagts till (&quot;tabell&1;&quot;, &quot;Tabell2&quot; och så vidare).</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>       Att hämta index för en <xref:System.Data.DataTable>, använder den <xref:System.Data.DataTableCollection.IndexOf%2A>metoden.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>      > [!NOTE] > Returnerar `false` när två eller flera tabeller har samma namn men olika namnområden. Anropet lyckas inte om det inte finns några tvetydighet när matchar ett tabellnamn till exakt en tabell."
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> att hitta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna tabellen finns; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar ett värde som anger om en <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med angivet namn och tabellen namnområde som finns i samlingen."
  remarks: "Anger namnet på den <xref:System.Data.DataTable>objektet med hjälp av den <xref:System.Data.DataTable.TableName%2A>egenskapen.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> Om du lägger till en <xref:System.Data.DataTable>i samlingen med den <xref:System.Data.DataTableCollection.Add%2A>metoden och skickar inga argument i tabell ges ett standardnamn utifrån den ordning som tabellen har lagts till (&quot;tabell&1;&quot;, &quot;Tabell2&quot; och så vidare).</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>      > [!NOTE] > Returnerar `false` när två eller flera tabeller har samma namn men olika namnområden. Anropet lyckas inte om det inte finns några tvetydighet när matchar ett tabellnamn till exakt en tabell.       Att hämta index för en <xref:System.Data.DataTable>, använder den <xref:System.Data.DataTableCollection.IndexOf%2A>metoden.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]"
  syntax:
    content: public bool Contains (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> att hitta."
    - id: tableNamespace
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> namnområde ska sökas i."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna tabellen finns; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  id: CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar alla element i aktuellt <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> till en endimensionell <xref:System.Array>början från destinationen matrisindex.</xref:System.Array>"
  remarks: "Den här metoden kan åsidosättas med en härledd klass."
  syntax:
    content: public void CopyTo (System.Data.DataTable[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataTable[]
      description: "Den endimensionell <xref:System.Array>att kopiera aktuellt <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> objektets element till.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Målet <xref:System.Array>indexet startar kopieras till.</xref:System.Array>"
  overload: System.Data.DataTableCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  id: IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index för den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt."
  remarks: "Använd metoden IndexOf för att fastställa exakt index för en given tabell.       Innan du anropar IndexOf som du kan testa om finns en tabell (anges med namn eller index) med hjälp av den <xref:System.Data.DataTableCollection.Contains%2A>metoden.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]"
  syntax:
    content: public int IndexOf (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> att söka efter."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för tabellen eller -1 om tabellen inte finns i samlingen."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index i samlingen för den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet."
  remarks: "Anger namnet på den `DataTable` objektet med hjälp av den <xref:System.Data.DataTable.TableName%2A>egenskapen.</xref:System.Data.DataTable.TableName%2A>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "Namnet på den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> objekt att söka efter."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> med det angivna namnet eller -1 om tabellen inte finns i samlingen.       <div class=&quot;alert NOTE&quot;>    Returnerar-1 om två eller flera tabeller har samma namn men olika namnområden. Anropet lyckas inte om det inte finns några tvetydighet när matchar ett tabellnamn till exakt en tabell.      </div>"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index i samlingen för den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt."
  remarks: "Anger namnet på den <xref:System.Data.DataTable>objektet med hjälp av den <xref:System.Data.DataTable.TableName%2A>egenskapen.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName, string tableNamespace);
    parameters:
    - id: tableName
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt att söka efter."
    - id: tableNamespace
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> namnområde ska sökas i."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för den <xref href=&quot;System.Data.DataTable&quot;> </xref> med det angivna namnet eller -1 om tabellen inte finns i samlingen."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna indexet."
  remarks: "Använd den <xref:System.Data.DataTableCollection.Contains%2A>metod för att bestämma om det finns en tabell med ett visst index.</xref:System.Data.DataTableCollection.Contains%2A>       Om du har namnet på en tabell, men inte dess index, Använd den <xref:System.Data.DataTableCollection.IndexOf%2A>metod för att returnera indexet.</xref:System.Data.DataTableCollection.IndexOf%2A>"
  example:
  - "The following example retrieves a <xref:System.Data.DataTable> by its index.  \n  \n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för den <xref href=&quot;System.Data.DataTable&quot;> </xref> att hitta."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref>med det angivna indexet; annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den <xref href=&quot;System.Data.DataTable&quot;> </xref> finns inte."
  overload: System.Data.DataTableCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Indexet är större än antalet objekt i samlingen."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet."
  remarks: "Om en <xref:System.Data.DataTable>namnet finns som matchar skiftläget för söksträngen returneras.</xref:System.Data.DataTable> Annars utförs en skiftlägesoberoende sökning, och om en <xref:System.Data.DataTable>namn hittas som matchar sökningen returneras.</xref:System.Data.DataTable>       Använd den <xref:System.Data.DataTableCollection.Contains%2A>metod för att bestämma om det finns en tabell med ett visst namn eller index.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> att hitta."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> med det angivna namnet, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den <xref href=&quot;System.Data.DataTable&quot;> </xref> finns inte."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet i det angivna namnområdet."
  syntax:
    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> att hitta."
    - id: tableNamespace
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> namnområde ska sökas i."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> med det angivna namnet, annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den <xref href=&quot;System.Data.DataTable&quot;> </xref> finns inte."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.List
  id: List
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Som ska läggas till."
  overload: System.Data.DataTableCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  id: Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den angivna <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt från samlingen."
  remarks: "Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har tagits bort.</xref:System.Data.DataTableCollection.CollectionChanged>       Använd för att fastställa om en given tabell finns och kan tas bort innan du anropar ta bort den <xref:System.Data.DataTableCollection.Contains%2A>och <xref:System.Data.DataTableCollection.CanRemove%2A>metoder.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "Den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> att ta bort."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Värdet som angetts för tabellen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tabellen tillhör inte den här samlingen.       - eller - tabellen är en del av en relation."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet från samlingen."
  remarks: "Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har tagits bort.</xref:System.Data.DataTableCollection.CollectionChanged>       Att fastställa om en given tabell finns och kan tas bort innan du anropar <xref:System.Data.DataTableCollection.Remove%2A>, använda på <xref:System.Data.DataTableCollection.Contains%2A>och <xref:System.Data.DataTableCollection.CanRemove%2A>metoder.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt att ta bort."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Samlingen har inte en tabell med det angivna namnet."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna namnet från samlingen."
  remarks: "Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har tagits bort.</xref:System.Data.DataTableCollection.CollectionChanged>       Att fastställa om en given tabell finns och kan tas bort innan du anropar <xref:System.Data.DataTableCollection.Remove%2A>, använda på <xref:System.Data.DataTableCollection.Contains%2A>och <xref:System.Data.DataTableCollection.CanRemove%2A>metoder.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]"
  syntax:
    content: public void Remove (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> objekt att ta bort."
    - id: tableNamespace
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.DataTable&quot;> </xref> namnområde ska sökas i."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Samlingen har inte en tabell med det angivna namnet."
  platform:
  - net462
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den <xref href=&quot;System.Data.DataTable&quot;> </xref> objektet med det angivna indexet från samlingen."
  remarks: "Den <xref:System.Data.DataTableCollection.CollectionChanged>händelsen inträffar när en tabell har tagits bort.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Index för den <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> att ta bort."
  overload: System.Data.DataTableCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Samlingen har inte en tabell med det angivna indexet."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableCollection.Add
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
- uid: System.Data.DataTableCollection.Add(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableCollection.Clear
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
- uid: System.Data.DataTableCollection.CollectionChanged
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataTableCollection.CollectionChanging
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
- uid: System.Data.DataTableCollection.Contains(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
- uid: System.Data.DataTableCollection.Item(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
- uid: System.Data.DataTableCollection.Item(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
- uid: System.Data.DataTableCollection.List
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
- uid: System.Data.DataTableCollection.Remove(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
- uid: System.Data.DataTableCollection.Add*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add
  nameWithType: DataTableCollection.Add
- uid: System.Data.DataTableCollection.AddRange*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableCollection.AddRange
- uid: System.Data.DataTableCollection.CanRemove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataTableCollection.CanRemove
- uid: System.Data.DataTableCollection.Clear*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableCollection.Clear
- uid: System.Data.DataTableCollection.Contains*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableCollection.Contains
- uid: System.Data.DataTableCollection.CopyTo*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableCollection.CopyTo
- uid: System.Data.DataTableCollection.IndexOf*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableCollection.IndexOf
- uid: System.Data.DataTableCollection.Item*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item
  nameWithType: DataTableCollection.Item
- uid: System.Data.DataTableCollection.List*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
- uid: System.Data.DataTableCollection.Remove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableCollection.Remove
- uid: System.Data.DataTableCollection.RemoveAt*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableCollection.RemoveAt
