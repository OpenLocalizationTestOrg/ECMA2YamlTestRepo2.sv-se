### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.Format
  id: Format
  children:
  - Microsoft.SqlServer.Server.Format.Native
  - Microsoft.SqlServer.Server.Format.Unknown
  - Microsoft.SqlServer.Server.Format.UserDefined
  langs:
  - csharp
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
  type: Enum
  summary: "Används av <xref href=&quot;Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&quot;> </xref> och <xref href=&quot;Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute&quot;> </xref> att ange serialiseringsformatet av en användardefinierad typ (UDT) eller aggregering."
  remarks: "Används av <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>och <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute>att ange serialiseringsformatet av en användardefinierad typ (UDT) eller aggregering.</xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> </xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>"
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_6_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_6_1.vb)]"
  syntax:
    content: public enum Format
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.Native
  id: Native
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: Native
  nameWithType: Format.Native
  fullName: Microsoft.SqlServer.Server.Format.Native
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Den <xref uid=&quot;langword_csharp_Native&quot; name=&quot;Native&quot; href=&quot;&quot;> </xref> serialiseringsformatet används en väldigt enkel algoritm som gör det möjligt för SQL Server för att lagra en effektiv representation av UDT på disk. Typer som har markerats för <xref uid=&quot;langword_csharp_Native&quot; name=&quot;Native&quot; href=&quot;&quot;> </xref> serialisering kan bara ha värdetyper (strukturer i Microsoft Visual C#) och strukturer i Microsoft Visual Basic .NET som medlemmar. Medlemmar i referens typer (till exempel klasser i Visual C# och Visual Basic), antingen användardefinierade eller de befintliga i framework (exempelvis <xref:System.String>), stöds inte.</xref:System.String>"
  remarks: "Kraven för det här formatet är: – `StructLayout.LayoutKindSequential` attributet måste tillämpas på mängdfunktionen eller UDT om den är definierad i en klass och inte en struktur. Detta styr datacentrets fysiska struktur datafält och används för att tvinga medlemmar som ska anges i tur och ordning i den ordning de visas. Det här attributet används av SQL Server för att fastställa fältordning för UDT-typer med flera fält.      -Typen måste innehålla minst en medlem (serialiserade värden kan inte vara noll byte i storlek).      -Alla fält i mängden måste vara *hanteras som sammanhängande block*, det vill säga de måste ha en gemensam representation i både hanterade och ohanterade minnet och inte kräver särskild hantering av interop-konverteraren.      -Alla fält i UDT ska vara någon av följande typer som kan serialiseras: `bool`, `byte`,`sbyte`,`short`,`ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, eller andra värdetyper som definierats av användaren som innehåller fält i någon av följande typer.</xref:System.Data.SqlTypes.SqlMoney> </xref:System.Data.SqlTypes.SqlDouble> </xref:System.Data.SqlTypes.SqlSingle> </xref:System.Data.SqlTypes.SqlDateTime> </xref:System.Data.SqlTypes.SqlInt64> </xref:System.Data.SqlTypes.SqlInt32> </xref:System.Data.SqlTypes.SqlInt16> </xref:System.Data.SqlTypes.SqlByte>      -Samlingen får inte ange ett värde för `MaxByteSize`.      -Samlingen får inte ha några [NonSerialized] fält.      -Fält får inte markeras som en explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</xref:System.Runtime.InteropServices.StructLayoutAttribute>"
  syntax:
    content: Native
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.Unknown
  id: Unknown
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: Unknown
  nameWithType: Format.Unknown
  fullName: Microsoft.SqlServer.Server.Format.Unknown
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Av att serialiseringsformatet är okänt."
  syntax:
    content: Unknown
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.UserDefined
  id: UserDefined
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: UserDefined
  nameWithType: Format.UserDefined
  fullName: Microsoft.SqlServer.Server.Format.UserDefined
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Den <xref uid=&quot;langword_csharp_UserDefined&quot; name=&quot;UserDefined&quot; href=&quot;&quot;> </xref> serialisering format ger utvecklare fullständig kontroll över binärformat via den <xref href=&quot;Microsoft.SqlServer.Server.IBinarySerialize&quot;> </xref> <xref uid=&quot;langword_csharp_.Write&quot; name=&quot;.Write&quot; href=&quot;&quot;> </xref> och <xref href=&quot;Microsoft.SqlServer.Server.IBinarySerialize&quot;> </xref> <xref uid=&quot;langword_csharp_.Read&quot; name=&quot;.Read&quot; href=&quot;&quot;> </xref> metoder."
  remarks: "Mängden måste ange ett värde för `MaxByteSize`.       Ange den <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>attributegenskapen.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> Standardvärdet är false.       Om du utelämnar alla fält i den <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>eller <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>metoder, tillståndet för det fältet inte serialiseras.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> </xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>"
  syntax:
    content: UserDefined
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: Microsoft.SqlServer.Server.Format.Native
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: Native
  nameWithType: Format.Native
  fullName: Microsoft.SqlServer.Server.Format.Native
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.Format.Unknown
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: Unknown
  nameWithType: Format.Unknown
  fullName: Microsoft.SqlServer.Server.Format.Unknown
- uid: Microsoft.SqlServer.Server.Format.UserDefined
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: UserDefined
  nameWithType: Format.UserDefined
  fullName: Microsoft.SqlServer.Server.Format.UserDefined
