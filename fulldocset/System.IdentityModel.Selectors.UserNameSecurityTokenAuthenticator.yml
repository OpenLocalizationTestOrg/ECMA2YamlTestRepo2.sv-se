### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  id: UserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  type: Class
  summary: "Autentiserar en <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> säkerhetstoken."
  remarks: "Åsidosätt UserNameSecurityTokenAuthenticator klassen för att autentisera säkerhetstoken baserat på ett användarnamn och lösenord.       Den [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] levereras med följande klasser som ger stöd för att autentisera <xref:System.IdentityModel.Tokens.UserNameSecurityToken>säkerhetstoken.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>      | Typen | Beskrivning |   |----------|-----------------|   | <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>| Gör att ett program för att ange en anpassad autentiseringsschema för användarnamn och lösenord.</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> Autentiseringsschema som tillhandahålls med hjälp av en klass som härleds från klassen <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>. |   | <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>| Autentiserar användarnamn och lösenord som en Windows-konto. |       De flesta anpassade autentiseringsscheman kan använda använda <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>klassen och implementera en klass som härleds från <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>klassen</xref:System.IdentityModel.Selectors.UserNamePasswordValidator> </xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.UserNamePasswordValidator>  Om ytterligare flexibilitet du en klass härledd från klassen UserNameSecurityTokenAuthenticator och åsidosätta den <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>metoden.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/csharp/t-system.identitymodel.s_6_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_6_1.vb)]
  syntax:
    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initierar en ny instans av den <xref href=&quot;System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&quot;> </xref> klass."
  syntax:
    content: protected UserNameSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Hämtar ett värde som anger om den angivna säkerhetstoken kan valideras av den här Säkerhetstokenautentiseraren."
  remarks: "Metoden CanValidateTokenCore autentiserar inte säkerhetstoken; som utförs av den <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>metoden.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Autentiserar angivna säkerhetstoken och returnerar en mängd med auktoriseringsprinciper för säkerhetstoken."
  remarks: "Metodanrop ValidateTokenCore den <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>metod för att verifiera den `token` parametern med sitt användarnamn och lösenord.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Den <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> som ska verifieras."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> som innehåller en uppsättning auktoriseringsprinciper gäller för det här programmet."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "När åsidosätts i en härledd klass autentiserar det angivna användarnamnet och lösenordet och returnerar en mängd med auktoriseringsprinciper för <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> säkerhetstoken."
  remarks: "Åsidosätt ValidateUserNamePasswordCore-metoden för att autentisera <xref:System.IdentityModel.Tokens.UserNameSecurityToken>säkerhetstoken.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>       Följ dessa riktlinjer när metoden ValidateUserNamePasswordCore åsidosätts: – när säkerhetstoken som skickades till den `token` parametern får inte vara verifieringen utlösa den <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>undantag.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -När det finns inga auktoriseringsprinciper gäller för det här programmet, returneras en tom <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>av typen <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       När `null` returneras av den här metoden [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] utlöser den <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>undantag.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/csharp/2e0e79be-aa35-46e5-a7cb-_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/visualbasic/2e0e79be-aa35-46e5-a7cb-_1.vb)]
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "Användarnamn som är kopplade till säkerhets-token."
    - id: password
      type: System.String
      description: "Lösenordet som är kopplade till säkerhets-token."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "En &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; av typen <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> som innehåller en uppsättning auktoriseringsprinciper gäller för det här programmet."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
