### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowRuntime
  id: WorkflowRuntime
  children:
  - System.Workflow.Runtime.WorkflowRuntime.#ctor
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  - System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.Dispose
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  - System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  - System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetService``1
  - System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.IsStarted
  - System.Workflow.Runtime.WorkflowRuntime.Name
  - System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  - System.Workflow.Runtime.WorkflowRuntime.Started
  - System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  - System.Workflow.Runtime.WorkflowRuntime.Stopped
  - System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
  type: Class
  summary: "Representerar den konfigurerbara körningsmiljön som tillhandahålls av arbetsflödesmotorn för körning för arbetsflöden."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntime innehåller funktioner som krävs av ett program och tjänster för att konfigurera och styra körning arbetsflödesmotorn och ska meddelas om ändringar i både körning arbetsflödesmotorn och någon av dess arbetsflödesinstanser."
  example:
  - "The following code example demonstrates how to use WorkflowRuntime functionality from a workflow host. It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods. The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method. It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowRuntime : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klass."
  remarks: "Den <xref:System.Workflow.Runtime.WorkflowRuntime>har initierats med egenskapen standardvärdena och innehåller standard kärntjänsterna.</xref:System.Workflow.Runtime.WorkflowRuntime> Dessutom konfigurera körning arbetsflödesmotorn, du kan lägga till och ta bort tjänster med hjälp av <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>och <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, och du kan ange <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Efter den <xref:System.Workflow.Runtime.WorkflowRuntime>är konfigurerat kan anropa <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>Starta körning arbetsflödesmotorn och dess tjänster.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       I följande tabell visas första egenskapsvärden för en instans av <xref:System.Workflow.Runtime.WorkflowRuntime>klassen.</xref:System.Workflow.Runtime.WorkflowRuntime>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|&quot; WorkflowRuntime &quot;|   | <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>| `false`|       Standard-kärntjänster är <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>och <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>"
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides an example of how to use the WorkflowRuntime constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public WorkflowRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klass med det angivna avsnittet för programmets konfigurationsfil."
  remarks: "Den <xref:System.Workflow.Runtime.WorkflowRuntime>har initierats enligt inställningarna i avsnittet som anges av `configSectionName` i programmets konfigurationsfil.</xref:System.Workflow.Runtime.WorkflowRuntime> `configSectionName`måste motsvara en giltig `workflowSettings` i en konfigurationsfil.       När körning arbetsflödesmotorn konfigureras med hjälp av en programkonfigurationsfil, den läser in och instansierar klasser av de typ som anges i den `Services` avsnittet i konfigurationsfilen. När körning arbetsflödesmotorn konstruktioner dessa klasser den ser ut för klasskonstruktorer med följande signaturer i följande ordning: 1.  Service(WorkflowRuntime Runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Service() alla service klasser som läses in från en konfigurationsfil måste implementera minst en av dessa signaturer konstruktor.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>"
  syntax:
    content: public WorkflowRuntime (string configSectionName);
    parameters:
    - id: configSectionName
      type: System.String
      description: "Namnet på en giltig <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> avsnitt i programmets konfigurationsfil."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>configSectionName</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En giltig <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> avsnittet kunde inte hittas i programmets konfigurationsfil."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> finns redan för den här domänen."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  id: '#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Initierar en ny instans av den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> klassen med hjälp av inställningarna i den angivna <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;> </xref>."
  remarks: "Den här konstruktorn tillhandahåller en mekanism för att konfigurera arbetsflödesmotorn för körning med ett enda metodanrop för värdar som inte använder en programkonfigurationsfil. Det finns många anledningar för att inte använda programmets konfigurationsfil. En värd kan köras i en miljö som inte tillåter använder konfigurationsfiler; till exempel i betrodda miljöer som tillåter inte att läsa från programkonfigurationsfilen av säkerhetsskäl. En värd kan också använda en mekanism för egna configuration; värden kan till exempel lagra konfigurationsinställningarna för arbetsflödet motorn för körning i en SQL-databas.       Körning arbetsflödesmotorn läses in och instansierar klasser av typer som finns i <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName> När körning arbetsflödesmotorn konstruktioner dessa klasser den ser ut för klasskonstruktorer med följande signaturer i följande ordning: 1.  Service(WorkflowRuntime Runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Alla service klasser som anges i Service() `settings` måste implementera minst en av dessa signaturer konstruktor."
  syntax:
    content: public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);
    parameters:
    - id: settings
      type: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
      description: "A <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;></xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>settings</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> finns redan för den här domänen."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  id: AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Lägger till den angivna tjänsten körning arbetsflödesmotorn."
  remarks: "Du kan konfigurera körning arbetsflödesmotorn genom att lägga till kärntjänsterna. Kärntjänster är de som är härledda från någon av följande grundläggande tjänstklasser: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klass, en <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klass, den <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klass, och <xref:System.Workflow.Runtime.Tracking.TrackingService>klass.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Kärntjänster kan bara läggas när körning arbetsflödesmotorn inte körs. det vill säga när <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>är `false`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Den <xref:System.Workflow.Runtime.WorkflowRuntime>kan också användas som en lagringsbehållare för andra tjänster som kan användas av andra arbetsflöden eller program som körs på en värd.</xref:System.Workflow.Runtime.WorkflowRuntime> Om du lägger till en icke-core-tjänst som härleds från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen efter körning arbetsflödesmotorn har startats, AddService anropar den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metoden har implementerats av tjänsten.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>      > [!NOTE] > AddService tillämpar begränsningen som inga två tjänster för den samma som <xref:System.Type>kan läggas till i <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Type> Du kan dock lägga till flera tjänster som är härledda från samma basklass.  Det kan finnas endast en tjänst som härletts från var och en av följande grundläggande tjänstklasser i den <xref:System.Workflow.Runtime.WorkflowRuntime>: en <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klass, den <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klass, och <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klass</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.WorkflowRuntime>  Om du lägger till flera tjänster som härletts från någon av dessa klasser för exempel två beständiga tjänster <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>utlöser <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides example of how to use the AddService method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.  \n  \n This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void AddService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Ett objekt som representerar tjänsten som du lägger till."
  overload: System.Workflow.Runtime.WorkflowRuntime.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>service</code>har redan registrerats med körning arbetsflödesmotorn.       - eller - <code>service</code> är en core-tjänst och körning arbetsflödesmotorn körs redan (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  id: CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en ny arbetsflödesinstans med hjälp av angivet arbetsflöde <xref:System.Type>.</xref:System.Type>"
  remarks: "Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the CreateWorkflow method.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Den <xref:System.Type>av arbetsflöde du vill skapa.</xref:System.Type>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  id: CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en arbetsflödesinstans med hjälp av angivna <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Arbetsflödesinstansen har skapats från en XAML arbetsflödet definition-fil som refereras av <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>       Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following example demonstrates how to create a workflow given a XAML-based workflow definition.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  \n    {  \n        AutoResetEvent waitHandle = new AutoResetEvent(false);  \n        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  \n        {  \n            waitHandle.Set();  \n        };  \n        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  \n        {  \n            Console.WriteLine(e.Exception.Message);  \n            waitHandle.Set();  \n        };  \n  \n        TypeProvider typeProvider = new TypeProvider(null);  \n        // Add referenced assemblies, if needed  \n        // typeProvider.AddAssembly(...);  \n        workflowRuntime.AddService(typeProvider);  \n  \n        using (XmlReader reader = XmlReader.Create(\"Workflow1.xoml\"))  \n        {  \n            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  \n            instance.Start();  \n        }  \n  \n        waitHandle.WaitOne();  \n    }  \n}  \n```"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller arbetsflödesdefinitionen.</xref:System.Xml.XmlReader>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en arbetsflödesinstans med hjälp av angivet arbetsflöde <xref:System.Type>och argumenten till arbetsflödet som ingår i den angivna &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Type>"
  remarks: "Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Ett exempel på Skicka in-parametrar till `CreateWorkflow`, se [arbetsflöde med parametrar som exempel](http://go.microsoft.com/fwlink/?LinkId=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Den <xref:System.Type>av arbetsflöde du vill skapa.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "En &lt;xref:System.Collections.Generic.Dictionary%602&gt; objekt Nyckelbaserade av sträng som representerar argumenten till arbetsflödet."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en arbetsflödesinstans med hjälp av de angivna parametrarna."
  remarks: "Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Arbetsflödet `instanceId` för alla kör arbetsflöden som lästs in av den <xref:System.Workflow.Runtime.WorkflowRuntime>måste vara unika.</xref:System.Workflow.Runtime.WorkflowRuntime> Om du skickar en `instanceId` att skapa ett arbetsflöde och ett arbetsflöde som körs redan används som `instanceId`, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException>       Ett exempel på Skicka in-parametrar till `CreateWorkflow`, se [arbetsflöde med parametrar som exempel](http://go.microsoft.com/fwlink/?LinkID=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Den <xref:System.Type>av arbetsflöde du vill skapa.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "En &lt;xref:System.Collections.Generic.Dictionary%602&gt; objekt Nyckelbaserade av en sträng som representerar argumenten till arbetsflödet."
    - id: instanceId
      type: System.Guid
      description: "Den <xref:System.Guid>särskilda <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> att skapa.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en arbetsflödesinstans med hjälp av den angivna <xref:System.Xml.XmlReader>objekt och argumenten i den angivna &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Xml.XmlReader>"
  remarks: "Arbetsflödesinstansen har skapats från den arbetsflödesdefinition som refererar till den <xref:System.Xml.XmlReader>och argumenten som anges av `namedArgumentValues`.</xref:System.Xml.XmlReader>       Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Ett exempel på Skicka in-parametrar till `CreateWorkflow`, se [arbetsflöde med parametrar som exempel](http://go.microsoft.com/fwlink/?LinkID=157403).       Ett exempel på hur regler som definierats i XML finns [IfElse med regler exempel](http://go.microsoft.com/fwlink/?LinkId=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller arbetsflödesdefinitionen.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "En &lt;xref:System.Collections.Generic.Dictionary%602&gt; objekt Nyckelbaserade av en sträng som representerar argumenten till arbetsflödet."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Skapar en arbetsflödesinstans med hjälp av de angivna parametrarna."
  remarks: "Innan den <xref:System.Workflow.Runtime.WorkflowInstance>har skapats, verifiering utförs på den.</xref:System.Workflow.Runtime.WorkflowInstance> Om några valideringsfel inträffar den <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>genereras.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Det här fungerar bra för enkla scenarier, men i en servermiljö verifierades ett arbetsflöde för varje aktivering kanske onödig.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]inaktivera verifiering, se <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Arbetsflödet `instanceId` för alla kör arbetsflöden som lästs in av den <xref:System.Workflow.Runtime.WorkflowRuntime>måste vara unika.</xref:System.Workflow.Runtime.WorkflowRuntime> Om du skickar en `instanceId` att skapa ett arbetsflöde och ett arbetsflöde som körs redan används som `instanceId`, en <xref:System.InvalidOperationException>genereras.</xref:System.InvalidOperationException>       Ett exempel på Skicka in-parametrar till `CreateWorkflow`, se [arbetsflöde med parametrar som exempel](http://go.microsoft.com/fwlink/?LinkID=157403).       Ett exempel på hur regler som definierats i XML finns [IfElse med regler exempel](http://go.microsoft.com/fwlink/?LinkID=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller arbetsflödesdefinitionen.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "En &lt;xref:System.Collections.Generic.Dictionary%602&gt; objekt Nyckelbaserade av en sträng som representerar argumenten till arbetsflödet."
    - id: instanceId
      type: System.Guid
      description: "Den <xref:System.Guid>särskilda <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> att skapa.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Skapade arbetsflödesinstansen."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  id: Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Släpper de resurser som används av den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Att stänga av <xref:System.Workflow.Runtime.WorkflowRuntime>korrekt, bör du bara anropa Dispose när du har anropat <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime> Detta beror på att anropa metoden Dispose enbart lämnar kvar det <xref:System.Workflow.Runtime.WorkflowRuntime>oanvändbar.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose frigör resurser som används av körningen genom att stänga öppna filreferenser, databasanslutningarna och så vidare, men inte ta bort arbetsflödesinstanser, stoppa tjänsterna, eller göra någon av de andra åtgärderna som <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>har.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>       Dispose ska bara anropas om värdprogrammet måste frigöra de resurser som används av den <xref:System.Workflow.Runtime.WorkflowRuntime>innan de frigörs automatiskt av skräpinsamlingen.</xref:System.Workflow.Runtime.WorkflowRuntime> Allmän information om Dispose finns [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to call Dispose on a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this sample, the Dispose method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down. This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).  \n  \n [!code-cs[WF_Samples#108](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#108)]\n [!code-vb[WF_Samples#108](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#108)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  id: GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar alla tjänster som läggs till körning arbetsflödesmotorn som implementerar eller härledd från den angivna <xref:System.Type>.</xref:System.Type>"
  remarks: "En tom <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>innebär att inga tjänster som implementerar eller härledd från den angivna <xref:System.Type>har lagts till körning arbetsflödesmotorn.</xref:System.Type> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  example:
  - "The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#19](~/add/codesnippet/csharp/wf_snippets/snippets.cs#19)]\n [!code-vb[WF_Samples#19](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#19)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<object> GetAllServices (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Den <xref:System.Type>att tjänster måste implementera som ska returneras.</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "Tjänster som implementerar eller härledd från den angivna <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  id: GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> GetAllServices<T> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "Som ska läggas till."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  id: GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar en samling som innehåller alla arbetsflödesinstanser som för närvarande är inlästa i minnet."
  remarks: "Observera att, till skillnad från <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, den här metoden inte utlösa en <xref:System.InvalidOperationException>Om körningen inte har startats.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>"
  example:
  - "The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#18](~/add/codesnippet/csharp/wf_snippets/snippets.cs#18)]\n [!code-vb[WF_Samples#18](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#18)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance> GetLoadedWorkflows ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
      description: "En <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> objekt för varje arbetsflödesinstans inlästa i minnet."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar en tjänst av den angivna <xref:System.Type>av motorn för körning av arbetsflödet.</xref:System.Type>"
  remarks: "GetService genererar en <xref:System.InvalidOperationException>om det finns mer än en tjänst för den angivna <xref:System.Type>.</xref:System.Type> </xref:System.InvalidOperationException> Du bör därför använda en av de överlagrade metoderna av <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>om det är möjligt att flera tjänster för den angivna typen finns i <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> Till exempel kan arbetsflödesmotorn för körning ha flera spårning tjänster. Om du begär en spårningstjänst genom att ange den <xref:System.Workflow.Runtime.Tracking.TrackingService>basklass, är det möjligt att genereras ett undantagsfel.</xref:System.Workflow.Runtime.Tracking.TrackingService>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Den <xref:System.Type>av tjänsten för att hämta.</xref:System.Type>"
    return:
      type: System.Object
      description: "Tjänsten för angivna <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har redan tagits bort av."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Mer än en tjänst av typen <code> serviceType </code> hittades."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  id: GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public T GetService<T> ();
    parameters: []
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  id: GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar arbetsflödesinstansen som har den angivna <xref:System.Guid>.</xref:System.Guid>"
  remarks: "Om `instanceId` anger en arbetsflödesinstans som inte är för närvarande i minnet, arbetsflödesinstansen är inlästa i minnet och schemaläggas. När en arbetsflödesinstans avbröts, kan du anropa GetWorkflow för att läsa in arbetsflödesinstansen tillbaka i minnet. I det här fallet läses senast bevarade tillståndet för arbetsflödesinstansen in i minnet av beständiga tjänsten."
  example:
  - "The following code example demonstrates a `ReloadWorkflow` method that calls the GetWorkflow method. The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.  \n  \n> [!NOTE]\n>  In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the GetWorkflow and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.  \n  \n [!code-cs[WF_Samples#265](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#265)]\n [!code-vb[WF_Samples#265](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#265)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Den <xref:System.Guid>av en arbetsflödesinstans.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> som har den angivna <xref:System.Guid>.</xref:System.Guid>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Arbetsflödets körtid har inte startats."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  id: IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar ett värde som anger om arbetsflödesmotorn för körning har startats."
  remarks: "IsStarted anger att arbetsflödet motorn för körning tjänsterna är igång. IsStarted är `false` tills värden anrop <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Den förblir `true` tills värden anrop <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>      > [!NOTE] > Du inte lägga till kärntjänsterna körning arbetsflödesmotorn medan den körs. Kärntjänster är tjänster som härleds från <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klassen, de <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>klassen, de <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klass, och <xref:System.Workflow.Runtime.Tracking.TrackingService>klass.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  example:
  - "The following example demonstrates how to access the IsStarted property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, if the runtime is started, a message is printed to the console.  \n  \n [!code-cs[WF_Samples#21](~/add/codesnippet/csharp/wf_snippets/snippets.cs#21)]\n [!code-vb[WF_Samples#21](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#21)]"
  syntax:
    content: public bool IsStarted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om arbetsflödesmotorn för körning har startats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  id: Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Hämtar eller anger namnet som associeras med den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Du kan inte ange Name medan körning arbetsflödesmotorn körs (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> är `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>"
  example:
  - "The following example demonstrates how to access the Name property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, the name of the runtime is set to \"Main Runtime\".  \n  \n [!code-cs[WF_Samples#20](~/add/codesnippet/csharp/wf_snippets/snippets.cs#20)]\n [!code-vb[WF_Samples#20](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#20)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Namnet som associeras med den här <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ett försök att ange namnet på en <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> som har tagits bort inträffar."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett försök att ange namnet medan körning arbetsflödesmotorn körs inträffar."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  id: RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Tar bort den angivna tjänsten av motorn för körning av arbetsflödet."
  remarks: "Du kan inte ta bort en kärntjänsten medan körning arbetsflödesmotorn körs (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> är `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Kärntjänster är tjänster som härleds från <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klassen, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klass, på <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klassen eller <xref:System.Workflow.Runtime.Tracking.TrackingService>klassen.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Om `service` härleds från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>class, RemoveService anrop av <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metoden `service`.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  example:
  - "In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.  \n  \n [!code-cs[WF_Samples#16](~/add/codesnippet/csharp/wf_snippets/snippets.cs#16)]\n [!code-vb[WF_Samples#16](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#16)]"
  syntax:
    content: public void RemoveService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Ett objekt som representerar tjänsten som ska tas bort."
  overload: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>är en null-referens (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> i Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har redan tagits bort av."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The workflow run-time engine has started (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>) and <code>service</code> is a core service.  \n  \n \\- or -  \n  \n <code>service</code> is not registered with the workflow run-time engine."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  id: ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en tjänst som har härletts från den <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> klassen anropar <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>"
  remarks: "En tjänst som har härletts från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen kan anropa den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>metod för att informera prenumeranter ServicesExceptionNotHandled händelsen som ett undantag som det inte gick att hantera uppstod under körningen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Du kan prenumerera på den här händelsen för att implementera en återställningsmekanism för.       Den här händelsen utlöses när en arbetsflödesinstans inte har ännu har skapats av arbetsflödesmotorn för körning och ett undantag inträffar. I det här fallet är det enda sättet att informera värdprogrammet som ett undantag inträffade att öka den här händelsen. Dock anropar körning arbetsflödesmotorn inte detta direkt. I stället körning arbetsflödesmotorn ger ett undantag till arbetsflödesinstansen eller, om det finns ingen instans utlöser tillbaka till anroparen, som i det här fallet är faktiskt den tjänst som utlöses den här händelsen. Om du skapar egna beständiga eller Schemaläggaren, måste du implementera den här händelsen dig igenom grundläggande <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>metod.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>       För händelsen ServicesExceptionNotHandled avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Guid>av arbetsflödesinstansen som använder tjänsten och <xref:System.Exception>som inte kunde hanteras.</xref:System.Exception> </xref:System.Guid> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates ServicesExceptionNotHandled with an event handler, a method named `OnExceptionNotHandled`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs> ServicesExceptionNotHandled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  id: Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när arbetsflödesmotorn körning har startats."
  remarks: "Den <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>metoden genererar händelsen startat när det har verifierats core tjänstkonfigurationen för körning arbetsflödesmotorn har anropats på <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metod som implementeras av var och en av dess tjänster som är härledda från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen och har angetts <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>till `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Det finns inga garantier om i vilken ordning de tjänster som är härledda från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen startas av arbetsflödesmotorn för körning och vissa av dessa tjänster för motorn för körning av arbetsflödet kan vara beroende funktioner som tillhandahålls av andra tjänster att slutföra sina uppgifter startades.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Tjänster för motorn för körning av arbetsflödet kan åsidosätta den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>metod för att utföra slutliga Start aktiviteter som kräver stöd för andra tjänster för motorn för körning av arbetsflödet när händelsen startat utlöses.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Started event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#15](~/add/codesnippet/csharp/wf_snippets/snippets.cs#15)]\n [!code-vb[WF_Samples#15](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#15)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Started;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  id: StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Startar körning arbetsflödesmotorn och arbetsflödestjänster för motorn för körning."
  remarks: "Den här metoden verifierar att en giltig uppsättning kärntjänsterna finns och att den startar alla tjänster som är härledd från <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klass.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Det måste finnas ett och endast ett av var och en av följande grundläggande tjänster: ett arbetsflöde `CommitWorkBatch` service härrör från <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>basklassen och en Schemaläggaren som härletts från <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>grundläggande klass.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>  Om ett eller båda av dessa kärntjänsterna saknas körning arbetsflödesmotorn tillhandahåller lämpliga standardtjänsten: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>för arbetsflödet `CommitWorkBatch` service och <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>för tjänsten Schemaläggaren.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> Beständig tjänst är valfritt, men det får finnas högst endast en beständig tjänst finns. När det har verifierats tjänstkonfigurationen anropar StartRuntime <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>på alla tjänster som härleds från <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>  Slutligen körning arbetsflödesmotorn anger <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>och aktiverar den <xref:System.Workflow.Runtime.WorkflowRuntime.Started>händelse.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Du kan inte lägga till eller ta bort kärntjänsterna när arbetsflödesmotorn körning har startats. Kärntjänster är tjänster som härleds från <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>klassen, de <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>klass, på <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>klassen eller <xref:System.Workflow.Runtime.Tracking.TrackingService>klassen.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Om du anropar StartRuntime medan körning arbetsflödesmotorn körs, utförs ingen åtgärd."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code calls the StartRuntime after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime. It also calls StartRuntime before any other processing occurs.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void StartRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har tagits bort."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finns mer än ett arbetsflöde i tjänsten <xref uid=&quot;langword_csharp_CommitWorkBatch&quot; name=&quot;CommitWorkBatch&quot; href=&quot;&quot;> </xref> tjänst har registrerats med den här <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - eller - det finns fler än en Schemaläggaren som registrerats med den här <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       - eller - det finns fler än en beständig tjänst som registrerats med den här <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  id: Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när körning arbetsflödesmotorn har stoppats."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>Metoden genererar stoppad händelsen när den har anropats <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metoden implementeras av var och en av dess tjänster som härledd från <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klass.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  Det finns inga garantier om i vilken ordning som dessa tjänster för motorn för körning av arbetsflödet stoppas och vissa av dessa tjänster kan du behöva behålla vissa funktioner som är förlita sig på av andra tjänster tills de för stoppas. Dessa tjänster kan åsidosätta den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>metod för att utföra eventuella återstående avstängning logik när stoppad händelsen utlöses.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Stopped event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#14](~/add/codesnippet/csharp/wf_snippets/snippets.cs#14)]\n [!code-vb[WF_Samples#14](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#14)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Stopped;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  id: StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Stoppar körning arbetsflödesmotorn och tjänsterna som körs."
  remarks: "Den här metoden gör körning arbetsflödesmotorn om du vill ta bort var och en av dess arbetsflödesinstanser stoppar alla tjänster som är härledda från den <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>klassen kan du ange <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>till `false`, och höja den <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>händelse.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Att stänga av <xref:System.Workflow.Runtime.WorkflowRuntime>korrekt och anropa StopRuntime innan du anropar <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]den <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>metoden.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. StopRuntime is called after the host has completed all other processing associated with the runtime.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#259](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#259)]\n [!code-vb[WF_Samples#259](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#259)]"
  syntax:
    content: public void StopRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> har redan tagits bort av."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  id: WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans har avbrutits."
  remarks: "WorkflowAborted inträffar när alla väntande för arbetsflödet instans är avmarkerad, men innan arbetsflödet instansen är ogiltig i minnet. Du kan avbryta en arbetsflödesinstans genom att anropa <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>       För den här händelsen avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowAborted with an event handler, a method named `OnWorkflowAborted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#141](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#141)]\n [!code-vb[WF_Samples#141](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#141)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowAborted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  id: WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans har slutförts."
  remarks: "WorkflowCompleted utlöses när arbetsflödesinstansen har slutförts men innan instansen är ogiltig i minnet.       För den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>händelse avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>och dess utdataparametrar.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCompleted with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs> WorkflowCompleted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  id: WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans som har skapats."
  remarks: "Körning arbetsflödesmotorn genererar händelsen WorkflowCreated när arbetsflödesinstansen helt konstrueras men innan aktiviteter bearbetas. För den här händelsen avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCreated with an event handler, a method named `OnWorkflowCreated`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowCreated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  id: WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans lämnar inaktivt läge."
  remarks: "Körning arbetsflödesmotorn aktiverar händelsen WorkflowIdled när arbetsflödesinstansen blir inaktiv; till exempel när arbetsflödet väntar på en <xref:System.Workflow.Activities.DelayActivity>aktivitet har slutförts.</xref:System.Workflow.Activities.DelayActivity>       För den här händelsen avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowIdled with an event handler, a method named `OnWorkflowIdled`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowIdled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  id: WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när arbetsflödesinstansen läses in i minnet."
  remarks: "WorkflowLoaded inträffar efter att beständig tjänst har återställt arbetsflödesinstansen, men innan arbetsflödet motorn för körning börjar köra några aktiviteter.       För händelsen WorkflowLoaded avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowLoaded with an event handler, a method named `OnWorkflowLoad`.  \n  \n This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowLoaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  id: WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när tillståndet för en arbetsflödesinstans beständig."
  remarks: "Arbetsflödesinstansen kan sparas av flera orsaker. Till exempel värden kan anropa <xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName>på en arbetsflödesinstans eller arbetsflödet motorn för körning kan göra en arbetsflödesinstans beständig eftersom instansen är inaktiv eller eftersom en atomisk omfattning har slutförts.</xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName> Om ingen beständig tjänst finns i den <xref:System.Workflow.Runtime.WorkflowRuntime>, WorkflowPersisted utlöses av körningen efter tillståndet för arbetsflödesinstansen sparas i minnet.</xref:System.Workflow.Runtime.WorkflowRuntime> Om ingen beständig tjänst inte är tillgänglig händelsen visas men instanstillståndet sparas inte. Om en WorkflowPersisted-händelse inträffar eftersom arbetsflödesinstansen minnet den följs av en <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>händelse.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       För händelsen WorkflowPersisted avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowPersisted with an event handler, a method named `OnWorkflowPersisted`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#279](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#279)]\n [!code-vb[WF_Samples#279](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#279)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowPersisted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  id: WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när körningen av en arbetsflödesinstans återupptas efter ett tillfälligt."
  remarks: "Körning arbetsflödesmotorn genererar händelsen WorkflowResumed precis innan arbetsflödesinstansen schemaläggs. Händelsen WorkflowResumed visas vanligtvis på grund av ett explicit anrop till <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName> Arbetsflödesmotorn för körning kan tillfälligt uppehåll en instans för att utföra en åtgärd, till exempel, för att tillämpa en arbetsflödesändring. I det här fallet inträffar WorkflowResumed-händelsen när körningen fortsätter körningen av arbetsflödesinstansen efter åtgärden.       För händelsen WorkflowResumed avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowResumed with an event handler, a method named `OnWorkflowResume`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).  \n  \n [!code-cs[WF_Samples#171](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#171)]\n [!code-vb[WF_Samples#171](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#171)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowResumed;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  id: WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans har startats."
  remarks: "Körning arbetsflödesmotorn genererar händelsen WorkflowStarted när arbetsflödesinstansen har startats genom att schemalägga rotaktiviteten för körning. För den här händelsen avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowStarted with an event handler, a method named `OnWorkflowStarted`.  \n  \n This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).  \n  \n [!code-cs[WF_Samples#297](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#297)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowStarted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  id: WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans har pausats."
  remarks: "Arbetsflödesinstansen kan avbrytas av värden via ett anrop till den <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>metoden, av en <xref:System.Workflow.ComponentModel.SuspendActivity>aktivitet, eller implicit genom körning arbetsflödesmotorn.</xref:System.Workflow.ComponentModel.SuspendActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> Till exempel pausar körningen arbetsflödesmotorn tillfälligt instansen när det gäller dynamiska ändringar för instansen.       För händelsen WorkflowSuspended avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>och en sträng som beskriver anledningen till varför instansen pausades.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowSuspended with an event handler, a method named `OnWorkflowSuspended`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).  \n  \n [!code-cs[WF_Samples#170](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#170)]\n [!code-vb[WF_Samples#170](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#170)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs> WorkflowSuspended;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  id: WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när en arbetsflödesinstans avslutas."
  remarks: "Arbetsflödet kan avbrytas av värden via ett anrop till den <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>metoden, av en <xref:System.Workflow.ComponentModel.TerminateActivity>aktivitet, eller av motorn för körning arbetsflödet när ett ohanterat undantag inträffar.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> Körning arbetsflödesmotorn genererar händelsen WorkflowTerminated när arbetsflödesinstansen avslutas, men innan betraktas som inaktuella i minnet.       För den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>händelse avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>och information om orsaken till instansen har avslutats i den <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName>egenskapen.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs> WorkflowTerminated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  id: WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inträffar när arbetsflödesinstansen tas bort från minnet."
  remarks: "En arbetsflödesinstans kan tas bort från minnet av ett explicit anrop till <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, eller implicit genom körning arbetsflödesmotorn enligt sin egen semantik.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Till exempel körning arbetsflödesmotorn inaktiverar en arbetsflödesinstans om instansen blir inaktiv och körningen har en <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>lagts till som <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>är `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>       Körning arbetsflödesmotorn genererar händelsen WorkflowUnloaded när tillståndet för arbetsflödesinstansen har sparats men innan instansen är ogiltig i minnet. Därför kan en <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>händelse före händelsen WorkflowUnloaded.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       För den <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>händelse avsändaren innehåller den <xref:System.Workflow.Runtime.WorkflowRuntime>och <xref:System.Workflow.Runtime.WorkflowEventArgs>innehåller den <xref:System.Workflow.Runtime.WorkflowInstance>som är associerade med händelsen.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Hantera händelser, se [förbrukar händelser](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowUnloaded with an event handler, a method named `OnWorkflowUnload`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowUnloaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
- uid: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
  parent: System.Workflow.Runtime.Configuration
  isExternal: false
  name: WorkflowRuntimeSection
  nameWithType: WorkflowRuntimeSection
  fullName: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowInstance>
  nameWithType: ReadOnlyCollection<WorkflowInstance>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowInstance
    name: WorkflowInstance
    nameWithType: WorkflowInstance
    fullName: WorkflowInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
- uid: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ServicesExceptionNotHandledEventArgs>
  nameWithType: EventHandler<ServicesExceptionNotHandledEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs
    name: ServicesExceptionNotHandledEventArgs
    nameWithType: ServicesExceptionNotHandledEventArgs
    fullName: ServicesExceptionNotHandledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowRuntimeEventArgs>
  nameWithType: EventHandler<WorkflowRuntimeEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowRuntimeEventArgs
    name: WorkflowRuntimeEventArgs
    nameWithType: WorkflowRuntimeEventArgs
    fullName: WorkflowRuntimeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowEventArgs>
  nameWithType: EventHandler<WorkflowEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowEventArgs
    name: WorkflowEventArgs
    nameWithType: WorkflowEventArgs
    fullName: WorkflowEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowCompletedEventArgs>
  nameWithType: EventHandler<WorkflowCompletedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowCompletedEventArgs
    name: WorkflowCompletedEventArgs
    nameWithType: WorkflowCompletedEventArgs
    fullName: WorkflowCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowSuspendedEventArgs>
  nameWithType: EventHandler<WorkflowSuspendedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowSuspendedEventArgs
    name: WorkflowSuspendedEventArgs
    nameWithType: WorkflowSuspendedEventArgs
    fullName: WorkflowSuspendedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowTerminatedEventArgs>
  nameWithType: EventHandler<WorkflowTerminatedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
    name: WorkflowTerminatedEventArgs
    nameWithType: WorkflowTerminatedEventArgs
    fullName: WorkflowTerminatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService
  nameWithType: WorkflowRuntime.AddService
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow
  nameWithType: WorkflowRuntime.CreateWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose
  nameWithType: WorkflowRuntime.Dispose
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices
  nameWithType: WorkflowRuntime.GetAllServices
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices<T>
  nameWithType: WorkflowRuntime.GetAllServices<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows
  nameWithType: WorkflowRuntime.GetLoadedWorkflows
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService
  nameWithType: WorkflowRuntime.GetService
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService<T>
  nameWithType: WorkflowRuntime.GetService<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow
  nameWithType: WorkflowRuntime.GetWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.Name*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService
  nameWithType: WorkflowRuntime.RemoveService
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime
  nameWithType: WorkflowRuntime.StartRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime
  nameWithType: WorkflowRuntime.StopRuntime
