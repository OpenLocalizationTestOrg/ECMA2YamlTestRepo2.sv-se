### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlReader
  id: XamlReader
  children:
  - System.Xaml.XamlReader.#ctor
  - System.Xaml.XamlReader.Close
  - System.Xaml.XamlReader.Dispose(System.Boolean)
  - System.Xaml.XamlReader.IsDisposed
  - System.Xaml.XamlReader.IsEof
  - System.Xaml.XamlReader.Member
  - System.Xaml.XamlReader.Namespace
  - System.Xaml.XamlReader.NodeType
  - System.Xaml.XamlReader.Read
  - System.Xaml.XamlReader.ReadSubtree
  - System.Xaml.XamlReader.SchemaContext
  - System.Xaml.XamlReader.Skip
  - System.Xaml.XamlReader.System#IDisposable#Dispose
  - System.Xaml.XamlReader.Type
  - System.Xaml.XamlReader.Value
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
  type: Class
  summary: "Innehåller grundläggande definitioner för klasser som förbrukar XAML indata och producera dataströmmar med XAML-nod."
  remarks: "XamlReader är en abstrakt klass och ger inte implementeringar eller definitioner som har en fungerande resultat för alla medlemmar. Medlemmar som har en implementering i XamlReader anges i Anmärkningar för medlemmen. Mer specifikt har XamlReader flera abstrakta medlemmarna som måste implementeras och flera virtuella medlemmar.       Virtuella medlemmar <xref:System.Xaml.XamlReader.ReadSubtree%2A>och <xref:System.Xaml.XamlReader.Skip%2A>varje ger en standardimplementering som är lämplig för de flesta fall.</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> Men den <xref:System.Xaml.XamlReader.ReadSubtree%2A>och <xref:System.Xaml.XamlReader.Skip%2A>standardimplementeringar är beroende av andra förväntat beteende för verkställande XAML-läsaren, i synnerhet de förlitar sig på den <xref:System.Xaml.XamlReader.Read%2A>Åsidosätt.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Dispose%2A>är också en virtuell medlem som har en fungerande standardimplementering.</xref:System.Xaml.XamlReader.Dispose%2A>       Följande två klasser är mest relevant och praktiska härledda klasser i .NET Framework XAML-tjänster och System.Xaml sammansättningen:- <xref:System.Xaml.XamlObjectReader>, som läser ett objektdiagram, till exempel active objektdiagrammet för ett program vid körning.</xref:System.Xaml.XamlObjectReader>      - <xref:System.Xaml.XamlXmlReader>, som läser XAML i form av en XML-textfil med hjälp av ett allmänt <xref:System.Xml.XmlReader>som läser in filen som en mellanliggande helper-klass</xref:System.Xml.XmlReader> </xref:System.Xaml.XamlXmlReader>       Andra XAML-läsare från andra ramverk inkluderar <xref:System.Windows.Baml2006.Baml2006Reader>och <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</xref:System.Activities.Debugger.XamlDebuggerXmlReader> </xref:System.Windows.Baml2006.Baml2006Reader>       XamlReader skiljer sig från [!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)] och <xref:System.Xml.XmlReader>utforma principerna XamlReader har inte en `Create` metod för att returnera underliggande standard XAML reader implementeringar.</xref:System.Xml.XmlReader> Du måste i stället initiera härledda XAML reader klasser genom att anropa sina konstruktorer eller andra klass-specifika helper API: er.      ## Subtree läsare för de flesta kan du anropa API för XamlReader i samband med särskilda XAML reader klasser som härleds från XamlReader. Dock i ett visst fall du åtkomst till XamlReader API på en praktiska XAML reader-instans som inte är offentlig och är inte härledd från <xref:System.Xaml.XamlObjectReader>eller <xref:System.Xaml.XamlXmlReader>.</xref:System.Xaml.XamlXmlReader> </xref:System.Xaml.XamlObjectReader> Det här fallet är när du anropar <xref:System.Xaml.XamlReader.ReadSubtree%2A>, som returnerar en XamlReader-instansen.</xref:System.Xaml.XamlReader.ReadSubtree%2A> I standardimplementeringen är XamlReader som returneras av denna API en intern klass.       XamlReader hämtades för underträd läsning har giltiga åtgärder för API: er som <xref:System.Xaml.XamlReader.Read%2A>och <xref:System.Xaml.XamlReader.NodeType%2A>, och dessa åtgärder är baserade på klassen överordnade dataläsare.</xref:System.Xaml.XamlReader.NodeType%2A> </xref:System.Xaml.XamlReader.Read%2A> Den här designen kan intern klass att spåra nivån ram där underträdet har angetts. Agerar underträdet XamlReader säkerställer att om den aktuella nodpositionen flyttas utanför gränserna för underträdet specifika underträd läsaren rapporterar slutet av filen eller `null` på den aktuella noden.       Information om användning av underträd läsaren finns på vissa XamlReader APIs."
  syntax:
    content: 'public abstract class XamlReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar den <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> klass."
  syntax:
    content: protected XamlReader ();
    parameters: []
  overload: System.Xaml.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Close
  id: Close
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Stänger XAML-nodström."
  remarks: "I den grundläggande implementeringen anropar Stäng anrop <xref:System.Xaml.XamlReader.Dispose%2A>med den `isDisposing` parameter som `true`.</xref:System.Xaml.XamlReader.Dispose%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Xaml.XamlReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, och du kan också släpper hanterade resurser."
  remarks: "Du måste anropa basklassen få <xref:System.Xaml.XamlReader.IsDisposed%2A>= `true`.</xref:System.Xaml.XamlReader.IsDisposed%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att släppa hanterade resurser. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsDisposed
  id: IsDisposed
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar om <xref:System.Xaml.XamlReader.Dispose*>har anropats.</xref:System.Xaml.XamlReader.Dispose*>"
  syntax:
    content: protected bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <xref:System.Xaml.XamlReader.Dispose*>har anropats, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlReader.Dispose*>"
  overload: System.Xaml.XamlReader.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsEof
  id: IsEof
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som rapporterar om läsaren positionen är vid slutet av filen implementeras i en härledd klass."
  remarks: "Underträd läsare kan anropa IsEof, med beteende som visar korrekt angivna underträdet gränser. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool IsEof { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om positionen är på den konceptuella slutet på filen i XAML-nodström; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.IsEof*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Member
  id: Member
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Implementeras i en härledd klass, hämtar du den aktuella medlemmen vid position läsaren om positionen läsaren finns på en <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>."
  remarks: "Underträd läsare kan anropa medlem, beteende begränsningar. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlMember Member { get; }
    return:
      type: System.Xaml.XamlMember
      description: "Den aktuella medlemmen; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>om positionen läsaren inte är en medlem."
  overload: System.Xaml.XamlReader.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Namespace
  id: Namespace
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar information för XAML-namnområdet från den aktuella noden implementeras i en härledd klass."
  remarks: "Avsedda designen för detta API är att returnera en icke-null resultatet bara om <xref:System.Xaml.XamlReader.NodeType%2A>den aktuella noden är <xref:System.Xaml.XamlNodeType>.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlReader.NodeType%2A> Egenskapen rapporterar inte XAML-namnområdet som gäller för objekt eller medlemmar i en allmän målgrupp mening som tolkas under en XAML-schemat. Programmet måste ange ett sätt att cachelagra information för agerar XAML-namnområdet som den passerar XAML noder, om du behöver denna information på ett sätt än hur XAML-schemat kontexten rapporterar till en skrivare. Se<xref:System.Xaml.XamlXmlReader.Namespace%2A> information på referensimplementering.</xref:System.Xaml.XamlXmlReader.Namespace%2A>"
  syntax:
    content: public abstract System.Xaml.NamespaceDeclaration Namespace { get; }
    return:
      type: System.Xaml.NamespaceDeclaration
      description: "Informationen XAML-namnområdet, om den är tillgänglig. Annars <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.NodeType
  id: NodeType
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar typ av den aktuella noden implementeras i en härledd klass."
  remarks: "Underträd läsare kan anropa NodeType, beteende begränsningar. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlNodeType NodeType { get; }
    return:
      type: System.Xaml.XamlNodeType
      description: "Ett värde för den <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> uppräkning."
  overload: System.Xaml.XamlReader.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Read
  id: Read
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "När implementeras i en härledd klass, ger XAML nästa nod från källan, om en nod är tillgänglig."
  remarks: "Underträd läsare kan anropa Läs-, beteende begränsningar. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en nod är tillgänglig. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> som baseras på aktuellt <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, där den returnerade <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> används för att söka igenom en underkatalog i XAML nod-strukturen."
  remarks: "Den här metoden har en standardimplementering och returnerar en giltig <xref:System.Xaml.XamlReader>.</xref:System.Xaml.XamlReader> Den returnerade <xref:System.Xaml.XamlReader>är en intern klass som begränsar vissa <xref:System.Xaml.XamlReader>åtgärder.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> Begränsningarna som är konsekventa att läsa ett dimensioned underträd endast av en större källa för en noduppsättning i XAML och returnera slutet av filen eller `null` på den aktuella noden när underträdet har avslutats.       I allmänhet bör du kontrollera den aktuella noden från första <xref:System.Xaml.XamlReader.Read%2A>att avgöra om du behöver en underträd läsare.</xref:System.Xaml.XamlReader.Read%2A> Hur du markerar detta kan vara implementering-specifika; dock inte skapa flera underträd läsare för varje underträd. Dessutom undvika anropar en underträd läsare för ibland nod (till exempel <xref:System.Xaml.XamlNodeType>) som får inte innehålla ett underträd med noder.</xref:System.Xaml.XamlNodeType>       När du har fått en underträd läsare måste du anropa <xref:System.Xaml.XamlReader.Read%2A>på den för att hämta aktuell nod (eller anropa <xref:System.Xaml.XamlReader.Skip%2A>att hämta nästa nod).</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.Read%2A> Du hämtar inte automatiskt en position första noden från underträd läsaren när du skapar den.       Läsaren du hämta genom att anropa ReadSubtree från den här standardimplementering är en intern klass. Den interna klassen baserar sitt beteende på den <xref:System.Xaml.XamlReader>implementering som används när ReadSubtree anropas.</xref:System.Xaml.XamlReader> Syftet med den interna klassen är att omsluta den <xref:System.Xaml.XamlReader.Read%2A>och allmänna traversal beteende.</xref:System.Xaml.XamlReader.Read%2A> Övergången håller sig inom avsedd underträdet genom att <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> par eller <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> par.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Den returnerar också korrekt `false` för <xref:System.Xaml.XamlReader.Read%2A>och `true` för <xref:System.Xaml.XamlReader.IsEof%2A>när läsaren är i slutet av underträd, som definierats av dess startpunkt.</xref:System.Xaml.XamlReader.IsEof%2A> </xref:System.Xaml.XamlReader.Read%2A> I allmänhet kan du anta att alla <xref:System.Xaml.XamlReader>API: et anropas från underträdet läsaren har samma implementering som totala <xref:System.Xaml.XamlReader>förutom traversal avgränsar beteende.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>       ReadSubtree är dock virtuella. Därför en specifik <xref:System.Xaml.XamlReader>beteende som skiljer sig från kan du erhålla den <xref:System.Xaml.XamlReader>interna wrapper beteende, och en <xref:System.Xaml.XamlReader>implementering kan även inaktivera underträd reader funktioner genom att returnera <xref:System.NotImplementedException>eller andra undantag.</xref:System.NotImplementedException> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public virtual System.Xaml.XamlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xaml.XamlReader
      description: "En ny XAML reader instans för underkatalogen."
  overload: System.Xaml.XamlReader.ReadSubtree*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett objekt som ger omständighetsinformation för XAML-schemat för den uppsättning information som implementeras i en härledd klass."
  syntax:
    content: public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Ange ett objekt som innehåller information om XAML-schemat kontexten för informationen."
  overload: System.Xaml.XamlReader.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Skip
  id: Skip
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hoppar över den aktuella noden och framsteg reader positionen till nästa nod."
  remarks: "En gång hoppas över <xref:System.Xaml.XamlReader.Read%2A>anropas av standard Skip-implementering.</xref:System.Xaml.XamlReader.Read%2A> Du normalt inte anropar Skip och <xref:System.Xaml.XamlReader.Read%2A>i följd.</xref:System.Xaml.XamlReader.Read%2A>       I standard Skip-implementering, olika åtgärder vidtas beroende på vilket <xref:System.Xaml.XamlReader.NodeType%2A>reader positionen är för tillfället.</xref:System.Xaml.XamlReader.NodeType%2A> Om positionen läsaren är för tillfället på en <xref:System.Xaml.XamlNodeType>eller <xref:System.Xaml.XamlNodeType>, medlem eller ett objekt ignoreras.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> För andra <xref:System.Xaml.XamlReader.NodeType%2A>värden, ingen åtgärd än anropar <xref:System.Xaml.XamlReader.Read%2A>från den aktuella positionen.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.NodeType%2A>       Underträd läsare kan anropa Skip, beteende begränsningar. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>       Noden trädet funktionssätt hoppa över baseras på XML motsvarande <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> Baserat på de <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>beteende likvärdiga, hoppa över hoppar över noden och dess underträd, inte bara den enda post noden.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xaml.XamlReader.Skip*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Frigör alla resurser som används av den aktuella instansen av den <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> klass."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xaml.XamlReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Type
  id: Type
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Implementeras i en härledd klass hämtar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> i den aktuella noden."
  remarks: "Underträd läsare kan anropa typ, beteende begränsningar. Mer information finns i avsnittet &quot;Underträd läsare&quot; i <xref:System.Xaml.XamlReader>, eller se <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> i den aktuella noden, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den aktuella positionen i läsaren inte finns på ett objekt."
  overload: System.Xaml.XamlReader.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Value
  id: Value
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar värdet för den aktuella noden implementeras i en härledd klass."
  syntax:
    content: public abstract object Value { get; }
    return:
      type: System.Object
      description: "Värdet för den aktuella noden; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, om den aktuella positionen i läsaren inte på en <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> nodtypen."
  overload: System.Xaml.XamlReader.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlReader.#ctor
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
- uid: System.Xaml.XamlReader.Close
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlReader.IsDisposed
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlReader.Namespace
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlReader.NodeType
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
- uid: System.Xaml.XamlNodeType
  parent: System.Xaml
  isExternal: false
  name: XamlNodeType
  nameWithType: XamlNodeType
  fullName: System.Xaml.XamlNodeType
- uid: System.Xaml.XamlReader.Read
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
- uid: System.Xaml.XamlReader.ReadSubtree
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Xaml.XamlReader.SchemaContext
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlReader.Skip
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
- uid: System.Xaml.XamlReader.Type
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlReader.Value
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
- uid: System.Xaml.XamlReader.#ctor*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Xaml.XamlReader.Close*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close
  nameWithType: XamlReader.Close
- uid: System.Xaml.XamlReader.Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose
  nameWithType: XamlReader.Dispose
- uid: System.Xaml.XamlReader.IsDisposed*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
- uid: System.Xaml.XamlReader.Namespace*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
- uid: System.Xaml.XamlReader.NodeType*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
- uid: System.Xaml.XamlReader.Read*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read
  nameWithType: XamlReader.Read
- uid: System.Xaml.XamlReader.ReadSubtree*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XamlReader.ReadSubtree
- uid: System.Xaml.XamlReader.SchemaContext*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
- uid: System.Xaml.XamlReader.Skip*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip
  nameWithType: XamlReader.Skip
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XamlReader.System.IDisposable.Dispose
- uid: System.Xaml.XamlReader.Type*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
- uid: System.Xaml.XamlReader.Value*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
