### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  id: SqlColumnEncryptionCngProvider
  children:
  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor
  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName
  langs:
  - csharp
  name: SqlColumnEncryptionCngProvider
  nameWithType: SqlColumnEncryptionCngProvider
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  type: Class
  summary: 'Implementering av provider CMK lagring för användning av Microsoft Cryptography-API: CNG (Next Generation) med [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).'
  remarks: 'Gör det möjligt att lagra Always Encrypted kolumnen huvudnyckeln nycklar i ett Arkiv, till exempel en maskinvarusäkerhetsmodul (HSM) som stöder Microsoft Cryptography-API: CNG (Next Generation).'
  syntax:
    content: 'public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider'
  inheritance:
  - System.Object
  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  langs:
  - csharp
  name: SqlColumnEncryptionCngProvider()
  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.SqlClient.SqlColumnEncryptionCngProvider&quot;> </xref> klass."
  syntax:
    content: public SqlColumnEncryptionCngProvider ();
    parameters: []
  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  langs:
  - csharp
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Dekrypterar de krypterade värdet med hjälp av en asymmetrisk nyckel som angetts av sökvägen till nyckeln och den angivna algoritmen. Sökvägen till nyckeln ska vara i formatet [ProviderName] / KeyIdentifier och ska vara en asymmetrisk nyckel som lagras i den angivna CNG KeyStore-providern. Ogiltig algoritm som används för att kryptera/dekryptera CEK är &quot;RSA_OAEP&quot;."
  syntax:
    content: public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "Kolumnhuvudnyckel-sökväg."
    - id: encryptionAlgorithm
      type: System.String
      description: "Krypteringsalgoritm."
    - id: encryptedColumnEncryptionKey
      type: System.Byte[]
      description: "Den kryptera kolumnkrypteringsnyckeln."
    return:
      type: System.Byte[]
      description: "Den dekryptera kolumnkrypteringsnyckeln."
  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  langs:
  - csharp
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Krypterar de angivna oformaterad text-kolumnkrypteringsnyckel med hjälp av en asymmetrisk nyckel som angetts av sökvägen till nyckeln och den angivna algoritmen. Sökvägen till nyckeln ska vara i formatet [ProviderName] / KeyIdentifier och ska vara en asymmetrisk nyckel som lagras i den angivna CNG KeyStore-providern. Ogiltig algoritm som används för att kryptera/dekryptera CEK är &quot;RSA_OAEP&quot;."
  syntax:
    content: public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "Kolumnhuvudnyckel-sökväg."
    - id: encryptionAlgorithm
      type: System.String
      description: "Krypteringsalgoritm."
    - id: columnEncryptionKey
      type: System.Byte[]
      description: "Den kryptera kolumnkrypteringsnyckeln."
    return:
      type: System.Byte[]
      description: "Den kryptera kolumnkrypteringsnyckeln."
  overload: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName
  id: ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  langs:
  - csharp
  name: ProviderName
  nameWithType: SqlColumnEncryptionCngProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En konstantsträng för providernamn &quot;MSSQL_CNG_STORE&quot;."
  syntax:
    content: public const string ProviderName;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  isExternal: false
  name: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: SqlColumnEncryptionCngProvider()
  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider()
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: ProviderName
  nameWithType: SqlColumnEncryptionCngProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor*
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: SqlColumnEncryptionCngProvider
  nameWithType: SqlColumnEncryptionCngProvider.SqlColumnEncryptionCngProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: DecryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey
- uid: System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCngProvider
  isExternal: false
  name: EncryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey
