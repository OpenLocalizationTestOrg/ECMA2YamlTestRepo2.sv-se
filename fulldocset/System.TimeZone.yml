### YamlMime:ManagedReference
items:
- uid: System.TimeZone
  id: TimeZone
  children:
  - System.TimeZone.#ctor
  - System.TimeZone.CurrentTimeZone
  - System.TimeZone.DaylightName
  - System.TimeZone.GetDaylightChanges(System.Int32)
  - System.TimeZone.GetUtcOffset(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  - System.TimeZone.StandardName
  - System.TimeZone.ToLocalTime(System.DateTime)
  - System.TimeZone.ToUniversalTime(System.DateTime)
  langs:
  - csharp
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
  type: Class
  summary: "Representerar en tidszon."
  remarks: "En tidszon är en geografisk region som standard samtidigt används.      > [!IMPORTANT] > När det är möjligt använda <xref:System.TimeZoneInfo>klassen i stället för klassen tidszonen.</xref:System.TimeZoneInfo>       Du kan använda TimeZone-klassen för att hämta information om den aktuella tidszonen och för att konvertera gånger från lokal tid för Coordinated Universal Time (UTC) och vice versa. Du använda inte klassen tidszonen som representerar tidszoner än den lokala zonen eller för att hantera datum och tid konverteringar från en tidszon till en annan. För detta ändamål Använd <xref:System.TimeZoneInfo>klass.</xref:System.TimeZoneInfo> Du kan använda den här klassen för att hämta information om eventuella tidszon som definierats i det lokala systemet att skapa anpassade tidszoner och konvertera gånger från en tidszon till en annan.       TimeZone-klassen stöder bara en enda sommartid justering regel för den lokala tidszonen. TimeZone-klassen kan därför korrekt rapportera sommartid information eller konvertera mellan UTC och lokal tid bara för den senaste justering regeln är aktiverat. Däremot den <xref:System.TimeZoneInfo>klassen stöder flera justering regler, vilket gör det möjligt att arbeta med tidszon historiska data.</xref:System.TimeZoneInfo>"
  example:
  - "The following example references and displays selected `TimeZone` class elements.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/t-system.timezone_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/t-system.timezone_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/t-system.timezone_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TimeZone
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TimeZone.#ctor
  id: '#ctor'
  parent: System.TimeZone
  langs:
  - csharp
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initierar en ny instans av den <xref href=&quot;System.TimeZone&quot;> </xref> klass."
  syntax:
    content: protected TimeZone ();
    parameters: []
  overload: System.TimeZone.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.CurrentTimeZone
  id: CurrentTimeZone
  parent: System.TimeZone
  langs:
  - csharp
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar tidszonen för den aktuella datorn."
  remarks: "Egenskapen CurrentTimeZone motsvarar den <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>"
  example:
  - "The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.curren_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.curren_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.curren_1.cs)]"
  syntax:
    content: public static TimeZone CurrentTimeZone { get; }
    return:
      type: System.TimeZone
      description: "En <xref href=&quot;System.TimeZone&quot;> </xref> objekt som representerar aktuell lokal tidszon."
  overload: System.TimeZone.CurrentTimeZone*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.DaylightName
  id: DaylightName
  parent: System.TimeZone
  langs:
  - csharp
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar zonnamnet sommartid."
  remarks: "Om sommartid inte används i tidszonen, en tom sträng (&quot;&quot;) returneras.       Egenskapen DaylightName motsvarar den <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `DaylightName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.daylig_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.daylig_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.daylig_1.cs)]"
  syntax:
    content: public abstract string DaylightName { get; }
    return:
      type: System.String
      description: "Zonnamnet sommartid."
  overload: System.TimeZone.DaylightName*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  id: GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar sommartid perioden för ett visst år."
  remarks: "Endast en sommartid period per år stöds.       Om sommartid inte används i den aktuella tidszonen, det returnera värdet är en <xref:System.Globalization.DaylightTime>objektet där värdet för <xref:System.Globalization.DaylightTime.Start%2A>och <xref:System.Globalization.DaylightTime.End%2A>är <xref:System.DateTime.MinValue?displayProperty=fullName>, och värdet för <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName>är en <xref:System.TimeSpan>initieras till 0 tick.</xref:System.TimeSpan> </xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> </xref:System.DateTime.MinValue?displayProperty=fullName> </xref:System.Globalization.DaylightTime.End%2A> </xref:System.Globalization.DaylightTime.Start%2A> </xref:System.Globalization.DaylightTime>"
  syntax:
    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Det år sommartid perioden gäller för."
    return:
      type: System.Globalization.DaylightTime
      description: "En <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> objekt som innehåller datum för start- och slutdatum för sommartid i <code> year </code>."
  overload: System.TimeZone.GetDaylightChanges*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>är mindre än 1 eller större än 9999."
  platform:
  - net462
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  id: GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar förskjutningen Coordinated Universal Time (UTC) för den angivna lokal tid."
  remarks: "Den här metoden returnerar förskjutningen eller skillnaden mellan de `time` parametern och Coordinated Universal Time (UTC). Det vill säga: `time` = UTC + förskjutning metoden tolkar tidszon `time` baserat på dess <xref:System.DateTime.Kind%2A>egenskap.</xref:System.DateTime.Kind%2A> Om värdet för den <xref:System.DateTime.Kind%2A>egenskapen är <xref:System.DateTimeKind?displayProperty=fullName>eller <xref:System.DateTimeKind?displayProperty=fullName>, metoden returnerar förskjutningen för den lokala tidszonen.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> Om värdet för <xref:System.DateTime.Kind%2A>egenskapen är <xref:System.DateTimeKind?displayProperty=fullName>metoden returnerar en offset som är lika med <xref:System.TimeSpan.Zero?displayProperty=fullName>.</xref:System.TimeSpan.Zero?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       Om den lokala tidszonen registrerar sommartid, GetUtcOffset gäller den aktuella justering regeln till `time` när du fastställer förskjutningen för den lokala tidszonen. Det vill säga förskjutningen som returneras av GetUtcOffset visar om `time` infaller under den tidszon normaltid eller dess sommartid.      > [!NOTE] > I GetUtcOffset metoden identifierar bara den aktuella sommartid justering regeln för den lokala tidszonen. Det är därför garanteras att returnera rätt UTC-förskjutningen för en lokal tid under den tid som den senaste justering regeln är aktiverat. Det kan returnera felaktiga resultat om `time` är ett historiskt datum och tid-värden som omfattas av en tidigare justering regel.       Metoden GetUtcOffset motsvarar den <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>       Eftersom värdet för datum och tid som representeras av `time` och det här värdet förskjutning från UTC är inte direkt kopplade, en lokal eller Ospecificerad datum och tid-värden kan returnera olika förskjutningsvärde när körs på olika datorer eller när det körs på samma dator i olika tidszoner. Om det här beteendet är önskvärt använder en <xref:System.DateTimeOffset>värde i stället.</xref:System.DateTimeOffset> Den <xref:System.DateTimeOffset>datatyp nära kombinerar ett datum och tid-värde med dess förskjutning från UTC.</xref:System.DateTimeOffset>"
  syntax:
    content: public abstract TimeSpan GetUtcOffset (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Ett värde för datum och tid."
    return:
      type: System.TimeSpan
      description: "Förskjutningen Coordinated Universal Time (UTC) från <code> time </code>."
  overload: System.TimeZone.GetUtcOffset*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  id: IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar ett värde som indikerar om angivet datum och tid är inom en period för sommartid."
  remarks: "Året som gäller för sommartid perioden är härledd från den `time` parameter.       Eftersom den <xref:System.TimeZone>klassen stöder en enda sommartid justering regel, metoden IsDaylightSavingTime gäller den aktuella justering regeln för alla datum, oavsett om regeln justering har tillämpas på det datumet.</xref:System.TimeZone> Förutsatt att själva operativsystemet har korrekt historiska sommartid data, en mer korrekt resultat är tillgängliga med hjälp av den <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool IsDaylightSavingTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Datum och tid."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> time </code> är i ett sommartid tid tidsperiod, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar ett värde som indikerar om angivet datum och tid är inom den angivna sommartid perioden."
  remarks: "Den <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metoden fungerar på samma sätt som den här överlagringen för metoden IsDaylightSavingTime.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);
    parameters:
    - id: time
      type: System.DateTime
      description: "Datum och tid."
    - id: daylightTimes
      type: System.Globalization.DaylightTime
      description: "Som ska läggas till."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>time</code> is in <code>daylightTimes</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>daylightTimes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.TimeZone.StandardName
  id: StandardName
  parent: System.TimeZone
  langs:
  - csharp
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Hämtar tidszonens normaltidszonsnamn."
  remarks: "Egenskapen StandardName motsvarar den <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>egenskapen.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `StandardName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.standa_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.standa_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.standa_1.cs)]"
  syntax:
    content: public abstract string StandardName { get; }
    return:
      type: System.String
      description: "Zonnamnet normaltid."
  overload: System.TimeZone.StandardName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ett försök gjordes att ange egenskapen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  id: ToLocalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar den lokala tiden som motsvarar ett angivet datum och tid-värden."
  remarks: "Följande tabell visar relationen mellan den `time` parameter och <xref:System.DateTime>värdet som returneras av den här metoden.</xref:System.DateTime>      | `time` parametern | Beteende | Returvärde |   |----------------------|--------------|------------------|   | Taget Coordinated Universal Time (UTC) (<xref:System.DateTimeKind?displayProperty=fullName>). | Konverterar tiden från UTC till lokal tid. | Ett <xref:System.DateTime>objekt vars värde är den lokala tiden som motsvarar `time`. |   | En lokal tid (<xref:System.DateTimeKind?displayProperty=fullName>). | Ingen konvertering som är nödvändiga. | Samma <xref:System.DateTime>värdet som representeras av den `time` parameter. |   | Ett ospecificerat tid (<xref:System.DateTimeKind?displayProperty=fullName>). | Förutsätter att tiden är UTC och konverteras från UTC till lokal tid. | Ett <xref:System.DateTime>objekt vars värde är den lokala tiden som motsvarar `time`. |       Om den lokala tidszonen registrerar sommartid, ToLocalTime gäller den aktuella justering regeln till `time` när du utför konverteringen.</xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName>      > [!NOTE] > I ToLocalTime metoden identifierar bara den aktuella sommartid justering regeln för den lokala tidszonen. Därför är det säkert att korrekt returnerar den lokala tiden som motsvarar en viss UTC-tid under den tid som den senaste justering regeln är aktiverat. Det kan returnera felaktiga resultat om `time` är ett historiskt datum och tid-värden som omfattas av en tidigare justering regel.       Metoden ToLocalTime motsvarar den <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metod med dess `destinationTimeZone` parametern värdet <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> </xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metoden.</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToLocalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Taget Coordinated Universal Time (UTC)."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>objektet vars värde är den lokala tiden som motsvarar <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToLocalTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  id: ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Returnerar Coordinated Universal Time (UTC) som motsvarar en angiven tid."
  remarks: "Om den lokala tidszonen registrerar sommartid, ToUniversalTime gäller den aktuella justering regeln till den `time` parameter när du utför konverteringen.      > [!NOTE] > I ToUniversalTime metoden identifierar bara den aktuella sommartid justering regeln för den lokala tidszonen. Därför är det säkert att korrekt returnera Coordinated Universal Time (UTC) motsvarar en viss lokal tid under den tid som den senaste justering regeln är aktiverat. Det kan returnera felaktiga resultat om `time` är ett historiskt datum och tid-värden som omfattas av en tidigare justering regel.       Om den `time` parameter är en tvetydig, metoden förutsätter att det är en standard-tid. (En tvetydig tid är något som kan mappas till en normaltid eller till en sommartid i den lokala tidszonen.) Om `time` är en ogiltig tid metoden subtraheras bara den lokala tiden från den lokala tidszonen UTC-förskjutning för att returnera UTC. (En ogiltig tid är något som inte finns på grund av regler för sommartid justering.)       Eftersom `time` tolkas i förhållande till den aktuella tidszonen på systemets aktuella datum och tid som returneras av den här metoden kan skilja sig om ett program körs på olika datorer eller på samma dator med olika tidszoner. I de fall där ett datum och tid-värde måste representera en enda, entydigt punkt i tiden, använda en <xref:System.DateTimeOffset>värde som representerar den lokala tiden.</xref:System.DateTimeOffset>       Metoden ToUniversalTime motsvarar den <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>metodöverlagringen med en <xref:System.DateTime>parameter vars <xref:System.DateTime.Kind%2A>egenskap är inte lika med <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> </xref:System.DateTime> </xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> Använd om möjligt den <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>metodöverlagringen.</xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToUniversalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Datum och tid."
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>objektet vars värde är Coordinated Universal Time (UTC) som motsvarar <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToUniversalTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.TimeZone.#ctor
  parent: System.TimeZone
  isExternal: false
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
- uid: System.TimeZone.CurrentTimeZone
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
- uid: System.TimeZone
  parent: System
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
- uid: System.TimeZone.DaylightName
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
- uid: System.Globalization.DaylightTime
  parent: System.Globalization
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
- uid: System.TimeZone.StandardName
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
- uid: System.TimeZone.#ctor*
  parent: System.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone.TimeZone
- uid: System.TimeZone.CurrentTimeZone*
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
- uid: System.TimeZone.DaylightName*
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
- uid: System.TimeZone.GetDaylightChanges*
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges
  nameWithType: TimeZone.GetDaylightChanges
- uid: System.TimeZone.GetUtcOffset*
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset
  nameWithType: TimeZone.GetUtcOffset
- uid: System.TimeZone.IsDaylightSavingTime*
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: TimeZone.IsDaylightSavingTime
- uid: System.TimeZone.StandardName*
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime
  nameWithType: TimeZone.ToLocalTime
- uid: System.TimeZone.ToUniversalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime
  nameWithType: TimeZone.ToUniversalTime
