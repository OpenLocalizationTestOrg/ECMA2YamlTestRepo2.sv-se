### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression
  id: OrderByExpression
  children:
  - System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  - System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  - System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  - System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  langs:
  - csharp
  name: OrderByExpression
  nameWithType: OrderByExpression
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression
  type: Class
  summary: "Ett sätt att tillämpa ett sorteringsuttryck till ett <xref:System.Linq.IQueryable>objekt.</xref:System.Linq.IQueryable>"
  remarks: "Klassen OrderByExpression används i den <xref:System.Web.UI.WebControls.QueryExtender>kontrollen att sortera data i stigande eller fallande ordning.</xref:System.Web.UI.WebControls.QueryExtender> Sortering utförs av standardjämförelsefunktionen för typ av elementet.       Den <xref:System.Web.UI.WebControls.QueryExtender>kontrollen stöder en mängd olika alternativ som du kan använda för att filtrera data.</xref:System.Web.UI.WebControls.QueryExtender> När du använder alternativ för filter kan använda du OrderByExpression objekt för att sortera data.       Du anger datafält att sortera med hjälp av den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A>egenskapen.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> Du anger Sorteringsriktningen med hjälp av den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>egenskapen.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> När OrderByExpression-objektet har kopplats till datakällan, kan du använda den <xref:System.Web.UI.WebControls.Expressions.ThenBy>uttryck för att utföra en efterföljande sortering med ett annat datafält.</xref:System.Web.UI.WebControls.Expressions.ThenBy>"
  example:
  - "The following example shows how to search the Products table of the AdventureWorks database for products that have names that start with the string that is specified in the `SearchTextBox` text box. The OrderByExpression object sorts the data by the ListPrice data field in descending order and then by the product ID field in ascending order. The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ThenByExpressions")]

      [System.Web.UI.PersistChildren(false)]

      public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> klass."
  syntax:
    content: public OrderByExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Hämtar eller anger egenskapen för den <xref:System.Linq.IQueryable>objekt att sortera efter.</xref:System.Linq.IQueryable>"
  remarks: "Den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>objektet sorterar data i ett fält.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Sortering kan utföras på ett annat datafält med hjälp av den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>egenskapen.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "Egenskapen för den <xref:System.Linq.IQueryable>datakällobjektet att sortera efter.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Hämtar eller anger Sorteringsriktningen av den <xref:System.Linq.IQueryable>datakällobjektet.</xref:System.Linq.IQueryable>"
  remarks: "Den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>klassen används i den <xref:System.Web.UI.WebControls.QueryExtender>kontrollen att sortera data i stigande eller fallande ordning.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Riktningen för sorteringsåtgärden som anges med hjälp av egenskapen riktning."
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the ProductID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "Datakällobjektet sorteringsordning."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Gäller ett sorteringsuttryck till ett <xref:System.Linq.IQueryable>objekt baserat på en <> </> *> värde och ett <> </> *> värde.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Anger datakällan för att använda till att sorteringen."
    return:
      type: System.Linq.IQueryable
      description: "En instans av datakällan som uttrycket har tillämpats på."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  id: ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Hämtar eller anger mängden <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> uttryck som ska användas efter en <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> tillämpas på datakällan."
  remarks: "Efter en sortering utförs åtgärden med hjälp av den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>i den <xref:System.Web.UI.WebControls.QueryExtender>styra efterföljande sortera åtgärder kan utföras med hjälp av egenskapen ThenByExpressions.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order using the ThenByExpressions. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy> ThenByExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
      description: "Insamling av <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> uttryck att gälla efter den <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> tillämpas på datakällan."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
- uid: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ThenBy>
  nameWithType: Collection<ThenBy>
  fullName: System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.Expressions.ThenBy
    name: ThenBy
    nameWithType: ThenBy
    fullName: ThenBy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression
  nameWithType: OrderByExpression.OrderByExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable
  nameWithType: OrderByExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
