### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpClient
  id: HttpClient
  children:
  - System.Net.Http.HttpClient.#ctor
  - System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - System.Net.Http.HttpClient.BaseAddress
  - System.Net.Http.HttpClient.CancelPendingRequests
  - System.Net.Http.HttpClient.DefaultRequestHeaders
  - System.Net.Http.HttpClient.DeleteAsync(System.String)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  - System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.Dispose(System.Boolean)
  - System.Net.Http.HttpClient.GetAsync(System.String)
  - System.Net.Http.HttpClient.GetAsync(System.Uri)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  - System.Net.Http.HttpClient.GetStreamAsync(System.String)
  - System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  - System.Net.Http.HttpClient.GetStringAsync(System.String)
  - System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  - System.Net.Http.HttpClient.MaxResponseContentBufferSize
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.Timeout
  langs:
  - csharp
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
  type: Class
  summary: "Ger en basklass för att skicka HTTP-begäranden och ta emot HTTP-svar från en resurs som identifieras av en URI."
  remarks: "Klassinstansen HttpClient fungerar som en session för att skicka HTTP-begäranden. En HttpClient-instans är en samling inställningar som tillämpas på alla begäranden som körs av den instansen. Dessutom använder varje instans HttpClient sin egen anslutningspool isolera begäranden från begäranden som har utförts av andra HttpClient-instanser.       HttpClient fungerar också som en basklass för mer specifika HTTP-klienter. Ett exempel är en FacebookHttpClient att tillhandahålla ytterligare metoder som är specifika för en Facebook-webbtjänst (en GetFriends metod, till exempel).       Som standard <xref:System.Net.HttpWebRequest>används för att skicka begäranden till servern.</xref:System.Net.HttpWebRequest> Detta beteende kan ändras genom att ange en annan kanal i en konstruktor överlagringar som tar en <xref:System.Net.Http.HttpMessageHandler>instans som parameter.</xref:System.Net.Http.HttpMessageHandler> Om det behövs, funktioner som autentisering eller cachelagring <xref:System.Net.Http.WebRequestHandler>kan användas för att konfigurera inställningar och instansen kan skickas till konstruktorn.</xref:System.Net.Http.WebRequestHandler> Hanteraren returnerade kan skickas till en konstruktor överlagringar som tar en <xref:System.Net.Http.HttpMessageHandler>parameter.</xref:System.Net.Http.HttpMessageHandler>       Om en app med HttpClient och relaterade klasser i den <xref:System.Net.Http>namnområde har för avsikt att hämta stora mängder data (50 MB eller mer) och sedan appen bör strömma dessa hämtningsbara filer och inte använder standard buffring.</xref:System.Net.Http> Om standard buffring används minnesanvändningen klienten får mycket stora, vilket kan innebära att avsevärt nedsatt prestanda.       Följande metoder är trådsäkra: 1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>2.</xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>3.</xref:System.Net.Http.HttpClient.DeleteAsync%2A>  <xref:System.Net.Http.HttpClient.GetAsync%2A>4.</xref:System.Net.Http.HttpClient.GetAsync%2A>  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>5.</xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>6.</xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>7.</xref:System.Net.Http.HttpClient.GetStringAsync%2A>  <xref:System.Net.Http.HttpClient.PostAsync%2A>8.</xref:System.Net.Http.HttpClient.PostAsync%2A>  <xref:System.Net.Http.HttpClient.PutAsync%2A>9.</xref:System.Net.Http.HttpClient.PutAsync%2A> <xref:System.Net.Http.HttpClient.SendAsync%2A>HttpClient ska instansieras en gång och återanvändas under ett program.</xref:System.Net.Http.HttpClient.SendAsync%2A> En instans skapades av en HttpClient klass för varje begäran att få slut på antal sockets som är tillgängliga under tunga laster. Detta resulterar i SocketException fel. Nedan visas ett exempel på användning av HttpClient korrekt.      ```c#   public class GoodController : ApiController   {       // OK       private static readonly HttpClient HttpClient;          static GoodController()       {           HttpClient = new HttpClient();       }   }      ```"
  example:
  - '[!code-cs[System.Net.Http.HttpClient#1](~/add/codesnippet/csharp/t-system.net.http.httpcl_1_1.cs)]'
  syntax:
    content: 'public class HttpClient : System.Net.Http.HttpMessageInvoker'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageInvoker
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpMessageInvoker.Dispose
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient()
  nameWithType: HttpClient.HttpClient()
  fullName: System.Net.Http.HttpClient.HttpClient()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> klass."
  syntax:
    content: public HttpClient ();
    parameters: []
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient(HttpMessageHandler)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> klass med en viss hanterare."
  remarks: "Om `null` har angetts för `handler` parameter, den <xref:System.Net.Http.WebRequestHandler>används som transport hanterare.</xref:System.Net.Http.WebRequestHandler>"
  syntax:
    content: public HttpClient (System.Net.Http.HttpMessageHandler handler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: "HTTP-hanterare stacken ska användas för begäranden skickas."
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient(HttpMessageHandler,Boolean)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler,Boolean)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler,Boolean)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> klass med en viss hanterare."
  syntax:
    content: public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: "Den <xref href=&quot;System.Net.Http.HttpMessageHandler&quot;> </xref> ansvarar för bearbetning av HTTP-svar-meddelanden."
    - id: disposeHandler
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den inre hanteraren bör tas bort av Dispose(), <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om du tänker återanvända den inre hanteraren."
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.BaseAddress
  id: BaseAddress
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
  fullName: System.Net.Http.HttpClient.BaseAddress
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hämtar eller anger basadressen för identifierare URI (Uniform Resource) av Internet-resursen som används när begäranden skickas."
  remarks: "När du skickar en <xref:System.Net.Http.HttpRequestMessage>med en relativ Uri meddelandet Uri läggs till egenskapen BaseAddress så här skapar du en absolut Uri.</xref:System.Net.Http.HttpRequestMessage>"
  syntax:
    content: public Uri BaseAddress { get; set; }
    return:
      type: System.Uri
      description: "Basadressen för identifierare URI (Uniform Resource) av Internet-resursen som används när begäranden skickas."
  overload: System.Net.Http.HttpClient.BaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.CancelPendingRequests
  id: CancelPendingRequests
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: CancelPendingRequests()
  nameWithType: HttpClient.CancelPendingRequests()
  fullName: System.Net.Http.HttpClient.CancelPendingRequests()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Avbryt alla väntande begäranden för den här instansen."
  remarks: "När du anropar den här metoden den <xref:System.Net.Http.HttpClient>instans kan användas för att köra andra begäranden.</xref:System.Net.Http.HttpClient>"
  syntax:
    content: public void CancelPendingRequests ();
    parameters: []
  overload: System.Net.Http.HttpClient.CancelPendingRequests*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders
  id: DefaultRequestHeaders
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
  fullName: System.Net.Http.HttpClient.DefaultRequestHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hämtar de rubriker som ska skickas med varje begäran."
  remarks: "Huvuden i den här egenskapen behöver inte anges för meddelanden igen."
  syntax:
    content: public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }
    return:
      type: System.Net.Http.Headers.HttpRequestHeaders
      description: "De rubriker som ska skickas med varje begäran."
  overload: System.Net.Http.HttpClient.DefaultRequestHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(String)
  nameWithType: HttpClient.DeleteAsync(String)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en begäran om borttagning för angiven Uri som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  id: DeleteAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(Uri)
  nameWithType: HttpClient.DeleteAsync(Uri)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en begäran om borttagning för angiven Uri som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(String,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en begäran om borttagning för angiven Uri med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  id: DeleteAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(Uri,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en begäran om borttagning för angiven Uri med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpClient.Dispose(Boolean)
  fullName: System.Net.Http.HttpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> och eventuellt omhändertar hanterade resurser."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och <xref:System.Object.Finalize%2A>metod.</xref:System.Object.Finalize%2A> `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. <xref:System.Object.Finalize%2A>anropar `Dispose` med `disposing` inställd på `false`.</xref:System.Object.Finalize%2A>       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Net.Http.HttpClient>referenser.</xref:System.Net.Http.HttpClient> Den här metoden startar den `Dispose()` metod för varje refererade till objekt.       När den här metoden anropas den <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>metoden anropas för att avbryta alla väntande begäranden.</xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> till versioner endast ohanterade resurser."
  overload: System.Net.Http.HttpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String)
  nameWithType: HttpClient.GetAsync(String)
  fullName: System.Net.Http.HttpClient.GetAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
  id: GetAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri)
  nameWithType: HttpClient.GetAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  id: GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till den angivna URI: N med ett alternativ för slutförande av HTTP som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs baserat på den `completionOption` parameter när del av eller alla svar (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "En HTTP-slutförande alternativet-värde som anger när åtgärden ska betraktas som slutförts."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till angiven Uri med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  id: GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till den angivna URI: N med ett alternativ för slutförande av HTTP som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs baserat på den `completionOption` parameter när del av eller alla svar (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "En HTTP-slutförande alternativet-värde som anger när åtgärden ska betraktas som slutförts."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  id: GetAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till angiven Uri med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till angiven Uri med ett alternativ för HTTP-slutförande och en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs baserat på den `completionOption` parameter när del av eller alla svar (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "En HTTP-slutförande alternativet-värde som anger när åtgärden ska betraktas som slutförts."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en GET-begäran till angiven Uri med ett alternativ för HTTP-slutförande och en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs baserat på den `completionOption` parameter när del av eller alla svar (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "En HTTP-slutförande alternativet-värde som anger när åtgärden ska betraktas som slutförts."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  id: GetByteArrayAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetByteArrayAsync(String)
  nameWithType: HttpClient.GetByteArrayAsync(String)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en bytematris i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetByteArrayAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  id: GetByteArrayAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetByteArrayAsync(Uri)
  nameWithType: HttpClient.GetByteArrayAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en bytematris i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetByteArrayAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  id: GetStreamAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStreamAsync(String)
  nameWithType: HttpClient.GetStreamAsync(String)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en dataström i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601> Den här metoden buffrar inte dataströmmen."
  syntax:
    content: public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetStreamAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  id: GetStreamAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStreamAsync(Uri)
  nameWithType: HttpClient.GetStreamAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en dataström i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601> Den här metoden buffrar inte dataströmmen."
  syntax:
    content: public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetStreamAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
  id: GetStringAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStringAsync(String)
  nameWithType: HttpClient.GetStringAsync(String)
  fullName: System.Net.Http.HttpClient.GetStringAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en sträng i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<string> GetStringAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetStringAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  id: GetStringAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStringAsync(Uri)
  nameWithType: HttpClient.GetStringAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStringAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skickar en GET-begäran till den angivna URI: N och returnera brödtext för svar som en sträng i en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svarstexten är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<string> GetStringAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.GetStringAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  id: MaxResponseContentBufferSize
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
  fullName: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hämtar eller anger det maximala antalet byte till bufferten vid läsning av svaret innehållet."
  remarks: "En app kan ange egenskapen MaxResponseContentBufferSize till ett lägre värde att begränsa storleken på bufferten vid läsning av svaret svaret. Om storleken på innehållet svar är större än egenskapen MaxResponseContentBufferSize, genereras ett undantag."
  syntax:
    content: public long MaxResponseContentBufferSize { get; set; }
    return:
      type: System.Int64
      description: "Maximalt antal byte till bufferten vid läsning av svaret innehållet. Standardvärdet för den här egenskapen är 2 GB."
  overload: System.Net.Http.HttpClient.MaxResponseContentBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den angivna storleken är mindre än eller lika med noll."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En åtgärd har redan startats på den aktuella instansen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den aktuella instansen har tagits bort."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  id: PostAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(String,HttpContent)
  nameWithType: HttpClient.PostAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en POST-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (string requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  id: PostAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(Uri,HttpContent)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en POST-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (Uri requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en POST-begäran med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en POST-begäran med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  id: PutAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(String,HttpContent)
  nameWithType: HttpClient.PutAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en PUT-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (string requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  id: PutAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(Uri,HttpContent)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en PUT-begäran till den angivna URI: N som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (Uri requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en PUT-förfrågan med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en PUT-förfrågan med en annullering token som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter att hela svaret (inklusive innehållet) är skrivskyddat.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Uri-begäran skickas till."
    - id: content
      type: System.Net.Http.HttpContent
      description: "HTTP-innehållet i begäran skickas till servern."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "En annullering token som kan användas av andra objekt eller trådar för att ta emot uppsägning."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  id: SendAsync(System.Net.Http.HttpRequestMessage)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en HTTP-begäran som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svaret inklusive innehåll läses.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "HTTP-begärandemeddelandet som ska skickas."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,HttpCompletionOption)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en HTTP-begäran som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Beroende på värdet för den `completionOption` parametern, den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när ett svar är tillgängligt eller hela svaret inklusive innehåll läses.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "HTTP-begärandemeddelandet som ska skickas."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "När åtgärden ska slutföras (som ett svar är tillgängligt eller när du har läst hela svaret innehållet)."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en HTTP-begäran som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när hela svaret inklusive innehåll läses.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "HTTP-begärandemeddelandet som ska skickas."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Annullering token att avbryta åtgärden."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skicka en HTTP-begäran som en asynkron åtgärd."
  remarks: "Åtgärden blockeras inte. Beroende på värdet för den `completionOption` parametern, den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs när ett svar är tillgängligt eller hela svaret inklusive innehåll läses.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "HTTP-begärandemeddelandet som ska skickas."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "När åtgärden ska slutföras (som ett svar är tillgängligt eller när du har läst hela svaret innehållet)."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Annullering token att avbryta åtgärden."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Begärandemeddelandet har redan skickats av den <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> instans."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "Begäran misslyckades på grund av ett underliggande problem, till exempel nätverksanslutning, DNS-fel, valideringen av servercertifikatet och timeout."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.Timeout
  id: Timeout
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpClient.Timeout
  fullName: System.Net.Http.HttpClient.Timeout
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hämtar eller anger timespan ska vänta innan tidsgränsen uppnås för begäran."
  remarks: "Standardvärdet är 100 000 millisekunder (100 sekunder).       För att ange oändlig timeout, ange egenskapsvärdet för <xref:System.Threading.Timeout.InfiniteTimeSpan>.</xref:System.Threading.Timeout.InfiniteTimeSpan>       En Domain Name System (DNS)-fråga kan ta upp till 15 sekunder att returnera timeout. Om din begäran innehåller ett värdnamn som kräver lösning och Timeout anges till ett värde mindre än 15 sekunder, kan det ta 15 sekunder eller mer innan en <xref:System.Net.WebException>genereras för att ange en tidsgräns på din begäran.</xref:System.Net.WebException>       Samma tidsgränsen ska gälla för alla begäranden med denna <xref:System.Net.Http.HttpClient>instans.</xref:System.Net.Http.HttpClient>  Du kan också ange olika tidsgränser för enskilda begäranden som använder en <xref:System.Threading.CancellationTokenSource>för en uppgift.</xref:System.Threading.CancellationTokenSource> Observera att endast kortare än två tidsgränser gäller."
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Timespan ska vänta innan begäran på grund av timeout."
  overload: System.Net.Http.HttpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den tidsgräns som angetts är mindre än eller lika med noll och inte <xref:System.Threading.Timeout.InfiniteTimeSpan>.</xref:System.Threading.Timeout.InfiniteTimeSpan>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "En åtgärd har redan startats på den aktuella instansen."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den aktuella instansen har tagits bort."
  platform:
  - net462
references:
- uid: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: System.Net.Http.HttpMessageInvoker
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.Http.HttpRequestException
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestException
  nameWithType: HttpRequestException
  fullName: System.Net.Http.HttpRequestException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Http.HttpClient.#ctor
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient()
  nameWithType: HttpClient.HttpClient()
  fullName: System.Net.Http.HttpClient.HttpClient()
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient(HttpMessageHandler)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler)
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient(HttpMessageHandler,Boolean)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler,Boolean)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpClient.BaseAddress
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
  fullName: System.Net.Http.HttpClient.BaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpClient.CancelPendingRequests
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: CancelPendingRequests()
  nameWithType: HttpClient.CancelPendingRequests()
  fullName: System.Net.Http.HttpClient.CancelPendingRequests()
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
  fullName: System.Net.Http.HttpClient.DefaultRequestHeaders
- uid: System.Net.Http.Headers.HttpRequestHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpRequestHeaders
  nameWithType: HttpRequestHeaders
  fullName: System.Net.Http.Headers.HttpRequestHeaders
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(String)
  nameWithType: HttpClient.DeleteAsync(String)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String)
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.Http.HttpResponseMessage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(Uri)
  nameWithType: HttpClient.DeleteAsync(Uri)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri)
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(String,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(Uri,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri,CancellationToken)
- uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClient.Dispose(Boolean)
  fullName: System.Net.Http.HttpClient.Dispose(Boolean)
- uid: System.Net.Http.HttpClient.GetAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String)
  nameWithType: HttpClient.GetAsync(String)
  fullName: System.Net.Http.HttpClient.GetAsync(String)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri)
  nameWithType: HttpClient.GetAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri)
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption)
- uid: System.Net.Http.HttpCompletionOption
  parent: System.Net.Http
  isExternal: false
  name: HttpCompletionOption
  nameWithType: HttpCompletionOption
  fullName: System.Net.Http.HttpCompletionOption
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync(String)
  nameWithType: HttpClient.GetByteArrayAsync(String)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(String)
- uid: System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Byte>
  nameWithType: Task<Byte>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Byte[]>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync(Uri)
  nameWithType: HttpClient.GetByteArrayAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(Uri)
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync(String)
  nameWithType: HttpClient.GetStreamAsync(String)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(String)
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync(Uri)
  nameWithType: HttpClient.GetStreamAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(Uri)
- uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync(String)
  nameWithType: HttpClient.GetStringAsync(String)
  fullName: System.Net.Http.HttpClient.GetStringAsync(String)
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync(Uri)
  nameWithType: HttpClient.GetStringAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStringAsync(Uri)
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
  fullName: System.Net.Http.HttpClient.MaxResponseContentBufferSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(String,HttpContent)
  nameWithType: HttpClient.PostAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent)
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(Uri,HttpContent)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent)
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(String,HttpContent)
  nameWithType: HttpClient.PutAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent)
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(Uri,HttpContent)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent)
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage)
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,HttpCompletionOption)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.Timeout
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Timeout
  nameWithType: HttpClient.Timeout
  fullName: System.Net.Http.HttpClient.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Http.HttpClient.#ctor*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: HttpClient.HttpClient
- uid: System.Net.Http.HttpClient.BaseAddress*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
- uid: System.Net.Http.HttpClient.CancelPendingRequests*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: CancelPendingRequests
  nameWithType: HttpClient.CancelPendingRequests
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
- uid: System.Net.Http.HttpClient.DeleteAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync
  nameWithType: HttpClient.DeleteAsync
- uid: System.Net.Http.HttpClient.Dispose*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Dispose
  nameWithType: HttpClient.Dispose
- uid: System.Net.Http.HttpClient.GetAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync
  nameWithType: HttpClient.GetAsync
- uid: System.Net.Http.HttpClient.GetByteArrayAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync
  nameWithType: HttpClient.GetByteArrayAsync
- uid: System.Net.Http.HttpClient.GetStreamAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync
  nameWithType: HttpClient.GetStreamAsync
- uid: System.Net.Http.HttpClient.GetStringAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync
  nameWithType: HttpClient.GetStringAsync
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
- uid: System.Net.Http.HttpClient.PostAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync
  nameWithType: HttpClient.PostAsync
- uid: System.Net.Http.HttpClient.PutAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync
  nameWithType: HttpClient.PutAsync
- uid: System.Net.Http.HttpClient.SendAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync
  nameWithType: HttpClient.SendAsync
- uid: System.Net.Http.HttpClient.Timeout*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Timeout
  nameWithType: HttpClient.Timeout
