### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RandomNumberGenerator
  id: RandomNumberGenerator
  children:
  - System.Security.Cryptography.RandomNumberGenerator.#ctor
  - System.Security.Cryptography.RandomNumberGenerator.Create
  - System.Security.Cryptography.RandomNumberGenerator.Create(System.String)
  - System.Security.Cryptography.RandomNumberGenerator.Dispose
  - System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)
  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])
  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])
  langs:
  - csharp
  name: RandomNumberGenerator
  nameWithType: RandomNumberGenerator
  fullName: System.Security.Cryptography.RandomNumberGenerator
  type: Class
  summary: "Representerar den abstrakta klassen från vilken alla implementeringar av kryptografiska slumpmässiga nummer generatorer härledd."
  remarks: "Kryptografiska slumpmässiga nummer generatorer skapa kryptografiskt starkt slumpmässiga värden.       Programkod använder inte den här klassen. Denna abstrakta klass har angetts som basklass för alla kryptografiska slumpmässiga nummer generatorer.       Använd den härledda klassen <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</xref:System.Security.Cryptography.RNGCryptoServiceProvider> för en implementering av en kryptografisk slumptalsgenerator"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RandomNumberGenerator : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: RandomNumberGenerator()
  nameWithType: RandomNumberGenerator.RandomNumberGenerator()
  fullName: System.Security.Cryptography.RandomNumberGenerator.RandomNumberGenerator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initierar en ny instans av <xref href=&quot;System.Security.Cryptography.RandomNumberGenerator&quot;> </xref>."
  remarks: "Du kan inte skapa en instans av en abstrakt klass. Programkod som skapar en ny instans av en härledd klass. Använd den härledda klassen <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</xref:System.Security.Cryptography.RNGCryptoServiceProvider> för en implementering av en kryptografisk slumptalsgenerator"
  syntax:
    content: protected RandomNumberGenerator ();
    parameters: []
  overload: System.Security.Cryptography.RandomNumberGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.Create
  id: Create
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: Create()
  nameWithType: RandomNumberGenerator.Create()
  fullName: System.Security.Cryptography.RandomNumberGenerator.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass, skapar du en instans av standardimplementering av en kryptografisk slumptalsgenerator som kan användas för att generera slumpmässiga data."
  syntax:
    content: public static System.Security.Cryptography.RandomNumberGenerator Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RandomNumberGenerator
      description: "En ny instans av en kryptografisk slumptalsgenerator."
  overload: System.Security.Cryptography.RandomNumberGenerator.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: Create(String)
  nameWithType: RandomNumberGenerator.Create(String)
  fullName: System.Security.Cryptography.RandomNumberGenerator.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Skapar en instans av den angivna implementeringen av en kryptografisk slumptalsgenerator när åsidosätts i en härledd klass."
  syntax:
    content: public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);
    parameters:
    - id: rngName
      type: System.String
      description: "Namnet på slumpmässiga nummer generator implementeringen ska användas."
    return:
      type: System.Security.Cryptography.RandomNumberGenerator
      description: "En ny instans av en kryptografisk slumptalsgenerator."
  overload: System.Security.Cryptography.RandomNumberGenerator.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose
  id: Dispose
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: Dispose()
  nameWithType: RandomNumberGenerator.Dispose()
  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass släpper alla resurser som används av den aktuella instansen av den <xref href=&quot;System.Security.Cryptography.RandomNumberGenerator&quot;> </xref> klass."
  remarks: "Anropa `Dispose` när du är klar med hjälp av <xref:System.Security.Cryptography.RandomNumberGenerator>.</xref:System.Security.Cryptography.RandomNumberGenerator> Den `Dispose` metoden lämnar kvar det <xref:System.Security.Cryptography.RandomNumberGenerator>oanvändbar.</xref:System.Security.Cryptography.RandomNumberGenerator> Efter att `Dispose`, måste du släppa alla referenser till den <xref:System.Security.Cryptography.RandomNumberGenerator>så skräpinsamlingen kan frigöra minne som den <xref:System.Security.Cryptography.RandomNumberGenerator>var upptar.</xref:System.Security.Cryptography.RandomNumberGenerator> </xref:System.Security.Cryptography.RandomNumberGenerator>       Mer information finns i [Rensa ohanterade resurser](~/add/includes/ajax-current-ext-md.md) och [implementera en metod för ta bort](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Alltid anropet `Dispose` innan du släpper senaste referens till <xref:System.Security.Cryptography.RandomNumberGenerator>.</xref:System.Security.Cryptography.RandomNumberGenerator> De resurser som den använder frigörs annars inte förrän skräpinsamlingen anrop av <xref:System.Security.Cryptography.RandomNumberGenerator>objektets `Finalize` metod.</xref:System.Security.Cryptography.RandomNumberGenerator>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.RandomNumberGenerator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RandomNumberGenerator.Dispose(Boolean)
  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass släpper de ohanterade resurser som används av den <xref href=&quot;System.Security.Cryptography.RandomNumberGenerator&quot;> </xref> och släpper du de hantera resurserna."
  remarks: "Den här metoden anropas av allmänheten `Dispose()` metod och `Finalize` metod. `Dispose()`anropar den skyddade `Dispose(Boolean)` metod med den `disposing` parametern `true`. `Finalize`anropar `Dispose` med `disposing` inställd på `false`.       När den `disposing` parametern är `true`, den här metoden Frigör alla resurser som innehas av alla hanterade objekt som den här <xref:System.Security.Cryptography.RandomNumberGenerator>referenser.</xref:System.Security.Cryptography.RandomNumberGenerator> Den här metoden startar den `Dispose()` metod för varje refererade till objekt."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Security.Cryptography.RandomNumberGenerator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])
  id: GetBytes(System.Byte[])
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: GetBytes(Byte[])
  nameWithType: RandomNumberGenerator.GetBytes(Byte[])
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass, fyller du en matris med byte med en slumpmässig kryptografiskt starkt sekvens av värden."
  remarks: "Längden på Bytematrisen anger hur många byte som slumpmässiga produceras."
  example:
  - "The following example creates a random sequence 100 bytes long and stores it in `random`.  \n  \n [!code-cs[Classic RandomNumberGenerator.GetBytes Example#1](~/add/codesnippet/csharp/m-system.security.crypto_63_1.cs)]\n [!code-cpp[Classic RandomNumberGenerator.GetBytes Example#1](~/add/codesnippet/cpp/m-system.security.crypto_63_1.cpp)]\n [!code-vb[Classic RandomNumberGenerator.GetBytes Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_63_1.vb)]"
  syntax:
    content: public abstract void GetBytes (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matris med kryptografiskt starkt slumpmässiga byte."
  overload: System.Security.Cryptography.RandomNumberGenerator.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: GetBytes(Byte[],Int32,Int32)
  nameWithType: RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Fyller angivna byte-matris med en slumpmässig kryptografiskt starkt sekvens av värden."
  syntax:
    content: public virtual void GetBytes (byte[] data, int offset, int count);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matris med kryptografiskt starkt slumpmässiga byte."
    - id: offset
      type: System.Int32
      description: "Index i matrisen för att starta åtgärden fill."
    - id: count
      type: System.Int32
      description: "Antal byte att fylla."
  overload: System.Security.Cryptography.RandomNumberGenerator.GetBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>count</code> är mindre än 0"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> överskrider tillåtna antalet <code>data</code>."
  platform:
  - net462
- uid: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])
  id: GetNonZeroBytes(System.Byte[])
  parent: System.Security.Cryptography.RandomNumberGenerator
  langs:
  - csharp
  name: GetNonZeroBytes(Byte[])
  nameWithType: RandomNumberGenerator.GetNonZeroBytes(Byte[])
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "När åsidosätts i en härledd klass, fyller du en matris med byte med en slumpmässig kryptografiskt starkt sekvens med andra värden än noll."
  remarks: "Längden på Bytematrisen anger hur många byte som slumpmässiga produceras."
  example:
  - "The following example creates a random sequence of 100 nonzero bytes and stores it in `random`.  \n  \n [!code-cpp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/cpp/cf0179cb-fbea-47fb-bad6-_1.cpp)]\n [!code-cs[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/csharp/cf0179cb-fbea-47fb-bad6-_1.cs)]\n [!code-vb[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/visualbasic/cf0179cb-fbea-47fb-bad6-_1.vb)]"
  syntax:
    content: public virtual void GetNonZeroBytes (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matris med kryptografiskt starkt slumpmässiga inte är noll byte."
  overload: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.RandomNumberGenerator.#ctor
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: RandomNumberGenerator()
  nameWithType: RandomNumberGenerator.RandomNumberGenerator()
  fullName: System.Security.Cryptography.RandomNumberGenerator.RandomNumberGenerator()
- uid: System.Security.Cryptography.RandomNumberGenerator.Create
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Create()
  nameWithType: RandomNumberGenerator.Create()
  fullName: System.Security.Cryptography.RandomNumberGenerator.Create()
- uid: System.Security.Cryptography.RandomNumberGenerator
  parent: System.Security.Cryptography
  isExternal: false
  name: RandomNumberGenerator
  nameWithType: RandomNumberGenerator
  fullName: System.Security.Cryptography.RandomNumberGenerator
- uid: System.Security.Cryptography.RandomNumberGenerator.Create(System.String)
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Create(String)
  nameWithType: RandomNumberGenerator.Create(String)
  fullName: System.Security.Cryptography.RandomNumberGenerator.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Dispose()
  nameWithType: RandomNumberGenerator.Dispose()
  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose()
- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RandomNumberGenerator.Dispose(Boolean)
  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: GetBytes(Byte[])
  nameWithType: RandomNumberGenerator.GetBytes(Byte[])
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: GetBytes(Byte[],Int32,Int32)
  nameWithType: RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: GetNonZeroBytes(Byte[])
  nameWithType: RandomNumberGenerator.GetNonZeroBytes(Byte[])
  fullName: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(Byte[])
- uid: System.Security.Cryptography.RandomNumberGenerator.#ctor*
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: RandomNumberGenerator
  nameWithType: RandomNumberGenerator.RandomNumberGenerator
- uid: System.Security.Cryptography.RandomNumberGenerator.Create*
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Create
  nameWithType: RandomNumberGenerator.Create
- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose*
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: Dispose
  nameWithType: RandomNumberGenerator.Dispose
- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes*
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: GetBytes
  nameWithType: RandomNumberGenerator.GetBytes
- uid: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes*
  parent: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: GetNonZeroBytes
  nameWithType: RandomNumberGenerator.GetNonZeroBytes
