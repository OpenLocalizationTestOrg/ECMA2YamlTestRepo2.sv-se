### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  id: HttpServerChannel
  children:
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  langs:
  - csharp
  name: HttpServerChannel
  nameWithType: HttpServerChannel
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  type: Class
  summary: "Implementerar en server kanaler för fjärranrop som använder HTTP-protokollet för att skicka meddelanden."
  remarks: "Kanaler transportera meddelanden över fjärrkommunikation gränser (till exempel mellan datorer i programdomäner). Klassen HttpServerChannel transporter meddelanden med HTTP-protokollet.       Kanaler som används av .NET Framework fjärrinfrastrukturen för att transportera fjärranrop. När en klient gör ett anrop till ett fjärrobjekt, serialiseras anropet till ett meddelande som skickas av en klientkanal och tas emot av en kanal för servern. Det är sedan deserialisera och bearbetas. Alla returnerade värden överförs av server-kanal och tas emot av klientkanalen.       För att utföra ytterligare bearbetning av meddelanden på serversidan, kan du ange en implementering av den <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>via alla meddelanden som bearbetas av HttpServerChannel har skickats.</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>       HttpServerChannel accepterar meddelanden serialiseras i binär eller SOAP-format.       En HttpServerChannel objektet har associerat konfigurationsegenskaper som kan anges vid körning i en konfigurationsfil (genom att anropa statiskhet <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>metod) eller programmässigt (genom att skicka en <xref:System.Collections.IDictionary>samling så att den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>konstruktor).</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> En lista över dessa konfigurationsegenskaper, finns i dokumentationen för <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>"
  example:
  - "The following code example shows how to use a HttpServerChannel object to set up a remoting server and its client. The example contains three parts:  \n  \n-   A server  \n  \n-   A client  \n  \n-   A remote object used by the server and the client  \n  \n The following code example shows a server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_4_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_4_1.cs)]  \n  \n The following code example shows a client for this server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/cpp/t-system.runtime.remotin_4_2.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/csharp/t-system.runtime.remotin_4_2.cs)]  \n  \n The following code example shows the remote object used by the server and the client.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/cpp/t-system.runtime.remotin_4_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/csharp/t-system.runtime.remotin_4_3.cs)]"
  syntax:
    content: 'public class HttpServerChannel : System.Runtime.Remoting.Channels.BaseChannelWithProperties, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelReceiverHook'
  inheritance:
  - System.Object
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelReceiverHook
  inheritedMembers:
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Add(System.Object,System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Clear
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Contains(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.CopyTo(System.Array,System.Int32)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Count
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsFixedSize
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsReadOnly
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsSynchronized
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Remove(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.SyncRoot
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.System#Collections#IEnumerable#GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Values
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.Properties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.SinksWithProperties
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref> klass."
  syntax:
    content: public HttpServerChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref> klass som lyssnar på den angivna porten."
  remarks: "Om du vill begära att en tillgänglig port tilldelas dynamiskt, ange den `port` parametern till 0 (noll)."
  syntax:
    content: public HttpServerChannel (int port);
    parameters:
    - id: port
      type: System.Int32
      description: "Porten som kanalen lyssnar."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref> klass med angiven kanal egenskaper och mottagare."
  remarks: "Läs mer om kanalen konfigurationsegenskaper [kanal och formaterare Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).       Om du inte behöver sink-funktionen kan du ange den `sinkProvider` parameter till `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/cpp/0921112d-a8ba-47f6-af0d-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/csharp/0921112d-a8ba-47f6-af0d-_1.cs)]"
  syntax:
    content: public HttpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>kanal egenskaper som innehåller konfigurationsinformation för den aktuella kanalen.</xref:System.Collections.IDictionary>"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "Den <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref> ska användas med den nya instansen av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En konfigurationsegenskap är felaktigt formaterad."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref> klass med det angivna namnet och som lyssnar på den angivna porten."
  remarks: "Den här konstruktorn anger den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A>egenskapen med hjälp av den `name` parameter.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A> Om du vill registrera mer än en kanal måste varje kanal ha ett unikt namn.       Om du vill begära att en tillgänglig port tilldelas dynamiskt, ange den `port` parametern till 0 (noll)."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/cpp/57b12cf5-84d7-4c00-b238-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/csharp/57b12cf5-84d7-4c00-b238-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på kanalen."
    - id: port
      type: System.Int32
      description: "Porten som kanalen lyssnar."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref> klassen på den angivna porten med det angivna namnet som lyssnar på den angivna porten och använder den angivna sinken."
  remarks: "Den här konstruktorn anger den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A>egenskapen med hjälp av den `name` parameter.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A>       Om du vill begära att en tillgänglig port tilldelas dynamiskt, ange den `port` parametern till 0 (noll).       Om du inte behöver sink-funktionen kan du ange den `sinkProvider` parameter till `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/cpp/460e07a0-c4b2-49f8-b602-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/csharp/460e07a0-c4b2-49f8-b602-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på kanalen."
    - id: port
      type: System.Int32
      description: "Porten som kanalen lyssnar."
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "Den <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref> som ska användas av kanalen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  id: AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Lägger till en URI som kanalen hook måste lyssna."
  syntax:
    content: public void AddHookChannelUri (string channelUri);
    parameters:
    - id: channelUri
      type: System.String
      description: "En URI som kanalen hook måste lyssna."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar kanal-specifika data."
  remarks: "Även om returneras som en instans av <xref:System.Object?displayProperty=fullName>, värdet för den här egenskapen kan omvandlas till en instans av <xref:System.Runtime.Remoting.Channels.ChannelDataStore>som beskriver kanalen som den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel>objekt lyssnar.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> </xref:System.Runtime.Remoting.Channels.ChannelDataStore> </xref:System.Object?displayProperty=fullName>"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "En <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref> instans som innehåller kanal-specifika data."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar namnet på den aktuella kanalen."
  remarks: "Varje registrerad kanal har ett unikt namn. Det här namnet används för att hämta en specifik kanal vid anrop av <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "En <xref:System.String>-objekt som innehåller namnet på kanalen.</xref:System.String>"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar prioritet för den aktuella kanalen."
  remarks: "Prioriteten bestämmer den ordning i vilken kanal visas data i en <xref:System.Runtime.Remoting.ObjRef>instance; högre prioritet kanaler visas före lägre prioritet kanaler.</xref:System.Runtime.Remoting.ObjRef> Klienter försöker ansluta till serverkanaler i den ordning som de visas i den <xref:System.Runtime.Remoting.ObjRef>instans.</xref:System.Runtime.Remoting.ObjRef> Standardprioritet är 1. negativt prioriteter tillåts."
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "Ett heltal som representerar den prioritet som tilldelas till kanalen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  id: ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar typ av lyssnare för att ansluta till (till exempel &quot;http&quot;)."
  remarks: "Det här värdet är inte skiftlägeskänsligt."
  example:
  - "The following code example shows how to use the ChannelScheme property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/cpp/p-system.runtime.remotin_52_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/csharp/p-system.runtime.remotin_52_1.cs)]"
  syntax:
    content: public string ChannelScheme { get; }
    return:
      type: System.String
      description: "Typ av lyssnare för att ansluta till."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  id: ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar kanal sink kedjan som använder den aktuella kanalen."
  remarks: ''
  example:
  - "The following code example shows how to use the ChannelSinkChain property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/cpp/p-system.runtime.remotin_84_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/csharp/p-system.runtime.remotin_84_1.cs)]"
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink ChannelSinkChain { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "Kedjan för kanal-mottagare som använder den aktuella kanalen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returnerar URI: N för den aktuella kanalen."
  remarks: ''
  example:
  - "The following code example shows how to use the GetChannelUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/cpp/m-system.runtime.remotin_75_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/csharp/m-system.runtime.remotin_75_1.cs)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: "URI för den aktuella kanalen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returnerar en matris med alla URL: er för ett objekt med angiven URI finns på aktuellt <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;> </xref>."
  remarks: "Den aktuella metoden används av <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>.</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>"
  example:
  - "The following code example shows how to use the GetUrlsForUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cs[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/csharp/b1e85e82-1fe9-423d-8938-_1.cs)]\n [!code-vb[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/visualbasic/b1e85e82-1fe9-423d-8938-_1.vb)]\n [!code-cpp[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/cpp/b1e85e82-1fe9-423d-8938-_1.cpp)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: "URI för objektet URL: er som krävs."
    return:
      type: System.String[]
      description: "En matris med URL: er för ett objekt med angiven URI finns på aktuellt <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  id: Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returnerar egenskapen angiven kanal."
  syntax:
    content: public override object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Nyckeln för kanalegenskap som ska hämtas."
    return:
      type: System.Object
      description: "En <xref:System.Object>som representerar egenskapen kanal som anges av <code> key </code>.</xref:System.Object>"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  id: Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar en <xref:System.Collections.ICollection>nycklar kanalegenskaperna är associerad med.</xref:System.Collections.ICollection>"
  remarks: "Kanal egenskaper används för att konfigurera kanalen vid körning. En lista över möjliga kanal egenskaper och ett exempel finns [[\\<topic://cpconchannelformatterconfigurationproperties >]](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "En <xref:System.Collections.ICollection>nycklar kanalegenskaperna är associerad med.</xref:System.Collections.ICollection>"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Extraherar URI-kanalen och välkända fjärrobjektet URI från angiven URL."
  remarks: ''
  example:
  - "The following code example shows how to use the Parse method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/cpp/01d5e48c-ec6f-487a-b7a0-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/csharp/01d5e48c-ec6f-487a-b7a0-_1.cs)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "Den URL som du kan hämta den URI: er."
    - id: objectURI
      type: System.String
      description: "När den här metoden returnerar innehåller en <xref:System.String>som innehåller URI för det välkända fjärrobjektet.</xref:System.String> Den här parametern skickas inte initierats."
    return:
      type: System.String
      description: "URI-kanalen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Anger den aktuella kanalen för att starta lyssna efter begäranden."
  remarks: "Det är inte nödvändigt att anropa den här metoden om du vill börja lyssna på en nyligen initierad kanal.       Använd den här metoden för att starta om lyssnar på en kanal efter den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening%2A>metoden har anropats slutar att lyssna på kanalen.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening%2A>       Om en dynamiskt tilldelad portnummer används i din kanal kan din portnumret ändras när du startar om lyssnar."
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Du bör alltid <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Anger den aktuella kanalen slutar att lyssna efter begäranden."
  remarks: "Använd den här metoden slutar att lyssna på en kanal. Om du vill starta om tjänsten lyssnar, använda den <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening%2A>metoden.</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening%2A>       Om en dynamiskt tilldelad portnummer används i din kanal kan din portnumret ändras när du startar om lyssnar."
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Du bör alltid <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> för <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  id: WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Hämtar ett booleskt värde som anger om <xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;> </xref> vill att ansluta till lyssnartjänsten utanför."
  remarks: ''
  example:
  - "The following code example shows how to use the WantsToListen property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/cpp/p-system.runtime.remotin_104_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/csharp/p-system.runtime.remotin_104_1.cs)]"
  syntax:
    content: public bool WantsToListen { get; set; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om <xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;> </xref> vill att ansluta till lyssnartjänsten utanför."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Channels.BaseChannelWithProperties
  isExternal: false
  name: System.Runtime.Remoting.Channels.BaseChannelWithProperties
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel
  nameWithType: HttpServerChannel.HttpServerChannel
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri
  nameWithType: HttpServerChannel.AddHookChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: HttpServerChannel.GetChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: HttpServerChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item
  nameWithType: HttpServerChannel.Item
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse
  nameWithType: HttpServerChannel.Parse
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening
  nameWithType: HttpServerChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening
  nameWithType: HttpServerChannel.StopListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
