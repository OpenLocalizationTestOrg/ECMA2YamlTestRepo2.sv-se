### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  id: PrefixEndpointAddressMessageFilter
  children:
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  type: Class
  summary: "Representerar en fråga som testar om ett meddelande som matchar en EndpointAddress med hjälp av en *långa prefixmatchning* för URI-komponent."
  remarks: "En <xref:System.ServiceModel.EndpointAddress>objektet innehåller en URI och ett valfritt insamling av adressering huvuden.</xref:System.ServiceModel.EndpointAddress> Huvuden för adressering och meddelandet är av kanoniserade för att användas vid likhetsjämförelse. Om en parameter visas mer än en gång i en <xref:System.ServiceModel.EndpointAddress>, motsvarande huvudet måste finnas i meddelandet minst så många gånger.</xref:System.ServiceModel.EndpointAddress>       Det här filtret utför samma fråga som <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, förutom att testa om det om ett meddelande som matchar en slutpunktsadress görs genom ett *långa prefixmatchning*.</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> Detta innebär att den URI som angavs i filtret inte behöver exakt matchar meddelandets URI, men måste finnas i den URI som ett prefix. Till exempel om ett filter anger &quot;www.foo.com&quot;-adress och ett meddelande som riktar sig till &quot;www.foo.com/customerA&quot;, ska sedan den URI-delen av frågan filtervillkoret uppfyllas. Rubrikdelen i filtreringsfrågan har dock fortfarande att göras.       Internet Information Services (IIS) och det underliggande filsystemet (NTFS eller FAT) är inte skiftlägeskänsliga. URI-jämförelser som utförs av den här klassen är också skiftlägeskänsliga. Så, till exempel http://www.microsoft.com utvärderas som motsvarar http://WWW.microsoft.com."
  syntax:
    content: 'public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref> klass."
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Den <xref:System.ServiceModel.EndpointAddress>mot vilka meddelanden som testas.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initierar en ny instans av den <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref> klass."
  remarks: "Om du har en webbtjänst som installeras på den lokala datorn, det finns många motsvarande sätt att referera till den, inklusive följande: - http://localhost/foo.svc - http://192.168.1.100/foo.svc - http://[my-machine-name]/foo.svc - http://[my-machine-name]. [my-company].com/foo.svc.       Om värdet för den `includeHostNameInComparison` parametern är `false`, ovan URI: er alla motsvara samma slutpunkten."
  syntax:
    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Den <xref:System.ServiceModel.EndpointAddress>mot vilka meddelanden som testas.</xref:System.ServiceModel.EndpointAddress>"
    - id: includeHostNameInComparison
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdnamnet ingår i slutpunkten adress jämförelsen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  id: Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Hämtar slutpunktsadressen som den <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref> testar meddelanden mot."
  syntax:
    content: public System.ServiceModel.EndpointAddress Address { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Den <xref:System.ServiceModel.EndpointAddress>som den <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref> testar meddelanden mot.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "Som ska läggas till."
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  id: IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Hämtar ett värde som anger om värdnamnet ingår i slutpunkten adress jämförelsen."
  remarks: "Om du har en webbtjänst som installeras på den lokala datorn, det finns många motsvarande sätt att referera till den, inklusive följande: - http://localhost/foo.svc - http://192.168.1.100/foo.svc - http://[my-machine-name]/foo.svc - http://[my-machine-name]. [my-company].com/foo.svc.       Standardvärdet för den här egenskapen är `false`, så den ovanstående URI: er alla motsvara samma slutpunkt, om du inte ändrar den här egenskapen."
  syntax:
    content: public bool IncludeHostNameInComparison { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdnamnet ingår i slutpunkten adress jämförelsen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Testar om meddelanden som uppfyller de angivna slutpunktsadressen."
  remarks: "Två överlagringar av den här metoden är likvärdiga eftersom det här filtret inte undersöka meddelandetexten endast adress, en längsta prefix-matchning och sidhuvuden."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Det <xref:System.ServiceModel.Channels.Message>objekt som ska testas.</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.ServiceModel.Channels.Message>objekt uppfyller slutpunktsadress som angetts i filtret; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Testar om buffrade meddelanden som uppfyller de angivna slutpunktsadressen."
  remarks: "Två överlagringar av den här metoden är likvärdiga eftersom det här filtret inte undersöka meddelandetexten endast adress, en längsta prefix-matchning och sidhuvuden."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "Det <xref:System.ServiceModel.Channels.MessageBuffer>objekt som ska testas.</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.ServiceModel.Channels.MessageBuffer>objekt uppfyller slutpunktsadressen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>messageBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: PrefixEndpointAddressMessageFilter
  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: PrefixEndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter
  isExternal: false
  name: Match
  nameWithType: PrefixEndpointAddressMessageFilter.Match
