### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Skapar en XML-Schema Definition Language (XSD) schema från en XML-dokument. Klassen XmlSchemaInference kan inte ärvas."
  remarks: "> [!IMPORTANT]> – Använd inte scheman från okända källor eller platser. Då kommer att kompromettera säkerheten för din kod.   >-XML-scheman (inklusive infogade scheman) är natur sårbar för denial of service-attacker. inte acceptera villkoren i ej betrodda scenarier.   >-Schemat verifieringsmeddelanden fel och undantag kan visa känslig information om innehållsmodellen eller URI sökvägar till schemafilen. Var noga med att inte visa den här informationen till ej betrodda anropare.       Klassen XmlSchemaInference i den <xref:System.Xml.Schema?displayProperty=fullName>namnområde kan du skapa ett schema för XML-Schema Definition Language (XSD) från strukturen för ett XML-dokument.</xref:System.Xml.Schema?displayProperty=fullName> Klassen XmlSchemaInference matar ut ett XML-schema som kan validera XML-dokumentet.       Klassen XmlSchemaInference stöder standarder för W3C XML- och XML-scheman. Det kan användas för att skapa ett nytt schema eller förfina ett befintligt schema."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> klass."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Skapar en XML-Schema Definition Language (XSD) schema från XML-dokument som ingår i den <xref:System.Xml.XmlReader>objekt som angetts.</xref:System.Xml.XmlReader>"
  remarks: "Metoden InferSchema härleder en eller flera scheman för W3C XML Schema Definition Language (XSD) från XML-instansen dokument som ingår i den <xref:System.Xml.XmlReader>objekt som angetts.</xref:System.Xml.XmlReader> Om XML-dokumentet innehåller element och attribut från flera namnområden och flera scheman skapas: en för varje namnområde som används i dokumentet. Primär schemat är det schema som kan validera hela XML-dokumentet och målnamnområde är samma som namnområdet för dokumentelement i XML-dokumentet.       Följande är viktigt att tänka på när du använder metoden InferSchema.      -Metoden InferSchema ignoreras eventuella `xsi:type`, `xsi:schemaLocation`, eller `xsi:noNamespaceSchemaLocation` attribut i XML-dokumentet.      -Om den <xref:System.Xml.XmlReader>objekt skrivs och informationen om den innehåller ignoreras.</xref:System.Xml.XmlReader>      -Om det <xref:System.Xml.XmlReader>objektet är placerad i ett element som inte är rotelement i XML-dokument, ett schema härleda för endast elementet.</xref:System.Xml.XmlReader> Om den <xref:System.Xml.XmlReader>objektet är inte placerad i ett element i <xref:System.Xml.XmlReader.Read%2A>metoden anropas för den <xref:System.Xml.XmlReader>parametern förrän ett element har påträffats (till exempel när <xref:System.Xml.XmlReader.NodeType%2A>är <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Nu startar processen härledning från elementet. Om inget element har påträffats till slutet av dokumentet, en <xref:System.ArgumentException>genereras.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Ett <xref:System.Xml.XmlReader>-objekt som innehåller XML-dokumentet för att skapa ett schema från.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt som innehåller de antydda scheman."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML-dokumentet är inte giltig."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "Den <xref:System.Xml.XmlReader>objektet är inte placerad på rotnoden eller på ett element.</xref:System.Xml.XmlReader> Det uppstår ett fel när schemat härledning."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Skapar en XML-Schema Definition Language (XSD) schema från XML-dokument som ingår i den <xref:System.Xml.XmlReader>objektet anges och förfinar antydda schemat med ett befintligt schema i den <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt som angetts med samma målnamnområdet.</xref:System.Xml.XmlReader>"
  remarks: "Metoden InferSchema härleder en eller flera scheman för W3C XML Schema Definition Language (XSD) från XML-instansen dokument som ingår i den <xref:System.Xml.XmlReader>objekt som angetts.</xref:System.Xml.XmlReader> Om XML-dokumentet innehåller element och attribut från flera namnområden, flera scheman skapas: en för varje namnområde som används i dokumentet. Primär schemat är det schema som kan validera hela XML-dokumentet och målnamnområde är samma som namnområdet för dokumentelement i XML-dokumentet.       Följande är viktigt att tänka på när du använder metoden InferSchema.      -Metoden InferSchema ignoreras eventuella `xsi:type`, `xsi:schemaLocation`, eller `xsi:noNamespaceSchemaLocation` attribut i XML-dokumentet.      -Om den <xref:System.Xml.XmlReader>objekt skrivs och informationen om den innehåller ignoreras.</xref:System.Xml.XmlReader>      -Om det <xref:System.Xml.XmlReader>objektet är placerad i ett element som inte är rotelement i XML-dokument, ett schema härleda för endast elementet.</xref:System.Xml.XmlReader> Om den <xref:System.Xml.XmlReader>objektet är inte placerad i ett element i <xref:System.Xml.XmlReader.Read%2A>metoden anropas för den <xref:System.Xml.XmlReader>parametern förrän ett element har påträffats (till exempel när <xref:System.Xml.XmlReader.NodeType%2A>är <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Nu startar processen härledning från elementet. Om inget element har påträffats till slutet av dokumentet, en <xref:System.ArgumentException>genereras.</xref:System.ArgumentException>      -Om en <xref:System.Xml.Schema.XmlSchemaSet>objektet skickas som en parameter och element som det <xref:System.Xml.XmlReader>objektet är placerat definieras i något av scheman i den <xref:System.Xml.Schema.XmlSchemaSet>, antydda schemat används för att förfina ett befintligt schema i den <xref:System.Xml.Schema.XmlSchemaSet>parameter med samma målnamnområdet; annars ett nytt schema härleda för namnområdet.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Ett <xref:System.Xml.XmlReader>-objekt som innehåller XML-dokumentet för att skapa ett schema från.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt som innehåller ett befintligt schema som används för att förfina antydda schemat."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "En <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objekt som innehåller de antydda scheman."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML-dokumentet är inte giltig."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "Den <xref:System.Xml.XmlReader>objektet är inte placerad på rotnoden eller på ett element.</xref:System.Xml.XmlReader> Det uppstår ett fel när schemat härledning."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar eller anger den <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>värde som påverkar förekomsten schemadeklarationer härledas från XML-dokumentet.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Om egenskapen förekomst är <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, första gången element påträffades i XML-dokument, schema-deklaration härleda som `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> När attribut påträffas schema-deklaration härleda som `use=&quot;required&quot;`.       Om egenskapen förekomst är <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, elementet schemadeklarationer härleda som `minOccurs=&quot;0&quot;`, och attributet schemadeklarationer härleda som `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Standardvärdet för egenskapen förekomst är <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Ett <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objekt.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Hämtar eller anger den <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>värde som påverkar typer härledas från XML-dokumentet.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Om egenskapen TypeInference anges till <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, den antydda typen av element och attribut i XML-dokument med enkelt innehåll är alltid `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Om egenskapen TypeInference anges till <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, mer specifika typer är härleda som `xs:date`, `xs:decimal`, `xs:unsignedByte`och så vidare.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Standardvärdet för egenskapen TypeInference är <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Ett <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objekt.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
