### YamlMime:ManagedReference
items:
- uid: System.Net.Http.ByteArrayContent
  id: ByteArrayContent
  children:
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  - System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: ByteArrayContent
  nameWithType: ByteArrayContent
  fullName: System.Net.Http.ByteArrayContent
  type: Class
  summary: "Ger HTTP innehåll baserat på en byte-matris."
  syntax:
    content: 'public class ByteArrayContent : System.Net.Http.HttpContent'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Dispose(System.Boolean)
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> klass."
  syntax:
    content: public ByteArrayContent (byte[] content);
    parameters:
    - id: content
      type: System.Byte[]
      description: "Innehåll som används för att initiera den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Initierar en ny instans av den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> klass."
  remarks: "Endast det angivna intervallet på `offset` parameter och `count` parametern används som innehåll. Syntax"
  syntax:
    content: public ByteArrayContent (byte[] content, int offset, int count);
    parameters:
    - id: content
      type: System.Byte[]
      description: "Innehåll som används för att initiera den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: offset
      type: System.Int32
      description: "Förskjutningen i antal byte i den `content` parameter som används för att initiera den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: count
      type: System.Int32
      description: "Antal byte i den `content` från den `offset` parameter som används för att initiera den <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> offset </code> parameter är mindre än noll.       - eller - <code> offset </code> parameter är större än längden på innehållet som anges av den <code> content </code> parameter.       - eller - <code> count  </code> parameter är mindre än noll.       - eller - <code> count </code> parameter är större än längden på innehållet som anges av den <code> content </code> parameter - minus det <code> offset </code> parameter."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Skapar en HTTP-Innehållsdataströmmen som en asynkron åtgärd för att läsa vars stödjande lagra är minne från de <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  remarks: "Åtgärden blockeras inte. Den returnerade <xref:System.Threading.Tasks.Task%601>objekt slutförs efter alla strömmens innehåll som har skapats.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Serialisera och skriver byte-matris anges i konstruktören för att en HTTP-Innehållsdataströmmen som en asynkron åtgärd."
  remarks: "Den här åtgärden blockerar inte. När den returnerade <xref:System.Threading.Tasks.Task>objekt slutförs hela byte-matris har skrivits till den `stream` parameter.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Mål-dataströmmen."
    - id: context
      type: System.Net.TransportContext
      description: "Information om transporten som Kanaltoken för bindningen. Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Task-objekt som representerar den asynkrona åtgärden."
  overload: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Bestämmer om en bytematris har en ogiltig längd i byte."
  remarks: "Metoden TryComputeLength ger en härledda innehållstypen möjligheten att beräkna den maximala längden. Detta är användbart för innehållstyper som ska kunna beräkna enkelt innehåll. Om datoranvändning innehållslängden är inte möjligt eller dyr (kräver att systemet att buffra hela innehållet där serialisering skulle vara dyr eller kräver att systemet allokera mycket minne), den här metoden kan returnera `false`. Om den här metoden returnerar `false`, innebär detta att chunked överföringen är nödvändig eller innehållet måste hämta buffras innan den skickas till servern.       Den här metoden returneras alltid `true` för <xref:System.Net.Http.ByteArrayContent>.</xref:System.Net.Http.ByteArrayContent>"
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Längden i byte på byte-matris."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> length </code> är en ogiltig längd, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.ByteArrayContent.#ctor*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent
  nameWithType: ByteArrayContent.ByteArrayContent
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: ByteArrayContent.SerializeToStreamAsync
- uid: System.Net.Http.ByteArrayContent.TryComputeLength*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength
  nameWithType: ByteArrayContent.TryComputeLength
