### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymWriter
  id: SymWriter
  children:
  - System.Diagnostics.SymbolStore.SymWriter.#ctor
  - System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Close
  - System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  - System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  - System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymWriter.Dispose
  - System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Finalize
  - System.Diagnostics.SymbolStore.SymWriter.GetWriter
  - System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  - System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  - System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  - System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  langs:
  - csharp
  name: SymWriter
  nameWithType: SymWriter
  fullName: System.Diagnostics.SymbolStore.SymWriter
  type: Class
  summary: "Representerar en symbol-skrivare för hanterad kod."
  remarks: "SymWriter-klassen innehåller metoder som definierar dokument, sekvens punkter, lexikala scope och variabler."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymWriterBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolWriter
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymWriterBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klass."
  syntax:
    content: public SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klassen som anger om du vill skapa en underliggande symbol-skrivaren."
  syntax:
    content: public SymWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en underliggande anges symbolen writer genom att anropa metoden <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om standard underliggande symbolen skrivare som ska skapas i stället.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  id: Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Stänger den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> och genomför symbolerna i arkivet för symbolen."
  remarks: "Efter det här anropet den <xref:System.Diagnostics.SymbolStore.SymWriter>blir ogiltig efter ytterligare uppdateringar.</xref:System.Diagnostics.SymbolStore.SymWriter>"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  id: CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Stänger den aktuella metoden."
  remarks: "När en metod har stängts kan du definiera symbolen från metoden."
  syntax:
    content: public virtual void CloseMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  id: CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Stänger det senaste namnområden."
  syntax:
    content: public virtual void CloseNamespace ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  id: CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Stänger den aktuella lexikala omfattningen."
  remarks: "Du kan inte definiera en variabel från inom metoden när ett scope har stängts."
  syntax:
    content: public virtual void CloseScope (int endOffset);
    parameters:
    - id: endOffset
      type: System.Int32
      description: "IL förskjutning precis efter sista instruktionen i omfånget."
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definierar ett källdokument."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "Den URL som identifierar dokumentet."
    - id: language
      type: System.Guid
      description: "Dokumentspråket som. Den här parametern kan vara <xref:System.Guid>.</xref:System.Guid>"
    - id: languageVendor
      type: System.Guid
      description: "Identiteten för leverantören för dokumentets språk. Den här parametern kan vara <xref:System.Guid>.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "Typ av dokumentet. Den här parametern kan vara <xref:System.Guid>.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Den <xref href=&quot;System.Diagnostics.SymbolStore.ISymbolDocumentWriter&quot;> </xref> objekt som representerar dokumentet."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genererar en <xref:System.NotSupportedException>i samtliga fall.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Den här parametern används inte."
    - id: name
      type: System.String
      description: "Den här parametern används inte."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Den här parametern används inte."
    - id: signature
      type: System.Byte[]
      description: "Den här parametern används inte."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Den här parametern används inte."
    - id: addr1
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr2
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr3
      type: System.Int32
      description: "Den här parametern används inte."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I samtliga fall."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genererar en <xref:System.NotSupportedException>i samtliga fall.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Den här parametern används inte."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Den här parametern används inte."
    - id: signature
      type: System.Byte[]
      description: "Den här parametern används inte."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Den här parametern används inte."
    - id: addr1
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr2
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr3
      type: System.Int32
      description: "Den här parametern används inte."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I samtliga fall."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definierar en variabel i den aktuella lexikala omfattningen."
  remarks: "Den `startOffset` och `endOffset` parametrar är valfria. Om värdet är noll, ignoreras de och variabeln definieras under hela hela intervallet. Om värdet är noll, omfattas de förskjutningarna för den aktuella omfattningen.       Du kan anropa DefineLocalVariable flera gånger för en variabel med samma namn som uppstår flera gånger i olika områden i ett omfång som offset. (I det här fallet förskjutningarna för start- och slutdatum får inte överlappa.)"
  syntax:
    content: public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);
    parameters:
    - id: name
      type: System.String
      description: "Lokala variabelnamnet."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Lokal variabel attribut som anges med hjälp av den <xref:System.Reflection.FieldAttributes>uppräknare.</xref:System.Reflection.FieldAttributes>"
    - id: signature
      type: System.Byte[]
      description: "Den lokala variabeln signaturen."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Adressen typer för `addr1`, `addr2`, och `addr3` med <xref href=&quot;System.Diagnostics.SymbolStore.SymAddressKind&quot;> </xref>."
    - id: addr1
      type: System.Int32
      description: "Den första adressen för den lokala variabeln specifikationen."
    - id: addr2
      type: System.Int32
      description: "Den andra adressen för den lokala variabeln specifikationen."
    - id: addr3
      type: System.Int32
      description: "Den tredje adressen för den lokala variabeln specifikationen."
    - id: startOffset
      type: System.Int32
      description: "Startförskjutningen för variabeln. Om noll, ignoreras den här parametern och variabeln är definierad i hela hela omfånget. Om det inte är noll, omfattas förskjutningarna för den aktuella omfattningen."
    - id: endOffset
      type: System.Int32
      description: "End-förskjutningen för variabeln. Om noll, ignoreras den här parametern och variabeln är definierad i hela hela omfånget. Om det inte är noll, omfattas förskjutningarna för den aktuella omfattningen."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genererar en <xref:System.NotSupportedException>i samtliga fall.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Den här parametern används inte."
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: "Den här parametern används inte."
    - id: sequence
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Den här parametern används inte."
    - id: addr1
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr2
      type: System.Int32
      description: "Den här parametern används inte."
    - id: addr3
      type: System.Int32
      description: "Den här parametern används inte."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I samtliga fall."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definierar en grupp av sekvens punkter inom den aktuella metoden."
  remarks: "Sekvens punkter används för att mappa mellan källfilplatserna och IL-offset.  Varje sekvenspunkt består av en IL förskjutning och källa filen region anges av start- och avsluta raden/kolumnen siffror förhållande till ett <xref:System.Diagnostics.SymbolStore.ISymbolDocument>objekt.</xref:System.Diagnostics.SymbolStore.ISymbolDocument>  Varje element i ett visst index för varje matrisen som motsvarar en viss sekvenspunkt. Varje rad i varje kolumn definierar början av ett uttryck i en metod. Matriserna ska sorteras i stigande ordning med förskjutningar. Förskjutningen är alltid förskjutning från början av metoden, i byte."
  syntax:
    content: public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Dokumentobjekt som aktivitetssekvensen poäng definieras."
    - id: offsets
      type: System.Int32[]
      description: "IL-förskjutningen av sekvens pekar mätt från början av metoden."
    - id: lines
      type: System.Int32[]
      description: "Den startar radnummer sekvens punkter."
    - id: columns
      type: System.Int32[]
      description: "Första referensens sekvens punkter."
    - id: endLines
      type: System.Int32[]
      description: "Avslutande radnummer sekvens punkter."
    - id: endColumns
      type: System.Int32[]
      description: "Avslutande referensens sekvens punkter."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Släpper de resurser som används av den aktuella instansen av den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klass."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Anropas av den <> </> *> och <> </> *> metoder för att frigöra hanterade och ohanterade resurser som används av den aktuella instansen av den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> klass."
  remarks: "Den här metoden anropas av allmänheten <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>och <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A>metoder, anropar inte den här metoden direkt.</xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att släppa hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Släpper ohanterade resurser och utför andra rensningsåtgärder innan den <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> frigöras vid en skräpinsamling."
  remarks: "Den här metoden åsidosätter <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Programkod bör inte anropa den här metoden. ett objekt `Finalize` metoden anropas automatiskt under skräpinsamling, såvida inte slutförande av skräpinsamlingen har inaktiverats av ett anrop till den <xref:System.GC.SuppressFinalize%2A>metoden.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  id: GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*
      description: "Som ska läggas till."
  overload: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  id: Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Anger gränssnittet metadata sändare ska associeras med den här skrivaren."
  remarks: "<xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A>Anger också namnet på utdatafilen där felsökningssymboler skrivs.</xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> Den här metoden kan bara anropas en gång och måste anropas innan andra writer-metoder kallas."
  syntax:
    content: public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);
    parameters:
    - id: emitter
      type: System.IntPtr
      description: "Metadata sändare gränssnitt."
    - id: filename
      type: System.String
      description: "Filnamnet som felsökningssymboler skrivs. Vissa skrivare behöver ett filnamn, medan andra inte. Om ett filnamn har angetts för en skrivare som inte använder filnamn, ignoreras den här parametern."
    - id: fFullBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Anger att detta är att återskapa; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anger en inkrementell kompilering."
  overload: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  id: InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Initierar symbol-skrivaren. Den här metoden ska inte anropas direkt; den anropas av konstruktorn."
  syntax:
    content: public void InitWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en underliggande anges symbolen writer genom att anropa metoden <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om standard underliggande symbolen skrivare som ska skapas i stället.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Öppnar en metod att placera symbolinformation."
  remarks: "Den angivna metoden blir den aktuella metoden att definiera sekvens punkter, parametrar och lexikala scope-anrop. Det finns en implicit lexikala omfattning runt hela metoden. Öppna en metod som tidigare har stängts raderas alla tidigare definierad symboler för metoden."
  syntax:
    content: public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Metadatatoken för metoden som ska öppnas."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  id: OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Öppnar ett nytt namnområde."
  remarks: "Anropa den här metoden innan du definierar metoder eller variabler som finns i ett namnområde. Namnområden kan kapslas."
  syntax:
    content: public virtual void OpenNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på det nya namnområdet."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  id: OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Öppnar ett nytt lexikala scope i den aktuella metoden."
  remarks: "Detta scope blir den nya aktuella omfattningen och flyttas till en grupp av omfång. Scope måste utgör en hierarki. Nivå får inte överlappa varandra.       Scope-identifierare är endast giltiga i den aktuella metoden."
  syntax:
    content: public virtual int OpenScope (int startOffset);
    parameters:
    - id: startOffset
      type: System.Int32
      description: "IL-förskjutningen i byte från början av metoden till den första instruktionen i lexikala omfånget."
    return:
      type: System.Int32
      description: "En täckande scope-identifierare som kan användas med <> </> *> att definiera start- och slutdatum förskjutningarna för ett omfång vid ett senare tillfälle. I det här fallet förskjutningarna skickades till OpenScope och <> </> *> ignoreras. Scope-identifierare är endast giltig i den aktuella metoden."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Genererar en <xref:System.NotSupportedException>i samtliga fall.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);
    parameters:
    - id: startDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Den här parametern används inte."
    - id: startLine
      type: System.Int32
      description: "Den här parametern används inte."
    - id: startColumn
      type: System.Int32
      description: "Den här parametern används inte."
    - id: endDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Den här parametern används inte."
    - id: endLine
      type: System.Int32
      description: "Den här parametern används inte."
    - id: endColumn
      type: System.Int32
      description: "Den här parametern används inte."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "I samtliga fall."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  id: SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definierar offset intervall för det angivna lexikala omfånget."
  syntax:
    content: public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);
    parameters:
    - id: scopeID
      type: System.Int32
      description: "Identifierare för lexikala omfånget som returneras av den <xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>metoden.</xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>"
    - id: startOffset
      type: System.Int32
      description: "IL-förskjutningen i början av lexikala omfånget."
    - id: endOffset
      type: System.Int32
      description: "I slutet av området lexikala IL-förskjutningen."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Definierar ett attribut när attributets namn och attribut-värde."
  remarks: "SetSymAttribute-metoden är endast associerade med symboliska information och är inte ett anpassat attribut i metadata."
  syntax:
    content: public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Metadatatoken som attributet definieras."
    - id: name
      type: System.String
      description: "Attributets namn."
    - id: data
      type: System.Byte[]
      description: "Attributvärdet."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  id: SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Anger den underliggande [ISymUnmanagedWriter gränssnittet](~/add/includes/ajax-current-ext-md.md) (motsvarande ohanterad API) som en hanterad <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> använder för att generera symboler."
  remarks: "Den underliggande [ISymUnmanagedWriter gränssnittet](../Topic/ISymUnmanagedWriter%20Interface.md) (motsvarande ohanterad API) gränssnitt representerar en symbol-skrivare för hanterad kod. Gränssnittet tillhandahåller metoder för att definiera dokument, sekvens punkter, lexikala scope och variabler."
  syntax:
    content: public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);
    parameters:
    - id: underlyingWriter
      type: System.IntPtr
      description: "En <xref:System.IntPtr>typen pekare till kod som är underliggande skrivaren.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Identifierar användardefinierad-metod som startpunkt för den aktuella modulen."
  remarks: "Detta är normalt main-metoden."
  syntax:
    content: public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);
    parameters:
    - id: entryMethod
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Metadatatoken för den metod som är inmatningen punkt."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  id: UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Anger att det angivna, fullständigt namnområdesnamnet används omfattas öppna lexikala."
  remarks: "Stänger den aktuella omfattningen förhindrar att detta scope använder namnområdet. Namnområdet fortfarande används i alla scope som ärver från den aktuella öppna omfattningen."
  syntax:
    content: public virtual void UsingNamespace (string fullName);
    parameters:
    - id: fullName
      type: System.String
      description: "Det fullständigt kvalificerade namnet på namnområdet."
  overload: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymWriterBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymWriterBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymAddressKind
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymAddressKind
  nameWithType: SymAddressKind
  fullName: System.Diagnostics.SymbolStore.SymAddressKind
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter
  nameWithType: SymWriter.SymWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Close*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close
  nameWithType: SymWriter.Close
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod
  nameWithType: SymWriter.CloseMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace
  nameWithType: SymWriter.CloseNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope
  nameWithType: SymWriter.CloseScope
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument
  nameWithType: SymWriter.DefineDocument
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField
  nameWithType: SymWriter.DefineField
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable
  nameWithType: SymWriter.DefineGlobalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable
  nameWithType: SymWriter.DefineLocalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter
  nameWithType: SymWriter.DefineParameter
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints
  nameWithType: SymWriter.DefineSequencePoints
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose
  nameWithType: SymWriter.Dispose
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize
  nameWithType: SymWriter.Finalize
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter
  nameWithType: SymWriter.GetWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize
  nameWithType: SymWriter.Initialize
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter
  nameWithType: SymWriter.InitWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod
  nameWithType: SymWriter.OpenMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace
  nameWithType: SymWriter.OpenNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope
  nameWithType: SymWriter.OpenScope
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange
  nameWithType: SymWriter.SetMethodSourceRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange
  nameWithType: SymWriter.SetScopeRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute
  nameWithType: SymWriter.SetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter
  nameWithType: SymWriter.SetUnderlyingWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: SymWriter.SetUserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace
  nameWithType: SymWriter.UsingNamespace
