### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Transformerar XML-data med hjälp av en Extensible Stylesheet Language för transformationer (XSLT) formatmall."
  remarks: "> [!NOTE]> XslTransform klassen är föråldrad i Microsoft .NET Framework version 2.0. Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       XslTransform stöder XSLT 1.0-syntax. XSLT-formatmallen måste använda namnområdet `http://www.w3.org/1999/XSL/Transform`.       Ytterligare argument kan också läggas till en formatmall med <xref:System.Xml.Xsl.XsltArgumentList>klass.</xref:System.Xml.Xsl.XsltArgumentList> Den här klassen innehåller indataparametrar för style blad och tillägget objekt som kan anropas från formatmall.       Omvandla XML-data: 1.  Skapa ett XslTransform-objekt.      2.  Använd den <xref:System.Xml.Xsl.XslTransform.Load%2A>metod för att läsa in formatmall för omvandlingen.</xref:System.Xml.Xsl.XslTransform.Load%2A> Den här metoden har flera överlagringar och kan läsa in en formatmall blad med hjälp av en <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, eller en URL med platsen för filen.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  Använd den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metod för att omvandla XML-data.</xref:System.Xml.Xsl.XslTransform.Transform%2A> Den här metoden har flera överlagringar och kan hantera olika typer av inkommande och utgående. Du kan också ange en <xref:System.Xml.Xsl.XsltArgumentList>som innehåller ytterligare argument ska användas som indata under omvandlingen.</xref:System.Xml.Xsl.XsltArgumentList>       **Säkerhetsaspekter** när du skapar ett program som använder klassen XslTransform, bör du vara medveten om följande objekt och deras konsekvenser:-tillägg-objekt är aktiverade som standard. Om en <xref:System.Xml.Xsl.XsltArgumentList>objekt som innehåller tillägget objekt har överförts till den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden de används.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -XSLT formatmallar kan innehålla referenser till andra filer och inbäddade skriptblock. En angripare kan utnyttja detta genom att tillhandahålla du med data eller formatmallar som när den körs kommer systemet att bearbeta tills datorn börjar ta slut på resurser.      -XSLT program som körs i en miljö med blandade förtroende kan resultera i formatet blad förfalskning. Till exempel en obehörig användare kan läsa in ett objekt med en skadlig formatmall och lämnar den till en annan användare som anropar sedan den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden och utför omvandlingen.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       Dessa säkerhetsproblem kan begränsas genom att inte acceptera XslTransform objekt, XSLT-formatmallar eller XML-källa data från otillförlitliga källor.       **Stöd för skript** den här klassen stöder inbäddat skript med hjälp av den `msxsl:script` element.       I version 1.1 av .NET Framework avgör bevis på formatmall som vilka behörigheter som ges till inbäddade skript.      – Om formatmall lästes in från en identifierare URI (Uniform Resource), används URI: N för att skapa bevis. Den här bevis innehåller URI tillsammans med dess plats och zon.      -Om formatmall lästes in med en annan källa, kan du ange bevis genom att skicka en <xref:System.Security.Policy.Evidence?displayProperty=fullName>objekt till den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> Annars har skript sammansättningen fullständigt förtroende.       Delvis betrodda anropare: `UnmanagedCode` behörighet krävs för att kompilera inbäddat skript. `ControlEvidence`behörighet krävs för att ge <xref:System.Security.Policy.Evidence>till den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> En <xref:System.Security.SecurityException>genereras om anroparen inte har tillräcklig behörighet.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       Den `msxsl:script` element har följande krav: - `msxsl:script` element som tillhör den `urn:schemas-microsoft-com:xslt` namnområde. Formatmallen måste inkludera namnområdesdeklarationen `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.      - `msxsl:script` Element kan innehålla en `language` attribut som anger vilket skriptspråk som ska användas. Värdet för den `language` attributet måste vara något av följande: C#, CSharp, VB, VisualBasic, JScript eller JavaScript. Eftersom språkets namn inte är skiftlägeskänsligt, är JavaScript och javascript såväl giltig. Om en `language` attributet inte anges, används som standard JScript.      - `msxsl:script` Element måste innehålla en `implements-prefix` attributet som innehåller det prefix som representerar det namnområde som är associerade med skriptblocket. Det här namnområdet måste definieras inom formatmall. En formatmall kan innehålla flera skriptblock som är grupperade efter namnområde. Du kan inte ha skriptblock med flera språk i samma namnområde. Skriptblock kan anropa en funktion som definierats i ett annat skriptblock anges i skriptblocken finnas inom samma namnområde. Innehållet i ett skriptblock parsas enligt de regler och syntaxen för skriptspråket (anges av den `language` attribut). Till exempel om du har ett C#-skriptblock, kommentarer skulle föregås av den `//` tecken. Kommentarer måste vara giltigt XML-innehåll.       `Note`Vi rekommenderar att du omsluter skriptblock i en CDATA-sektion.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```Funktioner kan deklareras inuti den `msxsl:script` element. I följande tabell visas de namnområden som stöds som standard.      | Namnområden som stöds | Beskrivning |   |--------------------------|-----------------|   | `System`| Systemklasser som. |   | `System.Collection`| Samlingsklasser. |   | `System.Text`| Text som hanterar klasser. |   | `System.Xml`| Core XML-klasser. |   | `System.Xml.Xsl`| XSLT-klasser. |   | `System.Xml.XPath`| XML Path Language (XPath) klasser. |       Angivna argument och returvärden som definieras av skript-funktion måste vara något av följande World Wide Web Consortium (W3C) som anges nedan. I följande tabell beskrivs mappningen mellan W3C-typer, XPath eller XSLT, och de motsvarande .NET Framework-klasserna.      | W3C-typen | Motsvarande .NET-klass |   |--------------|---------------------------|   | Sträng (XPath) | `System.String`|   | Booleskt värde (XPath) | `System.Boolean`|   | Antal (XPath) | `System.Double`|   | Leda till trädet Fragment (XSLT) | `System.Xml.XPath.XPathNavigator`|   | Noden ange (XPath) | `System.Xml.XPath.XPathNodeIterator`|       Om funktionen skriptet använder följande numeriska typer: Int16 UInt16, Int32, UInt32, Int64, UInt64, enskild eller Decimal, typerna är tvingas till dubbla, som mappar till W3C XPath nummer.       Ett undantag när en funktion anropas som går inte att konvertera argumentet resultatet till en av typerna som krävs.      > [!NOTE]  >   `msxsl:script` och `msxsl:node-list` är de enda funktionerna från den `urn:schemas-microsoft-com:xslt` namnområde som stöds av klassen XslTransform.       XslTransform har möjlighet att använda vanliga CLR (runtime) språkkod som en mekanism för tillägget. Detta åstadkoms genom att skicka en instans av en klass till klassen XslTransform och anropar dess offentliga metoder inom en XSLT-formatmall. Metoder som har definierats med den `params` nyckelord som gör att ett okänt antal parametrar som ska skickas, fungerar inte i det här scenariot. Se [params](~/add/includes/ajax-current-ext-md.md) för mer information.       Mer information finns i [XSLT-transformeringar med klassen XslTransform](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> klass."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmall som anges av en URL."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Externa resurser löses med hjälp av en <xref:System.Xml.XmlUrlResolver>med autentiseringsuppgifterna för användaren.</xref:System.Xml.XmlUrlResolver> Om formatet blad finns på en nätverksresurs som kräver autentisering, använder överlagring som tar ett <xref:System.Xml.XmlResolver>som ett av argumenten och ange ett <xref:System.Xml.XmlResolver>med autentiseringsuppgifterna som krävs.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. URI: N på formatmall som används för att skapa bevis som används för sammansättningen. Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "Den URL som anger XSLT-formatmallen att läsa in."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Läsa in resursen är inte en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddat skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Externa resurser löses med hjälp av en <xref:System.Xml.XmlUrlResolver>med autentiseringsuppgifterna för användaren.</xref:System.Xml.XmlUrlResolver> Om formatet blad finns på en nätverksresurs som kräver autentisering, använder överlagring som tar ett <xref:System.Xml.XmlResolver>som ett av argumenten och ange ett <xref:System.Xml.XmlResolver>med autentiseringsuppgifterna som krävs.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Formatmall som läses in från den aktuella noden för det <xref:System.Xml.XmlReader>via alla dess underordnade.</xref:System.Xml.XmlReader> På så sätt kan du använda en del av ett dokument som formatmall. När den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden returnerar den <xref:System.Xml.XmlReader>är placerad på nästa nod efter slutet av formatmall.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> Om dokumentet är slut, den <xref:System.Xml.XmlReader>är placerad i slutet av filen (EOF).</xref:System.Xml.XmlReader>       Om formatmall innehåller entiteter, bör du ange en <xref:System.Xml.XmlReader>som kan matcha entiteter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerar `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I det här fallet en <xref:System.Xml.XmlValidatingReader>kan användas.</xref:System.Xml.XmlValidatingReader>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att tillhandahålla bevis med hjälp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Ett <xref:System.Xml.XmlReader>-objekt som innehåller XSLT-formatmallen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Externa resurser löses med hjälp av en <xref:System.Xml.XmlUrlResolver>med autentiseringsuppgifterna för användaren.</xref:System.Xml.XmlUrlResolver> Om formatet blad finns på en nätverksresurs som kräver autentisering, använder överlagring som tar ett <xref:System.Xml.XmlResolver>som ett av argumenten och ange ett <xref:System.Xml.XmlResolver>med autentiseringsuppgifterna som krävs.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att tillhandahålla bevis med hjälp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller XSLT-formatmall."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Läsa in resursen är inte en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Externa resurser löses med hjälp av en <xref:System.Xml.XmlUrlResolver>med autentiseringsuppgifterna för användaren.</xref:System.Xml.XmlUrlResolver> Om formatet blad finns på en nätverksresurs som kräver autentisering, använder överlagring som tar ett <xref:System.Xml.XmlResolver>som ett av argumenten och ange ett <xref:System.Xml.XmlResolver>med autentiseringsuppgifterna som krävs.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Formatmall som läses in från den aktuella positionen i <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Om du vill använda en del av inläst dokument som formatmall, navigerar du till noden som börjar på formatmall. När metoden Load returnerar den <xref:System.Xml.XPath.XPathNavigator>placeras i början av formatmall (på den `xsl:style sheet` nod).</xref:System.Xml.XPath.XPathNavigator>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att tillhandahålla bevis med hjälp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt som innehåller XSLT-formatmall."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmall som anges av en URL."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. URI: N på formatmall som används för att skapa bevis som används för sammansättningen. Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "Den URL som anger XSLT-formatmallen att läsa in."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> du använder för att läsa in formatmall och eventuella style-blad som refereras i `xsl:import` och `xsl:include` element.       Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, standard <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> med ingen användare autentiseringsuppgifter används för att öppna formatmall. Standard <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> inte används för att matcha alla externa resurser i formatmallen, så `xsl:import` och `xsl:include` element inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden Load har slutförts."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Läsa in resursen är inte en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddat skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Formatmall som läses in från den aktuella noden för det <xref:System.Xml.XmlReader>via alla dess underordnade.</xref:System.Xml.XmlReader> På så sätt kan du använda en del av ett dokument som formatmall.       När metoden Load returnerar, <xref:System.Xml.XmlReader>är placerad på nästa nod efter slutet av formatmall.</xref:System.Xml.XmlReader> Om dokumentet är slut, den <xref:System.Xml.XmlReader>är placerad i slutet av filen (EOF).</xref:System.Xml.XmlReader>       Om formatmall innehåller entiteter, bör du ange en <xref:System.Xml.XmlReader>som kan matcha entiteter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerar `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I det här fallet en <xref:System.Xml.XmlValidatingReader>kan användas.</xref:System.Xml.XmlValidatingReader>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att tillhandahålla bevis med hjälp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Ett <xref:System.Xml.XmlReader>-objekt som innehåller XSLT-formatmallen.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden Load har slutförts."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att tillhandahålla bevis med hjälp av den <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>metoden.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller XSLT-formatmall."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Läsa in resursen är inte en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Formatmall som läses in från den aktuella positionen i <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Om du vill använda en del av inläst dokument som formatmall, navigerar du till noden som börjar på formatmall. När metoden Load returnerar den <xref:System.Xml.XPath.XPathNavigator>placeras i början av formatmall (på den `xsl:style sheet` nod).</xref:System.Xml.XPath.XPathNavigator>       Om formatmall innehåller inbäddade skript, kompileras skriptet till en sammansättning. Sammansättningen har fullständigt förtroende. Det rekommenderade sättet är att ge med hjälp av <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Om anroparen inte har `UnmanagedCode` behörighet, inbäddat skript har inte kompilerats och en <xref:System.Security.SecurityException>genereras.</xref:System.Security.SecurityException> Se <xref:System.Security.Permissions.SecurityPermission>och <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>för mer information.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt som innehåller XSLT-formatmall."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Formatmall innehåller inbäddade skript och anroparen har inte <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> Den här metoden kan du begränsa behörigheterna för formatmall genom att ange bevis."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den här metoden läser in XSLT-formatmallen, inklusive eventuella formatmallar som refereras i `xsl:include` och `xsl:import` element. Formatmall som läses in från den aktuella noden för det <xref:System.Xml.XmlReader>via alla dess underordnade.</xref:System.Xml.XmlReader> På så sätt kan du använda en del av ett dokument som formatmall.       När metoden Load returnerar, <xref:System.Xml.XmlReader>är placerad på nästa nod efter slutet av formatmall.</xref:System.Xml.XmlReader> Om dokumentet är slut, den <xref:System.Xml.XmlReader>är placerad i slutet av filen (EOF).</xref:System.Xml.XmlReader>       Om formatmall innehåller entiteter, bör du ange en <xref:System.Xml.XmlReader>som kan matcha entiteter (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> returnerar `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> I det här fallet en <xref:System.Xml.XmlValidatingReader>kan användas.</xref:System.Xml.XmlValidatingReader>       Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det finns olika sätt att bevisa. I följande tabell beskrivs vilken typ av bevis att tillhandahålla för vanliga scenarier."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Ett <xref:System.Xml.XmlReader>-objekt som innehåller formatmall att läsa in.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> på sammansättningen som genererats för skriptblock på XSLT-formatmall.       Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript inte stöds bearbetas XSLT `document()` funktionen stöds inte och Privilegierade tillägget objekt är inte tillåtna.       Anroparen måste ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet för att kunna ange sammansättningsbevis för sammansättningen för skript. Delvis betrodda anropare kan ange den här parametern <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refererade formatmall kräver funktioner som inte tillåts av bevis tillhandahålls.       Anroparen försöker ange bevis och inte har <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>. Den här metoden kan du begränsa behörigheterna för formatmall genom att ange bevis."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det finns olika sätt att bevisa. I följande tabell beskrivs vilken typ av bevis att tillhandahålla för vanliga scenarier."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller XSLT-formatmall."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> på sammansättningen som genererats för skriptblock på XSLT-formatmall.       Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript inte stöds bearbetas XSLT `document()` funktionen stöds inte och Privilegierade tillägget objekt är inte tillåtna.       Anroparen måste ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet för att kunna ange sammansättningsbevis för sammansättningen för skript. Delvis betrodda anropare kan ange den här parametern <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Läsa in resursen är inte en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refererade formatmall kräver funktioner som inte tillåts av bevis tillhandahålls.       Anroparen försöker ange bevis och inte har <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Läser in XSLT-formatmallen som ingår i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>. Den här metoden kan du begränsa behörigheterna för formatmall genom att ange bevis."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Formatmall som läses in från den aktuella positionen i <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Om du vill använda en del av inläst dokument som formatmall, navigerar du till noden som börjar på formatmall. När metoden Load returnerar den <xref:System.Xml.XPath.XPathNavigator>placeras i början av formatmall (på den `xsl:style sheet` nod).</xref:System.Xml.XPath.XPathNavigator>       Om problem med den <xref:System.Xml.Xsl.XslTransform.Load%2A>metoden och style sheets med inbäddat skript finns i artikeln Q316755 i Microsoft Knowledge Base på http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Det finns olika sätt att bevisa. I följande tabell beskrivs vilken typ av bevis att tillhandahålla för vanliga scenarier."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objekt som innehåller formatmall att läsa in."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att läsa in några formatmallar som refereras i `xsl:import` och `xsl:include` element. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, externa resurser inte är lösta.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Load*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Den <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> på sammansättningen som genererats för skriptblock på XSLT-formatmall.       Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, skript inte stöds bearbetas XSLT `document()` funktionen stöds inte och Privilegierade tillägget objekt är inte tillåtna.       Anroparen måste ha <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet för att kunna ange sammansättningsbevis för sammansättningen för skript. Delvis betrodda anropare kan ange den här parametern <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Den aktuella noden överensstämmer inte med en giltig formatmall."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Refererade formatmall kräver funktioner som inte tillåts av bevis tillhandahålls.       Anroparen försöker ange bevis och inte har <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> behörighet."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i filen och skickar resultatet till en utdatafil."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Den här metoden är inaktuell i .NET Framework version 1.1. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-adress på källdokumentet omvandlas."
    - id: outputfile
      type: System.String
      description: "URL till utdatafilen."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlReader>(den `xsl:output` element ignoreras).</xref:System.Xml.XmlReader> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Den här metoden kan du göra en asynkron omvandling av källdokumentet.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller resultatet från omvandlingen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. Efter att transformationen har utförts i <xref:System.Xml.XPath.XPathNavigator>finns kvar i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Eftersom <xref:System.Xml.XmlReader>innehåller skrivskyddade utdata i `xsl:output` element ignoreras.</xref:System.Xml.XmlReader> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Den här metoden kan du göra en asynkron omvandling av källdokumentet.      > [!NOTE] > Den här metoden är föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur funktionen XSLT document() är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller resultatet från omvandlingen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i filen och skickar resultatet till en utdatafil."
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-adress på källdokumentet omvandlas."
    - id: outputfile
      type: System.String
      description: "URL till utdatafilen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Transform*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.Stream
      description: "Dataströmmen som du vill spara."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen.       Attributet kodning på en `xsl:output` elementet stöds inte när du använder en <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>som du vill utdata.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlReader>(den `xsl:output` element ignoreras).</xref:System.Xml.XmlReader> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Den här metoden kan du göra en asynkron omvandling av källdokumentet.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller resultatet från omvandlingen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlWriter>(`xsl:output` ignoreras).</xref:System.Xml.XmlWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som du vill utdata.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. Efter att transformationen har utförts i <xref:System.Xml.XPath.XPathNavigator>finns kvar i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.Stream
      description: "Dataströmmen som du vill spara."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. När omvandlingen utförs den <xref:System.Xml.XPath.XPathNavigator>förblir i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Attributet kodning på en `xsl:output` elementet stöds inte när du använder en <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>som du vill utdata.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. Efter att transformationen har utförts i <xref:System.Xml.XPath.XPathNavigator>finns kvar i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Eftersom <xref:System.Xml.XmlReader>innehåller skrivskyddade utdata i `xsl:output` element ignoreras.</xref:System.Xml.XmlReader> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Den här metoden kan du göra en asynkron omvandling av källdokumentet."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
    return:
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som innehåller resultatet från omvandlingen.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med hjälp av angivna argument och skickar resultatet till <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. När omvandlingen utförs den <xref:System.Xml.XPath.XPathNavigator>förblir i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att den nod som är aktuella innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlWriter>(`xsl:output` ignoreras).</xref:System.Xml.XmlWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.      > [!NOTE] > Den här metoden är nu föråldrad. Inställningen för den <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>egenskapen bestämmer hur XSLT `document()` funktion är löst.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Det rekommenderade sättet är att använda den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden som kräver en <xref:System.Xml.XmlResolver>objekt som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som du vill utdata.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.Stream
      description: "Dataströmmen som du vill spara."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Transform*>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen.       Attributet kodning på en `xsl:output` elementet stöds inte när du använder en <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>som du vill utdata.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlWriter>(`xsl:output` ignoreras).</xref:System.Xml.XmlWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information.       Transformationer gäller för dokumentet som helhet. Med andra ord om du skickar på en nod än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. För att omvandla ett nod-fragment, måste du skapa en <xref:System.Xml.XmlDocument>som innehåller bara noden fragment och skicka som <xref:System.Xml.XmlDocument>till metoden Transform.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       I följande exempel utförs en omvandling på ett nod-fragment.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```I exemplet används den `library.xml` och `print_root.xsl` -filer som indata och utdata följande i konsolen.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Ett objekt som implementerar det <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> gränssnitt. I .NET Framework, detta kan vara antingen en <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (vanligtvis en <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), eller en <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som du vill utdata.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. Efter att transformationen har utförts i <xref:System.Xml.XPath.XPathNavigator>finns kvar i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.Stream
      description: "Dataströmmen som du vill spara."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med det angivna <code> args </code> och skickar resultatet till <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. När omvandlingen utförs den <xref:System.Xml.XPath.XPathNavigator>förblir i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att noden som är aktuell innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Attributet kodning på en `xsl:output` elementet stöds inte när du använder en <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för specifik information som `xsl:output` attribut stöds."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>som du vill utdata.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transformerar XML-data i den <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> med hjälp av angivna argument och skickar resultatet till <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>stöder XSLT 1.0-syntax.</xref:System.Xml.Xsl.XslTransform> XSLT-formatmallen måste inkludera namnområdesdeklarationen `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Den `args` matchas med de `xsl:param` -element har definierats i formatmallen. Omvandling av valen som gäller för dokumentet som helhet. Med andra ord om den aktuella noden är inställt på ett nodträd än rotnoden dokumentet hindrar detta inte omvandling processen från att komma åt alla noder i läsa in dokumentet. När omvandlingen utförs den <xref:System.Xml.XPath.XPathNavigator>förblir i det ursprungliga tillståndet.</xref:System.Xml.XPath.XPathNavigator> Det innebär att den nod som är aktuella innan processen omvandling, förblir den aktuella noden efter Transform-metoden har anropats.       Den `xsl:output` elementet stöds inte när du använder en <xref:System.Xml.XmlWriter>(`xsl:output` ignoreras).</xref:System.Xml.XmlWriter> Se [utdata från ett XslTransform](~/add/includes/ajax-current-ext-md.md) för mer information."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "En <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> som innehåller data som ska konverteras."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "En <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> som innehåller namnområde kvalificerade argument som används som indata för omvandlingen."
    - id: output
      type: System.Xml.XmlWriter
      description: "Den <xref:System.Xml.XmlWriter>som du vill utdata.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> används för att matcha XSLT `document()` funktion. Om det här är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` funktionen inte är löst.       Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> cachelagras inte när metoden transformering har slutförts."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det uppstod ett fel när XSLT-transformation.       Obs: Detta är en förändring jämfört med tidigare versioner. En <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> genereras om du använder Microsoft .NET Framework version 1.1 eller tidigare."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Anger den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> användas för att lösa externa resurser när den <xref:System.Xml.Xsl.XslTransform.Transform*>metoden anropas.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]> Det <xref:System.Xml.Xsl.XslTransform>klassen är föråldrad i .NET Framework version 2.0.</xref:System.Xml.Xsl.XslTransform> Den <xref:System.Xml.Xsl.XslCompiledTransform>klassen är ny XSLT-processor.</xref:System.Xml.Xsl.XslCompiledTransform> Mer information finns i [med hjälp av klassen XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) och [migrera från det XslTransform klassen](~/add/includes/ajax-current-ext-md.md).       I version 1.1 av .NET Framework förtroende programmet avgör standardbeteendet: `Fully trusted code:` standard <xref:System.Xml.XmlUrlResolver>med ingen användare autentiseringsuppgifter används för att matcha den `document()` funktion.</xref:System.Xml.XmlUrlResolver> Om autentisering krävs för att få åtkomst till den externa resursen, Använd den här egenskapen för att ange en <xref:System.Xml.XmlResolver>med autentiseringsuppgifterna som krävs.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`Egenskapen anges till `null`, vilket betyder att den `document()` funktionen inte är löst. Eftersom fullständigt förtroende krävs för att ange en <xref:System.Xml.XmlResolver>, även går inte att ange den här egenskapen.</xref:System.Xml.XmlResolver>       Den här matcharen används när XSLT `document()` funktionen anropas. Den används inte att matcha `xsl:import` och `xsl:include` element som refereras i formatmall. Ange en <xref:System.Xml.XmlResolver>lösa med `xsl:import` och `xsl:include` element som refereras i formatmallen, använda den <xref:System.Xml.Xsl.XslTransform.Load%2A>överlagring som tar en <xref:System.Xml.XmlResolver>som en av dess argument.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      > [!NOTE] > Den här egenskapen är inaktuell i .NET Framework version 1.1. Ange en <xref:System.Xml.XmlResolver>med hjälp av den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden är rekommenderas.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> I det här fallet den <xref:System.Xml.XmlResolver>cachelagras inte efter den <xref:System.Xml.Xsl.XslTransform.Transform%2A>metoden har slutförts.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Den <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> ska användas vid omvandling av. Om värdet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT `document()` funktionen inte är löst."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
