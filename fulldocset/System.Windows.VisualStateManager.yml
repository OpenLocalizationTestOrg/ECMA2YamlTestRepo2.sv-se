### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateManager
  id: VisualStateManager
  children:
  - System.Windows.VisualStateManager.#ctor
  - System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  - System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  - System.Windows.VisualStateManager.VisualStateGroupsProperty
  langs:
  - csharp
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
  type: Class
  summary: "Hanterar tillstånd och logik för att övergå mellan olika lägen för kontroller."
  remarks: "VisualStateManager kan du ange tillstånd för en kontroll utseendet på en kontroll när den är i ett visst läge och när en kontroll ändras tillstånd. Till exempel en <xref:System.Windows.Controls.Button>kan ha lite annorlunda ut när den trycks än när den inte är nedtryckt.</xref:System.Windows.Controls.Button> För två tillstånd som den <xref:System.Windows.Controls.Button>definierar motsvarar när den trycks (`&quot;Pressed&quot;`) och när det är inte (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button> Utseendet på kontrollen när den är i ett tillstånd som definieras av <xref:System.Windows.VisualState>.</xref:System.Windows.VisualState> En <xref:System.Windows.VisualState>innehåller en samling <xref:System.Windows.Media.Animation.Storyboard>objekt som anger hur kontrollens utseende ändras när kontrollen är i det aktuella tillståndet.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Du lägger till visuella tillstånd till en kontroll genom att ange den `VisualStateManager.VisualStateGroups` anslutna egenskapen på kontrollen. Varje <xref:System.Windows.VisualStateGroup>innehåller en samling <xref:System.Windows.VisualState>objekt som är ömsesidigt uteslutande.</xref:System.Windows.VisualState> </xref:System.Windows.VisualStateGroup> Kontrollen är alltid i ett tillstånd i varje <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup>       VisualStateManager kan du ange när en kontroll försätts i ett visst tillstånd. Vilken metod som ska anropas för att ändra tillstånd beror på ditt scenario. Om du skapar en kontroll som använder VisualStateManager i dess <xref:System.Windows.Controls.ControlTemplate>, anropar den <xref:System.Windows.VisualStateManager.GoToState%2A>metoden.</xref:System.Windows.VisualStateManager.GoToState%2A> </xref:System.Windows.Controls.ControlTemplate> Läs mer om hur du skapar kontroller som använder VisualStateManager [skapar en kontroll som har ett anpassningsbara utseende](~/add/includes/ajax-current-ext-md.md). Om du använder VisualStateManager utanför en <xref:System.Windows.Controls.ControlTemplate>(till exempel om du använder en VisualStateManager i en <xref:System.Windows.Controls.UserControl>eller i ett enstaka element), anropa den <xref:System.Windows.VisualStateManager.GoToElementState%2A>metoden.</xref:System.Windows.VisualStateManager.GoToElementState%2A> </xref:System.Windows.Controls.UserControl> </xref:System.Windows.Controls.ControlTemplate> I båda fallen utför VisualStateManager logik som krävs för att starta och stoppa storyboards som är associerade med tillståndet ingår på lämpligt sätt. Anta exempelvis att en kontroll definierar tillstånd, `State1` och `State2`, som har en associerad storyboard. Om kontrollen är i `State1` och du skickar `State2` till <xref:System.Windows.VisualStateManager.GoToState%2A>eller <xref:System.Windows.VisualStateManager.GoToElementState%2A>, VisualStateManager startar storyboard i `State2` och stoppar storyboard i `State1`.</xref:System.Windows.VisualStateManager.GoToElementState%2A> </xref:System.Windows.VisualStateManager.GoToState%2A>       Kontroller som ingår i [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] använda VisualStateManager för att ändra visuella tillstånd. När du skapar en <xref:System.Windows.Controls.ControlTemplate>för en kontroll som ingår i [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], kan du lägga till <xref:System.Windows.VisualState>objekt till kontrollens <xref:System.Windows.Controls.ControlTemplate>Ange kontrollens utseende i ett visst tillstånd.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> Hitta namnen på de visuella tillstånd för de kontroller som ingår i [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], se [kontrollformat och mallar](~/add/includes/ajax-current-ext-md.md). Kontrollens logik handtag övergång emellan, så du inte behöver göra något annat än definierar <xref:System.Windows.VisualState>objekt i ny <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualState> Mer information om hur du skapar kontrollmallar för befintliga kontroller finns [anpassa utseendet på en befintlig kontroll genom att skapa en ControlTemplate](~/add/includes/ajax-current-ext-md.md).       Om du vill implementera egna logik för att övergå mellan tillstånd måste ärva från VisualStateManager, åsidosätta den <xref:System.Windows.VisualStateManager.GoToStateCore%2A>metod och ange den <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName>anslutna egenskapen för den kontroll som använder anpassade logiken.</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> </xref:System.Windows.VisualStateManager.GoToStateCore%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property. The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>. When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second. When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red. Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>. A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.  \n  \n [!code-xml[VSMCustomControl#VSMNoTemplate](~/add/codesnippet/xaml/vsmcustomcontrol/window1.xaml#vsmnotemplate)]  \n  \n The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states. If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.  \n  \n [!code-cs[VSMCustomControl#GoToElementState](~/add/codesnippet/csharp/vsmcustomcontrol/window1.xaml.cs#gotoelementstate)]\n [!code-vb[VSMCustomControl#GoToElementState](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/window1.xaml.vb#gotoelementstate)]"
  syntax:
    content: 'public class VisualStateManager : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateManager.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref> klass."
  syntax:
    content: public VisualStateManager ();
    parameters: []
  overload: System.Windows.VisualStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  id: CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.VisualStateManager.CustomVisualStateManager*>beroendeegenskap.</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  id: GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar den <xref:System.Windows.VisualStateManager.CustomVisualStateManager*>anslutna egenskapen.</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "Elementet för att hämta den <xref:System.Windows.VisualStateManager.CustomVisualStateManager*>kopplade egenskap från.</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
    return:
      type: System.Windows.VisualStateManager
      description: "Den visuella tillståndshanterare som övergångar mellan tillstånd för en kontroll."
  overload: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  id: GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hämtar den &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; anslutna egenskapen."
  syntax:
    content: public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "Elementet för att hämta den &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt; kopplade egenskap från."
    return:
      type: System.Collections.IList
      description: "Insamling av <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> objekt som är associerad med det angivna objektet."
  overload: System.Windows.VisualStateManager.GetVisualStateGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Övergår elementet mellan två tillstånd. Använd den här metoden att övergångstillstånd som definieras av ett program, i stället definieras av en kontroll."
  remarks: "Anropa metoden GoToElementState om du vill ändra tillstånd för ett element från en <xref:System.Windows.Controls.ControlTemplate>(till exempel om du använder en <xref:System.Windows.VisualStateManager>i en <xref:System.Windows.DataTemplate>eller <xref:System.Windows.Window>).</xref:System.Windows.Window> </xref:System.Windows.DataTemplate> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> Anropa <xref:System.Windows.VisualStateManager.GoToState%2A>metoden om du ändrar tillstånd i en kontroll som används <xref:System.Windows.VisualStateManager>i dess <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateManager> </xref:System.Windows.VisualStateManager.GoToState%2A>"
  example:
  - "The following example creates an application that prompts the user to guess a number between 1 and 100.  When the user enters a number, the application indicates whether the guess is too high, too low, or correct.  The following [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`. When the application begins, it is in the `Guessing` state. .  \n  \n [!code-xml[VSMGoToElementState#GoToElementStateXaml](~/add/codesnippet/xaml/vsmgotoelementstate/mainwindow.xaml#gotoelementstatexaml)]  \n  \n The following code shows the logic of the application.  When the user enters a number and clicks the button, the application calls GoToElementState to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.  To try this example, call the `GenerateNumber` method when the application begins.  \n  \n [!code-cs[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/csharp/vsmgotoelementstate/mainwindow.xaml.cs#gotoelementstatecode)]\n [!code-vb[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/visualbasic/vsmgotoelementstate/mainwindow.xaml.vb#gotoelementstatecode)]"
  syntax:
    content: public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);
    parameters:
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "Rotelementet som innehåller den <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>."
    - id: stateName
      type: System.String
      description: "Tillstånd att övergå till."
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda en <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt till övergången emellan; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kontrollen har gått över till det nya läget; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.VisualStateManager.GoToElementState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Övergår kontrollen mellan två tillstånd. Använd den här metoden att övergångstillstånd för kontrollen som har en <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref>."
  remarks: "Anropa metoden GoToState om du ändrar tillstånd i en kontroll som används <xref:System.Windows.VisualStateManager>i dess <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateManager> Anropa den <xref:System.Windows.VisualStateManager.GoToElementState%2A>metod för att ändra tillstånd för ett element från en <xref:System.Windows.Controls.ControlTemplate>(till exempel om du använder en <xref:System.Windows.VisualStateManager>i en <xref:System.Windows.Controls.UserControl>eller i ett enstaka element).</xref:System.Windows.Controls.UserControl> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateManager.GoToElementState%2A>"
  example:
  - "The following example demonstrates a control that uses the GoToState method to transition between states. For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#UpdateStates](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#updatestates)]\n [!code-vb[VSMCustomControl#UpdateStates](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#updatestates)]"
  syntax:
    content: public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "Kontrollen kan gå mellan tillstånd."
    - id: stateName
      type: System.String
      description: "Tillstånd att övergå till."
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda en <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt till övergången emellan; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kontrollen har gått över till det nya läget; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.VisualStateManager.GoToState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  id: GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Övergår en kontroll emellan."
  remarks: "Metoden GoToStateCore utför logiken som krävs för att starta och stoppa storyboards som är associerade med en övergång på rätt sätt. När en kontroll anropar <xref:System.Windows.VisualStateManager.GoToState%2A>att ändra dess tillstånd på <xref:System.Windows.VisualStateManager>följande: - först och om den <xref:System.Windows.VisualState>att kontrollen övergår i har en <xref:System.Windows.Media.Animation.Storyboard>, storyboard börjar.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> </xref:System.Windows.VisualStateManager> </xref:System.Windows.VisualStateManager.GoToState%2A> Sedan, om den <xref:System.Windows.VisualState>att kontrollen kommer från har en <xref:System.Windows.Media.Animation.Storyboard>, storyboard parterna.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState>      -Om kontrollen finns redan i den `stateName` tillstånd, <xref:System.Windows.VisualStateManager.GoToState%2A>tar ingen åtgärd och returnerar `true`.</xref:System.Windows.VisualStateManager.GoToState%2A>      -Om `stateName` finns inte i den <xref:System.Windows.Controls.ControlTemplate>av `control`, <xref:System.Windows.VisualStateManager.GoToState%2A>tar ingen åtgärd och returnerar `false`.</xref:System.Windows.VisualStateManager.GoToState%2A> </xref:System.Windows.Controls.ControlTemplate>       Du kan implementera en egen <xref:System.Windows.VisualStateManager>olika logik för att övergå emellan.</xref:System.Windows.VisualStateManager> Exempelvis kan du ändra den logik som beskrivs ovan eller du kan ange logiken skulle övergå mellan den egna animeringen typer.  Att implementera en <xref:System.Windows.VisualStateManager>, skapa en klass som ärver från <xref:System.Windows.VisualStateManager>och åsidosätta metoden GoToStateCore.</xref:System.Windows.VisualStateManager> </xref:System.Windows.VisualStateManager> Om du vill använda den anpassade klassen den <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>egenskapen till ett objekt av din anpassade typer.</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>"
  syntax:
    content: protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "Kontrollen kan gå mellan tillstånd."
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "Rotelementet som innehåller den <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>."
    - id: stateName
      type: System.String
      description: "Namnet på tillståndet att övergå till."
    - id: group
      type: System.Windows.VisualStateGroup
      description: "Den <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> som tillståndet tillhör."
    - id: state
      type: System.Windows.VisualState
      description: "Representation av du övergår till tillståndet."
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att använda en <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> objekt till övergången emellan; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kontrollen har gått över till det nya läget; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.VisualStateManager.GoToStateCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Genererar den <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref> händelsen på den angivna <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> objekt."
  remarks: "När den <xref:System.Windows.VisualStateGroup>är inställd på den <xref:System.Windows.Controls.ControlTemplate>för en kontroll av `control` parametern anges till kontrollen som äger <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateGroup>  När den <xref:System.Windows.VisualStateGroup>är inställd på en <xref:System.Windows.FrameworkElement>, `control` är `null` och du bör använda den `stateGroupsRoot` parameter.</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup>"
  syntax:
    content: protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "Objektet som den <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref> händelsen inträffade på."
    - id: oldState
      type: System.Windows.VisualState
      description: "Det tillstånd som kontrollen övergång från."
    - id: newState
      type: System.Windows.VisualState
      description: "Det tillstånd som kontrollen övergå till."
    - id: control
      type: System.Windows.FrameworkElement
      description: "Kontrollen som är övergående tillstånd."
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "Rotelementet som innehåller den <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>."
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Genererar den <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref> händelsen på den angivna <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> objekt."
  remarks: "När den <xref:System.Windows.VisualStateGroup>är inställd på den <xref:System.Windows.Controls.ControlTemplate>för en kontroll av `control` parametern anges till kontrollen som äger <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateGroup>  När den <xref:System.Windows.VisualStateGroup>är inställd på en <xref:System.Windows.FrameworkElement>, `control` är `null` och du bör använda den `stateGroupsRoot` parameter.</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup>"
  syntax:
    content: protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "Objektet som den <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref> händelsen inträffade på."
    - id: oldState
      type: System.Windows.VisualState
      description: "Det tillstånd som kontrollen övergång från."
    - id: newState
      type: System.Windows.VisualState
      description: "Det tillstånd som kontrollen övergå till."
    - id: control
      type: System.Windows.FrameworkElement
      description: "Kontrollen som är övergående tillstånd."
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "Rotelementet som innehåller den <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>."
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  id: SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Anger den <xref:System.Windows.VisualStateManager.CustomVisualStateManager*>anslutna egenskapen.</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>"
  syntax:
    content: public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "Objektet för att ange egenskapen på."
    - id: value
      type: System.Windows.VisualStateManager
      description: "Den visuella tillståndshanterare som övergångar mellan tillstånd för en kontroll."
  overload: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  id: VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Identifierar den <xref:System.Windows.VisualStateManager.VisualStateGroups*>beroendeegenskap.</xref:System.Windows.VisualStateManager.VisualStateGroups*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.VisualStateManager.#ctor
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
- uid: System.Windows.VisualStateManager
  parent: System.Windows
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
- uid: System.Windows.VisualStateGroup
  parent: System.Windows
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
- uid: System.Windows.VisualStateManager.#ctor*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager.VisualStateManager
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager
  nameWithType: VisualStateManager.GetCustomVisualStateManager
- uid: System.Windows.VisualStateManager.GetVisualStateGroups*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups
  nameWithType: VisualStateManager.GetVisualStateGroups
- uid: System.Windows.VisualStateManager.GoToElementState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState
  nameWithType: VisualStateManager.GoToElementState
- uid: System.Windows.VisualStateManager.GoToState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState
  nameWithType: VisualStateManager.GoToState
- uid: System.Windows.VisualStateManager.GoToStateCore*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore
  nameWithType: VisualStateManager.GoToStateCore
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged
  nameWithType: VisualStateManager.RaiseCurrentStateChanged
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging
  nameWithType: VisualStateManager.RaiseCurrentStateChanging
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager
  nameWithType: VisualStateManager.SetCustomVisualStateManager
