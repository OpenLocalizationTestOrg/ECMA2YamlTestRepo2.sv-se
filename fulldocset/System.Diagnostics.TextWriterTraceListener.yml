### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TextWriterTraceListener
  id: TextWriterTraceListener
  children:
  - System.Diagnostics.TextWriterTraceListener.#ctor
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  langs:
  - csharp
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  type: Class
  summary: "Leder spårning och felsökning utdata till en <xref:System.IO.TextWriter>eller en <xref:System.IO.Stream>, som <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "Klassen TextWriterTraceListener ger den <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>egenskapen att hämta eller ange text skrivaren som tar emot spårning och felsökning utdata.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>      > [!IMPORTANT] > Den här typen implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>       Den här klassen ger också metoder för att <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>den <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>så att den inte längre att ta emot spårning eller felsökning utdata till <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A>utdatabufferten för den <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, och <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>ett meddelande till <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Write%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>       Du måste aktivera spårning och felsökning om du vill använda en spårningslyssnaren. Följande syntax är kompileraren specifika. Om du använder kompilerare än C# eller Visual Basic, finns i dokumentationen för din kompilator.      -Om du vill aktivera felsökning i C#, lägger du till den `/d:DEBUG` flaggan till kommandoraden kompileraren när du kompilerar koden eller du kan lägga till `#define DEBUG` överst i filen. I Visual Basic kan du lägga till den `/d:DEBUG=True` flaggan till kommandoraden kompileraren.      -Om du vill aktivera spårning i C#, lägger du till den `/d:TRACE` flaggan till kommandoraden kompileraren när du kompilera koden eller Lägg till `#define TRACE` överst i filen. I Visual Basic kan du lägga till den `/d:TRACE=True` flaggan till kommandoraden kompileraren.       Redigera konfigurationsfilen som motsvarar namnet på ditt program för att lägga till en spårningslyssnaren. I den här filen du lägga till en lyssnare, ange dess typ och ange dess parameter, ta bort en lyssnare eller avmarkera alla lyssnare som tidigare har angetts av programmet. Konfigurationsfilen ska formateras som i följande exempel.      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;              type=&quot;System.Diagnostics.TextWriterTraceListener&quot;              initializeData=&quot;TextWriterOutput.log&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE]> Om ett försök görs att skriva till en fil som används eller inte tillgänglig, filnamnet automatiskt inleds med ett GUID."
  example:
  - "The following example implements an instance of the TextWriterTraceListener class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \n  \n After running this sample, you can open the `TestFile.txt` file to see the output.  \n  \n [!code-cpp[Classic TextWriterTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tex_1.vb)]"
  syntax:
    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klassen med <xref:System.IO.TextWriter>som utdata mottagare.</xref:System.IO.TextWriter>"
  remarks: "Den här konstruktorn använder den <xref:System.IO.TextWriter>dataströmmen som mottagare av spårning och felsökning utdata.</xref:System.IO.TextWriter> Dess <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen har initierats på en tom sträng (&quot;&quot;, eller <xref:System.String.Empty?displayProperty=fullName>).</xref:System.String.Empty?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_3_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_3_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_3_1.cs)]"
  syntax:
    content: public TextWriterTraceListener ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> class, med hjälp av dataströmmen som mottagare av det felsökning och spårning utdata."
  remarks: "Den här konstruktorn initierar den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen till en tom sträng (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_5_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_5_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som representerar dataströmmen den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> skriver till.</xref:System.IO.Stream>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Dataströmmen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klassen med den angivna skrivaren som mottagare av spårning och felsökning av utdata."
  remarks: "Den här konstruktorn initierar den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen till en tom sträng (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_6_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_6_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_6_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som tar emot utdata från den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skrivaren är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> class, med hjälp av filen som mottagare av det felsökning och spårning utdata."
  remarks: "Den här konstruktorn initierar den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen till en tom sträng (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/csharp/m-system.diagnostics.tex_1_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_1_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på filen i <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> skriver till."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Filen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klass med det angivna namnet använder dataströmmen som mottagare av felsökning och spårning av utdata."
  remarks: "Den här konstruktorn initierar den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen till den `name` parameter eller en tom sträng (&quot;&quot;), om den `name` parametern är `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/csharp/904be5a7-d634-4f01-8e66-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/visualbasic/904be5a7-d634-4f01-8e66-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som representerar dataströmmen den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> skriver till.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "Namnet på den nya instansen."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Dataströmmen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klass med det angivna namnet använder den angivna skrivaren som mottagare av spårning eller felsökning utdata."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/csharp/81bb968a-b680-446b-b301-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/visualbasic/81bb968a-b680-446b-b301-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som tar emot utdata från den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "Namnet på den nya instansen."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skrivaren är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initierar en ny instans av den <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> klass med det angivna namnet med hjälp av filen som mottagare av felsökning och spårning utdata."
  remarks: "Den här konstruktorn initierar den <xref:System.Diagnostics.TraceListener.Name%2A>egenskapen till den `name` parameter eller en tom sträng (&quot;&quot;), om den `name` parametern är `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/visualbasic/9ea7970a-0298-4bde-b5e1-_1.vb)]\n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/csharp/9ea7970a-0298-4bde-b5e1-_1.cs)]"
  syntax:
    content: public TextWriterTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "Namnet på filen i <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> skriver till."
    - id: name
      type: System.String
      description: "Namnet på den nya instansen."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Dataströmmen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Stänger den <xref:System.Diagnostics.TextWriterTraceListener.Writer*>så att den inte längre att ta emot spårning eller felsökning utdata.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: "Anropar en <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>eller <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A>metoden när du anropar Stäng automatiskt öppnar en ny dataströmmen.</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> </xref:System.Diagnostics.TextWriterTraceListener.Write%2A>"
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_2_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_2_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_2_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Förfogar detta <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> objekt."
  remarks: "Använd den <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>metod för den <xref:System.Diagnostics.TextWriterTraceListener>klassen för att frigöra resurserna som hanterade av en <xref:System.Diagnostics.TextWriterTraceListener>objektet.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att släppa hanterade resurser. Om <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, Dispose har ingen effekt."
  overload: System.Diagnostics.TextWriterTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Rensningar av utdatabufferten för <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_7_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_7_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_7_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Skriver ett meddelande till den här instansen <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_0_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_0_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_0_1.vb)]"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Ett meddelande att skriva."
  overload: System.Diagnostics.TextWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Skriver ett meddelande till den här instansen <xref:System.Diagnostics.TextWriterTraceListener.Writer*>följt av en rad Begränsare.</xref:System.Diagnostics.TextWriterTraceListener.Writer*> Standard raden Begränsare är en radmatning följas av radmatning (\\r)."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_4_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_4_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_4_1.cs)]"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Ett meddelande att skriva."
  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Hämtar eller anger textskrivare som tar emot spårning och felsökning av utdata."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tex_1.vb)]"
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som representerar skrivaren som tar emot spårning och felsökning utdata.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
- uid: System.Diagnostics.TextWriterTraceListener.Close
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.#ctor*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener.TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Close*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: TextWriterTraceListener.Close
- uid: System.Diagnostics.TextWriterTraceListener.Dispose*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose
  nameWithType: TextWriterTraceListener.Dispose
- uid: System.Diagnostics.TextWriterTraceListener.Flush*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush
  nameWithType: TextWriterTraceListener.Flush
- uid: System.Diagnostics.TextWriterTraceListener.Write*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: TextWriterTraceListener.Write
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TextWriterTraceListener.WriteLine
- uid: System.Diagnostics.TextWriterTraceListener.Writer*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
