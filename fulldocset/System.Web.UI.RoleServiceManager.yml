### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Konfigurerar platsen för en anpassad implementering av rolltjänsten."
  remarks: "Klassen RoleServiceManager motsvarar den <xref:System.Web.UI.ScriptManager.RoleService%2A>egenskapen för den <xref:System.Web.UI.ScriptManager>eller <xref:System.Web.UI.ScriptManagerProxy>kontroll.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       Rollen webbtjänsten används av AJAX-aktiverade program för att hämta rollinformation om för den aktuella autentiserade användaren med hjälp av en asynkron webbtjänstanrop. Du kan använda RoleServiceManager för att ange sökvägen till en alternativ implementering av rollen webbtjänsten i stället för med hjälp av inbyggda webbtjänsten.       Om du vill använda rolltjänsten i ditt program måste du aktivera den i konfigurationsfilen och deklarera på sidan. Om du använder den inbyggda rollen webbtjänsten, du måste aktivera den, men du behöver inte explicit deklarera rollen service manager på sidan.       Du måste implementera en webbtjänst som har två metoder för att skapa en anpassad rolltjänst: `GetRolesForCurrentUser` och `IsCurrentUserInRole`. Dessa metoder måste ha samma signatur som motsvarande metoder för den inbyggda rollen webbtjänsten.       I följande exempel visas grundläggande klass-struktur som måste implementeras i en anpassad roll Web service-klassen.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] för att använda en anpassad roll webbtjänsten, du kan lägga till tjänsten deklarativt i markeringen genom att lägga till en `RoleService` -element inuti den <xref:System.Web.UI.ScriptManager>styra, enligt följande exempel.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```Du kan också programmässigt ange den <xref:System.Web.UI.RoleServiceManager.Path%2A>egenskapen för att använda en anpassad roll webbtjänst.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> klass."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om listan över roller för den inloggade användaren måste hämtas."
  remarks: "Om egenskapen LoadRoles anges till `true`, lista över roller hämtas av den <xref:System.Web.UI.RoleServiceManager>klassen med hjälp av den <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>metoden.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> Listan sedan serialiseras till sidkoden.      > [!NOTE] > När LoadRoles är `true`, alla roller som den autentiserade användaren tillhör skickas till webbläsaren. Eftersom användare kan eventuellt se informationen om rollen, kan det vara ett säkerhetsproblem.       Egenskapen LoadRoles kan anges i den <xref:System.Web.UI.ScriptManager>kontroll eller i en associerad <xref:System.Web.UI.ScriptManagerProxy>kontroll.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Om LoadRoles anges till `true` för en proxy-instans i listan över roller hämtas och lagts till på sidan. Om LoadRoles är `false`, rollerna har inte lagts till i sidkoden. I så fall kan du använda metoden för att lagra rollinformation i minnet i webbläsaren."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om listan över roller måste hämtas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Hämtar eller anger sökvägen till rolltjänsten."
  remarks: "Om egenskapen sökvägen inte anges är returvärdet <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> I så fall ASP.NET använder den inbyggda autentiseringen webbtjänst som motsvarar följande interna standardsökvägen: ~ / RolesService.svc. På samma sätt uppstår om du anger sökvägen till en tom sträng eller till `null`.       Sökvägen kan anges i den <xref:System.Web.UI.ScriptManager>kontroll eller i en associerad <xref:System.Web.UI.ScriptManagerProxy>kontroll.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> När sökvägen har angetts på den <xref:System.Web.UI.ScriptManagerProxy>genom följande villkor är uppfyllda:-om det finns flera proxyobjekt i hierarkin kontroll, sökväg behöver inte anges för varje instans av proxyn.</xref:System.Web.UI.ScriptManagerProxy>      – Om sökvägen är explicit inställd för en proxy-objektet, måste värdet vara samma för alla andra proxyobjekt som den här egenskapen har angetts för. Om du ställer in olika sökvägar för olika proxyobjekt i hierarkin kontroll en <xref:System.ArgumentException>undantag.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Sökvägen till den anpassade rollen som webbtjänsten."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Mer än en unik sökväg har angetts i hierarkin för kontrollen."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
