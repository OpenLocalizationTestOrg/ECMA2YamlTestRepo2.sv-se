### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "Ger systemidentifieraren för XAML-typ för medlemmar i XAML-typer. Identifieraren används för XAML-läsare och skrivare i XAML under bearbetningen av medlem noder (när XAML-läsaren är placerad på en <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>) och även för allmän XAML typen logik."
  remarks: "XamlMember kan använda tre metoder för att returnera information om en medlem i XAML: standard common language runtime (CLR) eftertanke. en referens endast reflection-teknik som anropar interna API: er använda optimerade biten flaggar; eller anrop till virtuella åsidosättningar av den `Lookup*` API som tillhandahålls av möjliga XamlMember underklasser. För de flesta användning av .NET Framework XAML Services API: er och XamlMember API kan du använda standardkontexten XAML-schemat. Standardkontexten för XAML-schemat för .NET Framework XAML tjänster använder CLR säkerhetskopiering för typsystemet. Detta gör att XAML läsare och skrivare i XAML att arbeta med någon typ eller medlem som har definierats i, eller på annat sätt kunna, CLR och dess reflection-tekniker.      ## Sökning * API: er och XamlMember härledda klasser XamlMember definierar flera virtuella medlemmar som härledda klasser kan åsidosätta. Dessa medlemmar har namn som börjar alltid med strängen `Lookup`. Resten av API: et namn sedan refererar till den egenskap som påverkar virtuell metod. Till exempel kan en XamlMember härledd klass åsidosätta <xref:System.Xaml.XamlMember.LookupTargetType%2A>att påverka vad den base-definierade-egenskap <xref:System.Xaml.XamlMember.TargetType%2A>returnerar i en härledd klass.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A> Du kan förutsäga returvärden för dessa egenskaper i XamlMember eller befintliga härledda klasser genom att läsa dokumentationen för den relevanta `Lookup*` metoder.       Syftet med den `Lookup*` metoder är att tillhandahålla en XAML typen system tillägget teknik som inkluderar XamlMember basklassen. Genom att härleds från XamlMember och åsidosätta den `Lookup` virtuella medlemmar, du kan definiera konceptet för en XAML-medlem för ett XAML-schema i en XAML-typsystemet utan att vara begränsat till en stödjande typsystemet eller teknik. Du kan också använda en angiven XAML-schemat context under det här schemat och fortfarande returnerar resultat som du vill använda.       Exempelvis bör du egenskapen XamlMember <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Den här egenskapen informerar anropare att åtgärder som att använda en <xref:System.Xaml.XamlWriter>för serialisering kan skriva ett värde för den här medlemmen på ett målobjekt.</xref:System.Xaml.XamlWriter> I standardimplementeringen bestämning av om medlemmen är skrivbar görs med hjälp av reflektion tekniker mot stödjande CLR <xref:System.Type>och dess medlemmar (den <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> Som standard beror därför XAML-typsystemet i systemet för CLR-typen. Men du kan ta bort detta beroende för din XAML typen system rapportering av <xref:System.Xaml.XamlMember.IsWritePublic%2A>genom att åsidosätta API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> </xref:System.Xaml.XamlMember.IsWritePublic%2A> Du kan använda andra analyser, till exempel metadata som är specifika för din teknik, en master uppslagstabell som är optimerad för en fast XAML-terminologi eller en mängd andra strategier för att fastställa om en medlem i XAML är skrivbar i XAML-ordförråd inom en åsidosättning.      ## Konstruera XamlMember utan XAML-schemat kontexten mest konstruktorer av XamlMember kräver en <xref:System.Xaml.XamlSchemaContext>som en del av deras initiering.</xref:System.Xaml.XamlSchemaContext> Den <xref:System.Xaml.XamlSchemaContext>krävs också för många interna <xref:System.Xaml.XamlSchemaContext>Åtgärder, till exempel att få information som vidarebefordras från typen stödjande.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> När du arbetar med XamlMember API har du normalt en <xref:System.Xaml.XamlSchemaContext>som är tillgängliga från en omgivande konstruktion, till exempel en <xref:System.Xaml.XamlWriter>.</xref:System.Xaml.XamlWriter> </xref:System.Xaml.XamlSchemaContext> I det här fallet kan du skicka den <xref:System.Xaml.XamlSchemaContext>via en hänvisning till alla XAML typen system-anrop som kräver en XAML-schemat kontext.</xref:System.Xaml.XamlSchemaContext>       En specifik konstruktor <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, kräver inte en <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Men en XamlMember som skapats med den <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>signatur returnerar `true` för <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>       För en load-sökväg som inbegriper <xref:System.Xaml.XamlObjectWriter>, sådan medlem kan inte skrivas i ett objektdiagram.</xref:System.Xaml.XamlObjectWriter> Med hjälp av .NET Framework XAML services-implementation av <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>anropa kastar ett <xref:System.Xaml.XamlObjectWriterException>När relevanta XamlMember rapporterar `true` för <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du bör inte skapa en XamlMember som har värdet `true` för <xref:System.Xaml.XamlMember.IsUnknown%2A>om inte din implementering kan hantera undantag från <xref:System.Xaml.XamlObjectWriter>, eller om du har andra sätt att justera det <xref:System.Xaml.XamlObjectWriter>beteende.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> Till exempel en eller flera av följande kan vara true för din implementering:-det XAML schemat kontext är tillgänglig senare.      -Du använder ett mönster för anrop av medlem.      -Du avsiktligt åsidosätter <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>i en anpassad XAML-skrivare.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klassen med CLR-typsystemet <xref:System.Reflection.EventInfo>och en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.EventInfo>"
  remarks: "Använd den här konstruktorn om medlemmen representerar en händelse (event hanterare kopplingspunkt egenskapen)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR-typsystemet <xref:System.Reflection.EventInfo>som representerar den händelse medlemmen.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klassen med CLR-typsystemet <xref:System.Reflection.PropertyInfo>och en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  remarks: "Använd den här konstruktorn om medlemmen representerar en egenskap (och specifikt är inte en händelsehanterare anslutning)."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR-typsystemet <xref:System.Reflection.PropertyInfo>som representerar property-medlem.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klassen med CLR-typsystemet <xref:System.Reflection.EventInfo>och en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, inklusive <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> information.</xref:System.Reflection.EventInfo>"
  remarks: "Använd den här konstruktorn om medlemmen representerar en händelse (eller en händelseegenskap hanterare kopplingspunkt)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR-typsystemet <xref:System.Reflection.EventInfo>som representerar den händelse medlemmen.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som hanterar körning reflektion anropar mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klassen med hjälp av reflektion <xref:System.Reflection.PropertyInfo>och en <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, inklusive <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> information.</xref:System.Reflection.PropertyInfo>"
  remarks: "Använd den här konstruktorn endast om medlemmen representerar en egenskap och det inte är en händelsehanterare anslutning."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR-typsystemet <xref:System.Reflection.PropertyInfo>som representerar property-medlem.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som hanterar körning anrops-anrop mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klass för en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerar en kopplingsbar händelse."
  remarks: "Använd den här konstruktorn om medlemmen representerar en kopplingsbar händelse medlem."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Namnet på händelsen kopplingsbar sträng."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för hanteraren <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metod för den kopplingsbara medlemmen säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klassen med ett namn för anslutningssträngen och deklarerar <xref href=&quot;System.Xaml.XamlType&quot;> </xref> information. En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som har skapats med den här signaturen har betydande begränsningar, se anmärkning."
  remarks: "En <xref:System.Xaml.XamlMember>som är konstruerade med XamlMember signatur returnerar `true` för <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember>       För en load-sökväg som inbegriper <xref:System.Xaml.XamlObjectWriter>, sådan medlem kan inte skrivas i ett objektdiagram.</xref:System.Xaml.XamlObjectWriter> Med hjälp av .NET Framework-tjänster i XAML-implementation av <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>anropa kastar ett <xref:System.Xaml.XamlObjectWriterException>när de relevanta <xref:System.Xaml.XamlMember>rapporter `true` för <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du bör inte skapa en <xref:System.Xaml.XamlMember>med <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` om inte din implementering kan hantera undantag från <xref:System.Xaml.XamlObjectWriter>, eller om du har andra sätt att justera det <xref:System.Xaml.XamlObjectWriter>beteende.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> Till exempel en eller flera av följande kan vara true för din implementering:-det XAML schemat kontext är tillgänglig senare.      -Du använder ett mönster för anrop av medlem.      -Du avsiktligt åsidosätter <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>i en anpassad XAML-skrivare.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "Strängen namnet på medlemmen."
    - id: declaringType
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> information för den deklarerande typen."
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att ange att medlemmen är kopplingsbar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klass för en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerar en kopplingsbar egenskap."
  remarks: "Använd den här konstruktorn om medlemmen representerar en kopplingsbar egenskap."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Namnet på den kopplingsbara egenskapen sträng."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för den <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessorn för bifogbar medlem säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för den <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessorn för bifogbar medlem säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klass för en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerar en kopplingsbar händelse, inklusive <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> information."
  remarks: "Använd den här konstruktorn om medlemmen representerar en kopplingsbar händelse medlem."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "Namnet på händelsen kopplingsbar sträng."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för hanteraren <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> metod för den kopplingsbara medlemmen säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som hanterar körning anrops-anrop mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Initierar en ny instans av den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> klass för en <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som representerar en kopplingsbar egenskap, inklusive <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> information."
  remarks: "Använd den här konstruktorn om medlemmen representerar en kopplingsbar egenskap medlem."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "Namnet på den kopplingsbara egenskapen sträng."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för den <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessorn för bifogbar medlem säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR-typsystemet <xref:System.Reflection.MethodInfo>för den <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessorn för bifogbar medlem säkerhetskopiering implementering.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Den <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> kontext som kvalificerar medlemmen."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som hanterar körning anrops-anrop mot den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för den typ som deklarerar den medlem som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Det här värdet anges normalt under initiering och är vanligtvis inte `null`.      > [!IMPORTANT] > DeclaringType information kan skickas av konstruktorer för initiering. Av anropas direkt i grundläggande konstruktorer, initiering av <xref:System.Xaml.XamlMember>härledda klasser kan utesluta vissa av de värdet kontroller som görs i grundläggande klassen.</xref:System.Xaml.XamlMember> Initieringen av härledda kan därför ändra relationsinformation rapporterade typmedlemmen för en medlem i XAML så att den inte längre justeras i ett förväntat sätt med Systeminformation typ av dess underliggande CLR-deklaration. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av att deklarera typinformation."
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> för den typ som deklarerar den medlem som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objekt som används för uppskjuten inläsning av XAML deklarerats objekt."
  remarks: "Anropar DeferringLoader anropar <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Detta inträffar i fall där den första interna reflektion logiken inte har redan angett informationen."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> allmänna villkor."
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en lista över <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt. Dessa rapportera medlemmarna där beroenden för initiering ordning finns i förhållande till detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Anropar DependsOn anropar <xref:System.Xaml.XamlMember.LookupDependsOn%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupDependsOn%2A> Detta inträffar i fall där den första interna reflektion logiken inte har redan angett informationen.       Den `DependsOn` mönster kan tillämpas på objekt modellfall som avsiktligt motsäger en allmän regel i XAML. Regel i XAML är att medlemmar av en typ som inte har skickats som initieringen text (eller av en standardmetod i XAML 2009) måste kunna tilldelas i valfri ordning. Genom att använda en `DependsOn` mönstret till en medlem du instruera XAML-skrivare för att bearbeta alltid den refererade medlemmen innan den här medlemmen. Du kan använda det här mönstret i situationer där värdet för den aktuella medlemmen kräver kontexten och annan information som är endast tillgängligt när den andra medlemmen har angetts.       Den `DependsOn` mönstret bör användas sparsamt och reserverat för egenskapen scenarier där det har en arkitektur syfte. Många beroenden har möjlighet att processen saktas ned XAML. Den är också möjligt att skapa cirkulärt tjänstberoende då XAML bearbetning beteendet är odefinierat.       Exempel `DependsOn` scenarier från WPF omfattar vissa egenskaper på <xref:System.Windows.Controls.ControlTemplate>och <xref:System.Windows.DataTemplate>på <xref:System.Windows.Trigger>, och den <xref:System.Windows.Setter>.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> </xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "En lista över <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt."
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om det aktuella objektet är lika med ett annat objekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska jämföras med det här objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det aktuella objektet är lika med den <code> obj </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om det aktuella objektet är lika med ett annat objekt av samma typ."
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "Ett objekt som ska jämföras med det här objektet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det aktuella objektet är lika med den <code> other </code> parameter, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar hash-koden för det här objektet."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Ett heltal hash-kod."
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en lista med XAML namnområden där den här XAML-medlemmen får finnas."
  remarks: "Standardimplementering returnerar <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>anropa resultatet från <xref:System.Xaml.XamlMember.DeclaringType%2A>som är associerad med denna <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.DeclaringType%2A> </xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "En lista över XAML-namnområdet identifierare som strängar."
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Den `Invoker` mönstret är en avancerad XAML typen system tillägget teknik. Den `Invoker` mönster är ett sätt att mata in annat schema typen mappning beteende, medan du fortfarande använder XAML system typdefinitioner från .NET Framework XAML-tjänster.       Om en <xref:System.Xaml.XamlMember.LookupInvoker%2A>åsidosätta returnerar `null`, eller om standardimplementering returnerar `null` eftersom den saknar <xref:System.Xaml.XamlMember.UnderlyingMember%2A>för den här <xref:System.Xaml.XamlMember>egenskapen som anropar returnerar <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>är standardinställningen.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> Detta gäller för de flesta åtgärder som använder .NET Framework XAML-tjänster och standardkontexten XAML-schemat och där ingen specifik åsidosätta `Invoker` mönster skickas för konstruktion av XAML typen systementiteter.       Anropar som anropar anropar <xref:System.Xaml.XamlMember.LookupInvoker%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "Den <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> implementering som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> rapporteras som ambient egenskap."
  remarks: "Anropar IsAmbient anropar <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Detta inträffar i implementeringar där den första interna reflektion logiken inte har redan angett informationen.       Kontrollera att omgivande egenskaper är ingår vanligen i XAML bearbetning logik för att se till att objekt och värden som förlitar sig på omgivande användning för typen kriteriet fungerar korrekt. API: er för .NET Framework XAML tjänster och standardkontexten XAML-schemat fylls det här värdet baserat på information med <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> Standardimplementering av <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>använder den här befintliga <xref:System.Windows.Markup.AmbientAttribute>teknik och returnerar `true` om <xref:System.Windows.Markup.AmbientAttribute>finns i en deklaration för en medlem.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute> </xref:System.Xaml.XamlMember.LookupIsAmbient%2A>       <xref:System.Windows.Markup.AmbientAttribute>hittas på medlemmar i flera WPF-typer, bland annat <xref:System.Windows.Application>, <xref:System.Windows.Setter>, och <xref:System.Windows.Style>.</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> Den finns även på den <xref:System.Windows.ResourceDictionary>typ, vilket connotes att alla medlemmar som använder <xref:System.Windows.ResourceDictionary>eftersom dess typ bör övervägas omgivande även om medlemmen inte fördelas specifikt.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> är rapporterat som ambient egenskap, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> är en bifogbar medlem."
  remarks: "Värdet för IsAttachable har initierats baserat på vilka konstruktorn användes för att konstruera ett <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> är en bifogbar medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> är ett XAML-direktiv."
  remarks: "Värdet för IsDirective har initierats baserat på vilka konstruktorn användes för att konstruera ett <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> Basen <xref:System.Xaml.XamlMember>konstruktorer initiera så att IsDirective `false`.</xref:System.Xaml.XamlMember> Men den <xref:System.Xaml.XamlDirective>klassen (en <xref:System.Xaml.XamlMember>härledda klass) initierar så att IsDirective `true`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlDirective>       Om du vill rapportera IsDirective som `true` till anropare i en anpassad XAML schema-klass för medlemmar i XAML, kontrollerar du att du härledd från <xref:System.Xaml.XamlDirective>eftersom det är det enda sättet att aktivera beteendet.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> är en XAML direktivet, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en händelse medlem."
  remarks: "Anropar IsEvent anropar <xref:System.Xaml.XamlMember.LookupIsEvent%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsEvent%2A>"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en händelse, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> har initierats med ett giltigt <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> sträng som dess <xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> har initierats med ett giltigt <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> sträng; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en skrivskyddad medlem."
  remarks: "Anropar IsReadOnly anropar <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en skrivskyddad medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en medlem med en anropsbar offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "IsReadPublic värdet kontrollerar om den <xref:System.Xaml.XamlMember.DeclaringType%2A>är offentlig.</xref:System.Xaml.XamlMember.DeclaringType%2A> Om <xref:System.Xaml.XamlMember.DeclaringType%2A>är icke allmän, den `get` accessorn inte är callable på ett praktiskt sätt och IsReadPublic returnerar `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Anropar IsReadPublic anropar <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>      > [!IMPORTANT] > Den <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>metoden är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Åsidosättningen som har möjlighet att ändra (medvetet eller på annat sätt) den rapporterade för en medlem i XAML så att den inte längre ska justeras i ett förväntat sätt med information om system typ av dess underliggande CLR-deklaration. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av åtkomstnivåer."
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en anropsbar offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om medlemmen inte är matchas av säkerhetskopiera system som används för matchning av typ och medlem."
  remarks: "En <xref:System.Xaml.XamlMember>som har skapats med den <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>signatur returnerar `true` för IsUnknown.</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> </xref:System.Xaml.XamlMember>       För en load-sökväg som inbegriper <xref:System.Xaml.XamlObjectWriter>, en <xref:System.Xaml.XamlMember>med `true` för IsUnknown inte kan skrivas i ett objektdiagram.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriter> Under standardimplementeringar i .NET Framework XAML Services API: er i <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>anropa kastar ett <xref:System.Xaml.XamlObjectWriterException>när de relevanta <xref:System.Xaml.XamlMember>rapporter `true` för IsUnknown.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Du bör inte skapa en <xref:System.Xaml.XamlMember>som har värdet `true` för IsUnknown om inte din implementering kan hantera undantag från <xref:System.Xaml.XamlObjectWriter>, eller om du har andra sätt att justera det <xref:System.Xaml.XamlObjectWriter>beteende.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember>       Anropar IsUnknown anropar <xref:System.Xaml.XamlMember.LookupIsUnknown%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om medlemmen inte är matchas; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om medlemmen kan matchas."
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en lässkyddad medlem."
  remarks: "Anropar IsWriteOnly anropar <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en lässkyddad medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar ett värde som anger om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en medlem som har en anropsbar offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "Värdet för IsWritePublic anser om den <xref:System.Xaml.XamlMember.DeclaringType%2A>är offentlig som en del av bestämning.</xref:System.Xaml.XamlMember.DeclaringType%2A> Om <xref:System.Xaml.XamlMember.DeclaringType%2A>är icke allmän, den `set` accessorn inte är callable på ett praktiskt sätt och IsWritePublic returnerar `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Anropar IsWritePublic anropar <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>      > [!IMPORTANT] > Den <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>metoden är virtuell och därför kan åsidosättas.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Åsidosättningen som har möjlighet att ändra (medvetet eller på annat sätt) den rapporterade för en medlem i XAML så att den inte längre ska justeras i ett förväntat sätt med information om system typ av dess underliggande CLR-deklaration. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av åtkomstnivåer."
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en anropsbar offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Implementeras i en härledd klass returnerar ett <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  remarks: "Åsidosätta den här metoden för att tillhandahålla interna reflektion med ett annat sätt att hämta CLR-attributvärden. Om en åsidosättning använder interna reflector vanliga CLR reflektion logik som anrop till <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>       Standardimplementering returnerar `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "En <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementering."
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objekt som används för uppskjuten inläsning av XAML deklarerats objekt."
  remarks: "Den här metoden anropas när en anropare hämtar ett värde från den <xref:System.Xaml.XamlMember.DeferringLoader%2A>egenskapen.</xref:System.Xaml.XamlMember.DeferringLoader%2A> Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlMember.DeferringLoader%2A>att returnera ett värde som skiljer sig från det värde som är aktiverad som standard interna reflektion, och om du också tillhandahåller anpassad <xref:System.Xaml.Schema.XamlMemberInvoker>information.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DeferringLoader%2A>       Standardimplementering returnerar ett objekt som antingen genom att läsa <xref:System.Windows.Markup.XamlDeferLoadAttribute>eller med hjälp av en <xref:System.Xaml.XamlDeferringLoader>från den deklarerande typen.</xref:System.Xaml.XamlDeferringLoader> </xref:System.Windows.Markup.XamlDeferLoadAttribute> Om varken objektet är tillgängligt, den här metoden kan returnera `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; som har en <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> allmänna villkor."
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en lista med <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt. Objekt i listan rapportera medlemmarna där beroenden för initiering ordning finns i förhållande till detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Den här metoden anropas när en anropare hämtar ett värde från den <xref:System.Xaml.XamlMember.DependsOn%2A>egenskapen.</xref:System.Xaml.XamlMember.DependsOn%2A> Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlMember.DependsOn%2A>att returnera ett värde som skiljer sig från det värde som är aktiverad som standard interna reflektion, och om du också tillhandahåller anpassad <xref:System.Xaml.Schema.XamlMemberInvoker>information.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DependsOn%2A>       WPF XAML läsare och skrivare implementeringar attributet det här fallet med <xref:System.Windows.Markup.DependsOnAttribute>.</xref:System.Windows.Markup.DependsOnAttribute> Standardimplementering använder den här befintliga <xref:System.Windows.Markup.DependsOnAttribute>tekniken.</xref:System.Windows.Markup.DependsOnAttribute>       Åsidosätta den här metoden om du inte använder <xref:System.Windows.Markup.DependsOnAttribute>för detta syfte och planerar att ersätta den tekniken som indikerar om egenskapen bearbetningsordningen med din egen tekniken.</xref:System.Windows.Markup.DependsOnAttribute> Om du inte planerar att stödja bearbetningsordningen för en egenskap, kan du använda standardimplementering eftersom den returnerar inga resultat som är lämpliga.       Listan är skrivskyddad."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "En lista över <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt."
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Den här metoden anropas av anrop till <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       Standardimplementering inte kräver att en <xref:System.Xaml.XamlMember>konstrueras med hjälp av någon av konstruktorer som skickar ett inledande <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember> Men en <xref:System.Xaml.XamlMember.UnderlyingMember%2A>värde måste finnas för den <xref:System.Xaml.XamlMember>, annars returnerar standardimplementering `null`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Åsidosätta den här metoden om du också härledd från <xref:System.Xaml.Schema.XamlMemberInvoker>och planerar att returnera härledd klass.</xref:System.Xaml.Schema.XamlMemberInvoker> Om du återgår `null`, <xref:System.Xaml.XamlMember.Invoker%2A>returnerar <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>till anropare.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> rapporteras som ambient egenskap."
  remarks: "Den här metoden anropas av internt anrop som söker efter information om omgivande XAML-egenskaper. Ambient egenskap redovisas offentliga API beteende i XAML-läsare och skrivare i XAML. Internt anrop som refererar till LookupIsAmbient ingår vanligen i XAML bearbetning logik för att se till att objekt och värden som förlitar sig på omgivande användning för typen kriteriet fungerar korrekt. .NET Framework XAML Services standardimplementering använder CLR tilldelning för att hämta informationen från reflektion över säkerhetskopiering typer. Mer specifikt standardimplementering söker efter <xref:System.Windows.Markup.AmbientAttribute>och returnerar `true` för LookupIsAmbient om <xref:System.Windows.Markup.AmbientAttribute>finns på en medlemsdefinition av.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute>       Åsidosätta den här metoden om du inte använder <xref:System.Windows.Markup.AmbientAttribute>för detta syfte och planerar att ersätta den tekniken som används för som anger den omgivande XAML egenskaper med egna tekniken.</xref:System.Windows.Markup.AmbientAttribute>       Exempel API: er från WPF attributet med <xref:System.Windows.Markup.AmbientAttribute>och <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName> </xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> </xref:System.Windows.Markup.AmbientAttribute>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>rapportera detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som ambient egenskap; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en händelse."
  remarks: "Implementering standardkontroller om <xref:System.Xaml.XamlMember.UnderlyingMember%2A>är av typen <xref:System.Reflection.EventInfo>, och om det är returnerar `true`.</xref:System.Reflection.EventInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsEvent%2A>.</xref:System.Xaml.XamlMember.IsEvent%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som kan tolkas för att fastställa XAML typ system garantier per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>rapporten som den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en händelse, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en avsedda skrivskyddad egenskap."
  remarks: "Standardimplementering returnerar `true` om <xref:System.Xaml.XamlMember.UnderlyingMember%2A>finns, men en offentlig `set` accessor finns inte för det, utifrån interna reflektion.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</xref:System.Xaml.XamlMember.IsReadOnly%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som kan tolkas för att fastställa XAML typ system garantier per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>rapportera detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som en avsedda skrivskyddad egenskap; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en egenskap som har en offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "Standardimplementering returnerar resultat baserat på interna reflektion eller negationer av <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, bearbetning i den ordningen.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>       LookupIsReadPublic returnerar om själva medlemmen är offentlig. Returnerar `true` för en offentlig medlem på en nonpublic deklarerande typen. Använd <xref:System.Xaml.XamlMember.IsReadPublic%2A>i stället om du även vill överväga synligheten i den deklarerande typen.</xref:System.Xaml.XamlMember.IsReadPublic%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</xref:System.Xaml.XamlMember.IsReadPublic%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > I LookupIsReadPublic metoden är virtuell och därför kan åsidosättas. Åsidosättningen som har möjlighet att ändra (medvetet eller på annat sätt) den rapporterade för en medlem i XAML så att den inte längre ska justeras i ett förväntat sätt med information om system typ av dess underliggande CLR-deklaration. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av åtkomstnivåer."
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en egenskap som har en offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en medlem som inte kan lösas genom att säkerhetskopiera system som används för matchning av typ och medlem."
  remarks: "Denna metod kan anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> Standardimplementering returnerar resultat som är baserat på antingen interna reflektion eller kontrollerar för en `null` värdet för <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, bearbetning i den ordningen.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en icke-matchas medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en medlem som har en offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor men inte en offentlig <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "Standardimplementering returnerar `true` om en <xref:System.Xaml.XamlMember.UnderlyingMember%2A>finns som har en offentlig `set` accessor och en nonpublic `get` accessor, enligt systemets interna reflektion.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en lässkyddad medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar om detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en medlem som har en offentlig <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor."
  remarks: "Standardimplementering returnerar resultat baserat interna reflektion eller negationer av <xref:System.Xaml.XamlMember.IsReadOnly%2A>, bearbetning i den ordningen.</xref:System.Xaml.XamlMember.IsReadOnly%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > I LookupIsWritePublic metoden är virtuell och därför kan åsidosättas. Åsidosättningen som har möjlighet att ändra (medvetet eller på annat sätt) den rapporterade för en medlem i XAML så att den inte längre ska justeras i ett förväntat sätt med information om system typ av dess underliggande CLR-deklaration. Använd den underliggande CLR-typen i stället för alla kritiska kontroller av åtkomstnivåer."
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> representerar en skrivbar medlem, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen där den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnas."
  remarks: "Standardimplementering skiljer mellan kopplingsbar och inte är kopplingsbar medlemmar. För inte är kopplingsbar medlemmar returnerar LookupTargetType alltid <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> För kopplingsbar medlemmar LookupTargetType returnerar ett resultat baserat på undersöka den <xref:System.Xaml.XamlMember.UnderlyingMember%2A>accessor parametertypen och tolkar att typen baserat på XAML-schemat kontext.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Typen där den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnas. Se anmärkning."
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som används av medlemmen. Se anmärkning."
  remarks: "Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Åsidosätta den här metoden om du vill <xref:System.Xaml.XamlMember.Type%2A>att returnera ett värde som skiljer sig från det värde som är aktiverad som standard interna reflektion, och om du också tillhandahåller anpassad <xref:System.Xaml.Schema.XamlMemberInvoker>information.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.Type%2A>       Standardimplementering använder olika kodsökvägar och konceptuella innebörd för den returnerade <xref:System.Xaml.XamlType>som baseras på om detta <xref:System.Xaml.XamlMember>representerar en egenskap, en metod eller en händelse.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>      – För en egenskap, den returnerade <xref:System.Xaml.XamlType>är den typ som returneras av egenskapen eller anger egenskapen.</xref:System.Xaml.XamlType>      – För en händelse, den returnerade <xref:System.Xaml.XamlType>är typ av nödvändiga händelsehanterare (en delegat i ett CLR-implementeringen).</xref:System.Xaml.XamlType>      – För en metod, <xref:System.Xaml.XamlType>är returtypen.</xref:System.Xaml.XamlType>       I varje fall användas XAML-schemat kontext för att utvärdera XAML-typen från den underliggande systemtypen.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som används av medlemmen. Se anmärkning."
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en implementering av typen konverterare som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standardimplementering använder följande logik och bearbetningsordningen: – om tilldelning av finns på medlemsnivå (<xref:System.ComponentModel.TypeConverterAttribute>), information om attribut används för ett anrop till <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>mot kontexten XAML-schemat.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.ComponentModel.TypeConverterAttribute>      -Om <xref:System.Xaml.XamlMember.Type%2A>är giltigt, returneras en typkonverterare som är associerad med typen.</xref:System.Xaml.XamlMember.Type%2A>      -Om medlemmen är en händelse, returneras en typkonverterare händelsespecifika.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.TypeConverter%2A>.</xref:System.Xaml.XamlMember.TypeConverter%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instans med <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> begränsningen; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standardimplementering tolkar den <xref:System.Xaml.XamlMember.UnderlyingMember%2A>egenskapen som <xref:System.Reflection.PropertyInfo>och returnerar värdet för <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(med parametern inställd på `true`), vilket innebär att metoden returnerade kan vara icke allmän.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Detta kan resultera i `null` för vissa fall. inklusive fall finns ingen associerade accessor eller medlemmen är inte en egenskap.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>egenskapen i en associerad <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember> Se till att implementera LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, och <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>så att alla korrelerade resultat returneras.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Den <xref:System.Reflection.MethodInfo>för den associerade <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> accessor; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en CLR-typsystemet <xref:System.Reflection.MemberInfo>som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  remarks: "Standardimplementering returnerar den underliggande medlemsinformation som är baserad på konstruktionen. Om den <xref:System.Reflection.MemberInfo>objektet har skapats med en signatur som inte innehåller tillräckligt med information för att ange den underliggande medlemmen den här metoden returnerar `null`.</xref:System.Reflection.MemberInfo>       Om en underliggande medlem angavs under konstruktion behöver du inte anropa den här metoden.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember> Se till att implementera <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, och LookupUnderlyingMember så att alla korrelerade resultat.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "En CLR-typsystemet <xref:System.Reflection.MemberInfo>objekt som associeras med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standardimplementering tolkar <xref:System.Xaml.XamlMember.UnderlyingMember%2A>som <xref:System.Reflection.PropertyInfo>och returnerar värdet för <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(med parametern inställd på `true`), vilket innebär att metoden returnerade kan vara icke allmän.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Detta kan resultera i `null` för vissa fall, även om det finns ingen sådan accessor eller medlemmen är inte en egenskap.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>på en associerad <xref:System.Xaml.Schema.XamlMemberInvoker>. Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember> </xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> Se till att implementera <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, och <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>så att alla korrelerade resultat returneras.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Den <xref:System.Reflection.MethodInfo>för den associerade <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> accessor; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar ett värde serialiseraren implementering som är associerad med den här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Standardimplementering använder följande logik och bearbetningsordningen: – om tilldelning av finns på medlemsnivå (<xref:System.Windows.Markup.ValueSerializerAttribute>), information om attribut används för ett anrop till <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>mot kontexten XAML-schemat.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.Windows.Markup.ValueSerializerAttribute>      -Om <xref:System.Xaml.XamlMember.Type%2A>är giltigt, returneras en konverterare för värdet som associeras med typen.</xref:System.Xaml.XamlMember.Type%2A>      – Om föregående villkor inte är tillämpliga `null` returneras.       Den här metoden anropas när en anropare hämtar ett värde från <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</xref:System.Xaml.XamlMember.ValueSerializer%2A> Åsidosätta den här metoden om du vill rapportera enhetliga resultat för en hel <xref:System.Xaml.XamlMember>härledda klass, eller om du använder särskild metadata som är tillgängliga för att ta reda på per fall.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instans med <xref:System.Windows.Markup.ValueSerializer>begränsning, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> namn sträng som deklarerar detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Det här värdet alltid under konstruktion. Konstruktorerna som implementeras av <xref:System.Xaml.XamlMember>vanligtvis Utlös ett undantag om en inledande namn inte har angetts; därför förväntar sig inte den här egenskapen ska `null` eller en tom sträng om du använder .NET Framework XAML Services standardimplementeringar.</xref:System.Xaml.XamlMember>       [XamlName grammatik](~/add/includes/ajax-current-ext-md.md) och namnregler för CLR-typen och medlemmar är inte en exakt intersect. Det är möjligt att deklarera ett medlemsnamn som är tillåtet under CLR, men inte giltiga i XAML naming. Om möjligt bör du undvika den här situationen."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> namn sträng som deklarerar detta <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om två angivna <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt har samma värde."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet för <code> xamlMember1 </code> är detsamma som värdet för <code> xamlMember2 </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Anger om två angivna <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objekt har olika värden."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om värdet för <code> xamlMember1 </code> skiljer sig från värdet för <code> xamlMember2 </code>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar det enda XAML namnområdet-URI som identifierar det primära XAML-namnområdet för denna <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Egenskapen PreferredXamlNamespace ger samma värde som anropar <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>och hämtar sedan den första Värdesträngen i listan returnerade.</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> Det önskade XAML-namnområdet ska användas när du skriver medlemmen tillbaka till text eller andra representationer som bevarar information för XAML-namnområdet."
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "Identifieraren för det primära XAML-namnområdet för denna <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>, som en sträng."
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> -värde som anger hur en visuell designer ska behandla medlemmen."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Ett värde för den <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> uppräkning. Standardvärdet är <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>."
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen där den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnas."
  remarks: "Det returnerade värdet är olika för kopplingsbar och inte är kopplingsbar medlemmar. För inte är kopplingsbar medlemmar returnerar TargetType <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> För kopplingsbar medlemmar <xref:System.Xaml.XamlMember.LookupTargetType%2A>returnerar ett resultat som baseras på den här logiken: – om reflektion inte kan lösa en säkerhetskopiering (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), den här metoden returnerar ett internt konstant som representerar en generisk typ.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A>      – Om det föregående villkoret inte tillämpas <xref:System.Xaml.XamlMember.LookupTargetType%2A>kallas.</xref:System.Xaml.XamlMember.LookupTargetType%2A> Standardimplementering returnerar en <xref:System.Xaml.XamlType>som baseras på ha undersökt de metoder som implementerar det `get` och `set` accessorer.</xref:System.Xaml.XamlType> En klass kan åsidosätta <xref:System.Xaml.XamlMember.LookupTargetType%2A>att använda ett annat beteende som andra metadata för formulär som kan rapportera måltyper för kopplingsbar medlemmar.</xref:System.Xaml.XamlMember.LookupTargetType%2A>"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Typen där den <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> kan finnas. Se anmärkning."
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returnerar en strängrepresentation av det här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Den här implementeringen returnerar <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En strängrepresentation av det här <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som används av medlemmen."
  remarks: "Anropar typen anropar <xref:System.Xaml.XamlMember.LookupType%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupType%2A> Detta inträffar när den första interna reflektion logiken inte redan har angetts informationen.       I standardbeteendet (ingen <xref:System.Xaml.XamlMember.LookupType%2A>åsidosätta), den returnerade <xref:System.Xaml.XamlType>kan ha olika konceptuella betydelse.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember.LookupType%2A> Vilka betydelse gäller beror på om detta <xref:System.Xaml.XamlMember>representerar en egenskap, en metod eller en händelse, vilket visas i följande lista: – för en egenskap, den returnerade <xref:System.Xaml.XamlType>är den typ som returneras av egenskapen eller anger egenskapen.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember>      – För en händelse, den returnerade <xref:System.Xaml.XamlType>är typ av nödvändiga händelsehanterare (en delegat i ett CLR-implementeringen).</xref:System.Xaml.XamlType>      – För en metod, <xref:System.Xaml.XamlType>är Returtypen för metoden, vilket kan vara `null`.</xref:System.Xaml.XamlType>       I varje fall användas XAML-schemat kontext för att utvärdera XAML-typen från typen säkerhetskopiering."
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "Den <xref href=&quot;System.Xaml.XamlType&quot;> </xref> av typen som används av medlemmen. Se anmärkning."
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; -objekt som kan användas för typen konvertering konstruktion av XAML deklarerats objekt."
  remarks: "Anropar TypeConverter anropar <xref:System.Xaml.XamlMember.LookupTypeConverter%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Detta inträffar när den första interna reflektion logiken inte redan har angetts informationen.       Implementeringar som returnerar ett värde för icke-null-egenskapen för TypeConverter är inte nödvändigtvis en fungerande <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Följande är en lista över möjliga icke-null returvärden TypeConverter och dessa värden representerar:-returvärdet rapporterar en typkonverterare som har attributet leder till medlemmen eller allmänt till måltypen för konverteraren. Detta är normalt vad de flesta XAML typen System och XAML processorer leta efter för att skapa en instans av en typkonverterare och anropa dess metoder.      -Returvärdet rapporterar inbyggda värdekonverteraren. Det finns dessa konverterare för vissa interna åtgärder som utförs av en XAML-skrivare. I synnerhet konvertera dessa inbyggda värdet konverterare strängvärden rådata attributet till XAML-språknivå primitiver. För .NET Framework-tjänster i XAML-implementeringen vidarebefordra dessa inbyggda typkonverteringar ofta till en typkonverterare som har definierats i sammansättningen System. Till exempel en konvertering för en <xref:System.Int32>värde har inbyggd vidarebefordras konvertering, och därför <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>värdet referenser <xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      -Returvärdet rapporterar när det gäller en obegränsad objektmodell; det vill säga den <xref:System.Xaml.XamlMember>har ett <xref:System.Xaml.XamlMember.Type%2A>värde av <xref:System.Object>.</xref:System.Object> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember> I det här fallet den <xref:System.Xaml.Schema.XamlValueConverter%601>rapporterar att den <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>är {`Object}`.</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> Dock <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>är `null` eftersom inga faktiska typen eller instans som är tillgängliga för att utföra den här konverteringen.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> I stället kan beteendet objektet modellen inte fastställas förrän körning när körningstiden för den specifika tekniken anger hantering av dess objektdiagram.       Om du har åtkomst till en fungerande <xref:System.ComponentModel.TypeConverter>från <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, du kan anropa metoder för konvertering.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> </xref:System.ComponentModel.TypeConverter> Metoder för konvertering av många dock förlitar sig på tjänstkontext. Om du inte har samma service kontext tillgängliga att konverteraren typ förväntas för dess normala roll för att skriva objekt för objektdiagram utlösa metoderna konverteraren undantag."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; värde, med en <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> allmänna villkor. Se anmärkning."
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar CLR-typsystemet <xref:System.Reflection.MemberInfo>som är tillgänglig för en medlem som skapats av <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, eller <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "Anropar UnderlyingMember anropar <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "CLR-typsystemet <xref:System.Reflection.MemberInfo>information som omvandlingen från de första konstruktorparametrarna.</xref:System.Reflection.MemberInfo> En <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> som har skapats med den &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signatur returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Hämtar en &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; objektet som används för värdet serialisering av XAML deklarerats objekt."
  remarks: "Anropar ValueSerializer anropar <xref:System.Xaml.XamlMember.LookupValueSerializer%2A>eller en specifik åsidosättning av denna metod.</xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Detta inträffar när den första interna reflektion logiken inte redan har angetts informationen.       Inte alla fall som returnerar ett värde för icke-null-egenskapen för ValueSerializer är nödvändigtvis en fungerande <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> I avsnittet Anmärkningar i <xref:System.Xaml.XamlMember.TypeConverter%2A>; samma villkor som gäller för ValueSerializer.</xref:System.Xaml.XamlMember.TypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "En &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; med <xref:System.Windows.Markup.ValueSerializer>allmänna villkor.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
