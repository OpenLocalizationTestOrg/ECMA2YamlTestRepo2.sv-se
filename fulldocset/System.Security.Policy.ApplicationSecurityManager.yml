### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "Hanterar förtroendebeslut för manifest-aktiverade program."
  remarks: "ApplicationSecurityManager-klassen innehåller viktig information för körningen av ett manifest-baserade program. Den <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>egenskapen identifierar hanteraren förtroende avgör om ett program är betrodd.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Den <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>metodanrop programförtroendet manager för att avgöra om ett program är betrodd.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> Den <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>egenskapen innehåller cachelagrade förtroendebeslut för användaren.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hämtar det aktuella programmet förtroende manager."
  remarks: "I den aktuella versionen är endast ett förtroende manager, som kan vara en anpassad implementering av den <xref:System.Security.Policy.IApplicationTrustManager>gränssnitt.</xref:System.Security.Policy.IApplicationTrustManager> Trust manager standardimplementering frågar användaren om behörighet att installera programmet och höja behörigheterna för programmet. Andra trust manager-implementeringar kan ha olika användarupplevelser. En implementering kan till exempel kontrollera en enterprise-lista för betrodda program i stället för att fråga användaren för den informationen."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "En <xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> som representerar den aktuella förtroende-hanteraren."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Principen i det här programmet har inte en."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Anger om användaren godkänner det angivna programmet ska köras med de begärda behörigheten."
  remarks: "DetermineApplicationTrust använder den konfigurerade <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>egenskapen för att avgöra om du vill tillåta körning av det angivna programmet med behörighetsgrupp begärda i programmanifestet.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Trust manager-beteende beror på trust manager-implementering och informationen skickas i den `context` parameter. Standardbeteendet för hanteraren för förtroende är att fastställa en användardialogrutan för användargränssnittet (UI) för att fastställa användarens godkännande. En kan också bestämma programmets förtroendestatus baserat på andra villkor, till exempel beslut som tillhandahålls av företagets databas. Förtroende beslutet kan sparas, beroende på den `context` parametrar egenskaper och trust manager-implementering. Om förtroendet för programmet sparas till beslut baserat på en användardialogrutan framtiden anrop till den <xref:System.Security.Policy.ApplicationSecurityManager>presenterar inte dialogrutan Användargränssnittet för alla begäranden för programmet.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust kallas när manifestet, men innan programmet har laddats ned till det lokala systemet."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "En <xref href=&quot;System.ActivationContext&quot;> </xref> identifierar aktiveringskontexten för programmet."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "En <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> identifierar trust manager-kontexten för programmet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att köra det angivna programmet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hämtar ett program förtroende samling som innehåller de cachelagrade förtroendebeslut för användaren."
  remarks: "Förtroendebeslut i samlingen hanteras med hjälp av metoderna för insamling, till exempel den <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>metoden eller <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>metod.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "En <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> som innehåller de cachelagrade förtroendebeslut för användaren."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
