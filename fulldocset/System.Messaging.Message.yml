### YamlMime:ManagedReference
items:
- uid: System.Messaging.Message
  id: Message
  children:
  - System.Messaging.Message.#ctor
  - System.Messaging.Message.#ctor(System.Object)
  - System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)
  - System.Messaging.Message.AcknowledgeType
  - System.Messaging.Message.Acknowledgment
  - System.Messaging.Message.AdministrationQueue
  - System.Messaging.Message.AppSpecific
  - System.Messaging.Message.ArrivedTime
  - System.Messaging.Message.AttachSenderId
  - System.Messaging.Message.Authenticated
  - System.Messaging.Message.AuthenticationProviderName
  - System.Messaging.Message.AuthenticationProviderType
  - System.Messaging.Message.Body
  - System.Messaging.Message.BodyStream
  - System.Messaging.Message.BodyType
  - System.Messaging.Message.ConnectorType
  - System.Messaging.Message.CorrelationId
  - System.Messaging.Message.DestinationQueue
  - System.Messaging.Message.DestinationSymmetricKey
  - System.Messaging.Message.DigitalSignature
  - System.Messaging.Message.EncryptionAlgorithm
  - System.Messaging.Message.Extension
  - System.Messaging.Message.Formatter
  - System.Messaging.Message.HashAlgorithm
  - System.Messaging.Message.Id
  - System.Messaging.Message.InfiniteTimeout
  - System.Messaging.Message.IsFirstInTransaction
  - System.Messaging.Message.IsLastInTransaction
  - System.Messaging.Message.Label
  - System.Messaging.Message.LookupId
  - System.Messaging.Message.MessageType
  - System.Messaging.Message.Priority
  - System.Messaging.Message.Recoverable
  - System.Messaging.Message.ResponseQueue
  - System.Messaging.Message.SecurityContext
  - System.Messaging.Message.SenderCertificate
  - System.Messaging.Message.SenderId
  - System.Messaging.Message.SenderVersion
  - System.Messaging.Message.SentTime
  - System.Messaging.Message.SourceMachine
  - System.Messaging.Message.TimeToBeReceived
  - System.Messaging.Message.TimeToReachQueue
  - System.Messaging.Message.TransactionId
  - System.Messaging.Message.TransactionStatusQueue
  - System.Messaging.Message.UseAuthentication
  - System.Messaging.Message.UseDeadLetterQueue
  - System.Messaging.Message.UseEncryption
  - System.Messaging.Message.UseJournalQueue
  - System.Messaging.Message.UseTracing
  langs:
  - csharp
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
  type: Class
  summary: "Tillhandahåller åtkomst till de egenskaper som behövs för att definiera ett MSMQ-meddelande."
  remarks: "Använd klassen meddelandet att granska eller ta emot meddelanden från en kö eller har bra kontroll över meddelandeegenskaper när ett meddelande skickades till en kö.       <xref:System.Messaging.MessageQueue>använder klassen meddelande när det tittar eller tar emot meddelanden från köer, eftersom både den <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName>och <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName>metoder skapa en ny instans av klassen meddelandet och ange egenskaper för den instansen.</xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName> </xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName></xref:System.Messaging.MessageQueue> Klassen meddelandet skrivskyddade egenskaper gäller för hämtning av meddelanden från en kö, medan egenskaperna för läsning och skrivning som gäller för skicka och ta emot meddelanden. När <xref:System.Messaging.MessageQueue>tittar eller tar emot ett meddelande från en kö och dess <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>egenskapen avgör vilka av meddelandets egenskaper hämtas.</xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> </xref:System.Messaging.MessageQueue>       Den <xref:System.Messaging.MessageQueue>klassens <xref:System.Messaging.MessageQueue.Send%2A>metod kan du ange valfri objekttyp för ett meddelande som skickas till kön.</xref:System.Messaging.MessageQueue.Send%2A> </xref:System.Messaging.MessageQueue> Du kan använda den <xref:System.Messaging.MessageQueue>instansens <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>att ange inställningar för allmänna meddelanden som skickas till kön.</xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> </xref:System.Messaging.MessageQueue> Typer av inställningar är formaterare, etikett, kryptering och autentisering. Du kan även ange värden för de aktuella <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>medlemmar när du koordinera meddelanden programmet att svara på meddelanden för bekräftelse och rapporten.</xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> Använder en Message-instans för att skicka ett meddelande till kön ger dig möjlighet att komma åt och ändra många av dessa egenskaper, för ett enda meddelande eller ett meddelande meddelande. Meddelandeegenskaper företräde framför <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>       Meddelandedata lagras i den <xref:System.Messaging.Message.Body%2A>egenskapen och i mindre utsträckning, den <xref:System.Messaging.Message.AppSpecific%2A>och <xref:System.Messaging.Message.Extension%2A>Egenskaper.</xref:System.Messaging.Message.Extension%2A> </xref:System.Messaging.Message.AppSpecific%2A> </xref:System.Messaging.Message.Body%2A> När meddelandet är krypterad, serialiseras eller avserialiseras bara innehållet i den <xref:System.Messaging.Message.Body%2A>egenskapen påverkas.</xref:System.Messaging.Message.Body%2A>       Innehållet i den <xref:System.Messaging.Message.Body%2A>egenskapen serialiseras när meddelandet skickas med hjälp av den <xref:System.Messaging.Message.Formatter%2A>egenskapen som du anger.</xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.Body%2A> Serialiserade innehållet finns i den <xref:System.Messaging.Message.BodyStream%2A>egenskapen.</xref:System.Messaging.Message.BodyStream%2A> Du kan också ange den <xref:System.Messaging.Message.BodyStream%2A>egenskapen direkt, till exempel för att skicka en fil som datainnehållet i ett meddelande.</xref:System.Messaging.Message.BodyStream%2A> Du kan ändra <xref:System.Messaging.Message.Body%2A>eller <xref:System.Messaging.Message.Formatter%2A>Egenskaper när som helst innan du skickar meddelandet, och data som ska serialiseras på rätt sätt när du anropar <xref:System.Messaging.MessageQueue.Send%2A>.</xref:System.Messaging.MessageQueue.Send%2A> </xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.Body%2A>       Egenskaper som definieras av den <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName>egenskap gäller endast för meddelanden som inte är av typen Message.</xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> Om du anger den <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>-egenskapen för en <xref:System.Messaging.MessageQueue>, dessa standardegenskaperna ignoreras leda till identiskt namngivna egenskaper i en Message-instans som skickas till kön.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>       En lista över inledande egenskapsvärden för en instans av meddelandet, finns det <xref:System.Messaging.Message.%23ctor%2A>konstruktor.</xref:System.Messaging.Message.%23ctor%2A>"
  example:
  - "The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.  \n  \n [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.message_1.cpp)]\n [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.message_1.cs)]\n [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.message_1.vb)]  \n  \n The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.  \n  \n [!code-cpp[Message.Body#1](~/add/codesnippet/cpp/t-system.messaging.message_2.cpp)]\n [!code-cs[Message.Body#1](~/add/codesnippet/csharp/t-system.messaging.message_2.cs)]\n [!code-vb[Message.Body#1](~/add/codesnippet/visualbasic/t-system.messaging.message_2.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class Message : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Messaging.Message.#ctor
  id: '#ctor'
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Message()
  nameWithType: Message.Message()
  fullName: System.Messaging.Message.Message()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.Messaging.Message&quot;> </xref> klass utan en brödtext."
  remarks: "Använd den här överlagring för att skapa en ny instans av den <xref:System.Messaging.Message>klass som har en brödtext.</xref:System.Messaging.Message>       Ange antingen den <xref:System.Messaging.Message.Body%2A>egenskapen eller <xref:System.Messaging.Message.BodyStream%2A>egenskapen innan du skickar det <xref:System.Messaging.Message>objektet.</xref:System.Messaging.Message> </xref:System.Messaging.Message.BodyStream%2A> </xref:System.Messaging.Message.Body%2A> Den <xref:System.Messaging.Message.Body%2A>egenskapen kan vara ett objekt som kan serialiseras, till exempel en textsträng, ett structure-objekt, en klassinstans eller inbäddade objekt.</xref:System.Messaging.Message.Body%2A>       Om du skriva innehållet i meddelandet direkt till den <xref:System.Messaging.Message.BodyStream%2A>egenskapen, det <xref:System.Messaging.Message.Formatter%2A>egenskapen innan du skickar meddelandet.</xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.BodyStream%2A> Själva serialiseras med hjälp av den <xref:System.Messaging.Message.Formatter%2A>egenskapsvärde när den <xref:System.Messaging.MessageQueue.Send%2A>metoden anropas för den <xref:System.Messaging.MessageQueue>instans.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue.Send%2A> </xref:System.Messaging.Message.Formatter%2A>       Den <xref:System.Messaging.XmlMessageFormatter>är löst sammansatta, så det inte är nödvändigt att ha samma objekt skriver på avsändare och mottagare när du använder det här formatet.</xref:System.Messaging.XmlMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>och <xref:System.Messaging.BinaryMessageFormatter>serialisera data till binär representation.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>används när skickas eller tas emot COM-komponenter.</xref:System.Messaging.ActiveXMessageFormatter>       I följande tabell visas första egenskapsvärden för en instans av <xref:System.Messaging.Message>.</xref:System.Messaging.Message>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.Messaging.Message.AcknowledgeType%2A>| `AcknowledgeType.None`|   | <xref:System.Messaging.Message.AdministrationQueue%2A>| `null`|   | <xref:System.Messaging.Message.AppSpecific%2A>|0|   | <xref:System.Messaging.Message.AttachSenderId%2A>| `true`|   | <xref:System.Messaging.Message.AuthenticationProviderName%2A>| Microsoft grundläggande kryptografiprovider version 1.0 |   | <xref:System.Messaging.Message.AuthenticationProviderType%2A>| `CryptoProviderType.RSA_FULL`|   | <xref:System.Messaging.Message.Body%2A>| `null`|   | <xref:System.Messaging.Message.BodyStream%2A>| `Stream.null`|   | <xref:System.Messaging.Message.BodyType%2A>|0|   | <xref:System.Messaging.Message.ConnectorType%2A>| `Guid.Empty`|   | <xref:System.Messaging.Message.CorrelationId%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.DestinationSymmetricKey%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.DigitalSignature%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.EncryptionAlgorithm%2A>| `EncryptionAlgorithm.RC2`|   | <xref:System.Messaging.Message.Extension%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.Formatter%2A>| `XmlMessageFormatter`|   | <xref:System.Messaging.Message.HashAlgorithm%2A>| `HashAlgorithm.MD5`|   | <xref:System.Messaging.Message.Label%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.Priority%2A>| `MessagePriority.Normal`|   | <xref:System.Messaging.Message.Recoverable%2A>| `false`|   | <xref:System.Messaging.Message.ResponseQueue%2A>| `null`|   | <xref:System.Messaging.Message.SenderCertificate%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.TimeToBeReceived%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TimeToReachQueue%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TransactionStatusQueue%2A>| `null`|   | <xref:System.Messaging.Message.UseAuthentication%2A>| `false`|   | <xref:System.Messaging.Message.UseDeadLetterQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseEncryption%2A>| `false`|   | <xref:System.Messaging.Message.UseJournalQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseTracing%2A>| `false`|</xref:System.Messaging.Message.UseTracing%2A></xref:System.Messaging.Message.UseJournalQueue%2A></xref:System.Messaging.Message.UseEncryption%2A></xref:System.Messaging.Message.UseDeadLetterQueue%2A></xref:System.Messaging.Message.UseAuthentication%2A></xref:System.Messaging.Message.TransactionStatusQueue%2A></xref:System.Messaging.Message.TimeToReachQueue%2A></xref:System.Messaging.Message.TimeToBeReceived%2A></xref:System.Messaging.Message.SenderCertificate%2A></xref:System.Messaging.Message.ResponseQueue%2A></xref:System.Messaging.Message.Recoverable%2A></xref:System.Messaging.Message.Priority%2A></xref:System.Messaging.Message.Label%2A></xref:System.Messaging.Message.HashAlgorithm%2A></xref:System.Messaging.Message.Formatter%2A></xref:System.Messaging.Message.Extension%2A></xref:System.Messaging.Message.EncryptionAlgorithm%2A></xref:System.Messaging.Message.DigitalSignature%2A></xref:System.Messaging.Message.DestinationSymmetricKey%2A></xref:System.Messaging.Message.CorrelationId%2A></xref:System.Messaging.Message.ConnectorType%2A></xref:System.Messaging.Message.BodyType%2A></xref:System.Messaging.Message.BodyStream%2A></xref:System.Messaging.Message.Body%2A></xref:System.Messaging.Message.AuthenticationProviderType%2A></xref:System.Messaging.Message.AuthenticationProviderName%2A></xref:System.Messaging.Message.AttachSenderId%2A></xref:System.Messaging.Message.AppSpecific%2A></xref:System.Messaging.Message.AdministrationQueue%2A></xref:System.Messaging.Message.AcknowledgeType%2A>"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/m-system.messaging.messa_16_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/m-system.messaging.messa_16_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/m-system.messaging.messa_16_1.cs)]"
  syntax:
    content: public Message ();
    parameters: []
  overload: System.Messaging.Message.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Message.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Message(Object)
  nameWithType: Message.Message(Object)
  fullName: System.Messaging.Message.Message(Object)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.Messaging.Message&quot;> </xref> class, med hjälp av den <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> att serialisera det angivna objektet i brödtexten i meddelandet."
  remarks: "Använd den här överlagring för att skapa en ny instans av den <xref:System.Messaging.Message>klass som innehåller den <xref:System.Messaging.Message.Body%2A>anges av den `body` parameter.</xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.Message> Den `body` parametern kan vara ett objekt som kan serialiseras, till exempel en textsträng, ett structure-objekt, en klassinstans eller inbäddade objekt. Själva serialiseras med hjälp av den <xref:System.Messaging.XmlMessageFormatter>Om du inte ändrar den <xref:System.Messaging.Message.Formatter%2A>egenskap innan den <xref:System.Messaging.Message>skickas.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.XmlMessageFormatter> Om du ändrar den <xref:System.Messaging.Message.Body%2A>eller <xref:System.Messaging.Message.Formatter%2A>egenskapen när som helst innan du anropar <xref:System.Messaging.MessageQueue.Send%2A>, meddelandet som ska serialiseras enligt det nya egenskapsvärdet.</xref:System.Messaging.MessageQueue.Send%2A> </xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.Body%2A>       Den <xref:System.Messaging.XmlMessageFormatter>är löst sammansatta, så det inte är nödvändigt att ha samma objekt skriver på avsändare och mottagare när du använder det här formatet.</xref:System.Messaging.XmlMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>och <xref:System.Messaging.BinaryMessageFormatter>serialisera data till binär representation.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>används när skickas eller tas emot COM-komponenter.</xref:System.Messaging.ActiveXMessageFormatter>       I följande tabell visas första egenskapsvärden för en instans av <xref:System.Messaging.Message>.</xref:System.Messaging.Message>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.Messaging.Message.AcknowledgeType%2A>| `AcknowledgeType.None`|   | <xref:System.Messaging.Message.AdministrationQueue%2A>| `null`|   | <xref:System.Messaging.Message.AppSpecific%2A>|0|   | <xref:System.Messaging.Message.AttachSenderId%2A>| `true`|   | <xref:System.Messaging.Message.AuthenticationProviderName%2A>| Microsoft grundläggande kryptografiprovider version 1.0 |   | <xref:System.Messaging.Message.AuthenticationProviderType%2A>| `CryptoProviderType.RSA_FULL`|   | <xref:System.Messaging.Message.Body%2A>| Den `body` parameter. |   | <xref:System.Messaging.Message.BodyStream%2A>| `Stream.null`|   | <xref:System.Messaging.Message.BodyType%2A>|0|   | <xref:System.Messaging.Message.ConnectorType%2A>| `Guid.Empty`|   | <xref:System.Messaging.Message.CorrelationId%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.DestinationSymmetricKey%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.DigitalSignature%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.EncryptionAlgorithm%2A>| `EncryptionAlgorithm.RC2`|   | <xref:System.Messaging.Message.Extension%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.Formatter%2A>| `XmlMessageFormatter`|   | <xref:System.Messaging.Message.HashAlgorithm%2A>| `HashAlgorithm.MD5`|   | <xref:System.Messaging.Message.Label%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.Priority%2A>| `MessagePriority.Normal`|   | <xref:System.Messaging.Message.Recoverable%2A>| `false`|   | <xref:System.Messaging.Message.ResponseQueue%2A>| `null`|   | <xref:System.Messaging.Message.SenderCertificate%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.TimeToBeReceived%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TimeToReachQueue%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TransactionStatusQueue%2A>| `null`|   | <xref:System.Messaging.Message.UseAuthentication%2A>| `false`|   | <xref:System.Messaging.Message.UseDeadLetterQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseEncryption%2A>| `false`|   | <xref:System.Messaging.Message.UseJournalQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseTracing%2A>| `false`|</xref:System.Messaging.Message.UseTracing%2A></xref:System.Messaging.Message.UseJournalQueue%2A></xref:System.Messaging.Message.UseEncryption%2A></xref:System.Messaging.Message.UseDeadLetterQueue%2A></xref:System.Messaging.Message.UseAuthentication%2A></xref:System.Messaging.Message.TransactionStatusQueue%2A></xref:System.Messaging.Message.TimeToReachQueue%2A></xref:System.Messaging.Message.TimeToBeReceived%2A></xref:System.Messaging.Message.SenderCertificate%2A></xref:System.Messaging.Message.ResponseQueue%2A></xref:System.Messaging.Message.Recoverable%2A></xref:System.Messaging.Message.Priority%2A></xref:System.Messaging.Message.Label%2A></xref:System.Messaging.Message.HashAlgorithm%2A></xref:System.Messaging.Message.Formatter%2A></xref:System.Messaging.Message.Extension%2A></xref:System.Messaging.Message.EncryptionAlgorithm%2A></xref:System.Messaging.Message.DigitalSignature%2A></xref:System.Messaging.Message.DestinationSymmetricKey%2A></xref:System.Messaging.Message.CorrelationId%2A></xref:System.Messaging.Message.ConnectorType%2A></xref:System.Messaging.Message.BodyType%2A></xref:System.Messaging.Message.BodyStream%2A></xref:System.Messaging.Message.Body%2A></xref:System.Messaging.Message.AuthenticationProviderType%2A></xref:System.Messaging.Message.AuthenticationProviderName%2A></xref:System.Messaging.Message.AttachSenderId%2A></xref:System.Messaging.Message.AppSpecific%2A></xref:System.Messaging.Message.AdministrationQueue%2A></xref:System.Messaging.Message.AcknowledgeType%2A>"
  example:
  - "The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.  \n  \n [!code-cpp[Message.Body#1](~/add/codesnippet/cpp/m-system.messaging.messa_33_1.cpp)]\n [!code-cs[Message.Body#1](~/add/codesnippet/csharp/m-system.messaging.messa_33_1.cs)]\n [!code-vb[Message.Body#1](~/add/codesnippet/visualbasic/m-system.messaging.messa_33_1.vb)]"
  syntax:
    content: public Message (object body);
    parameters:
    - id: body
      type: System.Object
      description: "Objektet som ska serialiseras i brödtexten i meddelandet."
  overload: System.Messaging.Message.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)
  id: '#ctor(System.Object,System.Messaging.IMessageFormatter)'
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Message(Object,IMessageFormatter)
  nameWithType: Message.Message(Object,IMessageFormatter)
  fullName: System.Messaging.Message.Message(Object,IMessageFormatter)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initierar en ny instans av den <xref href=&quot;System.Messaging.Message&quot;> </xref> klassen med hjälp av angivna Formateraren för att serialisera det angivna objektet i brödtexten i meddelandet."
  remarks: "Använd den här överlagring för att skapa en ny instans av den <xref:System.Messaging.Message>klass som innehåller den <xref:System.Messaging.Message.Body%2A>anges av den `body` parametern och som använder någon giltig formaterare för att serialisera brödtexten.</xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.Message> Den `body` parametern är alla objekt som kan serialiseras, till exempel en textsträng, ett structure-objekt, en klassinstans eller inbäddade objekt. Om du ändrar den <xref:System.Messaging.Message.Body%2A>eller <xref:System.Messaging.Message.Formatter%2A>egenskapen när som helst innan du anropar <xref:System.Messaging.MessageQueue.Send%2A>, meddelandet som ska serialiseras enligt det nya egenskapsvärdet.</xref:System.Messaging.MessageQueue.Send%2A> </xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.Body%2A>       Den <xref:System.Messaging.XmlMessageFormatter>är löst sammansatta, så det inte är nödvändigt att ha samma objekt skriver på avsändare och mottagare när du använder det här formatet.</xref:System.Messaging.XmlMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>och <xref:System.Messaging.BinaryMessageFormatter>serialisera data till binär representation.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>används när skickas eller tas emot COM-komponenter.</xref:System.Messaging.ActiveXMessageFormatter>       I följande tabell visas första egenskapsvärden för en instans av <xref:System.Messaging.Message>.</xref:System.Messaging.Message>      | Egenskapen | Ursprungligt värde |   |--------------|-------------------|   | <xref:System.Messaging.Message.AcknowledgeType%2A>| `AcknowledgeType.None`|   | <xref:System.Messaging.Message.AdministrationQueue%2A>| `null`|   | <xref:System.Messaging.Message.AppSpecific%2A>|0|   | <xref:System.Messaging.Message.AttachSenderId%2A>| `true`|   | <xref:System.Messaging.Message.AuthenticationProviderName%2A>| Microsoft grundläggande kryptografiprovider version 1.0 |   | <xref:System.Messaging.Message.AuthenticationProviderType%2A>| `CryptoProviderType.RSA_FULL`|   | <xref:System.Messaging.Message.Body%2A>| Den `body` parameter. |   | <xref:System.Messaging.Message.BodyStream%2A>| `Stream.null`|   | <xref:System.Messaging.Message.BodyType%2A>|0|   | <xref:System.Messaging.Message.ConnectorType%2A>| `Guid.Empty`|   | <xref:System.Messaging.Message.CorrelationId%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.DestinationSymmetricKey%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.DigitalSignature%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.EncryptionAlgorithm%2A>| `EncryptionAlgorithm.RC2`|   | <xref:System.Messaging.Message.Extension%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.Formatter%2A>| Den `formatter` parameter. |   | <xref:System.Messaging.Message.HashAlgorithm%2A>| `HashAlgorithm.MD5`|   | <xref:System.Messaging.Message.Label%2A>| En tom sträng (&quot;&quot;) |   | <xref:System.Messaging.Message.Priority%2A>| `MessagePriority.Normal`|   | <xref:System.Messaging.Message.Recoverable%2A>| `false`|   | <xref:System.Messaging.Message.ResponseQueue%2A>| `null`|   | <xref:System.Messaging.Message.SenderCertificate%2A>| En matris med längden noll byte |   | <xref:System.Messaging.Message.TimeToBeReceived%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TimeToReachQueue%2A>| `Message.InfiniteTimeout`|   | <xref:System.Messaging.Message.TransactionStatusQueue%2A>| `null`|   | <xref:System.Messaging.Message.UseAuthentication%2A>| `false`|   | <xref:System.Messaging.Message.UseDeadLetterQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseEncryption%2A>| `false`|   | <xref:System.Messaging.Message.UseJournalQueue%2A>| `false`|   | <xref:System.Messaging.Message.UseTracing%2A>| `false`|</xref:System.Messaging.Message.UseTracing%2A></xref:System.Messaging.Message.UseJournalQueue%2A></xref:System.Messaging.Message.UseEncryption%2A></xref:System.Messaging.Message.UseDeadLetterQueue%2A></xref:System.Messaging.Message.UseAuthentication%2A></xref:System.Messaging.Message.TransactionStatusQueue%2A></xref:System.Messaging.Message.TimeToReachQueue%2A></xref:System.Messaging.Message.TimeToBeReceived%2A></xref:System.Messaging.Message.SenderCertificate%2A></xref:System.Messaging.Message.ResponseQueue%2A></xref:System.Messaging.Message.Recoverable%2A></xref:System.Messaging.Message.Priority%2A></xref:System.Messaging.Message.Label%2A></xref:System.Messaging.Message.HashAlgorithm%2A></xref:System.Messaging.Message.Formatter%2A></xref:System.Messaging.Message.Extension%2A></xref:System.Messaging.Message.EncryptionAlgorithm%2A></xref:System.Messaging.Message.DigitalSignature%2A></xref:System.Messaging.Message.DestinationSymmetricKey%2A></xref:System.Messaging.Message.CorrelationId%2A></xref:System.Messaging.Message.ConnectorType%2A></xref:System.Messaging.Message.BodyType%2A></xref:System.Messaging.Message.BodyStream%2A></xref:System.Messaging.Message.Body%2A></xref:System.Messaging.Message.AuthenticationProviderType%2A></xref:System.Messaging.Message.AuthenticationProviderName%2A></xref:System.Messaging.Message.AttachSenderId%2A></xref:System.Messaging.Message.AppSpecific%2A></xref:System.Messaging.Message.AdministrationQueue%2A></xref:System.Messaging.Message.AcknowledgeType%2A>"
  example:
  - >-
    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/6734a59e-0a86-49d1-96b9-_1.cpp)]
     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/6734a59e-0a86-49d1-96b9-_1.cs)]
     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/6734a59e-0a86-49d1-96b9-_1.vb)]
  syntax:
    content: public Message (object body, System.Messaging.IMessageFormatter formatter);
    parameters:
    - id: body
      type: System.Object
      description: "Objektet som ska serialiseras i brödtexten i meddelandet."
    - id: formatter
      type: System.Messaging.IMessageFormatter
      description: "En <xref href=&quot;System.Messaging.IMessageFormatter&quot;> </xref> som anger Formateraren som du vill serialisera brödtext."
  overload: System.Messaging.Message.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Message.AcknowledgeType
  id: AcknowledgeType
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AcknowledgeType
  nameWithType: Message.AcknowledgeType
  fullName: System.Messaging.Message.AcknowledgeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger typ av bekräftelsemeddelande som ska returneras till program som skickade meddelandet."
  remarks: "Egenskapen AcknowledgeType anger vilken typ av bekräftelsemeddelanden som begärs av avsändarprogrammet. Ange egenskapen AcknowledgeType innan du skickar meddelandet till begärandemeddelande på vissa händelser, exempelvis ett meddelande som når målkön, ett meddelande som hämtas eller en timeout för att ett meddelande inte når eller hämtas från målkön.       Message Queuing returnerar meddelandet genom att skicka meddelanden till den <xref:System.Messaging.Message.AdministrationQueue%2A>egenskapen som anges av det ursprungliga meddelandet.</xref:System.Messaging.Message.AdministrationQueue%2A> Ett bekräftelsemeddelande <xref:System.Messaging.Message.Acknowledgment%2A>egenskapen anger vilken typ av bekräftelsemeddelande som representerar.</xref:System.Messaging.Message.Acknowledgment%2A> Om exempelvis ett bekräftelsemeddelande har skickats eftersom meddelandet inte nådde målet innan den <xref:System.Messaging.Message.TimeToReachQueue%2A>intervall upphört att gälla den <xref:System.Messaging.Message.Acknowledgment%2A>för bekräftelse meddelandet skulle innehålla värdet `ReachQueueTimeout`.</xref:System.Messaging.Message.Acknowledgment%2A> </xref:System.Messaging.Message.TimeToReachQueue%2A>"
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_11_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_11_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_11_1.vb)]"
  syntax:
    content: public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }
    return:
      type: System.Messaging.AcknowledgeTypes
      description: "En av de <xref href=&quot;System.Messaging.AcknowledgeTypes&quot;> </xref> värden som representerar båda typerna av bekräftelsemeddelanden som systemet anslår i administrationskön och de villkor under vilka bekräftelser returneras till program som skickade meddelandet. Standardvärdet är <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.AcknowledgeType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen AcknowledgeType filtreras meddelandet."
  platform:
  - net462
- uid: System.Messaging.Message.Acknowledgment
  id: Acknowledgment
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Acknowledgment
  nameWithType: Message.Acknowledgment
  fullName: System.Messaging.Message.Acknowledgment
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar bekräftelseklassificering som det här meddelandet representerar."
  remarks: "När du får ett meddelande från en administrationskö läsa egenskapen bekräftelse för att kontrollera statusen för det ursprungliga meddelandet.       När ett meddelande skickas till målkön, kan Message Queuing begäras publicera ett bekräftelsemeddelande. Ett sådant meddelande kan till exempel ange om meddelandet anlände och hämtades i angivna timeout-fel, eller på vad som gick fel vid levereras. Målkön returnerar bekräftelse meddelanden och skickar dem till den administrationskö som anges i det ursprungliga meddelandet <xref:System.Messaging.Message.AdministrationQueue%2A>egenskap.</xref:System.Messaging.Message.AdministrationQueue%2A> Den <xref:System.Messaging.Message.Id%2A>egenskapen för ett bekräftelsemeddelande identifierar bekräftelsemeddelande inte det ursprungliga meddelandet.</xref:System.Messaging.Message.Id%2A> Du kan hitta identifieraren för det ursprungliga meddelandet i bekräftelsen <xref:System.Messaging.Message>instansens <xref:System.Messaging.Message.CorrelationId%2A>egenskap.</xref:System.Messaging.Message.CorrelationId%2A> </xref:System.Messaging.Message>       Om den här <xref:System.Messaging.Message>instansen representerar ett bekräftelsemeddelande, bekräftelse-egenskapen anger vilken typ av bekräftelsemeddelande.</xref:System.Messaging.Message> Annars egenskapen bekräftelse innehåller värdet `Normal`.       Använd den <xref:System.Messaging.Message.AcknowledgeType%2A>egenskapen för det ursprungliga meddelandet för att ange de omständigheter som bekräftelser returneras.</xref:System.Messaging.Message.AcknowledgeType%2A>"
  syntax:
    content: public System.Messaging.Acknowledgment Acknowledgment { get; }
    return:
      type: System.Messaging.Acknowledgment
      description: "En av de <xref href=&quot;System.Messaging.Acknowledgment&quot;> </xref> uppräkningsvärden."
  overload: System.Messaging.Message.Acknowledgment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera den <xref:System.Messaging.MessagePropertyFilter.Acknowledgment*>egenskapen.</xref:System.Messaging.MessagePropertyFilter.Acknowledgment*>"
  platform:
  - net462
- uid: System.Messaging.Message.AdministrationQueue
  id: AdministrationQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AdministrationQueue
  nameWithType: Message.AdministrationQueue
  fullName: System.Messaging.Message.AdministrationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den kö som tar emot bekräftelsemeddelanden som genereras av Message Queuing."
  remarks: "Den kö som anges i egenskapen AdministrationQueue kan vara en icke-transaktionell kö. Bekräftelsemeddelanden som skickas till administrationskön kan ange om det ursprungliga meddelandet har nått målkön och om det togs bort från kön.       När den <xref:System.Messaging.Message.AcknowledgeType%2A>-egenskap har ett värde annat än `None`, avsändarprogrammet måste ange vilken kö som ska användas som administrationskö.</xref:System.Messaging.Message.AcknowledgeType%2A>"
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_47_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_47_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_47_1.vb)]"
  syntax:
    content: public System.Messaging.MessageQueue AdministrationQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "Den <xref href=&quot;System.Messaging.MessageQueue&quot;> </xref> som anger vilken administrationskö som används för systemgenererade bekräftelsemeddelanden. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.AdministrationQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen AdministrationQueue filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.AppSpecific
  id: AppSpecific
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AppSpecific
  nameWithType: Message.AppSpecific
  fullName: System.Messaging.Message.AppSpecific
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ytterligare programspecifik information."
  remarks: "Egenskapen AppSpecific innehåller programspecifik information som du kan använda för att organisera olika typer av meddelanden. Du kan till exempel använda programspecifika index. Ansvarar för att tolka AppSpecific egenskapsinformation.       När det är möjligt bör du inkludera meddelandedata i själva meddelandet i stället för egenskapen AppSpecific.       Om du arbetar med externa köer med den <xref:System.Messaging.Message.Extension%2A>att ange egenskaper för meddelande som inte finns i Message Queuing.</xref:System.Messaging.Message.Extension%2A> Som med egenskapen AppSpecific ansvarar för att förstå innehållet i den <xref:System.Messaging.Message.Extension%2A>egenskapen.</xref:System.Messaging.Message.Extension%2A>"
  syntax:
    content: public int AppSpecific { get; set; }
    return:
      type: System.Int32
      description: "Information som är specifik för programmet. Standardvärdet är noll."
  overload: System.Messaging.Message.AppSpecific*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen AppSpecific filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.ArrivedTime
  id: ArrivedTime
  parent: System.Messaging.Message
  langs:
  - csharp
  name: ArrivedTime
  nameWithType: Message.ArrivedTime
  fullName: System.Messaging.Message.ArrivedTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar den tid som meddelandet anlände i målkön."
  remarks: "Meddelandets <xref:System.Messaging.Message.TimeToBeReceived%2A>egenskapen anger hur snabbt meddelandet måste tas emot från målkön.</xref:System.Messaging.Message.TimeToBeReceived%2A> Den <xref:System.Messaging.Message.TimeToBeReceived%2A>egenskapen timern startar när meddelandet skickas inte när meddelandet tas emot i kön.</xref:System.Messaging.Message.TimeToBeReceived%2A>"
  example:
  - "The following code example displays the value of a message's ArrivedTime property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public DateTime ArrivedTime { get; }
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som representerar ankomsttid för det meddelandet i målkön.</xref:System.DateTime> Tiden justeras från GMT för den lokala tiden på den dator som finns i målkön."
  overload: System.Messaging.Message.ArrivedTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen ArrivedTime."
  platform:
  - net462
- uid: System.Messaging.Message.AttachSenderId
  id: AttachSenderId
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AttachSenderId
  nameWithType: Message.AttachSenderId
  fullName: System.Messaging.Message.AttachSenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om avsändar-ID ska bifogas meddelandet."
  remarks: "Den <xref:System.Messaging.Message.SenderId%2A>egenskapen är en matris med byte som representerar ID skickas användarens.</xref:System.Messaging.Message.SenderId%2A> Avsändar-ID anges av MSMQ och används av mottagande Queue Manager för att kontrollera om avsändaren har behörighet till en kö.       Avsaknad av avsändaren ID är en indikation av den skickande datorn att Message Queuing inte bör verifiera den avsändaren eller verifiera avsändarens åtkomst rights till mottagande kön. Den <xref:System.Messaging.Message.SenderId%2A>är tillförlitlig endast om meddelandet autentiserades när den har nått målkön.</xref:System.Messaging.Message.SenderId%2A> Meddelandet avvisades när den når målkön om kön accepterar endast autentiserade meddelanden och antingen den <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>eller <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>egenskapen är `false`.</xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> </xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>      > [!CAUTION] > Underkänns ett meddelande, den är antingen skickas till kön för obeställbara (om <xref:System.Messaging.Message.UseDeadLetterQueue%2A>är `true`), eller ignoreras.</xref:System.Messaging.Message.UseDeadLetterQueue%2A> Du kan begära bekräftelser när ett meddelande som inte kan nå en kö. Annars när <xref:System.Messaging.Message.UseDeadLetterQueue%2A>är `false` meddelandet kan gå förlorade utan varning.</xref:System.Messaging.Message.UseDeadLetterQueue%2A>"
  example:
  - "The following code example gets and sets the value of a message's AttachSenderId property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool AttachSenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref:System.Messaging.Message.SenderId*>ska vara anslutna till meddelandet, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Messaging.Message.SenderId*> Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.AttachSenderId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen AttachSenderId filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.Authenticated
  id: Authenticated
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Authenticated
  nameWithType: Message.Authenticated
  fullName: System.Messaging.Message.Authenticated
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar ett värde som anger om meddelandet autentiserades."
  remarks: "Egenskapen autentiserad används endast av programmet medan det interagerar med meddelandet och försök att fastställa om autentisering har begärts. Om meddelandet i kön autentiserades meddelandet. Däremot om egenskapen autentiserad `true`, mottagande Queue Manager autentiserade meddelandet när det mottagna meddelandet.       Du kan inte avgöra om ett meddelande kunde inte autentiseras genom att titta på dess egenskaper. Message Queuing ignorerar meddelanden som inte autentisering innan de skickas till kön. Du kan begära att ett bekräftelsemeddelande skickas om leverans fel förhindrar att meddelandet i kön som kommer."
  example:
  - "The following code example displays the value of a message's Authenticated property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Authenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om autentisering har begärts för meddelandet när den angivna kön. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.Authenticated*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen autentiserad."
  platform:
  - net462
- uid: System.Messaging.Message.AuthenticationProviderName
  id: AuthenticationProviderName
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AuthenticationProviderName
  nameWithType: Message.AuthenticationProviderName
  fullName: System.Messaging.Message.AuthenticationProviderName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger namnet på den kryptografiprovider som användes för att skapa den digitala signaturen för meddelandet."
  remarks: "Normalt använder du AuthenticationProviderName när du arbetar med externa köer. Message Queuing kräver providernamn för autentisering och autentisering providertyp för kryptografi-providern (authentication provider) för att verifiera den digitala signaturen på både meddelanden som skickas till en extern kö och meddelanden som skickas till Message Queuing från en extern kö.       När du skickar ett meddelande alltid ange AuthenticationProviderName och <xref:System.Messaging.Message.ConnectorType%2A>Egenskaper tillsammans.</xref:System.Messaging.Message.ConnectorType%2A> När meddelandet har skickats, ignorerar Message Queuing providernamn autentisering om typ av koppling inte anges också.       Egenskapen AuthenticationProviderName kan inte vara `null`, men det kan vara en tom sträng (&quot;&quot;)."
  syntax:
    content: public string AuthenticationProviderName { get; set; }
    return:
      type: System.String
      description: "Namnet på den kryptografiprovider som användes för att skapa den digitala signaturen för meddelandet. Standardvärdet är Microsoft grundläggande kryptografiprovider version 1.0."
  overload: System.Messaging.Message.AuthenticationProviderName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det gick inte att ange egenskapen AuthenticationProviderName.       - eller - meddelandekön filtreras om du vill ignorera egenskapen AuthenticationProviderName."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "AuthenticationProviderName har ställts in på <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.AuthenticationProviderType
  id: AuthenticationProviderType
  parent: System.Messaging.Message
  langs:
  - csharp
  name: AuthenticationProviderType
  nameWithType: Message.AuthenticationProviderType
  fullName: System.Messaging.Message.AuthenticationProviderType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger typ av kryptografiprovider som användes för att skapa den digitala signaturen för meddelandet."
  remarks: "Du använder vanligtvis egenskapen AuthenticationProviderType när du arbetar med externa köer för att ange vilka cryptographic service provider är associerad med ett meddelande. Message Queuing kräver providernamn för autentisering och autentisering providertyp för kryptografi-providern (authentication provider) för att verifiera den digitala signaturen på både meddelanden som skickas till en extern kö och meddelanden som skickas till Message Queuing från en extern kö.       Endast `RsaFull` är avsedd att användas med meddelanden.       När du skickar ett meddelande alltid ange AuthenticationProviderType och <xref:System.Messaging.Message.ConnectorType%2A>Egenskaper tillsammans.</xref:System.Messaging.Message.ConnectorType%2A> När meddelandet har skickats, ignorerar Message Queuing providertyp autentisering om typ av koppling inte anges också."
  syntax:
    content: public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }
    return:
      type: System.Messaging.CryptographicProviderType
      description: "En av de <xref href=&quot;System.Messaging.CryptographicProviderType&quot;> </xref> värden. Standardvärdet är <xref uid=&quot;langword_csharp_RSA_FULL&quot; name=&quot;RSA_FULL&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.AuthenticationProviderType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det gick inte att ange egenskapen AuthenticationProviderType.       - eller - meddelandekön filtreras om du vill ignorera egenskapen AuthenticationProviderType."
  platform:
  - net462
- uid: System.Messaging.Message.Body
  id: Body
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Body
  nameWithType: Message.Body
  fullName: System.Messaging.Message.Body
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger innehållet i meddelandet."
  remarks: "Brödtext meddelandeegenskap innehåller vanligtvis data som är associerade med meddelandet. Även om du kan också skicka programspecifika data den <xref:System.Messaging.Message.AppSpecific%2A>och <xref:System.Messaging.Message.Extension%2A>Egenskaper, bör du inkludera meddelandedata i själva meddelandet när det är möjligt.</xref:System.Messaging.Message.Extension%2A> </xref:System.Messaging.Message.AppSpecific%2A> Endast brödtext egenskapen innehållet serialiseras eller krypterad.       Egenskapen Body kan innehålla ett objekt vars storlek inte överstiga 4 MB. Om du använder för <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName>att skicka ett objekt som är inte av typen <xref:System.Messaging.Message>till <xref:System.Messaging.MessageQueue>som objekt finns i egenskapen Body för den <xref:System.Messaging.Message>instans som returnerades av <xref:System.Messaging.MessageQueue.Peek%2A>eller <xref:System.Messaging.MessageQueue.Receive%2A>.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue.Peek%2A> </xref:System.Messaging.Message> </xref:System.Messaging.MessageQueue> </xref:System.Messaging.Message> </xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName>       Strängargument i `MessageQueue.Send(&quot;hello.&quot;)` är ett exempel på ett generiskt objekt.       Den <xref:System.Messaging.Message.BodyType%2A>egenskapen anger vilken typ av information som lagras i meddelandetexten.</xref:System.Messaging.Message.BodyType%2A> Message Queuing använder denna information för att identifiera vilken typ av brödtext egenskapen innehållet.       Ange egenskapen text eller <xref:System.Messaging.Message.BodyStream%2A>egenskapen innan du skickar det <xref:System.Messaging.Message>objektet.</xref:System.Messaging.Message> </xref:System.Messaging.Message.BodyStream%2A> Egenskapen Body kan vara alla serialiserbara objekt, t.ex en textsträng, struktur objekt, instans eller inbäddade objekt.       Om du skriva innehållet i meddelandet direkt till den <xref:System.Messaging.Message.BodyStream%2A>egenskapen, det <xref:System.Messaging.Message.Formatter%2A>egenskapen innan du skickar meddelandet.</xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.Message.BodyStream%2A> När den <xref:System.Messaging.MessageQueue.Send%2A>metoden anropas för den <xref:System.Messaging.MessageQueue>serialiseras Formateraren i instansen brödtexten i <xref:System.Messaging.Message.Formatter%2A>egenskap.</xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue.Send%2A> Om du skickar meddelandet utan att ange ett värde för <xref:System.Messaging.Message.Formatter%2A>egenskapen formaterare standardvärdena för <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.Message.Formatter%2A>      > [!NOTE] > Försöker ange brödtexten i ett meddelande till <xref:System.Decimal.MaxValue>gör att en <xref:System.OverflowException>när den `Send` metod för den <xref:System.Messaging.MessageQueue>klassen kallas och <xref:System.Messaging.ActiveXMessageFormatter>används.</xref:System.Messaging.ActiveXMessageFormatter> </xref:System.Messaging.MessageQueue> </xref:System.OverflowException> </xref:System.Decimal.MaxValue>"
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/p-system.messaging.messa_13_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_13_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/p-system.messaging.messa_13_1.cs)]"
  syntax:
    content: public object Body { get; set; }
    return:
      type: System.Object
      description: "Ett objekt som anger meddelandeinnehåll. Objektet kan vara en sträng, ett datum, en valuta, en siffra, en bytematris eller alla hanterade objekt."
  overload: System.Messaging.Message.Body*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref:System.Messaging.Message.Formatter*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Messaging.Message.Formatter*>       - eller - meddelandekön filtreras om du vill ignorera egenskapen Body."
  platform:
  - net462
- uid: System.Messaging.Message.BodyStream
  id: BodyStream
  parent: System.Messaging.Message
  langs:
  - csharp
  name: BodyStream
  nameWithType: Message.BodyStream
  fullName: System.Messaging.Message.BodyStream
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger informationen i själva meddelandet."
  remarks: "Innehållet i ett meddelande kan bestå av alla typer av information, till exempel en sträng, ett datum, en valuta, en siffra, en bytematris eller alla hanterade objekt. Den här informationen serialiseras till en <xref:System.IO.Stream>som ska skickas till kön.</xref:System.IO.Stream>       Ange antingen den <xref:System.Messaging.Message.Body%2A>egenskapen eller egenskapen BodyStream innan du skickar det <xref:System.Messaging.Message>objektet.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> Om du ställer in den <xref:System.Messaging.Message.Body%2A>egenskapen innehållet serialiseras till egenskapen BodyStream.</xref:System.Messaging.Message.Body%2A> Du kan dock välja att skriva egenskapen BodyStream direkt. Detta är användbart när du vill öppna en anslutning till en fil och strömma innehållet som en del av meddelandet.       Om du skriver innehållet i meddelandet direkt till egenskapen BodyStream, ange den <xref:System.Messaging.Message.Formatter%2A>egenskapen innan du skickar meddelandet.</xref:System.Messaging.Message.Formatter%2A> När den <xref:System.Messaging.MessageQueue.Send%2A>metoden anropas för den <xref:System.Messaging.MessageQueue>serialiseras Formateraren i instansen brödtexten i <xref:System.Messaging.Message.Formatter%2A>egenskap.</xref:System.Messaging.Message.Formatter%2A> </xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue.Send%2A> Om du skickar meddelandet utan att ange ett värde för <xref:System.Messaging.Message.Formatter%2A>egenskapen formaterare standardvärdena för <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.Message.Formatter%2A>       Om du ställer in den <xref:System.Messaging.Message.UseEncryption%2A>egenskapen `true` för innehållet i det här meddelandet meddelandet krypteras när det skickas inte när du ställer in den <xref:System.Messaging.Message.Body%2A>egenskapen.</xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.Message.UseEncryption%2A> Egenskapen BodyStream är därför aldrig krypterad."
  syntax:
    content: public System.IO.Stream BodyStream { get; set; }
    return:
      type: System.IO.Stream
      description: "En <xref:System.IO.Stream>som innehåller den serialiserade informationen i den <xref:System.Messaging.Message.Body*>av meddelandet.</xref:System.Messaging.Message.Body*> </xref:System.IO.Stream>"
  overload: System.Messaging.Message.BodyStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandekön filtreras om du vill ignorera den <xref:System.Messaging.Message.Body*>egenskapen.</xref:System.Messaging.Message.Body*>"
  platform:
  - net462
- uid: System.Messaging.Message.BodyType
  id: BodyType
  parent: System.Messaging.Message
  langs:
  - csharp
  name: BodyType
  nameWithType: Message.BodyType
  fullName: System.Messaging.Message.BodyType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger vilken typ av data som innehåller meddelandetext."
  remarks: "Message Queuing känner igen innehållet i meddelandetexten som ett objekt eller en serialiserad dataström. Egenskapen BodyType anger vilken typ av objekt i den <xref:System.Messaging.Message.Body%2A>för meddelandet.</xref:System.Messaging.Message.Body%2A>       Den <xref:System.Messaging.XmlMessageFormatter>utför bindningen mellan interna typer och objekt i en meddelandetext.</xref:System.Messaging.XmlMessageFormatter> Om du använder den <xref:System.Messaging.XmlMessageFormatter>, Formateraren anger egenskapen BodyType du.</xref:System.Messaging.XmlMessageFormatter>       Andra formaterare kan tillhandahålla bindning funktioner som visas i följande C#-kod.      ```   message.Formatter = new ActiveXMessageFormatter();   object myObject message.Body;   if (myObject is string) {   }   if (myObject is int) {   }   if (myObject is float) {   }   ```"
  example:
  - "The following code example displays the value of a message's BodyType property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int BodyType { get; set; }
    return:
      type: System.Int32
      description: "I meddelandets brödtext true typ, till exempel en sträng, ett datum, valuta eller en siffra."
  overload: System.Messaging.Message.BodyType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandekön filtreras om du vill ignorera den <xref:System.Messaging.Message.Body*>egenskapen.</xref:System.Messaging.Message.Body*>"
  platform:
  - net462
- uid: System.Messaging.Message.ConnectorType
  id: ConnectorType
  parent: System.Messaging.Message
  langs:
  - csharp
  name: ConnectorType
  nameWithType: Message.ConnectorType
  fullName: System.Messaging.Message.ConnectorType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger att vissa meddelandeegenskaper som oftast anges av Message Queuing har ställts in av den skickande datorn."
  remarks: "Message Queuing kräver egenskapen ConnectorType när ett program anger en meddelandeegenskap som oftast anges av meddelandekön. Ett program använder normalt sett en ConnectorType i följande två fall: - när ett anslutningsprogram skickar ett meddelande. ConnectorType anger avsändande och mottagande tillämpningsprogrammen så här tolkar du egenskaper för säkerhet och bekräftelse av meddelandet.      -Det program som skickade meddelandet i stället för Message Queuing krypterar när ett meddelande. ConnectorType talar om Message Queuing ska använda den <xref:System.Messaging.Message.DestinationSymmetricKey%2A>egenskapsvärde att dekryptera meddelandet.</xref:System.Messaging.Message.DestinationSymmetricKey%2A>       Du måste ange egenskapen ConnectorType om du ställer in något av följande egenskaper (annars kön ignorerar egenskaperna när meddelandet skickas):- <xref:System.Messaging.Message.AuthenticationProviderName%2A>- <xref:System.Messaging.Message.AuthenticationProviderType%2A>- <xref:System.Messaging.Message.DestinationSymmetricKey%2A>- <xref:System.Messaging.Message.DigitalSignature%2A>- <xref:System.Messaging.Message.MessageType%2A>- <xref:System.Messaging.Message.SenderId%2A></xref:System.Messaging.Message.SenderId%2A> </xref:System.Messaging.Message.MessageType%2A> </xref:System.Messaging.Message.DigitalSignature%2A> </xref:System.Messaging.Message.DestinationSymmetricKey%2A> </xref:System.Messaging.Message.AuthenticationProviderType%2A> </xref:System.Messaging.Message.AuthenticationProviderName%2A>"
  syntax:
    content: public Guid ConnectorType { get; set; }
    return:
      type: System.Guid
      description: "En <xref:System.Guid>definieras av programmet och används tillsammans med anslutningsprogram eller meddelandekryptering.</xref:System.Guid> Detta <xref:System.Guid>gör att ett mottagande program att tolka meddelandeegenskaper som ställdes in av den skickande datorn men som oftast anges av meddelandekön.</xref:System.Guid>"
  overload: System.Messaging.Message.ConnectorType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen ConnectorType filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.CorrelationId
  id: CorrelationId
  parent: System.Messaging.Message
  langs:
  - csharp
  name: CorrelationId
  nameWithType: Message.CorrelationId
  fullName: System.Messaging.Message.CorrelationId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger meddelande-ID som används av bekräftelse-, rapport- och svarsmeddelanden för att referera till det ursprungliga meddelandet."
  remarks: "När Message Queuing genererar ett bekräftelsemeddelande eller rapporten meddelande, används egenskapen Korrelations-ID för att ange meddelande-ID för det ursprungliga meddelandet. På så sätt kan korrelationsidentifierare kopplar samman rapporten eller bekräftelse meddelandet i det ursprungliga meddelandet.       Den skickande datorn kan sedan matcha bekräftelse eller rapporten med det ursprungliga meddelandet med hjälp av egenskapen CorrelationId för att identifiera det ursprungliga meddelandet <xref:System.Messaging.Message.Id%2A>egenskap.</xref:System.Messaging.Message.Id%2A>       Anslutningsprogram måste också ange egenskapen CorrelationId bekräftelse och rapporten meddelanden till meddelande-ID för det ursprungliga meddelandet.       När programmet skickar ett svarsmeddelande till avsändarprogrammet, kan du ange egenskapen CorrelationId i svarsmeddelandet för meddelande-ID för det ursprungliga meddelandet. Den skickande datorn kan sedan matcha ditt svarsmeddelande till meddelandet som skickades."
  example:
  - "The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_95_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_95_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_95_1.vb)]"
  syntax:
    content: public string CorrelationId { get; set; }
    return:
      type: System.String
      description: "Meddelande-ID som anges av den <xref:System.Messaging.Message.Id*>egenskapen för det ursprungliga meddelandet.</xref:System.Messaging.Message.Id*> Korrelationsidentifierare används av Message Queuing när den skapar ett bekräftelsemeddelande eller rapporten meddelande och av ett program när den skapar ett svarsmeddelande."
  overload: System.Messaging.Message.CorrelationId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen CorrelationId filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CorrelationId är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.DestinationQueue
  id: DestinationQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: DestinationQueue
  nameWithType: Message.DestinationQueue
  fullName: System.Messaging.Message.DestinationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar avsedda målkön för ett meddelande."
  remarks: "Egenskapen målkö används oftast för att fastställa det ursprungliga målet för ett meddelande som anlänt i en journalkö eller förlorade. Vanligtvis behöver du inte granska den här egenskapen eftersom du vanligtvis att hämta meddelandet från målkön."
  example:
  - "The following code example displays the value of a message's DestinationQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Messaging.MessageQueue DestinationQueue { get; }
    return:
      type: System.Messaging.MessageQueue
      description: "En <xref href=&quot;System.Messaging.MessageQueue&quot;> </xref> som anger den avsedda målkön för meddelandet."
  overload: System.Messaging.Message.DestinationQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen målkö."
  platform:
  - net462
- uid: System.Messaging.Message.DestinationSymmetricKey
  id: DestinationSymmetricKey
  parent: System.Messaging.Message
  langs:
  - csharp
  name: DestinationSymmetricKey
  nameWithType: Message.DestinationSymmetricKey
  fullName: System.Messaging.Message.DestinationSymmetricKey
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den symmetriska nyckel som används för att kryptera tillämpningskrypterade meddelanden eller meddelanden som skickas till externa köer."
  remarks: "Två scenarier kräver att du kan använda egenskapen DestinationSymmetricKey. Först är när dina program i stället Message Queuing krypterar ett meddelande. Andra är när du skickar ett krypterat meddelande till ett system för meddelandeköer än Message Queuing.       Innan du anger den här egenskapen måste du kryptera den symmetriska nyckeln med den offentliga nyckeln för mottagande queue manager. När du skickar ett meddelande om tillämpningskrypterade använder mottagande queue manager den symmetriska nyckeln för att dekryptera meddelandet innan det skickas till målkön.       Om du skickar ett meddelande till en extern kö tas meddelandet först emot av lämplig anslutningsprogrammet som vidarebefordrar det krypterade meddelandet med den symmetriska nyckeln som är anslutna till det mottagande programmet. Det är sedan det mottagande programmet att dekryptera meddelandet med den symmetriska nyckeln ansvar.       När du ställer in egenskapen DestinationSymmetricKey måste du också ange den <xref:System.Messaging.Message.ConnectorType%2A>egenskapen.</xref:System.Messaging.Message.ConnectorType%2A> När meddelandet har skickats, Message Queuing ignoreras egenskapen DestinationSymmetricKey om den <xref:System.Messaging.Message.ConnectorType%2A>egenskapen också anges inte.</xref:System.Messaging.Message.ConnectorType%2A>       Egenskapen DestinationSymmetricKey har en maximal matrislängd storlek på 256."
  syntax:
    content: public byte[] DestinationSymmetricKey { get; set; }
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som anger den symmetriska nyckel som mål används för att kryptera meddelandet. Standardvärdet är en matris med längden noll."
  overload: System.Messaging.Message.DestinationSymmetricKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen DestinationSymmetricKey filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DestinationSymmetricKey är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.DigitalSignature
  id: DigitalSignature
  parent: System.Messaging.Message
  langs:
  - csharp
  name: DigitalSignature
  nameWithType: Message.DigitalSignature
  fullName: System.Messaging.Message.DigitalSignature
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den digitala signaturen som Message Queuing använder för att autentisera meddelandet."
  remarks: "Message Queuing använder den digitala signaturen vid autentisering av meddelanden som skickades av Message Queuing version 1.0. I de flesta fall Message Queuing genererar och anger egenskapen DigitalSignature när skicka begär autentisering. Det mottagande programmet använder den här egenskapen för att hämta den digitala signatur som bifogats i meddelandet.       Du kan bara använda egenskapen DigitalSignature när du kör Message Queuing-version 2.0. Avsändarprogrammet måste ange MSMQ version 1.0 signaturer när begär autentisering. Om avsändarprogrammet skickar en Message Queuing-version 2.0 signatur, innehåller den här egenskapen en buffert på fyra byte, varje med noll.       Egenskapen DigitalSignature tillsammans med den <xref:System.Messaging.Message.SenderCertificate%2A>egenskapen används också av anslutningsprogram när ett meddelande skickas.</xref:System.Messaging.Message.SenderCertificate%2A> I det här scenariot anslutningsprogrammet, i stället för Message Queuing – genererar den digitala signaturen, den baseras på certifikatet för den användare som skickar meddelandet.       DigitalSignature-egenskapen har en maximal matrislängd storlek på 256.       När du ställer in egenskapen DigitalSignature måste du också ange den <xref:System.Messaging.Message.ConnectorType%2A>egenskapen.</xref:System.Messaging.Message.ConnectorType%2A> När ett meddelande skickas Message Queuing ignoreras egenskapen DigitalSignature om den <xref:System.Messaging.Message.ConnectorType%2A>egenskapen också anges inte.</xref:System.Messaging.Message.ConnectorType%2A>"
  syntax:
    content: public byte[] DigitalSignature { get; set; }
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som anger den digitala signaturen för Message Queuing 1.0 används för att autentisera meddelandet. Standardvärdet är en matris med längden noll."
  overload: System.Messaging.Message.DigitalSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen DigitalSignature filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen DigitalSignature <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.Messaging.Message
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: Message.EncryptionAlgorithm
  fullName: System.Messaging.Message.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den krypteringsalgoritm som används för att kryptera innehållet i ett privat meddelande."
  remarks: "Om ett meddelande är privat (krypterade) kan krypteras innan den skickas och dekrypteras har tagits emot. Egenskapen EncryptionAlgorithm anger vilken algoritm som används för att kryptera privata meddelandets text.       En kö kan kräva att inkommande meddelanden krypteras. Om ett program skickar ett icke-krypterade (icke-privata)-meddelande till en kö som accepterar bara privata meddelanden, eller om ett privat meddelande skickas till en kö som accepterar endast icke-privata meddelanden, avvisar meddelandet i kön. Avsändarprogrammet kan begära att ett negativt bekräftelsemeddelande returneras i så fall."
  syntax:
    content: public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }
    return:
      type: System.Messaging.EncryptionAlgorithm
      description: "En av de <xref href=&quot;System.Messaging.EncryptionAlgorithm&quot;> </xref> uppräkningsvärden. Standardvärdet är <xref uid=&quot;langword_csharp_RC2&quot; name=&quot;RC2&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.EncryptionAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen EncryptionAlgorithm filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.Extension
  id: Extension
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Extension
  nameWithType: Message.Extension
  fullName: System.Messaging.Message.Extension
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ytterligare programdefinierad information som är associerad med meddelandet."
  remarks: "Egenskapen Extension ger för programdefinierad information, t.ex. ett large binary object som är associerad med meddelandet. Det är det mottagande programmet att tolka innehållet i den utökade egenskapen ansvar.       Om möjligt bör du inkludera meddelandedata i den <xref:System.Messaging.Message.Body%2A>egenskapen för meddelandet i stället för den utökade egenskapen.</xref:System.Messaging.Message.Body%2A>       När du arbetar med externa köer, använder du den utökade egenskapen för att ange egenskaper för meddelande som inte finns i Message Queuing.       En extern kö finns i ett system för meddelandeköer än Microsoft Message Queuing. Message Queuing kommunicerar med sådana köer via ett anslutningsprogram."
  syntax:
    content: public byte[] Extension { get; set; }
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som tillhandahåller programdefinierad information som är associerad med meddelandet. Standardvärdet är en matris med längden noll."
  overload: System.Messaging.Message.Extension*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera den utökade egenskapen filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den utökade egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.Formatter
  id: Formatter
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Formatter
  nameWithType: Message.Formatter
  fullName: System.Messaging.Message.Formatter
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger Formateraren används för att serialisera ett objekt i eller deserialisering av objekt från brödtext."
  remarks: "Använd egenskapen formateringen vid läsning och skrivning av ett meddelande. När ett meddelande skickas till kön Formateraren Serialiserar den <xref:System.Messaging.Message.Body%2A>egenskapen till en dataström som kan skickas till meddelandekön.</xref:System.Messaging.Message.Body%2A> Vid läsning från en kö Formateraren deserializes meddelandedata till den <xref:System.Messaging.Message.Body%2A>egenskapen.</xref:System.Messaging.Message.Body%2A>       Om du skriva innehållet i meddelandet direkt till den <xref:System.Messaging.Message.BodyStream%2A>egenskapen egenskapen formaterare innan du skickar meddelandet.</xref:System.Messaging.Message.BodyStream%2A> När den <xref:System.Messaging.MessageQueue.Send%2A>metoden anropas för den <xref:System.Messaging.MessageQueue>serialiseras Formateraren i egenskapen formaterare instansen brödtexten.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue.Send%2A> Om du skickar meddelandet utan att ange ett värde för egenskapen formaterare standard Formateraren <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter>       Den <xref:System.Messaging.XmlMessageFormatter>är löst sammansatta, så det inte är nödvändigt att ha samma objekt skriver på avsändare och mottagare när du använder det här formatet.</xref:System.Messaging.XmlMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>och <xref:System.Messaging.BinaryMessageFormatter>serialisera data till binär representation.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.ActiveXMessageFormatter> Den <xref:System.Messaging.ActiveXMessageFormatter>används när skickas eller tas emot COM-komponenter.</xref:System.Messaging.ActiveXMessageFormatter>"
  example:
  - "The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.  \n  \n [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/p-system.messaging.messa_5_1.cpp)]\n [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/p-system.messaging.messa_5_1.cs)]\n [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_5_1.vb)]  \n  \n The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.  \n  \n [!code-cpp[Message.Body#1](~/add/codesnippet/cpp/p-system.messaging.messa_5_2.cpp)]\n [!code-cs[Message.Body#1](~/add/codesnippet/csharp/p-system.messaging.messa_5_2.cs)]\n [!code-vb[Message.Body#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_5_2.vb)]"
  syntax:
    content: public System.Messaging.IMessageFormatter Formatter { get; set; }
    return:
      type: System.Messaging.IMessageFormatter
      description: "Den <xref href=&quot;System.Messaging.IMessageFormatter&quot;> </xref> som producerar en dataström som skrivs till eller läses från brödtext. Standardvärdet är <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref>."
  overload: System.Messaging.Message.Formatter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen Formateraren är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.Message.HashAlgorithm
  id: HashAlgorithm
  parent: System.Messaging.Message
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: Message.HashAlgorithm
  fullName: System.Messaging.Message.HashAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den hash-algoritm som Message Queuing använder för att autentisera ett meddelande eller skapa en digital signatur för ett meddelande."
  remarks: "Message Queuing använder hash-algoritm för på källdatorn, när du skapar en digital signatur för ett meddelande. Målet Queue Manager använder sedan samma hash-algoritm för att autentisera meddelandet när det tas emot."
  syntax:
    content: public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Messaging.HashAlgorithm
      description: "En av de <xref href=&quot;System.Messaging.HashAlgorithm&quot;> </xref> uppräkningsvärden. Standardvärdet är för Windows XP, <xref uid=&quot;langword_csharp_SHA&quot; name=&quot;SHA&quot; href=&quot;&quot;> </xref>. Standardvärdet är annars <xref uid=&quot;langword_csharp_MD5&quot; name=&quot;MD5&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen HashAlgorithm filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.Id
  id: Id
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Id
  nameWithType: Message.Id
  fullName: System.Messaging.Message.Id
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar det meddelande."
  remarks: "Message Queuing genererar ett meddelande-ID när meddelandet har skickats. Identifieraren består av 20 byte och innehåller två element: datorn <xref:System.Guid>av den skickande datorn och en unik identifierare för meddelandet på datorn.</xref:System.Guid> Kombinationen av de två objekten genererar ett meddelande-ID som är unikt i nätverket.       Message Queuing genererar meddelandet identifierare för alla meddelanden, inklusive bekräftelse och rapporten meddelanden. Ett bekräftelsemeddelande skickas vanligtvis av Message Queuing i reaktion ankomst eller fel i en ursprungliga, skickas meddelandet. Du hittar Id egenskapsvärdet av det ursprungliga meddelandet i den <xref:System.Messaging.Message.CorrelationId%2A>-egenskapen för ett bekräftelsemeddelande.</xref:System.Messaging.Message.CorrelationId%2A>       Du kan också använda egenskapen Id när du skickar ett svarsmeddelande till en svarskö. Om du vill inkludera identifierare för det ursprungliga meddelandet i ett svarsmeddelande, ange den <xref:System.Messaging.Message.CorrelationId%2A>egenskapen för svarsmeddelande till Id-egenskapen för det ursprungliga meddelandet.</xref:System.Messaging.Message.CorrelationId%2A> Det program som läser svarsmeddelandet kan sedan använda korrelationsidentifierare svarsmeddelandet för att identifiera det ursprungliga meddelandet."
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_19_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_19_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_19_1.vb)]"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Meddelandets unika identifierare, som genereras av Message Queuing."
  overload: System.Messaging.Message.Id*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera Id-egenskapen."
  platform:
  - net462
- uid: System.Messaging.Message.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.Messaging.Message
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: Message.InfiniteTimeout
  fullName: System.Messaging.Message.InfiniteTimeout
  type: Field
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Anger att det finns ingen tidsgräns."
  remarks: "<xref:System.Messaging.Message.TimeToBeReceived%2A>och <xref:System.Messaging.Message.TimeToReachQueue%2A>kräver ett värde som anger en tidsgräns.</xref:System.Messaging.Message.TimeToReachQueue%2A></xref:System.Messaging.Message.TimeToBeReceived%2A> För gamla timeout-värdet är den maximala tiden som tillåts för ett meddelande som ska tas emot från kön. I det senare är tidsgräns den tillåtna tiden för ett meddelande att nå kön. I båda fallen måste du ange timeout-värdet som ett antal sekunder eller använda InfiniteTimeout för att ange att det finns ingen tidsgräns."
  example:
  - "The following code example demonstrates the use of the InfiniteTimeout field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public static readonly TimeSpan InfiniteTimeout;
    return:
      type: System.TimeSpan
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Message.IsFirstInTransaction
  id: IsFirstInTransaction
  parent: System.Messaging.Message
  langs:
  - csharp
  name: IsFirstInTransaction
  nameWithType: Message.IsFirstInTransaction
  fullName: System.Messaging.Message.IsFirstInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar ett värde som anger om meddelandet var det första meddelandet som skickades i en transaktion."
  remarks: "Mottagande program använda egenskapen IsFirstInTransaction för att verifieria att ett meddelande var det första meddelandet som skickades i en transaktion till en enskild kö.       Den här egenskapen är endast tillgänglig med Message Queuing-version 2.0 och senare.       Du kan använda egenskapen IsFirstInTransaction tillsammans med två andra egenskaper för att verifiera transaktionen gränser: <xref:System.Messaging.Message.IsLastInTransaction%2A>och <xref:System.Messaging.Message.TransactionId%2A>.</xref:System.Messaging.Message.TransactionId%2A> </xref:System.Messaging.Message.IsLastInTransaction%2A> Använd tidigare för att kontrollera om ett meddelande var det sista meddelandet som skickades i transaktionen och använda dessa för att hämta ID för transaktionen.       Om endast ett meddelande skickas i en transaktion i IsFirstInTransaction och <xref:System.Messaging.Message.IsLastInTransaction%2A>Egenskaper båda anges `true`.</xref:System.Messaging.Message.IsLastInTransaction%2A>"
  example:
  - "The following code example displays the value of a message's IsFirstInTransaction property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IsFirstInTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om meddelandet var det första meddelandet som skickades i en transaktion; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.IsFirstInTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen IsFirstInTransaction."
  platform:
  - net462
- uid: System.Messaging.Message.IsLastInTransaction
  id: IsLastInTransaction
  parent: System.Messaging.Message
  langs:
  - csharp
  name: IsLastInTransaction
  nameWithType: Message.IsLastInTransaction
  fullName: System.Messaging.Message.IsLastInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar ett värde som anger om meddelandet var det sista meddelandet som skickades i en transaktion."
  remarks: "Mottagande program använda egenskapen IsLastInTransaction för att verifieria att ett meddelande var det sista meddelandet som skickades i en transaktion till en enskild kö.       Den här egenskapen är endast tillgänglig med Message Queuing-version 2.0 och senare.       Du kan använda egenskapen IsLastInTransaction tillsammans med två andra egenskaper för att verifiera transaktionen gränser: <xref:System.Messaging.Message.IsFirstInTransaction%2A>och <xref:System.Messaging.Message.TransactionId%2A>.</xref:System.Messaging.Message.TransactionId%2A> </xref:System.Messaging.Message.IsFirstInTransaction%2A> Använd tidigare för att kontrollera om ett meddelande var det första meddelandet som skickades i transaktionen och använda dessa för att hämta ID för transaktionen.       Om endast ett meddelande skickas i en transaktion i <xref:System.Messaging.Message.IsFirstInTransaction%2A>och IsLastInTransaction egenskaper båda anges `true`.</xref:System.Messaging.Message.IsFirstInTransaction%2A>"
  example:
  - "The following code example displays the value of a message's IsLastInTransaction property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IsLastInTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om meddelandet var det sista meddelandet som skickades i en enda transaktion; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.IsLastInTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen IsLastInTransaction."
  platform:
  - net462
- uid: System.Messaging.Message.Label
  id: Label
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Label
  nameWithType: Message.Label
  fullName: System.Messaging.Message.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger en tillämpningsdefinierad Unicode-sträng som beskrivs i meddelandet."
  remarks: "Du kan använda en Meddelandeetiketten för flera syften. Du kan exempelvis använda den för visning eller selektivt bearbeta meddelanden baserat på etikettvärdet. Etiketten behöver inte vara unikt inom meddelanden.       Meddelandekön och ett meddelande som etiketter representerar ett programdefinierade värde som kan hjälpa dig identifiera kön eller meddelandet i läsbart villkor. Ansvarar för att tolka innehållet etikett som har ingen inbyggd betydelse till MSMQ-program."
  example:
  - "The following code example gets and sets the value of a message's Label property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "Etiketten för meddelandet. Standardvärdet är en tom sträng (&quot;&quot;)."
  overload: System.Messaging.Message.Label*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera etikettegenskapen filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.LookupId
  id: LookupId
  parent: System.Messaging.Message
  langs:
  - csharp
  name: LookupId
  nameWithType: Message.LookupId
  fullName: System.Messaging.Message.LookupId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Introducerades i MSMQ 3.0. Hämtar det meddelande sökningsidentifierare."
  remarks: "Egenskapen LookupId ger skrivskyddad åtkomst till ett meddelande sökningsidentifierare. Den sökningsidentifierare som introducerades i MSMQ 3.0 är en 64-bitars identifierare som genereras av Message Queuing som tilldelas varje meddelande när ett meddelande placeras i kön. Sökningsidentifierare är inte samma som det meddelande-ID som skapas när meddelandet har skickats.       Message Queuing genererar en sökningsidentifierare för alla meddelanden som placerats i en kö, inklusive programgenererade mål, administration, och rapportera köer samt systemgenererade journal förlorade, koppling och utgående köer. Med andra ord inkluderar detta både meddelanden som skickas genom att skicka program och av Message Queuing. Sökningsidentifierare har ingen betydelse utanför kön är unika för kön.       Om ett meddelande skickas till flera målköer, eller om en kopia av ett meddelande som lagras på en dator- eller köjournalens, har varje kopia av meddelandet sin egen sökningsidentifierare när den placeras i respektive kö.       Egenskapen LookupId kan endast läsas på meddelanden som hämtas från en kö.       En sökningsidentifierare används för att läsa ett visst meddelande i kön. När sökningsidentifierare för ett meddelande som kallas det mottagande programmet anropa den <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>eller <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>för att gå direkt till meddelandet och granska eller hämta det från kön, till skillnad från markörer som måste börja från början av kön och navigera mot slutet av kön, hämta sökning identifierare meddelanden i kön ansvarar för programmet.</xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> </xref:System.Messaging.MessageQueue.PeekByLookupId%2A> Ett sätt att erhålla sökning identifierare är att skapa en utlösare för målkön som anropar en komponent som cachelagrar identifierare för varje meddelande som de är placerade i kö."
  syntax:
    content: public long LookupId { get; }
    return:
      type: System.Int64
      description: "Meddelandets sökningsidentifierare som genereras av Message Queuing och är unikt för kön där meddelandet finns."
  overload: System.Messaging.Message.LookupId*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "MSMQ 3.0 är inte installerad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen LookupId."
  platform:
  - net462
- uid: System.Messaging.Message.MessageType
  id: MessageType
  parent: System.Messaging.Message
  langs:
  - csharp
  name: MessageType
  nameWithType: Message.MessageType
  fullName: System.Messaging.Message.MessageType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: 'Gets the message type: <xref uid=&quot;langword_csharp_Normal&quot; name=&quot;Normal&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Acknowledgment&quot; name=&quot;Acknowledgment&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Report&quot; name=&quot;Report&quot; href=&quot;&quot;></xref>.'
  remarks: "Message Queuing vanligtvis den här egenskapen när den skickar meddelandet. Ett meddelande om Message Queuing kan vara något av följande typer:- `Normal`, som är ett vanligt meddelande som skickas från ett program till en kö eller ett svarsmeddelande returneras till program som skickade meddelandet.      - `Acknowledgement`, vilket Message Queuing genererar när avsändarprogrammet begär en. Message Queuing kan till exempel generera positiva eller negativa meddelanden som anger att det ursprungliga meddelandet anlände eller lästes. Message Queuing returnerar lämpliga bekräftelsemeddelande administrationskö som anges av det program som skickade meddelandet.      - `Report`, vilket Message Queuing genererar när en rapportkö har definierats i källan Queue Manager. När spårning aktiveras skickar Message Queuing ett rapportmeddelande till rapportkön Message Queuing varje gång det ursprungliga meddelandet anländer till eller lämnar en Message Queuing-server."
  example:
  - "The following code example displays the value of a message's MessageType property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Messaging.MessageType MessageType { get; }
    return:
      type: System.Messaging.MessageType
      description: "Ett av MessageType värden."
  overload: System.Messaging.Message.MessageType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen MessageType."
  platform:
  - net462
- uid: System.Messaging.Message.Priority
  id: Priority
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Priority
  nameWithType: Message.Priority
  fullName: System.Messaging.Message.Priority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger meddelandeprioritet som bestämmer var i kön meddelandet placeras."
  remarks: "Egenskapen prioritet påverkar hur MSMQ hanterar meddelandet både medan den är en väg och när den når sin destination. Högre prioritet meddelanden prioriteras under routningen och infogas först i målkön. Meddelanden med samma prioritet placeras i kön enligt ankomsttid.       Du kan ange en beskrivande prioritet endast för icke-transaktionell meddelanden. Message Queuing automatiskt Anger prioritetsordningen för transaktionsmeddelanden till `Lowest`, vilket gör transaktionsmeddelande prioritet ignoreras."
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/p-system.messaging.messa_87_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_87_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/p-system.messaging.messa_87_1.cs)]"
  syntax:
    content: public System.Messaging.MessagePriority Priority { get; set; }
    return:
      type: System.Messaging.MessagePriority
      description: "En av de <xref href=&quot;System.Messaging.MessagePriority&quot;> </xref> värden som representerar prioritetsnivå av icke-transaktionell meddelanden. Standardvärdet är <xref uid=&quot;langword_csharp_Normal&quot; name=&quot;Normal&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.Priority*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen prioritet filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.Recoverable
  id: Recoverable
  parent: System.Messaging.Message
  langs:
  - csharp
  name: Recoverable
  nameWithType: Message.Recoverable
  fullName: System.Messaging.Message.Recoverable
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om meddelandet garanterat levereras vid datorproblem fel eller nätverk."
  remarks: "Egenskapen återställningsbara anger om leverans av ett meddelande garanteras, även om en dator låser sig när meddelandet är under transport till målkön.       Om överföring av ett meddelande garanteras lagras meddelandet lokalt på varje steg längs vägen, tills meddelandet har vidarebefordrat till nästa dator. Egenskapen återställningsbara `true` kan påverka genomflöde.       Om meddelandet är transaktionell behandlar Message Queuing automatiskt meddelandet som återställningsbara, oavsett värde för egenskapen återställningsbara."
  example:
  - "The following code example gets and sets the value of a message's Recoverable property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Recoverable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om överföringen av meddelandet garanteras (genom att spara meddelanden till disk under vägen). <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om leverans inte garanteras. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.Recoverable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen återställningsbara filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.ResponseQueue
  id: ResponseQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: ResponseQueue
  nameWithType: Message.ResponseQueue
  fullName: System.Messaging.Message.ResponseQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger den kö som tar emot programgenererade svarsmeddelanden."
  remarks: "Egenskapen ResponseQueue identifierar den kö som tar emot programgenererade svarsmeddelanden som det mottagande programmet returnerar till program som skickade meddelandet. Avsändarprogrammet anger svarsköer när programmet skickar meddelanden. Alla köer kan anges som en svarskö.       Meddelanden som returneras till svarskön är programspecifika. Programmet måste definiera innehållet i meddelandena som åtgärden ska vidtas vid mottagning av ett meddelande."
  example:
  - "The following code example gets and sets the value of a message's ResponseQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Messaging.MessageQueue ResponseQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "Den <xref href=&quot;System.Messaging.MessageQueue&quot;> </xref> till vilka tillämpningsgenererat svar returneras. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.ResponseQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen ResponseQueue filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.SecurityContext
  id: SecurityContext
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SecurityContext
  nameWithType: Message.SecurityContext
  fullName: System.Messaging.Message.SecurityContext
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger säkerhetskontexten för ett meddelande."
  syntax:
    content: public System.Messaging.SecurityContext SecurityContext { get; set; }
    return:
      type: System.Messaging.SecurityContext
      description: "En <xref href=&quot;System.Messaging.SecurityContext&quot;> </xref> objekt som innehåller säkerhetskontexten för ett meddelande om det tidigare har ställts in egenskapen; annars NULL."
  overload: System.Messaging.Message.SecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Message.SenderCertificate
  id: SenderCertificate
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SenderCertificate
  nameWithType: Message.SenderCertificate
  fullName: System.Messaging.Message.SenderCertificate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger det säkerhetscertifikat som används för autentisering av meddelanden."
  remarks: "Det mottagande programmet använder egenskapen SenderCertificate när meddelandet innehåller ett externt säkerhetscertifikat.       Message Queuing kan autentisera ett meddelande med hjälp av antingen en intern eller extern säkerhetscertifikat. Message Queuing tillhandahåller internt certifikat som används för att verifiera meddelandeintegritet. En certifikatutfärdare (CA) innehåller ett externt certifikat som du kommer åt via egenskapen SenderCertificate i meddelandet. Förutom att Message Queuing att autentisera meddelandet, kan ett externt certifikat det mottagande programmet att ytterligare Kontrollera avsändaren. Ett internt certifikat har inget användbart värde till ett mottagande program.       Ett externt certifikat måste registreras med katalogtjänsten för Message Queuing-systemet. Ett externt certifikat innehåller information om certifikatutfärdaren och certifikat för användaren, giltighetsperioden för certifikatet, den offentliga nyckeln för certifikatet användaren och certifikatutfärdarens signatur."
  syntax:
    content: public byte[] SenderCertificate { get; set; }
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som representerar ett säkerhetscertifikat Message Queuing använder för att verifiera avsändaren av meddelandet. Standardvärdet är en matris med längden noll."
  overload: System.Messaging.Message.SenderCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen SenderCertificate filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.SenderId
  id: SenderId
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SenderId
  nameWithType: Message.SenderId
  fullName: System.Messaging.Message.SenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar identifierare för den avsändande användaren."
  remarks: "Om den <xref:System.Messaging.Message.AttachSenderId%2A>egenskapen är `false`, avsändaren identifieraren som anges i egenskapen SenderId är inte kopplad till meddelandet när det skickas.</xref:System.Messaging.Message.AttachSenderId%2A> Detta anger att Message Queuing att avsändaren inte att verifiera när den skickar meddelandet till målkön. Om den <xref:System.Messaging.Message.AttachSenderId%2A>egenskapen är `true`, SenderId egenskapens värde är tillförlitlig endast om meddelandet autentiserades.</xref:System.Messaging.Message.AttachSenderId%2A> Använd den <xref:System.Messaging.Message.Authenticated%2A>egenskapen tillsammans med egenskapen SenderId att verifiera avsändarens åtkomsträttigheter.</xref:System.Messaging.Message.Authenticated%2A>       Ett anslutningsprogram är ett program som använder en server som anslutningen för att tillhandahålla kommunikation mellan Message Queuing och andra MSMQ-system. Message Queuing kräver anslutningsprogram för att tillhandahålla avsändaren identifiering. Du måste ange den <xref:System.Messaging.Message.ConnectorType%2A>egenskapen när du skickar meddelanden via ett anslutningsprogram.</xref:System.Messaging.Message.ConnectorType%2A>"
  syntax:
    content: public byte[] SenderId { get; }
    return:
      type: System.Byte[]
      description: "En matris med bytevärden som identifierar avsändaren. Mottagande Queue Manager använder identifierare när den autentiserar meddelandet för att verifiera avsändaren av meddelandet och avsändarens åtkomsträttigheter till kön."
  overload: System.Messaging.Message.SenderId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen SenderId."
  platform:
  - net462
- uid: System.Messaging.Message.SenderVersion
  id: SenderVersion
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SenderVersion
  nameWithType: Message.SenderVersion
  fullName: System.Messaging.Message.SenderVersion
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar versionen av Message Queuing används för att skicka meddelandet."
  remarks: "Egenskapen SenderVersion är viktigt för vissa funktioner. Till exempel transaktionsbearbetning stöds endast av Message Queuing 2.0 och senare och digitala signaturer som används för autentisering av meddelanden som skickas av MSMQ 1.0.       Skicka köhanteraren egenskapen SenderVersion när meddelandet skickas."
  example:
  - "The following code example displays the value of a message's SenderVersion property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public long SenderVersion { get; }
    return:
      type: System.Int64
      description: "Versionen av Message Queuing används för att skicka meddelandet."
  overload: System.Messaging.Message.SenderVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen SenderVersion."
  platform:
  - net462
- uid: System.Messaging.Message.SentTime
  id: SentTime
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SentTime
  nameWithType: Message.SentTime
  fullName: System.Messaging.Message.SentTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar datumet och tiden på den skickande datorn som meddelandet skickades av köhanteraren."
  remarks: "Egenskapen SentTime har ändrats till den lokala tiden på datorn där den här instansen av den <xref:System.Messaging.Message>klass har skapats.</xref:System.Messaging.Message> Den här tidszonen kan vara annorlunda än i käll- och köer."
  example:
  - "The following code example displays the value of a message's SentTime property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public DateTime SentTime { get; }
    return:
      type: System.DateTime
      description: "En <xref:System.DateTime>som representerar den tid som meddelandet skickades.</xref:System.DateTime>"
  overload: System.Messaging.Message.SentTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen SentTime."
  platform:
  - net462
- uid: System.Messaging.Message.SourceMachine
  id: SourceMachine
  parent: System.Messaging.Message
  langs:
  - csharp
  name: SourceMachine
  nameWithType: Message.SourceMachine
  fullName: System.Messaging.Message.SourceMachine
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar den dator som meddelandet skickades från."
  remarks: "Format för egenskapen SourceMachine inkluderar inte föregående två snedstreck (\\\\\\\\). Till exempel `myServer` är en giltig SourceMachine."
  example:
  - "The following code example displays the value of a message's SourceMachine property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string SourceMachine { get; }
    return:
      type: System.String
      description: "Namnet på den dator som meddelandet skickades."
  overload: System.Messaging.Message.SourceMachine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen SourceMachine."
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Det gick inte att komma åt datorn information eller directory service."
  platform:
  - net462
- uid: System.Messaging.Message.TimeToBeReceived
  id: TimeToBeReceived
  parent: System.Messaging.Message
  langs:
  - csharp
  name: TimeToBeReceived
  nameWithType: Message.TimeToBeReceived
  fullName: System.Messaging.Message.TimeToBeReceived
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger längsta tid för meddelandet tas emot från målkön."
  remarks: "Egenskapen TimeToBeReceived anger den totala tiden för skickade meddelandet tas emot från målkön. Tidsgränsen innehåller tidsåtgång komma till målkön och tidsåtgång vänta i kön innan meddelandet tas emot.      > [!CAUTION] > När du använder beroende klientdatorer vara säker på att klockan på klientdatorn är synkroniserad med systemklockan på den server som kör Message Queuing. I annat fall när ett meddelande skickades vars TimeToBeReceived-egenskap inte är kan resultera i oväntade funktionssätt <xref:System.Messaging.Message.InfiniteTimeout>.</xref:System.Messaging.Message.InfiniteTimeout>       Om det intervall som anges av egenskapen TimeToBeReceived upphör att gälla innan meddelandet tas bort från kön, blockerar Message Queuing meddelandet i ett av två sätt. Om meddelandets <xref:System.Messaging.Message.UseDeadLetterQueue%2A>egenskapen är `true`, skickas meddelandet till kön för obeställbara.</xref:System.Messaging.Message.UseDeadLetterQueue%2A> Om <xref:System.Messaging.Message.UseDeadLetterQueue%2A>är `false`, meddelandet ignoreras.</xref:System.Messaging.Message.UseDeadLetterQueue%2A>       Du kan ange meddelandets <xref:System.Messaging.Message.AcknowledgeType%2A>egenskapen att begära att Message Queuing skicka ett negativt bekräftelsemeddelande tillbaka till avsändarprogrammet om meddelandet inte har hämtats innan timern upphör att gälla.</xref:System.Messaging.Message.AcknowledgeType%2A>       Om värdet som anges av egenskapen TimeToBeReceived är mindre än värdet som anges av den <xref:System.Messaging.Message.TimeToReachQueue%2A>egenskapen TimeToBeReceived företräde.</xref:System.Messaging.Message.TimeToReachQueue%2A>       När flera meddelanden skickas i en enskild transaktion, använder Message Queuing egenskapen TimeToBeReceived för det första meddelandet."
  example:
  - "The following code example gets and sets the value of a message's TimeToBeReceived property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public TimeSpan TimeToBeReceived { get; set; }
    return:
      type: System.TimeSpan
      description: "Den sammanlagda tiden för skickade meddelandet tas emot från målkön. Standardvärdet är <xref href=&quot;System.Messaging.Message.InfiniteTimeout&quot;> </xref>."
  overload: System.Messaging.Message.TimeToBeReceived*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen TimeToBeReceived filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det angivna värdet för TimeToBeReceived är ogiltig."
  platform:
  - net462
- uid: System.Messaging.Message.TimeToReachQueue
  id: TimeToReachQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: TimeToReachQueue
  nameWithType: Message.TimeToReachQueue
  fullName: System.Messaging.Message.TimeToReachQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger längsta tid att nå kön meddelandet."
  remarks: "Om det intervall som anges av egenskapen TimeToReachQueue går ut innan meddelandet når sin destination Message Queuing tar bort meddelandet i ett av två sätt. Om meddelandets <xref:System.Messaging.Message.UseDeadLetterQueue%2A>egenskapen är `true`, skickas meddelandet till kön för obeställbara.</xref:System.Messaging.Message.UseDeadLetterQueue%2A> Om <xref:System.Messaging.Message.UseDeadLetterQueue%2A>är `false`, meddelandet ignoreras du kan ange han meddelandet <xref:System.Messaging.Message.AcknowledgeType%2A>egenskapen att begära att Message Queuing skicka ett negativt bekräftelsemeddelande tillbaka till avsändarprogrammet om meddelandet inte till innan timern upphör att gälla.</xref:System.Messaging.Message.AcknowledgeType%2A> </xref:System.Messaging.Message.UseDeadLetterQueue%2A>       Om egenskapen TimeToReachQueue anges till 0 sekunder Message Queuing gånger försöker skicka meddelandet till dess mål – om kön väntar på meddelandet. Om kön är lokal når meddelandet alltid den.       Om värdet som anges av egenskapen TimeToReachQueue är större än värdet som anges av den <xref:System.Messaging.Message.TimeToBeReceived%2A>egenskapen <xref:System.Messaging.Message.TimeToBeReceived%2A>företräde.</xref:System.Messaging.Message.TimeToBeReceived%2A> </xref:System.Messaging.Message.TimeToBeReceived%2A>       När flera meddelanden skickas i en enskild transaktion, använder Message Queuing egenskapen TimeToReachQueue för det första meddelandet."
  example:
  - "The following code example gets and sets the value of a message's TimeToReachQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public TimeSpan TimeToReachQueue { get; set; }
    return:
      type: System.TimeSpan
      description: "Tidsgränsen för meddelandet till målkön börjar från tidpunkten som meddelandet skickas. Standardvärdet är <xref href=&quot;System.Messaging.Message.InfiniteTimeout&quot;> </xref>."
  overload: System.Messaging.Message.TimeToReachQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen TimeToReachQueue filtreras meddelandekön."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det angivna värdet för TimeToReachQueue är ogiltig. Det kan vara ett negativt tal."
  platform:
  - net462
- uid: System.Messaging.Message.TransactionId
  id: TransactionId
  parent: System.Messaging.Message
  langs:
  - csharp
  name: TransactionId
  nameWithType: Message.TransactionId
  fullName: System.Messaging.Message.TransactionId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar identifierare för transaktionen som meddelandet var en del."
  remarks: "Mottagande program använda egenskapen TransactionId för att verifiera att ett meddelande skickades som en del av en särskild transaktion. Transaktionsnumret innehåller identifieraren för den skickande datorn (första 16 bitar) följt av ett sekvensnummer på 4 byte transaktion.       Den här egenskapen är endast tillgängligt för Message Queuing-version 2.0 och senare.       Transaktionen identifierare är inte säkert att vara unikt, eftersom transaktionen sekvensnummer är inte beständiga och de börja om igen vid 2 <sup>20</sup>. Message Queuing garanterar endast att kommande transaktioner har sekvensnummer annan transaktion.       Du kan använda egenskapen TransactionId tillsammans med den <xref:System.Messaging.Message.IsFirstInTransaction%2A>och <xref:System.Messaging.Message.IsLastInTransaction%2A>Egenskaper för att verifiera transaktionen gränser.</xref:System.Messaging.Message.IsLastInTransaction%2A> </xref:System.Messaging.Message.IsFirstInTransaction%2A>"
  example:
  - "The following code example displays the value of a message's TransactionId property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string TransactionId { get; }
    return:
      type: System.String
      description: "Identifierare för den transaktion som är associerad med meddelandet."
  overload: System.Messaging.Message.TransactionId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen TransactionId."
  platform:
  - net462
- uid: System.Messaging.Message.TransactionStatusQueue
  id: TransactionStatusQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: TransactionStatusQueue
  nameWithType: Message.TransactionStatusQueue
  fullName: System.Messaging.Message.TransactionStatusQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar transaktionsstatuskön på källdatorn."
  remarks: "Egenskapen TransactionStatusQueue identifierar transaktionskö på källdatorn som tar emot läskvitton bekräftelser från anslutningsprogram. Message Queuing anger egenskapen och anslutningsprogram använder egenskapen vid hämtning av transaktionsmeddelanden foreign köer.       En extern kö finns i ett system för meddelandeköer än Microsoft Message Queuing. Message Queuing kommunicerar med sådana köer via ett anslutningsprogram.       Anslutningsprogrammet kan använda transaktionsstatuskön för att skicka meddelanden till avsändarprogrammet. Transaktionsstatuskön får dessa bekräftelser även om avsändarprogrammet inte begär andra bekräftelser."
  example:
  - "The following code example displays the value of a message's TransactionStatusQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "Transaktionsstatuskön på källdatorn som används för att skicka bekräftelsemeddelanden tillbaka till det program som skickade meddelandet. Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.TransactionStatusQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Meddelandet har inte skickats. Den här egenskapen kan bara läsas på meddelanden som hämtas från en kö.       - eller - meddelandekön filtreras om du vill ignorera egenskapen TransactionStatusQueue."
  platform:
  - net462
- uid: System.Messaging.Message.UseAuthentication
  id: UseAuthentication
  parent: System.Messaging.Message
  langs:
  - csharp
  name: UseAuthentication
  nameWithType: Message.UseAuthentication
  fullName: System.Messaging.Message.UseAuthentication
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om meddelandet var (eller måste vara) autentiserade innan skickas."
  remarks: "Egenskapen UseAuthentication anger om meddelandet måste autentiseras. Om avsändarprogrammet begär autentisering, Message Queuing skapar en digital signatur och används för att logga meddelandet när det skickas och autentisera meddelandet när det tas emot.       Om UseAuthentication är `false` och ett meddelande skickas till en kö som endast autentiserade meddelanden, meddelandet avvisas när den når kön.       Du kan inte avgöra om ett meddelande kunde inte autentiseras genom att titta på dess egenskaper. Message Queuing ignorerar sådana meddelanden innan de skickas till kön. Du kan begära att ett bekräftelsemeddelande skickas om leverans fel förhindrar att ett meddelande i kön som kommer."
  syntax:
    content: public bool UseAuthentication { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om avsändarprogrammet begär autentisering för meddelandet. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.UseAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen UseAuthentication filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.UseDeadLetterQueue
  id: UseDeadLetterQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: UseDeadLetterQueue
  nameWithType: Message.UseDeadLetterQueue
  fullName: System.Messaging.Message.UseDeadLetterQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om en kopia av meddelandet inte kunde levereras ska skickas till en kö för obeställbara meddelanden."
  remarks: "Den <xref:System.Messaging.Message.UseJournalQueue%2A>och UseDeadLetterQueue egenskaper som anger hur meddelandekön spårar ett meddelande.</xref:System.Messaging.Message.UseJournalQueue%2A> Om UseDeadLetterQueue är `true`, (på en icke-transaktionell meddelande) kan levereras meddelandet skickas till den icke-transaktionell kö med olevererade brev på den dator som meddelandet inte kunde levereras. Leverans felet kan orsakas av en message-timer upphör att gälla, t.ex.       Vid leveransen misslyckades för ett transaktionsmeddelande skickar Message Queuing meddelandet till den transaktionella obeställbara meddelanden på källdatorn negativa och osäkra alltid.       När du lagrar meddelanden i en kö med olevererade brev bör du ta bort kön med jämna mellanrum för att ta bort meddelanden som inte längre behövs. Meddelanden som lagras i köer räknas storlekskvoten för den dator där kön finns. Kvoten har angetts av administratören och refererar till samma storlek som allokerats för att lagra meddelanden på hela datorn, inte bara i en enskild kö.       Du skapar inte en journalkö eller förlorade. Dessa är både köer som genereras av Message Queuing."
  example:
  - "The following code example gets and sets the value of a message's UseDeadLetterQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseDeadLetterQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om fel för sändning av meddelande bör resultera i en kopia av meddelandet som skickas till en kö med olevererade brev; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.UseDeadLetterQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen UseDeadLetterQueue filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.UseEncryption
  id: UseEncryption
  parent: System.Messaging.Message
  langs:
  - csharp
  name: UseEncryption
  nameWithType: Message.UseEncryption
  fullName: System.Messaging.Message.UseEncryption
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om du vill se meddelandet privata."
  remarks: "Om ett meddelande är privat kan krypteras innehållet innan den skickas och dekrypteras när den tas emot. Om du vill skicka ett privat meddelande avsändarprogrammet måste ange att kryptering ska användas och du kan också krypteringsalgoritmen.       När du skickar privata meddelanden behöver ditt program inte utföra kryptering av meddelanden. Message Queuing kan kryptera meddelandetexten för dig om ditt program är att skicka meddelanden i en Microsoft Windows 2000-företag som har åtkomst till tjänsten. När du tar emot privata meddelanden dekrypterar mottagande Queue Manager alltid brödtext."
  example:
  - "The following code example gets and sets the value of a message's UseEncryption property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att kräva Message Queuing att kryptera meddelandet. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.UseEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen UseEncryption filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.Message
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: Message.UseJournalQueue
  fullName: System.Messaging.Message.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om en kopia av meddelandet ska behållas i datorns journal på den ursprungliga datorn."
  remarks: "UseJournalQueue och <xref:System.Messaging.Message.UseDeadLetterQueue%2A>Egenskaper som anger hur meddelandekön spårar ett meddelande.</xref:System.Messaging.Message.UseDeadLetterQueue%2A> Om UseJournalQueue är `true`, och sedan en kopia sparas i journalen på den ursprungliga datorn vid varje steg att ett meddelande skickas.       Det skickade meddelandet endast kopieras till journalkön om målkön finns på en fjärrdator. Om målet är på den lokala datorn, skickas meddelandet direkt till kön. Det finns inga mellanliggande steg kräver journaler.       När du lagrar meddelanden i en journalkö rensa kön med jämna mellanrum för att ta bort meddelanden som inte längre behövs. Meddelanden i köer räknas kvoten för den dator där kön finns. (Datorkvoten definieras av administratören).       Du skapar inte en journalkö eller förlorade. Dessa är både köer som genereras av Message Queuing."
  example:
  - "The following code example gets and sets the value of a message's UseJournalQueue property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om du vill kräva att en kopia av ett meddelande behållas i datorjournal för den ursprungliga datorn efter att meddelandet har har skickats (från den ursprungliga datorn till nästa server); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.UseJournalQueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen UseJournalQueue filtreras meddelandekön."
  platform:
  - net462
- uid: System.Messaging.Message.UseTracing
  id: UseTracing
  parent: System.Messaging.Message
  langs:
  - csharp
  name: UseTracing
  nameWithType: Message.UseTracing
  fullName: System.Messaging.Message.UseTracing
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Hämtar eller anger ett värde som anger om du vill spåra ett meddelande som flyttas till målkön."
  remarks: "Egenskapen UseTracing anger om du vill spåra flödet för ett meddelande som flyttas till målkön. Om `true`, ett rapportmeddelande (som genereras av Message Queuing) skickas till en rapportkö varje gång meddelandet passerar genom en Message Queuing-server. Rapportkön anges av källan Queue Manager. Rapportera köer är inte begränsade till rapportmeddelanden som genereras av Message Queuing; programgenererade meddelanden kan även skickas till rapportköer.       Använda spårning omfattar att konfigurera Active Directory och ange en rapportkö för Message Queuing-företaget. Administratören konfigurerar de här inställningarna."
  example:
  - "The following code example gets and sets the value of a message's UseTracing property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om varje steg som gjorts av det ursprungliga meddelandet under transport till målkön genererar en rapport som ska skickas till rapportkön för systemets; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.Message.UseTracing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Om du vill ignorera egenskapen UseTracing filtreras meddelandekön."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.Message.#ctor
  parent: System.Messaging.Message
  isExternal: false
  name: Message()
  nameWithType: Message.Message()
  fullName: System.Messaging.Message.Message()
- uid: System.Messaging.Message.#ctor(System.Object)
  parent: System.Messaging.Message
  isExternal: false
  name: Message(Object)
  nameWithType: Message.Message(Object)
  fullName: System.Messaging.Message.Message(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)
  parent: System.Messaging.Message
  isExternal: false
  name: Message(Object,IMessageFormatter)
  nameWithType: Message.Message(Object,IMessageFormatter)
  fullName: System.Messaging.Message.Message(Object,IMessageFormatter)
- uid: System.Messaging.IMessageFormatter
  parent: System.Messaging
  isExternal: false
  name: IMessageFormatter
  nameWithType: IMessageFormatter
  fullName: System.Messaging.IMessageFormatter
- uid: System.Messaging.Message.AcknowledgeType
  parent: System.Messaging.Message
  isExternal: false
  name: AcknowledgeType
  nameWithType: Message.AcknowledgeType
  fullName: System.Messaging.Message.AcknowledgeType
- uid: System.Messaging.AcknowledgeTypes
  parent: System.Messaging
  isExternal: false
  name: AcknowledgeTypes
  nameWithType: AcknowledgeTypes
  fullName: System.Messaging.AcknowledgeTypes
- uid: System.Messaging.Message.Acknowledgment
  parent: System.Messaging.Message
  isExternal: false
  name: Acknowledgment
  nameWithType: Message.Acknowledgment
  fullName: System.Messaging.Message.Acknowledgment
- uid: System.Messaging.Acknowledgment
  parent: System.Messaging
  isExternal: false
  name: Acknowledgment
  nameWithType: Acknowledgment
  fullName: System.Messaging.Acknowledgment
- uid: System.Messaging.Message.AdministrationQueue
  parent: System.Messaging.Message
  isExternal: false
  name: AdministrationQueue
  nameWithType: Message.AdministrationQueue
  fullName: System.Messaging.Message.AdministrationQueue
- uid: System.Messaging.MessageQueue
  parent: System.Messaging
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue
- uid: System.Messaging.Message.AppSpecific
  parent: System.Messaging.Message
  isExternal: false
  name: AppSpecific
  nameWithType: Message.AppSpecific
  fullName: System.Messaging.Message.AppSpecific
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.Message.ArrivedTime
  parent: System.Messaging.Message
  isExternal: false
  name: ArrivedTime
  nameWithType: Message.ArrivedTime
  fullName: System.Messaging.Message.ArrivedTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Messaging.Message.AttachSenderId
  parent: System.Messaging.Message
  isExternal: false
  name: AttachSenderId
  nameWithType: Message.AttachSenderId
  fullName: System.Messaging.Message.AttachSenderId
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message.Authenticated
  parent: System.Messaging.Message
  isExternal: false
  name: Authenticated
  nameWithType: Message.Authenticated
  fullName: System.Messaging.Message.Authenticated
- uid: System.Messaging.Message.AuthenticationProviderName
  parent: System.Messaging.Message
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: Message.AuthenticationProviderName
  fullName: System.Messaging.Message.AuthenticationProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.Message.AuthenticationProviderType
  parent: System.Messaging.Message
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: Message.AuthenticationProviderType
  fullName: System.Messaging.Message.AuthenticationProviderType
- uid: System.Messaging.CryptographicProviderType
  parent: System.Messaging
  isExternal: false
  name: CryptographicProviderType
  nameWithType: CryptographicProviderType
  fullName: System.Messaging.CryptographicProviderType
- uid: System.Messaging.Message.Body
  parent: System.Messaging.Message
  isExternal: false
  name: Body
  nameWithType: Message.Body
  fullName: System.Messaging.Message.Body
- uid: System.Messaging.Message.BodyStream
  parent: System.Messaging.Message
  isExternal: false
  name: BodyStream
  nameWithType: Message.BodyStream
  fullName: System.Messaging.Message.BodyStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Messaging.Message.BodyType
  parent: System.Messaging.Message
  isExternal: false
  name: BodyType
  nameWithType: Message.BodyType
  fullName: System.Messaging.Message.BodyType
- uid: System.Messaging.Message.ConnectorType
  parent: System.Messaging.Message
  isExternal: false
  name: ConnectorType
  nameWithType: Message.ConnectorType
  fullName: System.Messaging.Message.ConnectorType
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Messaging.Message.CorrelationId
  parent: System.Messaging.Message
  isExternal: false
  name: CorrelationId
  nameWithType: Message.CorrelationId
  fullName: System.Messaging.Message.CorrelationId
- uid: System.Messaging.Message.DestinationQueue
  parent: System.Messaging.Message
  isExternal: false
  name: DestinationQueue
  nameWithType: Message.DestinationQueue
  fullName: System.Messaging.Message.DestinationQueue
- uid: System.Messaging.Message.DestinationSymmetricKey
  parent: System.Messaging.Message
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: Message.DestinationSymmetricKey
  fullName: System.Messaging.Message.DestinationSymmetricKey
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.Message.DigitalSignature
  parent: System.Messaging.Message
  isExternal: false
  name: DigitalSignature
  nameWithType: Message.DigitalSignature
  fullName: System.Messaging.Message.DigitalSignature
- uid: System.Messaging.Message.EncryptionAlgorithm
  parent: System.Messaging.Message
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: Message.EncryptionAlgorithm
  fullName: System.Messaging.Message.EncryptionAlgorithm
- uid: System.Messaging.EncryptionAlgorithm
  parent: System.Messaging
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: EncryptionAlgorithm
  fullName: System.Messaging.EncryptionAlgorithm
- uid: System.Messaging.Message.Extension
  parent: System.Messaging.Message
  isExternal: false
  name: Extension
  nameWithType: Message.Extension
  fullName: System.Messaging.Message.Extension
- uid: System.Messaging.Message.Formatter
  parent: System.Messaging.Message
  isExternal: false
  name: Formatter
  nameWithType: Message.Formatter
  fullName: System.Messaging.Message.Formatter
- uid: System.Messaging.Message.HashAlgorithm
  parent: System.Messaging.Message
  isExternal: false
  name: HashAlgorithm
  nameWithType: Message.HashAlgorithm
  fullName: System.Messaging.Message.HashAlgorithm
- uid: System.Messaging.HashAlgorithm
  parent: System.Messaging
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Messaging.HashAlgorithm
- uid: System.Messaging.Message.Id
  parent: System.Messaging.Message
  isExternal: false
  name: Id
  nameWithType: Message.Id
  fullName: System.Messaging.Message.Id
- uid: System.Messaging.Message.InfiniteTimeout
  parent: System.Messaging.Message
  isExternal: false
  name: InfiniteTimeout
  nameWithType: Message.InfiniteTimeout
  fullName: System.Messaging.Message.InfiniteTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Messaging.Message.IsFirstInTransaction
  parent: System.Messaging.Message
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: Message.IsFirstInTransaction
  fullName: System.Messaging.Message.IsFirstInTransaction
- uid: System.Messaging.Message.IsLastInTransaction
  parent: System.Messaging.Message
  isExternal: false
  name: IsLastInTransaction
  nameWithType: Message.IsLastInTransaction
  fullName: System.Messaging.Message.IsLastInTransaction
- uid: System.Messaging.Message.Label
  parent: System.Messaging.Message
  isExternal: false
  name: Label
  nameWithType: Message.Label
  fullName: System.Messaging.Message.Label
- uid: System.Messaging.Message.LookupId
  parent: System.Messaging.Message
  isExternal: false
  name: LookupId
  nameWithType: Message.LookupId
  fullName: System.Messaging.Message.LookupId
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Messaging.Message.MessageType
  parent: System.Messaging.Message
  isExternal: false
  name: MessageType
  nameWithType: Message.MessageType
  fullName: System.Messaging.Message.MessageType
- uid: System.Messaging.MessageType
  parent: System.Messaging
  isExternal: false
  name: MessageType
  nameWithType: MessageType
  fullName: System.Messaging.MessageType
- uid: System.Messaging.Message.Priority
  parent: System.Messaging.Message
  isExternal: false
  name: Priority
  nameWithType: Message.Priority
  fullName: System.Messaging.Message.Priority
- uid: System.Messaging.MessagePriority
  parent: System.Messaging
  isExternal: false
  name: MessagePriority
  nameWithType: MessagePriority
  fullName: System.Messaging.MessagePriority
- uid: System.Messaging.Message.Recoverable
  parent: System.Messaging.Message
  isExternal: false
  name: Recoverable
  nameWithType: Message.Recoverable
  fullName: System.Messaging.Message.Recoverable
- uid: System.Messaging.Message.ResponseQueue
  parent: System.Messaging.Message
  isExternal: false
  name: ResponseQueue
  nameWithType: Message.ResponseQueue
  fullName: System.Messaging.Message.ResponseQueue
- uid: System.Messaging.Message.SecurityContext
  parent: System.Messaging.Message
  isExternal: false
  name: SecurityContext
  nameWithType: Message.SecurityContext
  fullName: System.Messaging.Message.SecurityContext
- uid: System.Messaging.SecurityContext
  parent: System.Messaging
  isExternal: false
  name: SecurityContext
  nameWithType: SecurityContext
  fullName: System.Messaging.SecurityContext
- uid: System.Messaging.Message.SenderCertificate
  parent: System.Messaging.Message
  isExternal: false
  name: SenderCertificate
  nameWithType: Message.SenderCertificate
  fullName: System.Messaging.Message.SenderCertificate
- uid: System.Messaging.Message.SenderId
  parent: System.Messaging.Message
  isExternal: false
  name: SenderId
  nameWithType: Message.SenderId
  fullName: System.Messaging.Message.SenderId
- uid: System.Messaging.Message.SenderVersion
  parent: System.Messaging.Message
  isExternal: false
  name: SenderVersion
  nameWithType: Message.SenderVersion
  fullName: System.Messaging.Message.SenderVersion
- uid: System.Messaging.Message.SentTime
  parent: System.Messaging.Message
  isExternal: false
  name: SentTime
  nameWithType: Message.SentTime
  fullName: System.Messaging.Message.SentTime
- uid: System.Messaging.Message.SourceMachine
  parent: System.Messaging.Message
  isExternal: false
  name: SourceMachine
  nameWithType: Message.SourceMachine
  fullName: System.Messaging.Message.SourceMachine
- uid: System.Messaging.Message.TimeToBeReceived
  parent: System.Messaging.Message
  isExternal: false
  name: TimeToBeReceived
  nameWithType: Message.TimeToBeReceived
  fullName: System.Messaging.Message.TimeToBeReceived
- uid: System.Messaging.Message.TimeToReachQueue
  parent: System.Messaging.Message
  isExternal: false
  name: TimeToReachQueue
  nameWithType: Message.TimeToReachQueue
  fullName: System.Messaging.Message.TimeToReachQueue
- uid: System.Messaging.Message.TransactionId
  parent: System.Messaging.Message
  isExternal: false
  name: TransactionId
  nameWithType: Message.TransactionId
  fullName: System.Messaging.Message.TransactionId
- uid: System.Messaging.Message.TransactionStatusQueue
  parent: System.Messaging.Message
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: Message.TransactionStatusQueue
  fullName: System.Messaging.Message.TransactionStatusQueue
- uid: System.Messaging.Message.UseAuthentication
  parent: System.Messaging.Message
  isExternal: false
  name: UseAuthentication
  nameWithType: Message.UseAuthentication
  fullName: System.Messaging.Message.UseAuthentication
- uid: System.Messaging.Message.UseDeadLetterQueue
  parent: System.Messaging.Message
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: Message.UseDeadLetterQueue
  fullName: System.Messaging.Message.UseDeadLetterQueue
- uid: System.Messaging.Message.UseEncryption
  parent: System.Messaging.Message
  isExternal: false
  name: UseEncryption
  nameWithType: Message.UseEncryption
  fullName: System.Messaging.Message.UseEncryption
- uid: System.Messaging.Message.UseJournalQueue
  parent: System.Messaging.Message
  isExternal: false
  name: UseJournalQueue
  nameWithType: Message.UseJournalQueue
  fullName: System.Messaging.Message.UseJournalQueue
- uid: System.Messaging.Message.UseTracing
  parent: System.Messaging.Message
  isExternal: false
  name: UseTracing
  nameWithType: Message.UseTracing
  fullName: System.Messaging.Message.UseTracing
- uid: System.Messaging.Message.#ctor*
  parent: System.Messaging.Message
  isExternal: false
  name: Message
  nameWithType: Message.Message
- uid: System.Messaging.Message.AcknowledgeType*
  parent: System.Messaging.Message
  isExternal: false
  name: AcknowledgeType
  nameWithType: Message.AcknowledgeType
- uid: System.Messaging.Message.Acknowledgment*
  parent: System.Messaging.Message
  isExternal: false
  name: Acknowledgment
  nameWithType: Message.Acknowledgment
- uid: System.Messaging.Message.AdministrationQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: AdministrationQueue
  nameWithType: Message.AdministrationQueue
- uid: System.Messaging.Message.AppSpecific*
  parent: System.Messaging.Message
  isExternal: false
  name: AppSpecific
  nameWithType: Message.AppSpecific
- uid: System.Messaging.Message.ArrivedTime*
  parent: System.Messaging.Message
  isExternal: false
  name: ArrivedTime
  nameWithType: Message.ArrivedTime
- uid: System.Messaging.Message.AttachSenderId*
  parent: System.Messaging.Message
  isExternal: false
  name: AttachSenderId
  nameWithType: Message.AttachSenderId
- uid: System.Messaging.Message.Authenticated*
  parent: System.Messaging.Message
  isExternal: false
  name: Authenticated
  nameWithType: Message.Authenticated
- uid: System.Messaging.Message.AuthenticationProviderName*
  parent: System.Messaging.Message
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: Message.AuthenticationProviderName
- uid: System.Messaging.Message.AuthenticationProviderType*
  parent: System.Messaging.Message
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: Message.AuthenticationProviderType
- uid: System.Messaging.Message.Body*
  parent: System.Messaging.Message
  isExternal: false
  name: Body
  nameWithType: Message.Body
- uid: System.Messaging.Message.BodyStream*
  parent: System.Messaging.Message
  isExternal: false
  name: BodyStream
  nameWithType: Message.BodyStream
- uid: System.Messaging.Message.BodyType*
  parent: System.Messaging.Message
  isExternal: false
  name: BodyType
  nameWithType: Message.BodyType
- uid: System.Messaging.Message.ConnectorType*
  parent: System.Messaging.Message
  isExternal: false
  name: ConnectorType
  nameWithType: Message.ConnectorType
- uid: System.Messaging.Message.CorrelationId*
  parent: System.Messaging.Message
  isExternal: false
  name: CorrelationId
  nameWithType: Message.CorrelationId
- uid: System.Messaging.Message.DestinationQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: DestinationQueue
  nameWithType: Message.DestinationQueue
- uid: System.Messaging.Message.DestinationSymmetricKey*
  parent: System.Messaging.Message
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: Message.DestinationSymmetricKey
- uid: System.Messaging.Message.DigitalSignature*
  parent: System.Messaging.Message
  isExternal: false
  name: DigitalSignature
  nameWithType: Message.DigitalSignature
- uid: System.Messaging.Message.EncryptionAlgorithm*
  parent: System.Messaging.Message
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: Message.EncryptionAlgorithm
- uid: System.Messaging.Message.Extension*
  parent: System.Messaging.Message
  isExternal: false
  name: Extension
  nameWithType: Message.Extension
- uid: System.Messaging.Message.Formatter*
  parent: System.Messaging.Message
  isExternal: false
  name: Formatter
  nameWithType: Message.Formatter
- uid: System.Messaging.Message.HashAlgorithm*
  parent: System.Messaging.Message
  isExternal: false
  name: HashAlgorithm
  nameWithType: Message.HashAlgorithm
- uid: System.Messaging.Message.Id*
  parent: System.Messaging.Message
  isExternal: false
  name: Id
  nameWithType: Message.Id
- uid: System.Messaging.Message.IsFirstInTransaction*
  parent: System.Messaging.Message
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: Message.IsFirstInTransaction
- uid: System.Messaging.Message.IsLastInTransaction*
  parent: System.Messaging.Message
  isExternal: false
  name: IsLastInTransaction
  nameWithType: Message.IsLastInTransaction
- uid: System.Messaging.Message.Label*
  parent: System.Messaging.Message
  isExternal: false
  name: Label
  nameWithType: Message.Label
- uid: System.Messaging.Message.LookupId*
  parent: System.Messaging.Message
  isExternal: false
  name: LookupId
  nameWithType: Message.LookupId
- uid: System.Messaging.Message.MessageType*
  parent: System.Messaging.Message
  isExternal: false
  name: MessageType
  nameWithType: Message.MessageType
- uid: System.Messaging.Message.Priority*
  parent: System.Messaging.Message
  isExternal: false
  name: Priority
  nameWithType: Message.Priority
- uid: System.Messaging.Message.Recoverable*
  parent: System.Messaging.Message
  isExternal: false
  name: Recoverable
  nameWithType: Message.Recoverable
- uid: System.Messaging.Message.ResponseQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: ResponseQueue
  nameWithType: Message.ResponseQueue
- uid: System.Messaging.Message.SecurityContext*
  parent: System.Messaging.Message
  isExternal: false
  name: SecurityContext
  nameWithType: Message.SecurityContext
- uid: System.Messaging.Message.SenderCertificate*
  parent: System.Messaging.Message
  isExternal: false
  name: SenderCertificate
  nameWithType: Message.SenderCertificate
- uid: System.Messaging.Message.SenderId*
  parent: System.Messaging.Message
  isExternal: false
  name: SenderId
  nameWithType: Message.SenderId
- uid: System.Messaging.Message.SenderVersion*
  parent: System.Messaging.Message
  isExternal: false
  name: SenderVersion
  nameWithType: Message.SenderVersion
- uid: System.Messaging.Message.SentTime*
  parent: System.Messaging.Message
  isExternal: false
  name: SentTime
  nameWithType: Message.SentTime
- uid: System.Messaging.Message.SourceMachine*
  parent: System.Messaging.Message
  isExternal: false
  name: SourceMachine
  nameWithType: Message.SourceMachine
- uid: System.Messaging.Message.TimeToBeReceived*
  parent: System.Messaging.Message
  isExternal: false
  name: TimeToBeReceived
  nameWithType: Message.TimeToBeReceived
- uid: System.Messaging.Message.TimeToReachQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: TimeToReachQueue
  nameWithType: Message.TimeToReachQueue
- uid: System.Messaging.Message.TransactionId*
  parent: System.Messaging.Message
  isExternal: false
  name: TransactionId
  nameWithType: Message.TransactionId
- uid: System.Messaging.Message.TransactionStatusQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: Message.TransactionStatusQueue
- uid: System.Messaging.Message.UseAuthentication*
  parent: System.Messaging.Message
  isExternal: false
  name: UseAuthentication
  nameWithType: Message.UseAuthentication
- uid: System.Messaging.Message.UseDeadLetterQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: Message.UseDeadLetterQueue
- uid: System.Messaging.Message.UseEncryption*
  parent: System.Messaging.Message
  isExternal: false
  name: UseEncryption
  nameWithType: Message.UseEncryption
- uid: System.Messaging.Message.UseJournalQueue*
  parent: System.Messaging.Message
  isExternal: false
  name: UseJournalQueue
  nameWithType: Message.UseJournalQueue
- uid: System.Messaging.Message.UseTracing*
  parent: System.Messaging.Message
  isExternal: false
  name: UseTracing
  nameWithType: Message.UseTracing
