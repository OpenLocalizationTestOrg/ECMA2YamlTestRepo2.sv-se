### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Touch
  id: Touch
  children:
  - System.Windows.Input.Touch.FrameReported
  langs:
  - csharp
  name: Touch
  nameWithType: Touch
  fullName: System.Windows.Input.Touch
  type: Class
  summary: "Innehåller en på programnivå som bearbetar multitouch indata från operativsystemet och aktiverar den <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> händelse."
  remarks: "Den <xref:System.Windows.Input.Touch.FrameReported>händelse ingår i [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] som stöd för kompatibilitet med Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Om du inte behöver säkerställa kompatibilitet med Silverlight använda touch-händelser som <xref:System.Windows.UIElement.TouchDown>och <xref:System.Windows.UIElement.TouchMove>på <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, eller <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       <xref:System.Windows.Input.Touch.FrameReported>Händelsen använder inte samma händelsemodell som andra WPF inkommande händelser, t.ex <xref:System.Windows.UIElement.TouchDown>och <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> </xref:System.Windows.Input.Touch.FrameReported> I stället för att exponeras som ett element händelse som potentiellt vägar via objektträdet ett gränssnitt i <xref:System.Windows.Input.Touch.FrameReported>händelsen är en händelse som hanteras på programnivå.</xref:System.Windows.Input.Touch.FrameReported> Därför kan du inte använda den `sender` -parametern för händelsehanterare för att avgöra vilka element har använts.       Använd den <xref:System.Windows.Input.TouchFrameEventArgs>att hämta den <xref:System.Windows.Input.TouchPoint>värden som är relevanta för händelsen touch.</xref:System.Windows.Input.TouchPoint> </xref:System.Windows.Input.TouchFrameEventArgs> Från den <xref:System.Windows.Input.TouchPoint>, du kan hämta den <xref:System.Windows.Input.TouchPoint.Position%2A>för att trycka och ta reda på om den <xref:System.Windows.Input.TouchAction>har en <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, eller <xref:System.Windows.Input.TouchAction>åtgärd.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> Du kan också använda för <xref:System.Windows.Input.TouchPoint>att hämta <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Från den <xref:System.Windows.Input.TouchDevice>, du kan fastställa enheten <xref:System.Windows.Input.TouchDevice.Id%2A>och få information om de element som har använts.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen. Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches. This example requires a Windows Touch–compatible screen.  \n  \n The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.  \n  \n [!code-xml[TouchFrameSample#000](~/add/codesnippet/xaml/wpftouchframesample/mainwindow.xaml#000)]  \n  \n The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n [!code-vb[TouchFrameSample#100](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#100)]\n [!code-cs[TouchFrameSample#100](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#100)]"
  syntax:
    content: public static class Touch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Touch.FrameReported
  id: FrameReported
  parent: System.Windows.Input.Touch
  langs:
  - csharp
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Inträffar när en touch-meddelandet har skickats."
  remarks: "En ram är i en serie av multitouch meddelanden eller touch punkter. Du kan svara på finputsningen av hanterar händelsen FrameReported och åtkomst till information om de <xref:System.Windows.Input.TouchPoint>från den <xref:System.Windows.Input.TouchFrameEventArgs>händelsedata.</xref:System.Windows.Input.TouchFrameEventArgs> </xref:System.Windows.Input.TouchPoint>       Händelsen FrameReported använder inte samma händelsemodell som andra [!INCLUDE[TLA#tla_titlewinclient](~/add/includes/tlasharptla-titlewinclient-md.md)] inkommande händelser, t.ex <xref:System.Windows.UIElement.TouchDown>och <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> I stället för att visas som ett element händelse som potentiellt vägar via objektträdet ett gränssnitt, är FrameReported händelsen en händelse som hanteras på programnivå. Därför kan du inte använda den `sender` -parametern för händelsehanterare för att avgöra vilka element har använts."
  example:
  - "The following example handles the FrameReported event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: public static event System.Windows.Input.TouchFrameEventHandler FrameReported;
    return:
      type: System.Windows.Input.TouchFrameEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Touch.FrameReported
  parent: System.Windows.Input.Touch
  isExternal: false
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
- uid: System.Windows.Input.TouchFrameEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TouchFrameEventHandler
  nameWithType: TouchFrameEventHandler
  fullName: System.Windows.Input.TouchFrameEventHandler
