### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ExceptionValidationRule
  id: ExceptionValidationRule
  children:
  - System.Windows.Controls.ExceptionValidationRule.#ctor
  - System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule
  fullName: System.Windows.Controls.ExceptionValidationRule
  type: Class
  summary: "Representerar en regel som söker efter undantag som uppstod under uppdateringen av källegenskap bindning."
  remarks: "Den [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] bindning datamodellen kan du associera <xref:System.Windows.Data.Binding.ValidationRules%2A>med en <xref:System.Windows.Data.Binding>objektet.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> Klassen ExceptionValidationRule är en inbyggd regel som söker efter undantag som uppstod under uppdatering av egenskapen binding källa. Du kan ange anpassade logik för att ange hur den bindande motorn hanterar sådana undantag genom att använda en <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> Mer information finns i <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       En alternativ syntax för att ange ExceptionValidationRule uttryckligen är att ange den <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>egenskapen `true` på din <xref:System.Windows.Data.Binding>eller <xref:System.Windows.Data.MultiBinding>objekt.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>       Du kan skapa en anpassad regel genom att skapa en klass som härleds från <xref:System.Windows.Controls.ValidationRule>.</xref:System.Windows.Controls.ValidationRule> Mer information och en detaljerad beskrivning av dataverifiering finns [bindning översikt över](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The <xref:System.Windows.Data.Binding.ValidationRules%2A> property takes a collection of <xref:System.Windows.Controls.ValidationRule> objects. The following example uses <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName> as the binding target property and `StartPrice` (an integer) as the binding source property. When the user enters a value that cannot be converted to an integer, an exception is thrown, which causes the ExceptionValidationRule to invalidate the target value.  \n  \n [!code-xml[DataBindingLab#DefaultValidation](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#defaultvalidation)]  \n  \n By default, when there is a validation error, the <xref:System.Windows.Controls.TextBox> appears with a red border. Optionally, you can write a custom <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> to specify how you want to notify the user when there is a validation error.  \n  \n For more information about data validation, see [Data Binding Overview](../Topic/Data%20Binding%20Overview.md).  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: 'public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule'
  inheritance:
  - System.Object
  - System.Windows.Controls.ValidationRule
  implements: []
  inheritedMembers:
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  - System.Windows.Controls.ValidationRule.ValidationStep
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> klass."
  syntax:
    content: public ExceptionValidationRule ();
    parameters: []
  overload: System.Windows.Controls.ExceptionValidationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  id: Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Utför kontroller på ett värde."
  syntax:
    content: public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);
    parameters:
    - id: value
      type: System.Object
      description: "Värde (från bindningen mål) att kontrollera."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "Kulturen som ska användas i den här regeln."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ExceptionValidationRule.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Controls.ValidationRule
  isExternal: false
  name: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule.ExceptionValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.Validate*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate
  nameWithType: ExceptionValidationRule.Validate
