### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AsyncPostBackTrigger
  id: AsyncPostBackTrigger
  children:
  - System.Web.UI.AsyncPostBackTrigger.#ctor
  - System.Web.UI.AsyncPostBackTrigger.ControlID
  - System.Web.UI.AsyncPostBackTrigger.EventName
  - System.Web.UI.AsyncPostBackTrigger.HasTriggered
  - System.Web.UI.AsyncPostBackTrigger.Initialize
  - System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  - System.Web.UI.AsyncPostBackTrigger.ToString
  langs:
  - csharp
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger
  fullName: System.Web.UI.AsyncPostBackTrigger
  type: Class
  summary: "Definierar en kontroll och valfria händelsen för kontrollen som en asynkron återanslående kontrollen utlösare som orsakar en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontroll för att kunna uppdatera."
  remarks: "Använd AsyncPostBackTrigger-kontrollen för att aktivera kontroller ska vara utlösare för en <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> Kontroller som är utlösare för en update-panelen orsaka en uppdatering av panelens innehåll efter ett asynkront återanslag. Definiera en asynkron utlösaren kontroll är användbart i följande scenarier: - för-kontroller som finns utanför en panel.      -För-kontroller som inte ingår i en panel när den <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>egenskapen är `false`.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>      -För kontroller som inte ingår i kapslade paneler för att göra en uppdatering av överordnade paneler.       Kontrollen som kontrollen AsyncPostBackTrigger refererar till måste vara i samma namngivande behållare som panelen uppdatering som den är i en utlösare. Utlösare som är baserade på kontrollerna i andra namngivande behållare stöds inte.       Lägg till AsyncPostBackTrigger styr antingen med hjälp av den **UpdatePanelTrigger Samlingsredigeraren** dialogrutan i designer eller genom att skapa en `Triggers` element deklarativt i den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> Den <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A>egenskapen är obligatorisk, men <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>egenskapen är valfri.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> </xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> Om den <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>egenskapen inte har angetts i <xref:System.ComponentModel.DefaultEventAttribute>attributet för kontrollen som används för att fastställa standardhändelse.</xref:System.ComponentModel.DefaultEventAttribute> </xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> Till exempel standardhändelsen för den <xref:System.Web.UI.WebControls.Button>kontrollen är den <xref:System.Web.UI.WebControls.Button.Click>händelse.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> Den <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>egenskapen är skiftlägeskänslig.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>       Du kan också referera en namngivande behållare som en utlösare. I så fall måste alla underordnade kontroller i behållaren som orsakar ett återanslående betraktas som utlösare för den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel>       Programmatiskt lägga till AsyncPostBackTrigger kontroller stöds inte. Programmässigt registrera ett återanslående kontroll genom att använda den <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>metod för den <xref:System.Web.UI.ScriptManager>kontroll.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Sedan anropar den <xref:System.Web.UI.UpdatePanel.Update%2A>metod för den <xref:System.Web.UI.UpdatePanel>styra när kontrollen skickar tillbaka.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>       Om du definierar en kontroll som använder både <xref:System.Web.UI.PostBackTrigger>och AsyncPostBackTrigger, genereras ett undantag.</xref:System.Web.UI.PostBackTrigger>"
  example:
  - "The following example shows how to add an AsyncPostBackTrigger control declaratively. A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database. A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results. The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-vb[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.asyncpos_1.aspx)]\n [!code-cs[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.asyncpos_1.aspx)]"
  syntax:
    content: 'public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initierar en ny instans av en <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> klass."
  remarks: "Lägg till <xref:System.Web.UI.AsyncPostBackTrigger>styr antingen med hjälp av den **UpdatePanelTrigger Samlingsredigeraren** dialogrutan i designer eller genom att skapa en `Triggers` element deklarativt i den <xref:System.Web.UI.UpdatePanel>kontroll.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.AsyncPostBackTrigger>       Lägga till <xref:System.Web.UI.AsyncPostBackTrigger>kontroller programmässigt stöds inte.</xref:System.Web.UI.AsyncPostBackTrigger>"
  syntax:
    content: public AsyncPostBackTrigger ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Hämtar eller anger namnet på den kontroll som utlöser ett asynkront återanslag för en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontroll."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "En server kontroll-ID."
  overload: System.Web.UI.AsyncPostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  id: EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Hämtar eller anger kontrollhändelsen återanslående utlöser ett <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontrollen som ska uppdateras."
  remarks: "EventName-egenskapen är valfri. Om den inte är angiven i <xref:System.ComponentModel.DefaultEventAttribute>attributet för kontrollen som används för att fastställa standardhändelse.</xref:System.ComponentModel.DefaultEventAttribute> I följande tabell visas standard händelser för några vanliga kontroller som ASP.NET 2.0.      | Kontrollen | Standardhändelsen |   |-------------|-------------------|   | <xref:System.Web.UI.WebControls.Button>| <xref:System.Web.UI.WebControls.Button.Click>|   | <xref:System.Web.UI.WebControls.Calendar>| <xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|   | <xref:System.Web.UI.WebControls.CheckBox>| <xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|   | <xref:System.Web.UI.WebControls.GridView>| <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|   | <xref:System.Web.UI.WebControls.TextBox>| <xref:System.Web.UI.WebControls.TextBox.TextChanged>|</xref:System.Web.UI.WebControls.TextBox.TextChanged></xref:System.Web.UI.WebControls.TextBox></xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.CheckBox.CheckedChanged></xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.Calendar.SelectionChanged></xref:System.Web.UI.WebControls.Calendar></xref:System.Web.UI.WebControls.Button.Click></xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: public string EventName { get; set; }
    return:
      type: System.String
      description: "Namn på evenemang. Standardvärdet är <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.AsyncPostBackTrigger.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerar ett värde som anger om utlösaren anropades."
  remarks: "Control-utvecklare kan åsidosätta metoden HasTriggered för att tillhandahålla anpassade logik för att fastställa om utlösaren anropades. Se en anpassad utlösare i den `Triggers` element i den <xref:System.Web.UI.UpdatePanel>kontroll, du kan lägga till ett direktiv till sidan eller till elementet i Web.config-filen.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om utlösaren anropades; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Initierar den <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> styr och avgör om den händelse som heter i utlösaren finns och är giltigt."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No <xref href=\"System.Web.UI.ScriptManager\"></xref> control was found on the page.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property is not found for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property does not match a standard event handler signature."
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  id: OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Aktiverar den händelse som utlöser ett återanslående och uppdatering av en <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> kontroll."
  syntax:
    content: public void OnEvent (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Händelseavsändare."
    - id: e
      type: System.EventArgs
      description: "Informationen om händelsen."
  overload: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Returnerar en strängrepresentation av aktuellt <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> kontroll."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som representerar aktuellt <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> kontroll."
  overload: System.Web.UI.AsyncPostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
- uid: System.Web.UI.AsyncPostBackTrigger.EventName*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: AsyncPostBackTrigger.HasTriggered
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: AsyncPostBackTrigger.Initialize
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent
  nameWithType: AsyncPostBackTrigger.OnEvent
- uid: System.Web.UI.AsyncPostBackTrigger.ToString*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: AsyncPostBackTrigger.ToString
