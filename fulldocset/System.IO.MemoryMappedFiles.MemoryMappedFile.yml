### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  id: MemoryMappedFile
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  langs:
  - csharp
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
  type: Class
  summary: "Representerar en minnesmappad fil."
  remarks: "En minnesmappad fil mappar innehållet i en fil till ett program logiska adressutrymme. Minnesmappade filer aktivera programmerare att arbeta med mycket stora filer eftersom minne kan hanteras samtidigt, och om fullständig, slumpmässiga tillgång till en fil utan att behöva sökning. Minnesmappade filer kan också delas mellan flera processer.       Den <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>metoder skapar en minnesmappad fil från en angiven sökväg eller en <xref:System.IO.FileStream>av en befintlig fil på disken.</xref:System.IO.FileStream> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> Ändringar automatiskt disk när filen har inte mappats.       Den <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>metoder skapar en minnesmappad fil som inte är mappad till en befintlig fil på disken, och lämpar sig för att skapa delade minnet för kommunikation mellan processer (IPC).</xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>       En minnesmappad fil är associerad med ett namn.       Du kan skapa flera vyer i minnesmappad fil, inklusive vyer för delar av filen. Du kan mappa samma del av en fil till mer än en adress för att skapa samtidiga minne. De måste skapas från samma minnesmappad fil för två vyer förblir samtidiga. Skapa två filen mappningar av samma fil med två vyer ger inte samtidighet."
  example:
  - "The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/t-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/t-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: 'public class MemoryMappedFile : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  id: CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil från en fil på disken."
  remarks: ''
  example:
  - "The following example uses the CreateFromFile method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/m-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen för att mappa."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom sträng, innehåller endast blanktecken eller har en eller flera ogiltiga tecken, som definieras av den &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metod.       - eller - <code>path</code> refererar till en ogiltig enhet."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den maximala längden som definieras av operativsystemet. I Windows-sökvägar måste innehålla färre än 248 tecken och filnamn måste innehålla färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheterna som krävs för filen."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  id: CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil med det angivna åtkomstläget från en fil på disken."
  remarks: "Den `mode` parametern gäller käll-filen på disken. Du kan endast använda den <xref:System.IO.FileMode>uppräkningsvärdet skapa minnesmappad fil från käll-filen på disken.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen för att mappa."
    - id: mode
      type: System.IO.FileMode
      description: "Åtkomstläge; must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil med det angivna åtkomstläget."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom sträng, innehåller endast blanktecken eller har en eller flera ogiltiga tecken, som definieras av den &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metod.       - eller - <code>path</code> refererar till en ogiltig enhet.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - eller - <code>mode</code> är <xref href=&quot;System.IO.FileMode&quot;> </xref> och filen finns inte.       - eller - ett i/o-fel uppstod."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den maximala längden som definieras av operativsystemet. I Windows-sökvägar måste innehålla färre än 248 tecken och filnamn måste innehålla färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheterna som krävs för filen."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har det angivna åtkomstläget och namn från en fil på disken."
  remarks: "Den `mode` parametern gäller käll-filen på disken. Du kan endast använda den <xref:System.IO.FileMode>uppräkningsvärdet skapa minnesmappad fil från käll-filen på disken.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen för att mappa."
    - id: mode
      type: System.IO.FileMode
      description: "Åtkomstläge; must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil med det angivna namn och åtkomst-läget."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom sträng, innehåller endast blanktecken eller har en eller flera ogiltiga tecken, som definieras av den &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metod.       - eller - <code>path</code> refererar till en ogiltig enhet.       - eller - <code>mapName</code> är en tom sträng.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - eller - <code>mode</code> är <xref href=&quot;System.IO.FileMode&quot;> </xref> och filen finns inte.       - eller - ett i/o-fel uppstod."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den maximala längden som definieras av operativsystemet. I Windows-sökvägar måste innehålla färre än 248 tecken och filnamn måste innehålla färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheterna som krävs för filen."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har det angivna åtkomstläget, namn och kapacitet från en fil på disken."
  remarks: "Den `mode` parametern gäller käll-filen på disken.       Om `capacity` är större än storleken på filen, filen ökas för att matcha den angivna kapaciteten även om inga data skrivs till minnesmappad fil. Om du vill förhindra att detta inträffar genom att ange 0 (noll) för standardkapaciteten internt anger `capacity` storleken på filen på disken."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen för att mappa."
    - id: mode
      type: System.IO.FileMode
      description: "Åtkomstläge; kan vara något av de <xref href=&quot;System.IO.FileMode&quot;> </xref> uppräkning värden utom <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil. Ange 0 om du vill ange kapacitet att storleken på filen på disken."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>en tom sträng, innehåller endast blanktecken eller har en eller flera ogiltiga tecken, som definieras av den &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metod.       - eller - <code>path</code> refererar till en ogiltig enhet.       - eller - <code>mapName</code> är en tom sträng.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än noll.       - eller - <code>capacity</code> är mindre än filstorleken (men inte noll).       - eller - <code>capacity</code> är noll och storleken på filen på disken även är noll."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den maximala längden som definieras av operativsystemet. I Windows-sökvägar måste innehålla färre än 248 tecken och filnamn måste innehålla färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheterna som krävs för filen."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har angivna åtkomstläget, namn, kapacitet och åtkomsttyp från en fil på disken."
  remarks: "Den `mode` parametern gäller käll-filen på disken.       Om `capacity` är större än storleken på filen, filen ökas för att matcha den angivna kapaciteten även om inga data skrivs till minnesmappad fil. Om du vill förhindra att detta inträffar genom att ange 0 (noll) för standardkapaciteten internt anger `capacity` storleken på filen på disken."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till filen för att mappa."
    - id: mode
      type: System.IO.FileMode
      description: "Åtkomstläge; kan vara något av de <xref href=&quot;System.IO.FileMode&quot;> </xref> uppräkning värden utom <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil. Ange 0 om du vill ange kapacitet att storleken på filen på disken."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> är inte ett tillåtet värde.       - eller - <code>path</code> anger en tom fil.       - eller - <code>access</code> har angetts som <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> och kapacitet är större än storleken på den fil som anges av <code>path</code>.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än noll.       - eller - <code>capacity</code> är mindre än filstorleken (men inte noll).       - eller - <code>capacity</code> är noll och storleken på filen på disken även är noll.       - eller - <code>access</code> är inte en definierad <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> värde.       - eller - storleken på den fil som anges av <code>path</code> är större än <code>capacity</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "- eller - ett i/o-fel uppstod."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>överskrider den maximala längden som definieras av operativsystemet. I Windows-sökvägar måste innehålla färre än 248 tecken och filnamn måste innehålla färre än 260 tecken."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Anroparen har inte behörigheterna som krävs för filen."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil från en befintlig fil med det angivna åtkomstläget, namn, inheritability och kapacitet."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "Fildataströmmen av den befintliga filen."
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil. Ange 0 om du vill ange kapacitet för `filestream`."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil.       Den här parametern kan inte anges till <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "En av de uppräkningsvärden som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "Ett värde som anger om du vill stänga källfilen strömma när den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> har tagits bort."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng.       - eller - <code>capacity</code> och längden på filen är noll.       - eller - <code>access</code> är inställd på <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> eller <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärdet, vilket inte är tillåtet.       - eller - <code>access</code> är inställd på <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> och <code>capacity</code> är större än längden på <xref uid=&quot;langword_csharp_filestream&quot; name=&quot;filestream&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll.       - eller - <code>capacity</code> är mindre än filstorleken.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil med angivet namn, kapacitet, behörighet, behörigheter, inheritability och avyttring krav från en fil på disken."
  remarks: "Om `capacity` är större än storleken på filen, filen ökas för att matcha den angivna kapaciteten även om inga data skrivs till minnesmappad fil. Om du vill förhindra att detta inträffar genom att ange 0 (noll) för standardkapaciteten internt anger `capacity` storleken på filen på disken."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "Den `fileStream` till filen för att mappa."
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil. Ange 0 om du vill ange kapacitet att storleken på filen på disken."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil.       Den här parametern kan inte anges till <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "De behörigheter som kan beviljas för åtkomst till filen och åtgärder på minnesmappade filer.       Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "En av de uppräkningsvärden som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att inte ta bort `fileStream` när den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> är stängd. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to dispose `fileStream`."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>capacity</code> och längden på filen är noll.       - eller - <code>access</code> anges till den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> eller <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärdet, vilket inte är tillåtet."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>or <code>mapname</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än noll.       - eller - <code>capacity</code> är mindre än filstorleken.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>fileStream</code>stängdes."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>is set to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;></xref> when <code>fileStream</code>&quot;s access is set to <xref href=&quot;System.IO.FileAccess&quot;></xref> or <xref href=&quot;System.IO.FileAccess&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mapName</code>Det finns redan."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  id: CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har angiven kapacitet på systemminne."
  remarks: "Använd den här metoden för att skapa en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  example:
  - "The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file. The following sequence of actions occur:  \n  \n1.  Process A creates the memory-mapped file and writes a value to it.  \n  \n2.  Process B opens the memory-mapped file and writes a value to it.  \n  \n3.  Process C opens the memory-mapped file and writes a value to it.  \n  \n4.  Process A reads and displays the values from the memory-mapped file.  \n  \n5.  After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.  \n  \n To run this example, do the following:  \n  \n1.  Compile the applications and open three Command windows.  \n  \n2.  In the first Command window, run Process A.  \n  \n3.  In the second Command window, run Process B.  \n  \n4.  Return to Process A and press ENTER.  \n  \n5.  In the third Command window, run Process C.  \n  \n6.  Return to Process A and press ENTER.  \n  \n The output of Process A is as follows:  \n  \n```  \nStart Process B and press ENTER to continue.  \nStart Process C and press ENTER to continue.  \nProcess A says: True  \nProcess B says: False  \nProcess C says: True  \n```  \n  \n **Process A**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_1.cs)]  \n  \n **Process B**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_2.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_2.cs)]  \n  \n **Process C**  \n  \n [!code-cs[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_3.cs)]\n [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_3.vb)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil med det angivna namnet och kapacitet."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än eller lika med noll."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har den angivna kapaciteten och behörighet i systemminnet."
  remarks: "Använd den här metoden för att skapa en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har det angivna namnet, kapacitet, behörighet, minne allokeringsalternativ och inheritability."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "En binär kombination av uppräkningsvärden som anger minne allokeringsalternativ för minnesmappad fil."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Ett värde som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> värde."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en minnesmappad fil som har angiven kapacitet, behörighet, minnesallokering, säkerhetsbehörigheter och inheritability i systemminnet."
  remarks: "Använd den här metoden för att skapa en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "En binär kombination av uppräkningsvärden som anger minne allokeringsalternativ för minnesmappad fil."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "De behörigheter som kan beviljas för åtkomst till filen och åtgärder på minnesmappade filer.       Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "En av de uppräkningsvärden som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  id: CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar eller öppnar en minnesmappad fil som har angiven kapacitet på systemminne."
  remarks: "Använd den här metoden för att skapa eller öppna en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil med det angivna namnet och storleken."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än eller lika med noll."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar eller öppnar en minnesmappad fil som har den angivna kapaciteten och behörighet i systemminnet."
  remarks: "Använd den här metoden för att skapa eller öppna en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Operativsystemet nekas angivna åtkomst till filen. till exempel åtkomst anges till <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> eller <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, men filen eller katalogen är skrivskyddad."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en ny tom minne mappade fil eller öppnar en befintlig minne mappade filen om det finns någon med samma namn. Om du öppnar en befintlig fil kommer argumenten kapacitet, alternativ och minne att ignoreras."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "En binär kombination av värden som indikerar att minnet allokeringsalternativ ska gälla för filen."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Ett värde som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Operativsystemet nekas angivna åtkomst till filen. till exempel åtkomst anges till <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> eller <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, men filen eller katalogen är skrivskyddad."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar eller öppnar en minnesmappad fil som har angiven kapacitet, behörighet, minnesallokering, säkerhetsbehörigheter och inheritability i systemminnet."
  remarks: "Använd den här metoden för att skapa eller öppna en minnesmappad fil som inte är beständig (som är inte associerad med en fil på disk), som du kan använda för att dela data mellan processer."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Ett namn som ska tilldelas minnesmappad fil."
    - id: capacity
      type: System.Int64
      description: "Den maximala storleken i byte som ska allokeras till minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "En binär kombination av uppräkningsvärden som anger minne allokeringsalternativ för minnesmappad fil."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "De behörigheter som kan beviljas för åtkomst till filen och åtgärder på minnesmappade filer.       Den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "En av de uppräkningsvärden som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng.       - eller - <code>access</code> har angetts till lässkyddad med den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>är större än storleken på det logiska adressutrymmet.       - eller - <code>capacity</code> är mindre än eller lika med noll.       - eller - <code>access</code> är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Operativsystemet nekas den angivna <code> access </code> i filen, till exempel <code> access </code> är inställd på <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> eller <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, men filen eller katalogen är skrivskyddad."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  id: CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> som mappar till en vy över minnesmappad fil."
  remarks: "Du kan använda vyn som returneras av den här metoden för direktåtkomst till en minnesmappad fil."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Ett slumpmässigt tillgänglig minnesblock."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst till filen minnesmappade har inte behörighet."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  id: CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> som mappar till en vy över minnesmappad fil och som har den angivna förskjutningen och storlek."
  remarks: "Du kan använda vyn som returneras av den här metoden för direktåtkomst till en minnesmappad fil.       Ange 0 (noll) om du vill skapa en fullständig överblick över minnesmappad fil för den `size` parameter. Om du gör detta vara storleken på vyn mindre eller större än storleken på källfilen på disk. Detta beror på att vyer finns i enheter av system-sidor och storleken på vyn avrundat till nästa system sidan storlek."
  example:
  - "The following example creates a view of a memory-mapped file and edits it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/visualbasic/eabd93aa-7563-4639-a698-_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/csharp/eabd93aa-7563-4639-a698-_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte som ska startas vyn."
    - id: size
      type: System.Int64
      description: "Storleken på vyn. Ange 0 (noll) om du vill skapa en vy som börjar vid `offset` och slutar cirka i slutet av minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Ett slumpmässigt tillgänglig minnesblock."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>size</code> är ett negativt värde.       - eller - <code>size</code> är större än det logiska adressutrymmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst till filen minnesmappade har inte behörighet."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> som mappar till en vy över minnesmappad fil, och som har det angivna Förskjutning, storlek, och komma åt begränsningar."
  remarks: "Du kan använda vyn som returneras av den här metoden för direktåtkomst till en minnesmappad fil.       Ange 0 (noll) om du vill skapa en fullständig överblick över minnesmappad fil för den `size` parameter. Om du gör detta vara storleken på vyn mindre eller större än storleken på källfilen på disk. Detta beror på att vyer finns i enheter av system-sidor och storleken på vyn avrundat till nästa system sidan storlek."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte som ska startas vyn."
    - id: size
      type: System.Int64
      description: "Storleken på vyn. Ange 0 (noll) om du vill skapa en vy som börjar vid `offset` och slutar cirka i slutet av minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Ett slumpmässigt tillgänglig minnesblock."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>size</code> är ett negativt värde.       - eller - <code>size</code> är större än det logiska adressutrymmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>är ogiltigt för minnesmappad fil."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstod."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  id: CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en dataström som mappar till en vy över minnesmappad fil."
  remarks: "Du kan använda den dataström som returnerades av den här metoden för sekventiell åtkomst till en minnesmappad fil, såsom för kommunikation mellan processer."
  example:
  - "The following example creates a stream and writes a value to it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/visualbasic/m-system.io.memorymapped_1_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/csharp/m-system.io.memorymapped_1_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "En dataström med minne."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst till filen minnesmappade har inte behörighet."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  id: CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en dataström som mappar till en vy över minnesmappad fil och som har den angivna förskjutningen och storlek."
  remarks: "Du kan använda den dataström som returnerades av den här metoden för sekventiell åtkomst till en minnesmappad fil, såsom för kommunikation mellan processer.       Ange 0 (noll) om du vill skapa en fullständig överblick över minnesmappad fil för den `size` parameter. Om du gör detta vara storleken på vyn mindre eller större än storleken på källfilen på disk. Detta beror på att vyer finns i enheter av system-sidor och storleken på vyn avrundat till nästa system sidan storlek."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte som ska startas vyn."
    - id: size
      type: System.Int64
      description: "Storleken på vyn. Ange 0 (noll) om du vill skapa en vy som börjar vid `offset` och slutar cirka i slutet av minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "En dataström med minne som har den angivna förskjutningen och storlek."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>size</code> är ett negativt värde.       - eller - <code>size</code> är större än det logiska adressutrymmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst till filen minnesmappade har inte behörighet."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>är större än den totala mängden virtuell minnet."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Skapar en dataström som mappar till en vy över minnesmappad fil, och som har den angivna förskjutningen, storlek och Skriv åtkomst."
  remarks: "Du kan använda den dataström som returnerades av den här metoden för sekventiell åtkomst till en minnesmappad fil, såsom för kommunikation mellan processer.       Ange 0 (noll) om du vill skapa en fullständig överblick över minnesmappad fil för den `size` parameter. Om du gör detta vara storleken på vyn mindre eller större än storleken på källfilen på disk. Detta beror på att vyer finns i enheter av system-sidor och storleken på vyn avrundat till nästa system sidan storlek."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Byte som ska startas vyn."
    - id: size
      type: System.Int64
      description: "Storleken på vyn. Ange 0 (noll) om du vill skapa en vy som börjar vid `offset` och slutar cirka i slutet av minnesmappad fil."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "En uppräkning värden som anger vilken typ av åtkomst som tilldelas minnesmappad fil. Standardvärdet är <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "En dataström med minne som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>eller <code>size</code> är ett negativt värde.       - eller - <code>size</code> är större än det logiska adressutrymmet.       - eller - <code>access </code>är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> uppräkningsvärde."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>är ogiltigt för minnesmappad fil."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>är större än den totala mängden virtuell minnet.       - eller - <code>access</code> är ogiltig för minnesmappad fil."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  id: Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Frigör alla resurser som används av den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Släpper de ohanterade resurser som används av den <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> och släpper du de hantera resurserna."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Frisläpp både hanterade och ohanterade resurser. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att släppa endast resurser som inte hanteras."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  id: GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Hämtar åtkomstkontroll till resursen minnesmappad fil."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "De behörigheter som kan beviljas för åtkomst till filen och åtgärder på minnesmappade filer."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Minnesmappad fil är stängd."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Den aktuella plattformen är Windows 98 eller tidigare."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation.       - eller - minnesmappad fil har öppnats som <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> endast."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Öppnar en befintlig minnesmappad fil med det angivna namnet i systemminnet."
  remarks: "Minnesmappad fil kan vara antingen en beständiga minnesmappad fil (som är kopplade till en fil på disken) eller icke beständiga."
  example:
  - "**Opening a Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).  \n  \n [!code-cs[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/csharp/m-system.io.memorymapped_2_1.cs)]\n [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_2_1.vb)]  \n  \n **Opening a Non-Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file used for inter-process communication. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);
    parameters:
    - id: mapName
      type: System.String
      description: "Namnet på minnesmappade filen öppnas."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil med det angivna namnet."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som angetts för <code> mapName </code> finns inte."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Öppnar en befintlig minnesmappad fil med de angivna namnet och åtkomsträttigheter i systemminnet."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);
    parameters:
    - id: mapName
      type: System.String
      description: "Namnet på minnesmappade filen öppnas."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "En av uppräkningsvärdena som anger åtkomsträttigheter till gäller minnesmappad fil."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> uppräkningsvärde."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som angetts för <code> mapName </code> finns inte."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Öppnar en befintlig minnesmappad fil med det angivna namnet, behörigheter och inheritability i systemminnet."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Namnet på minnesmappade filen öppnas."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "En av uppräkningsvärdena som anger åtkomsträttigheter till gäller minnesmappad fil."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "En av de uppräkningsvärden som anger om en referens till minnesmappad fil kan ärvas av en underordnad process. Standardvärdet är <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "En minnesmappad fil som har angivna egenskaper."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>är en tom sträng."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>är inte ett giltigt <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> uppräkningsvärde.       - eller - <code>inheritability</code> är inte ett giltigt <xref:System.IO.HandleInheritability> uppräkningsvärde."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Den begärda åtkomsten är ogiltigt för minnesmappad fil."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen som angetts för <code> mapName </code> finns inte."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  id: SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Hämtar filreferens för en minnesmappad fil."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
      description: "Referensen till minnesmappad fil."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  id: SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Anger behörighet till resursen minnesmappad fil."
  syntax:
    content: public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);
    parameters:
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "De behörigheter som kan beviljas för åtkomst till filen och åtgärder på minnesmappade filer."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>memoryMappedFileSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Det gick inte att en underliggande anropet för att ange säkerhetsinformation."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileAccess
  nameWithType: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileSecurity
  nameWithType: MemoryMappedFileSecurity
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileOptions
  nameWithType: MemoryMappedFileOptions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileRights
  nameWithType: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: SafeMemoryMappedFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile
  nameWithType: MemoryMappedFile.CreateFromFile
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew
  nameWithType: MemoryMappedFile.CreateNew
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen
  nameWithType: MemoryMappedFile.CreateOrOpen
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor
  nameWithType: MemoryMappedFile.CreateViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream
  nameWithType: MemoryMappedFile.CreateViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedFile.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl
  nameWithType: MemoryMappedFile.GetAccessControl
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting
  nameWithType: MemoryMappedFile.OpenExisting
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl
  nameWithType: MemoryMappedFile.SetAccessControl
