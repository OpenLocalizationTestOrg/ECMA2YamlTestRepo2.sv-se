### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy
  id: FileSystemProxy
  children:
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystemProxy
  nameWithType: FileSystemProxy
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy
  type: Class
  summary: "Ger egenskaper och metoder för att arbeta med enheter, filer och kataloger."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem` objekt.      | Att | Se |   |--------|---------|   | Läsa från en textfil | [Så här: läsa från textfiler](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en avgränsad textfil | [Så här: läsa från kommaavgränsade textfiler](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med fast bredd | [Så här: läsa från textfiler med fast bredd](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med flera olika format | [Så här: läsa från textfiler med flera olika format](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en binär fil | [Så här: läsa från binära filer](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med en <xref:System.IO.StreamReader>|[ Så här: läsa Text från filer med en StreamReader](~/add/includes/ajax-current-ext-md.md)|   | Skriva till en textfil | [Så här: skriva Text till filer](~/add/includes/ajax-current-ext-md.md)|   | Lägga till en textfil | [Så här: lägga till textfiler](~/add/includes/ajax-current-ext-md.md)|   | Skriva till en binär fil | [Så här: skriva till binära filer](~/add/includes/ajax-current-ext-md.md)|   | Skriva till filer i den **Mina dokument** directory |[ Så här: skriva Text till filer i den min Dokumentkatalog](~/add/includes/ajax-current-ext-md.md)|   | Skriva till en textfil med en `StreamWriter` | [så här: skriva Text till filer med en StreamWriter](~/add/includes/ajax-current-ext-md.md)|   | Kopiera filerna med ett specifikt mönster | [Så här: kopiera filerna med ett specifikt mönster i en katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil i samma katalog | [Så här: skapa en kopia av en fil i samma katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil till en annan katalog | [Så här: skapa en kopia av en fil i en annan katalog](~/add/includes/ajax-current-ext-md.md)|   | Skapa en fil | [Så här: skapa en fil](~/add/includes/ajax-current-ext-md.md)|   | Ta bort en fil | [Så här: ta bort en fil](~/add/includes/ajax-current-ext-md.md)|   | Hitta filer med ett specifikt mönster | [Så här: hitta filer med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|   | Flytta en fil | [Hur man: flyttar en fil](~/add/includes/ajax-current-ext-md.md)|   | Byt namn på en fil | [Så här: Byt namn på en fil](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en katalog till en annan katalog | [Så här: kopiera en katalog till en annan katalog](~/add/includes/ajax-current-ext-md.md)|   | Skapa en katalog | [Så här: skapa en katalog](~/add/includes/ajax-current-ext-md.md)|   | Hitta underkataloger med ett specifikt mönster | [Så här: hitta underkataloger med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|   | Hämta insamlingen av filer i en katalog | [Så här: hämta insamlingen av filer i en katalog](~/add/includes/ajax-current-ext-md.md)|   | Läsa från den **Mina dokument** directory |[ Så här: hämta innehållet i den min Dokumentkatalog](~/add/includes/ajax-current-ext-md.md)|   | Parsa en sökväg till filen | [Så här: parsa sökvägar](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class FileSystemProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kombinerar två sökvägar och returnerar en korrekt formaterad sökväg."
  remarks: "Den här metoden tar bort överflödiga snedstreck tecken för att skapa en korrekt formaterad sökväg.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CombinePath` metoden.      | Att | Se |   |--------|---------|   | Kombinera sökvägen och namnet på en | [Så här: parsa sökvägar](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Första sökvägen till kombineras."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Andra sökvägen ska kombineras."
    return:
      type: System.String
      description: "Kombinationen av angiven sökväg."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>eller <code>relativePath</code> är felaktigt sökvägar."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en katalog till en annan katalog."
  remarks: "Den här metoden kopieras innehållet i katalogen samt den aktuella katalogen. Om målkatalogen inte finns, skapas. Om det finns en katalog med samma namn på målplatsen, kombineras innehållet i de två katalogerna. Du kan ange ett nytt namn för katalogen under åtgärden.       När du kopierar filer i en katalog kan undantag uppkomma som orsakas av en viss fil. När sådana undantag utlöses, de konsolideras i en enda undantag vars `Data` egenskap innehåller poster i form av ett <xref:System.Collections.IDictionary>där sökvägen för filen eller katalogen är nyckeln och specifika Undantagsmeddelandet finns i motsvarande värde.</xref:System.Collections.IDictionary> Använd `For…Each` att räkna upp genom posterna.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyDirectory` metoden.      | Att | Se |   |--------|---------|   | Kopiera en katalog | [Så här: kopiera en katalog till en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/239273f2-9d6f-48a8-9a46-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Katalogen som ska kopieras."
    - id: destinationDirectoryName
      type: System.String
      description: "Den plats där katalogen ska kopieras."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>eller <code>sourceDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Källkatalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Källsökväg och målsökväg är samma."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn på mappen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En målfilen finns men kan inte nås."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en katalog till en annan katalog."
  remarks: "Den här metoden kopieras innehållet i katalogen samt den aktuella katalogen. Om målkatalogen inte finns, skapas. Om det finns en katalog med samma namn på målplatsen, kombineras innehållet i de två katalogerna. Du kan ange ett nytt namn för katalogen under åtgärden.       När du kopierar filer i en katalog kan undantag uppkomma som orsakas av en viss fil. När sådana undantag utlöses, de konsolideras i en enda undantag vars `Data` egenskap innehåller poster i form av ett <xref:System.Collections.IDictionary>där sökvägen för filen eller katalogen är nyckeln och specifika Undantagsmeddelandet finns i motsvarande värde.</xref:System.Collections.IDictionary> Använd `For…Each` att räkna upp genom posterna.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyDirectory` metoden.      | Att | Se |   |--------|---------|   | Kopiera en katalog | [Så här: kopiera en katalog till en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/88ad980f-7c55-41f5-ae9e-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Katalogen som ska kopieras."
    - id: destinationDirectoryName
      type: System.String
      description: "Den plats där katalogen ska kopieras."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>eller <code>sourceDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Källkatalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Källsökväg och målsökväg är samma."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn på mappen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En målfilen finns men kan inte nås."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>anges till <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> om användaren avbryter åtgärden och går inte att kopiera en eller flera filer i katalogen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en katalog till en annan katalog."
  remarks: "Den här metoden kopieras innehållet i katalogen samt den aktuella katalogen. Om målkatalogen inte finns, skapas. Om det finns en katalog med samma namn på målplatsen, kombineras innehållet i de två katalogerna. Du kan ange ett nytt namn för katalogen under åtgärden.       När du kopierar filer i en katalog undantag kan uppkomma som orsakas av en viss fil, till exempel en fil som befintliga under en koppling medan `overwrite` är inställd på `False`. När sådana undantag utlöses, de konsolideras i en enda undantag vars `Data` egenskap innehåller poster i form av ett <xref:System.Collections.IDictionary>där sökvägen för filen eller katalogen är nyckeln och specifika Undantagsmeddelandet finns i motsvarande värde.</xref:System.Collections.IDictionary> Använd `For…Each` att räkna upp genom posterna.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyDirectory` metoden.      | Att | Se |   |--------|---------|   | Kopiera en katalog | [Så här: kopiera en katalog till en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/029fa5e0-f9d2-4d2b-ae58-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Katalogen som ska kopieras."
    - id: destinationDirectoryName
      type: System.String
      description: "Den plats där katalogen ska kopieras."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att skriva över befintliga filer. Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>eller <code>sourceDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Källkatalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Källsökväg och målsökväg är samma."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn på mappen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En målfilen finns men kan inte nås."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en katalog till en annan katalog."
  remarks: "Den här metoden kopieras innehållet i katalogen samt den aktuella katalogen. Om målkatalogen inte finns, skapas. Om det finns en katalog med samma namn på målplatsen, kombineras innehållet i de två katalogerna. Du kan ange ett nytt namn för katalogen under åtgärden.       När du kopierar filer i en katalog kan undantag uppkomma som orsakas av en viss fil. När sådana undantag utlöses, de konsolideras i en enda undantag vars `Data` egenskap innehåller poster i form av ett <xref:System.Collections.IDictionary>där sökvägen för filen eller katalogen är nyckeln och specifika Undantagsmeddelandet finns i motsvarande värde.</xref:System.Collections.IDictionary> Använd `For…Each` att räkna upp genom posterna.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyDirectory` metoden.      | Att | Se |   |--------|---------|   | Kopiera en katalog | [Så här: kopiera en katalog till en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/045c3090-625f-4707-88c2-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Katalogen som ska kopieras."
    - id: destinationDirectoryName
      type: System.String
      description: "Den plats där katalogen ska kopieras."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger vilka ska göra om användaren klickar på **Avbryt** under åtgärden. Standardvärdet är <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>eller <code>sourceDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Källkatalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Källsökväg och målsökväg är samma."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn på mappen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "En målfilen finns men kan inte nås."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>anges till <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> om användaren avbryter åtgärden och går inte att kopiera en eller flera filer i katalogen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en fil till en ny plats."
  remarks: "`CopyFile`bevaras inte ACE: er (åtkomstkontrollposter). Den nya filen ärver standard ACE: er från katalogen där den skapas.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyFile` metoden.      | Att | Se |   |--------|---------|   | Kopiera en fil i samma katalog. | [Så här: skapa en kopia av en fil i samma katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil till en annan katalog. | [Så här: skapa en kopia av en fil i en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Den fil som ska kopieras."
    - id: destinationFileName
      type: System.String
      description: "Den plats där filen ska kopieras."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>innehåller information om sökvägen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>eller <code>sourceFileName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "En fil i målkatalogen med samma namn används."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en fil till en ny plats."
  remarks: "`CopyFile`bevaras inte ACE: er (åtkomstkontrollposter). Den nya filen ärver standard ACE: er från katalogen där den skapas.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyFile` metoden.      | Att | Se |   |--------|---------|   | Kopiera en fil i samma katalog. | [Så här: skapa en kopia av en fil i samma katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil till en annan katalog. | [Så här: skapa en kopia av en fil i en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Den fil som ska kopieras."
    - id: destinationFileName
      type: System.String
      description: "Den plats där filen ska kopieras."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>innehåller information om sökvägen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>eller <code>sourceFileName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målfilen finns och <code> overwrite </code> är inställd på <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en fil till en ny plats."
  remarks: "`CopyFile`bevaras inte ACE: er (åtkomstkontrollposter). Den nya filen ärver standard ACE: er från katalogen där den skapas.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyFile` metoden.      | Att | Se |   |--------|---------|   | Kopiera en fil i samma katalog. | [Så här: skapa en kopia av en fil i samma katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil till en annan katalog. | [Så här: skapa en kopia av en fil i en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Den fil som ska kopieras."
    - id: destinationFileName
      type: System.String
      description: "Den plats där filen ska kopieras."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>om befintliga filer ska skrivas över; Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>innehåller information om sökvägen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>eller <code>sourceFileName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målfilen finns och <code> overwrite </code> är inställd på <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Kopierar en fil till en ny plats."
  remarks: "`CopyFile`bevaras inte ACE: er (åtkomstkontrollposter). Den nya filen ärver standard ACE: er från katalogen där den skapas.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CopyFile` metoden.      | Att | Se |   |--------|---------|   | Kopiera en fil i samma katalog. | [Så här: skapa en kopia av en fil i samma katalog](~/add/includes/ajax-current-ext-md.md)|   | Kopiera en fil till en annan katalog. | [Så här: skapa en kopia av en fil i en annan katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Den fil som ska kopieras."
    - id: destinationFileName
      type: System.String
      description: "Den plats där filen ska kopieras."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger vilka ska göra om användaren klickar på **Avbryt** under åtgärden. Standardvärdet är <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>innehåller information om sökvägen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>eller <code>sourceFileName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målfilen finns och <code> overwrite </code> är inställd på <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>anges till <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, och åtgärden har avbrutits av användaren eller ett okänt i/o-fel inträffar."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Skapar en katalog."
  remarks: "Inget undantag genereras om katalogen redan finns.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.CreateDirectory` metoden.      | Att | Se |   |--------|---------|   | Skapa en katalog | [Så här: skapa en katalog](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/23416b68-c5ce-4c96-b164-_1.vb)]"
  syntax:
    content: public void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Namn och plats."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Katalognamnet är felaktigt. Till exempel innehåller ogiltiga tecken eller är endast blanksteg."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Katalognamnet är för långt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Katalognamnet är endast ett kolon (:)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den överordnade katalogen i katalogen som ska skapas är skrivskyddad"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren har inte behörighet att skapa katalogen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Hämtar eller anger den aktuella katalogen."
  remarks: '`CurrentDirectory`är en systemtäckande miljövariabel.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_2.vb)]"
  syntax:
    content: public string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "Den aktuella katalogen för i/o-filåtgärder."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Sökvägen är inte giltig."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en katalog."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska tas bort."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "Anger vad som ska göras när en katalog som ska tas bort innehåller filer eller kataloger. Standardvärdet är <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen är en sträng med längden noll, är felaktig, innehåller bara blanksteg eller innehåller ogiltiga tecken (inklusive jokertecken). Sökvägen är en sökväg (startar med \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte eller är en fil."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "En fil i katalogen eller underkatalog används."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Katalognamnet innehåller ett kolon (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Om användaren avbryter åtgärden eller katalogen kan inte tas bort."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en katalog."
  remarks: "Den `showUI` och `recycle` parametrar stöds inte i program som inte användaren interaktiv, till exempel Windows-tjänster."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska tas bort."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Anger huruvida den borttagna filen ska skickas till den **Papperskorgen**. Standardvärdet är <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen är en sträng med längden noll, är felaktig, innehåller bara blanksteg eller innehåller ogiltiga tecken (inklusive jokertecken). Sökvägen är en sökväg (startar med \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte eller är en fil."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "En fil i katalogen eller underkatalog används."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Katalognamnet innehåller ett kolon (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Om användaren avbryter åtgärden eller katalogen kan inte tas bort."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en katalog."
  remarks: "Den `showUI`, `recycle`, och `onUserCancel` parametrar stöds inte i program som inte användaren interaktiv, till exempel Windows-tjänster."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska tas bort."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Anger huruvida den borttagna filen ska skickas till den **Papperskorgen**. Standardvärdet är <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger om du vill utlösa ett undantag om användaren klickar på **Avbryt**."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen är en sträng med längden noll, är felaktig, innehåller bara blanksteg eller innehåller ogiltiga tecken (inklusive jokertecken). Sökvägen är en sökväg (startar med \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte eller är en fil."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "En fil i katalogen eller underkatalog används."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Katalognamnet innehåller ett kolon (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar nödvändig behörighet."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Om användaren avbryter åtgärden eller katalogen kan inte tas bort."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en fil."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.DeleteFile` metoden.      | Att | Se |   |--------|---------|   | Ta bort en fil | [Så här: ta bort en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_3.vb)]"
  syntax:
    content: public void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen som ska tas bort."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. den har en avslutande snedstreck där en fil måste anges. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren har inte behörighet att ta bort filen eller filen är skrivskyddad."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en fil."
  remarks: "Den `showUI` och `recycle` parametrar stöds inte i program som inte användaren interaktiv, till exempel Windows-tjänster.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.DeleteFile` metoden.      | Att | Se |   |--------|---------|   | Ta bort en fil | [Så här: ta bort en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen som ska tas bort."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Om den borttagna filen ska skickas till den **Papperskorgen**. Standardvärdet är <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. den har en avslutande snedstreck där en fil måste anges. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren har inte behörighet att ta bort filen eller filen är skrivskyddad."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Tar bort en fil."
  remarks: "Den `showUI`, `recycle`, och `onUserCancel` parametrar stöds inte i program som inte användaren interaktiv, till exempel Windows-tjänster.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.DeleteFile` metoden.      | Att | Se |   |--------|---------|   | Ta bort en fil | [Så här: ta bort en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen som ska tas bort."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Om den borttagna filen ska skickas till den **Papperskorgen**. Standardvärdet är <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger huruvida ett undantag när användaren avbryter åtgärden. Standardvärdet är <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. den har en avslutande snedstreck där en fil måste anges. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren har inte behörighet att ta bort filen eller filen är skrivskyddad."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Användaren avbröt åtgärden och <code> onUserCancel </code> är inställd på <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> om den angivna katalogen finns."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/7dd70ea7-fac8-4509-8a5b-_1.vb)]"
  syntax:
    content: public bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Sökvägen till katalogen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Om katalogen finns; Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  id: Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en skrivskyddad samling av alla tillgängliga enhetsnamn."
  remarks: "Den här egenskapen returnerar alla logiska enheter."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._61_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "En skrivskyddad samling av alla enheter som <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objekt."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> om den angivna filen finns."
  remarks: "Om programmet inte har tillräcklig behörighet för att läsa den angivna filen i `FileExists` metoden returnerar `False`, oavsett förekomsten av path; metoden inte utlösa ett undantag."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._238_1.vb)]"
  syntax:
    content: public bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen."
    return:
      type: System.Boolean
      description: "Returnerar <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> om filen finns; annars returnerar den här metoden <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Namnet på fil som slutar med ett omvänt snedstreck (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en skrivskyddad samling med strängar som motsvarar namnen på de filer som innehåller den angivna texten."
  remarks: "Om några filer som matchar det angivna mönstret hittas returneras en tom samling.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.FindInFiles` metoden.      | Att | Se |   |--------|---------|   | Söka i en katalog för filer som innehåller en specifik sträng | [Genomgång: hantera filer och kataloger i Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/0411284c-97f6-421f-9cd5-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska sökas igenom."
    - id: containsText
      type: System.String
      description: "Söktexten."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Om sökningen ska vara skiftlägeskänsliga; Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Om du vill inkludera undermappar. Standardvärdet är <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling av namn på filer som innehåller den angivna texten..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den angivna katalogen pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den angivna sökvägen innehåller ett kolon (:) eller har ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en skrivskyddad samling med strängar som motsvarar namnen på de filer som innehåller den angivna texten."
  remarks: "Om några filer som matchar det angivna mönstret hittas returneras en tom samling.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.FindInFiles` metoden.      | Att | Se |   |--------|---------|   | Söka i en katalog för filer som innehåller en specifik sträng | [Genomgång: hantera filer och kataloger i Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/cb69d87f-5cdb-4aa7-8869-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska sökas igenom."
    - id: containsText
      type: System.String
      description: "Söktexten."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Om sökningen ska vara skiftlägeskänsliga; Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Om du vill inkludera undermappar. Standardvärdet är <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: fileWildcards
      type: System.String[]
      description: "Mönster som ska matchas."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling av namn på filer som innehåller den angivna texten..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den angivna katalogen pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Den angivna sökvägen innehåller ett kolon (:) eller har ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en mängd med strängar som representerar sökvägsnamn för underkataloger i en katalog."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.GetDirectories` metoden.      | Att | Se |   |--------|---------|   | Visa en lista med underkataloger med ett specifikt mönster | [Så här: hitta underkataloger med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._12_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Namn och sökväg till katalogen."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling med sökvägsnamn för underkataloger i den angivna katalogen..."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den angivna katalogen pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en mängd med strängar som representerar sökvägsnamn för underkataloger i en katalog."
  remarks: "Du kan använda den `wildcards` parametern för att ange ett specifikt mönster. Om du vill inkludera innehållet i underkataloger i sökningen på `searchType` parameter till `SearchAllSubDirectories`.       Om inga kataloger som matchar det angivna mönstret hittas returneras en tom samling.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.GetDirectories` metoden.      | Att | Se |   |--------|---------|   | Visa en lista med underkataloger med ett specifikt mönster | [Så här: hitta underkataloger med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/ed44a5f7-321c-4c72-83a6-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Namn och sökväg till katalogen."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Om du vill inkludera undermappar. Standardvärdet är <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Mönster för att matcha namn."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling med sökvägsnamn för underkataloger i den angivna katalogen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "En eller flera av de angivna jokertecken är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, en tom sträng eller innehåller endast bestå av blanksteg."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Den angivna katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Den angivna katalogen pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> objekt för den angivna sökvägen."
  remarks: "Om katalogen inte finns genereras ett undantag inte förrän den första gången en egenskap den <xref:System.IO.DirectoryInfo>komma åt objektet.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/5efdf299-cb73-46cc-a9c9-_1.vb)]"
  syntax:
    content: public System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Sökväg till katalogen."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>objekt för den angivna sökvägen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Katalogsökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objekt för den angivna enheten."
  remarks: "Den <xref:System.IO.DriveInfo>klassen modeller en enhet och ger metoder och egenskaper för att fråga efter enhetsinformationen.</xref:System.IO.DriveInfo> Använd <xref:System.IO.DriveInfo>att avgöra vilka enheter är tillgängliga och vilken typ av enheter som de är.</xref:System.IO.DriveInfo> Du kan också fråga egenskapen för att avgöra kapaciteten och ledigt utrymme på enheten."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._61_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "Enheten undersökas."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>objekt för den angivna enheten."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en <xref href=&quot;System.IO.FileInfo&quot;> </xref> objekt för den angivna filen."
  remarks: "Ett undantagsfel utlöses inte om filen inte finns; i stället genereras det första gången kan nås av objektets egenskaper.       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.GetFileInfo` metoden.      | Att | Se |   |--------|---------|   | Fastställa en filens namn och sökväg | [Så här: parsa sökvägar](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>objekt för den angivna filen"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökvägen är felaktig. Till exempel innehåller ogiltiga tecken eller är endast blanksteg. Filnamnet har ett avslutande snedstreck."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Sökvägen innehåller ett kolon mitt i strängen."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är för lång."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar behörighet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar en ACL (access control list) åtkomst till filen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en skrivskyddad samling med strängar som motsvarar namnen på filer i en katalog."
  remarks: "Om några filer som matchar det angivna mönstret hittas returneras en tom samling.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.GetFiles` metoden.      | Att | Se |   |--------|---------|   | Hämta insamlingen av filer i en katalog | [Så här: hämta insamlingen av filer i en katalog](~/add/includes/ajax-current-ext-md.md)|   | Hitta filer med ett specifikt mönster i en katalog | [Så här: hitta filer med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska sökas igenom."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling av filnamn från den angivna katalogen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen för att söka efter finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar en skrivskyddad samling med strängar som motsvarar namnen på filer i en katalog."
  remarks: "Om några filer som matchar det angivna mönstret hittas returneras en tom samling.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.GetFiles` metoden.      | Att | Se |   |--------|---------|   | Hämta insamlingen av filer i en katalog | [Så här: hämta insamlingen av filer i en katalog](~/add/includes/ajax-current-ext-md.md)|   | Hitta filer med ett specifikt mönster i en katalog | [Så här: hitta filer med ett specifikt mönster](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Katalogen som ska sökas igenom."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Om du vill inkludera undermappar. Standardvärdet är <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Mönster som ska matchas."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Skrivskyddad samling av filnamn från den angivna katalogen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen för att söka efter finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>pekar på en befintlig fil."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Parsar filnamnet utanför den angivna sökvägen."
  remarks: "Detta är en sträng åtgärd; den `FileSystem` kontrolleras inte.       Den `GetName` metoden ignorerar snedstreck sker i slutet av sökvägen.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.GetFileName` metoden.      | Att | Se |   |--------|---------|   | Parsa en sökväg till filen | [Så här: parsa sökvägar](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._127_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "Obligatoriskt. Sökvägen till parsas. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "Filnamnet från den angivna sökvägen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar den överordnade sökvägen för den angivna sökvägen."
  remarks: "Detta är en sträng åtgärd; filsystemet kontrolleras inte."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._166_1.vb)]"
  syntax:
    content: public string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Sökvägen till undersökas."
    return:
      type: System.String
      description: "Den överordnade sökvägen för den angivna sökvägen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sökväg saknar sökväg till överordnad eftersom den är en rotsökväg."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Skapar ett unikt namngivna noll byte temporär fil på disken och returnerar den fullständiga sökvägen till filen."
  remarks: "Den här metoden kan användas för att skapa en temporär fil."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._60_1.vb)]"
  syntax:
    content: public string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>med den fullständiga sökvägen till den temporära filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en katalog från en plats till en annan."
  remarks: "Om ett försök görs att flytta en katalog i en katalog som inte finns, skapas mål-strukturen."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Sökvägen till katalogen som ska flyttas."
    - id: destinationDirectoryName
      type: System.String
      description: "Sökvägen till den katalog som källkatalogen flyttas."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>eller <code>destinationDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Källan är en rotkatalog eller källsökvägen och målsökvägen är samma."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en katalog från en plats till en annan."
  remarks: "Om ett försök görs att flytta en katalog i en katalog som inte finns, skapas mål-strukturen."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Sökvägen till katalogen som ska flyttas."
    - id: destinationDirectoryName
      type: System.String
      description: "Sökvägen till den katalog som källkatalogen flyttas."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>eller <code>destinationDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målkatalogen finns redan och o<code> verwrite </code> är inställd på <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en katalog från en plats till en annan."
  remarks: "Om ett försök görs att flytta en katalog i en katalog som inte finns, skapas mål-strukturen."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Sökvägen till katalogen som ska flyttas."
    - id: destinationDirectoryName
      type: System.String
      description: "Sökvägen till den katalog som källkatalogen flyttas."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>om befintliga kataloger ska skrivas över; Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>eller <code>destinationDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Målkatalogen finns redan och o<code> verwrite </code> är inställd på <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en katalog från en plats till en annan."
  remarks: "Om ett försök görs att flytta en katalog i en katalog som inte finns, skapas mål-strukturen."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Sökvägen till katalogen som ska flyttas."
    - id: destinationDirectoryName
      type: System.String
      description: "Sökvägen till den katalog som källkatalogen flyttas."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger huruvida ett undantag när användaren avbryter åtgärden. Standardvärdet är <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>eller <code>destinationDirectoryName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>anges till <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> och går inte att kopiera en underkatalog till filen."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>anges till <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, och om användaren avbryter åtgärden eller går inte att slutföra åtgärden."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är cyklisk."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en fil till en ny plats."
  remarks: "Om strukturen målet inte finns, skapas.       Den `MoveFile` metoden bevarar ACE: er (åtkomstkontrollposter) bara när du flyttar filen inom samma volym. Detta inkluderar ärvda åtkomstkontrollposter som blir direkt ACE: er när du flyttar (direct ACE åsidosätter över ärvda ACE: er). Om en fil flyttas mellan volymer, kopieras inte ACE: er.       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.MoveFile` metoden.      | Att | Se |   |--------|---------|   | Flytta en fil | [Hur man: flyttar en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Sökväg till filen som ska flyttas."
    - id: destinationFileName
      type: System.String
      description: "Sökvägen till den katalog som filen ska flyttas."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en fil till en ny plats."
  remarks: "Om strukturen målet inte finns, skapas.       Den `MoveFile` metoden bevarar ACE: er (åtkomstkontrollposter) bara när du flyttar filen inom samma volym. Detta inkluderar ärvda åtkomstkontrollposter som blir direkt ACE: er när du flyttar (direct ACE åsidosätter över ärvda ACE: er). Om en fil flyttas mellan volymer, kopieras inte ACE: er.       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.MoveFile` metoden.      | Att | Se |   |--------|---------|   | Flytta en fil | [Hur man: flyttar en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Sökväg till filen som ska flyttas."
    - id: destinationFileName
      type: System.String
      description: "Sökvägen till den katalog som filen ska flyttas."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en fil till en ny plats."
  remarks: "Om strukturen målet inte finns, skapas.       Den `MoveFile` metoden bevarar ACE: er (åtkomstkontrollposter) bara när du flyttar filen inom samma volym. Detta inkluderar ärvda åtkomstkontrollposter som blir direkt ACE: er när du flyttar (direct ACE åsidosätter över ärvda ACE: er). Om en fil flyttas mellan volymer, kopieras inte ACE: er.       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.MoveFile` metoden.      | Att | Se |   |--------|---------|   | Flytta en fil | [Hur man: flyttar en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Sökväg till filen som ska flyttas."
    - id: destinationFileName
      type: System.String
      description: "Sökvägen till den katalog som filen ska flyttas."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att skriva över befintliga filer. Annars <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Flyttar en fil till en ny plats."
  remarks: "Om strukturen målet inte finns, skapas.       Den `MoveFile` metoden bevarar ACE: er (åtkomstkontrollposter) bara när du flyttar filen inom samma volym. Detta inkluderar ärvda åtkomstkontrollposter som blir direkt ACE: er när du flyttar (direct ACE åsidosätter över ärvda ACE: er). Om en fil flyttas mellan volymer, kopieras inte ACE: er.       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.MoveFile` metoden.      | Att | Se |   |--------|---------|   | Flytta en fil | [Hur man: flyttar en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Sökväg till filen som ska flyttas."
    - id: destinationFileName
      type: System.String
      description: "Sökvägen till den katalog som filen ska flyttas."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Anger om du vill spåra visuellt åtgärdens status. Standardvärdet är <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Anger huruvida ett undantag när användaren avbryter åtgärden. Standardvärdet är <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Källfilen är ogiltig eller finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>anges till <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, och antingen har användaren avbröt åtgärden eller ett okänt i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Den <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metod kan du skapa en <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> -objektet, vilket ger ett sätt att enkelt och effektivt analysera strukturerade textfiler, till exempel loggar. Den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objekt som kan användas för att läsa avgränsade och fast bredd filer."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.OpenTextFieldParser` metoden.      | Att | Se |   |--------|---------|   | Läsa från en avgränsad textfil | [Så här: läsa från kommaavgränsade textfiler](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med fast bredd | [Så här: läsa från textfiler med fast bredd](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med flera olika format | [Så här: läsa från textfiler med flera olika format](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/5e21a8aa-3482-4e3a-9ad2-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "Filen öppnas med den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>att läsa den angivna filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "En rad kan inte parsas med det angivna formatet. Undantagsmeddelandet anger rad som orsakar undantagsfelet medan den <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>egenskapen tilldelas texten i raden.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Den <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metod kan du skapa en <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> -objektet, vilket ger ett sätt att enkelt och effektivt analysera strukturerade textfiler, till exempel loggar. Den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objekt som kan användas för att läsa avgränsade och fast bredd filer."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.OpenTextFieldParser` metoden.      | Att | Se |   |--------|---------|   | Läsa från en avgränsad textfil | [Så här: läsa från kommaavgränsade textfiler](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med fast bredd | [Så här: läsa från textfiler med fast bredd](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med flera olika format | [Så här: läsa från textfiler med flera olika format](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/3b0d773c-848f-4938-ac74-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "Filen öppnas med den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: fieldWidths
      type: System.Int32[]
      description: "Bredden på fälten."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>att läsa den angivna filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "En rad kan inte parsas med det angivna formatet. Undantagsmeddelandet anger rad som orsakar undantagsfelet medan den <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>egenskapen tilldelas texten i raden.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Den <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> metod kan du skapa en <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> -objektet, vilket ger ett sätt att enkelt och effektivt analysera strukturerade textfiler, till exempel loggar. Den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objekt som kan användas för att läsa avgränsade och fast bredd filer."
  remarks: "I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.OpenTextFieldParser` metoden.      | Att | Se |   |--------|---------|   | Läsa från en avgränsad textfil | [Så här: läsa från kommaavgränsade textfiler](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med fast bredd | [Så här: läsa från textfiler med fast bredd](~/add/includes/ajax-current-ext-md.md)|   | Läsa från en textfil med flera olika format | [Så här: läsa från textfiler med flera olika format](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/e7a2cbe1-d56b-4ce5-b088-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "Filen öppnas med den <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: delimiters
      type: System.String[]
      description: "Avgränsare för fält."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>att läsa den angivna filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "En rad kan inte parsas med det angivna formatet. Undantagsmeddelandet anger rad som orsakar undantagsfelet medan den <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>egenskapen tilldelas texten i raden.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Öppnar en <xref:System.IO.StreamReader>objekt för att läsa från en fil.</xref:System.IO.StreamReader>"
  remarks: "Endast textfiler kan läsas med <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.OpenTextFileReader` metoden.      | Att | Se |   |--------|---------|   | Öppna en fil med en <xref:System.IO.StreamReader>|[ Så här: läsa Text från filer med en StreamReader](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/90cca2c4-4b9b-4b82-b049-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "Filen som ska läsas."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objekt för att läsa från filen</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filnamnet som slutar med ett omvänt snedstreck (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Att det går inte hitta den angivna filen."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att läsa från filen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Öppnar en <xref:System.IO.StreamReader>objekt för att läsa från en fil.</xref:System.IO.StreamReader>"
  remarks: "Endast textfiler kan läsas med <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.OpenTextFileReader` metoden.      | Att | Se |   |--------|---------|   | Öppna en fil med en <xref:System.IO.StreamReader>|[ Så här: läsa Text från filer med en StreamReader](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/2b6a2b5b-b6e7-41de-a324-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Filen som ska läsas."
    - id: encoding
      type: System.Text.Encoding
      description: "Den teckenkodning som ska användas för innehållet i filen. Standardvärdet är ASCII."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objekt för att läsa från filen</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filnamnet som slutar med ett omvänt snedstreck (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Att det går inte hitta den angivna filen."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att läsa från filen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Öppnar en <xref:System.IO.StreamWriter>objekt att skriva till den angivna filen.</xref:System.IO.StreamWriter>"
  remarks: "Den `OpenTextFileWriter` metoden öppnas och initierar en dataström för en fil och returnerar sedan den <xref:System.IO.StreamWriter>objekt för dataströmmen.</xref:System.IO.StreamWriter> Du kan skriva till ånga så många gånger som behövs och stänga den när du är klar.      > [!NOTE] > Måste du anropa den <xref:System.IO.StreamWriter.Close%2A>metoden på den <xref:System.IO.StreamWriter>objekt för att se till att alla data är skriven till en underliggande dataström.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Om du skriver endast några strängar till en fil kan det vara enklare att använda den <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>metoden.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.OpenTextFileWriter` metoden.      | Att | Se |   |--------|---------|   | Skriva text till en fil med en `StreamWriter` | [så här: skriva Text till filer med en StreamWriter](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/cbe9d22d-ebc5-4087-a635-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Filen att skrivas till."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att lägga till innehållet i filen. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> att skriva över innehållet i filen. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objekt för att skriva till den angivna filen.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filnamnet avslutas med ett blanksteg."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Öppnar en <xref:System.IO.StreamWriter>att skriva till den angivna filen.</xref:System.IO.StreamWriter>"
  remarks: "Den `OpenTextFileWriter` metoden öppnas och initierar en dataström för en fil och returnerar sedan den <xref:System.IO.StreamWriter>objekt för dataströmmen.</xref:System.IO.StreamWriter> Du kan skriva till ånga så många gånger som behövs och stänga den när du är klar.      > [!NOTE] > Måste du anropa den <xref:System.IO.StreamWriter.Close%2A>metoden på den <xref:System.IO.StreamWriter>objekt för att se till att alla data är skriven till en underliggande dataström.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Om du skriver endast några strängar till en fil kan det vara enklare att använda den <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>metoden.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.OpenTextFileWriter` metoden.      | Att | Se |   |--------|---------|   | Skriva text till en fil med en `StreamWriter` | [så här: skriva Text till filer med en StreamWriter](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/829b6f81-31e4-45e8-93df-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Filen att skrivas till."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att lägga till innehållet i filen. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> att skriva över innehållet i filen. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Kodning som ska användas vid skrivning till filen. Standardvärdet är ASCII."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objekt för att skriva till den angivna filen.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Filnamnet avslutas med ett blanksteg."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar innehållet i en fil som en bytematris."
  remarks: "Den `ReadAllBytes` metod för den `My.Computer.FileSystem` objektet kan du läsa från en binär fil. Innehållet i filen returneras som en byte-matris.       Gör inte beslut om innehållet i filen baserat på namnet på filen. Exempelvis kanske inte filen Form1.vb en källfil i Visual Basic. Kontrollera alla indata innan data i ditt program.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.ReadAllBytes` metoden.      | Att | Se |   |--------|---------|   | Läsa från en binär fil | [Så här: läsa från binära filer](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._93_1.vb)]"
  syntax:
    content: public byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "Filen som ska läsas."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>matris som innehåller innehållet i filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar innehållet i en textfil som en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "Den `ReadAllText` metod för den `My.Computer.FileSystem` objektet kan du läsa från en textfil. Innehållet i filen returneras som en sträng.       Filkodning kan vara angivna om innehållet i filen finns i till exempel ASCII- eller UTF-8-kodning. Om du läser från en fil med utökade tecken, måste du ange med hjälp av en annan överlagring för metoden ReadAllText Filkodning.       Gör inte beslut om innehållet i filen baserat på namnet på filen. Exempelvis kanske inte filen Form1.vb en källfil i Visual Basic. Kontrollera alla indata innan data i ditt program.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.ReadAllText` metoden.      | Att | Se |   |--------|---------|   | Läsa från en textfil | [Så här: läsa från textfiler](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_2.vb)]"
  syntax:
    content: public string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen som ska läsas."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>med innehållet i filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returnerar innehållet i en textfil som en <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "Den `ReadAllText` metod för den `My.Computer.FileSystem` objektet kan du läsa från en textfil. Innehållet i filen returneras som en sträng.       Filkodning kan vara angivna om innehållet i filen finns i till exempel ASCII- eller UTF-8-kodning. Om du läser från en fil med utökade tecken, måste du ange Filkodning.       Gör inte beslut om innehållet i filen baserat på namnet på filen. Exempelvis kanske inte filen Form1.vb en källfil i Visual Basic. Kontrollera alla indata innan data i ditt program.       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.ReadAllText` metoden.      | Att | Se |   |--------|---------|   | Läsa från en textfil | [Så här: läsa från textfiler](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_2.vb)]"
  syntax:
    content: public string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Namn och sökväg till filen som ska läsas."
    - id: encoding
      type: System.Text.Encoding
      description: "Tecknet kodning som ska användas vid läsning av filen. Standardvärdet är UTF-8."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>med innehållet i filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Byter namn på en katalog."
  remarks: "Den här metoden kan inte användas för att flytta en katalog. Använd den `MoveDirectory` metoden för att flytta och byta namn på katalogen."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/2ed39ac4-a333-4d3c-94f5-_1.vb)]"
  syntax:
    content: public void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "Sökvägen och namnet på katalogen ändras."
    - id: newName
      type: System.String
      description: "Nytt namn för katalogen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>innehåller information om sökvägen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - eller - <code>newName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Katalogen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det finns en befintlig fil eller katalog med namnet som angetts i <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än 248 tecken."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Byter namn på en fil."
  remarks: "Den här metoden kan inte användas för att flytta en fil. Använd den <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>metoden för att flytta och byta namn på filen.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.RenameFile` metoden.      | Att | Se |   |--------|---------|   | Byt namn på en fil | [Så här: Byt namn på en fil](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/b921ac51-10eb-406b-bf32-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "Filen ändras."
    - id: newName
      type: System.String
      description: "Nytt namn på filen."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>innehåller information om sökvägen eller slutar med ett omvänt snedstreck (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - eller - <code>newName</code> är <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> eller en tom sträng."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Det finns en befintlig fil eller katalog med namnet som angetts i <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Användaren saknar nödvändig behörighet."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  id: SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Hämtar ett objekt som innehåller egenskaper för att komma åt ofta referera till kataloger."
  remarks: ''
  example:
  - "This example returns the file path for the user's Desktop directory and displays it.  \n  \n [!code-vb[VbVbcnMyFileSystem#80](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._102_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy SpecialDirectories { get; }
    return:
      type: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
      description: "Den här egenskapen returnerar den <xref href=&quot;Microsoft.VisualBasic.FileIO.SpecialDirectories&quot;> </xref> för datorn."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Skriver data till en binär fil."
  remarks: "Om den angivna sökvägen, filnamnet, exklusive inte är giltigt, en <xref:System.IO.DirectoryNotFoundException>undantag.</xref:System.IO.DirectoryNotFoundException> Om sökvägen är giltig men filen inte finns, skapas filen.      > [!NOTE] > Den `WriteAllBytes` metoden öppnar en fil, skriver till den och sedan stängs den. Kod som använder den `WriteAllBytes` metoden är enklare än kod som använder en <xref:System.IO.BinaryWriter>objektet.</xref:System.IO.BinaryWriter> Men om du lägger till data till en fil med en loop en <xref:System.IO.BinaryWriter>objekt kan ge bättre prestanda eftersom du behöver bara öppna och stäng filen en gång.</xref:System.IO.BinaryWriter>       I följande tabell visas ett exempel på en aktivitet som involverar den `My.Computer.FileSystem.WriteAllBytes` metoden.      | Att | Se |   |--------|---------|   | Skriva till en binär fil | [Så här: skriva till binära filer](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/b345f967-5fa3-438e-bb10-_1.vb)]"
  syntax:
    content: public void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Sökvägen och namnet på den fil som ska skrivas till."
    - id: data
      type: System.Byte[]
      description: "Data skrivs till filen."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att lägga till filinnehållet; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> att skriva filen. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Skriver text till en fil."
  remarks: "UTF-8-kodning används för att skriva till filen. Använd en annan överlagring för metoden WriteAllText om du vill ange en annan kodning.       Om den angivna filen inte finns, skapas.       Om den angivna kodningen inte matchar den befintliga kodningen för filen, ignoreras angiven kodning.      > [!NOTE] > Den `WriteAllText` metoden öppnar en fil, skriver till den och sedan stängs den. Kod som använder den `WriteAllText` metoden är enklare än kod som använder en <xref:System.IO.StreamWriter>objektet.</xref:System.IO.StreamWriter> Men om du lägger till strängar till en fil med hjälp av en loop en <xref:System.IO.StreamWriter>objekt kan ge bättre prestanda eftersom du behöver bara öppna och stäng filen en gång.</xref:System.IO.StreamWriter> Mer information finns i <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>metod.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.WriteAllText` metoden.      | Att | Se |   |--------|---------|   | Skriv text till en fil | [Så här: skriva Text till filer](~/add/includes/ajax-current-ext-md.md)|   | Lägg till text i en fil | [Så här: lägga till textfiler](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Filen att skrivas till."
    - id: text
      type: System.String
      description: "Text som ska skrivas till filen."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att lägga till innehållet i filen. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> att skriva över innehållet i filen. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Skriver text till en fil."
  remarks: "Om den angivna filen inte finns, skapas.       Om den angivna kodningen inte matchar den befintliga kodningen för filen, ignoreras angiven kodning.      > [!NOTE] > Den `WriteAllText` metoden öppnar en fil, skriver till den och sedan stängs den. Kod som använder den `WriteAllText` metoden är enklare än kod som använder en <xref:System.IO.StreamWriter>objektet.</xref:System.IO.StreamWriter> Men om du lägger till strängar till en fil med hjälp av en loop en <xref:System.IO.StreamWriter>objekt kan ge bättre prestanda eftersom du behöver bara öppna och stäng filen en gång.</xref:System.IO.StreamWriter> Mer information finns i <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>metod.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       I följande tabell visas exempel på uppgifter som rör den `My.Computer.FileSystem.WriteAllText` metoden.      | Att | Se |   |--------|---------|   | Skriv text till en fil | [Så här: skriva Text till filer](~/add/includes/ajax-current-ext-md.md)|   | Lägg till text i en fil | [Så här: lägga till textfiler](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Filen att skrivas till."
    - id: text
      type: System.String
      description: "Text som ska skrivas till filen."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>att lägga till innehållet i filen. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> att skriva över innehållet i filen. Standardvärdet är <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Vilken kodning som ska användas vid skrivning till filen. Standardvärdet är UTF-8."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Sökvägen är inte giltig för något av följande skäl: det är en sträng med längden noll; den innehåller bara blanksteg; den innehåller ogiltiga tecken. eller så är det en sökväg (startar med \\ \\.\\), slutar med ett blanksteg.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Filen finns inte."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Filen används av en annan process eller ett i/o-fel uppstår."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Sökvägen är längre än den systemdefinierade maximala längden."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett namn för filen eller katalogen i sökvägen innehåller ett kolon (:) eller i ett ogiltigt format."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att skriva strängen till buffert."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Användaren saknar tillräcklig behörighet för att visa sökvägen."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
  parent: Microsoft.VisualBasic.MyServices
  isExternal: false
  name: SpecialDirectoriesProxy
  nameWithType: SpecialDirectoriesProxy
  fullName: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath
  nameWithType: FileSystemProxy.CombinePath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystemProxy.CopyDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile
  nameWithType: FileSystemProxy.CopyFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystemProxy.CreateDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystemProxy.DeleteDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystemProxy.DeleteFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystemProxy.DirectoryExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists
  nameWithType: FileSystemProxy.FileExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystemProxy.FindInFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystemProxy.GetDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystemProxy.GetDirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystemProxy.GetDriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystemProxy.GetFileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles
  nameWithType: FileSystemProxy.GetFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName
  nameWithType: FileSystemProxy.GetName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystemProxy.GetParentPath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystemProxy.GetTempFileName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystemProxy.MoveDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile
  nameWithType: FileSystemProxy.MoveFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystemProxy.OpenTextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystemProxy.OpenTextFileReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystemProxy.OpenTextFileWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystemProxy.ReadAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystemProxy.ReadAllText
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystemProxy.RenameDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile
  nameWithType: FileSystemProxy.RenameFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystemProxy.WriteAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystemProxy.WriteAllText
