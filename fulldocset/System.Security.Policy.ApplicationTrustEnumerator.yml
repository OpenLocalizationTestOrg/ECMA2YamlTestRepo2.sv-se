### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Representerar uppräknaren för <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objekt i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "Uppräknare tillåter endast läsning av data i samlingen. Uppräknare kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. Den <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>metoden medför också uppräknaren tillbaka till den här positionen.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> AT detta position, anropar den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen genererar ett undantag.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> Därför måste du anropa den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metod för att gå vidare uppräknaren till det första elementet i mängden innan du läser värdet för den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>eller <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>kallas.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>Anger <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>till nästa element.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Efter slutet av samlingen skickas uppräknaren är placerad efter det sista elementet i mängden och anropar <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>genererar ett undantag.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Så här återställer du <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>till det första elementet i mängden anropa <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>följt av ett anrop till <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar i samlingen, till exempel lägga till, ändra, eller ta bort element uppräknaren är blir ogiltig och nästa anrop till <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>eller <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>utlöser ett <xref:System.InvalidOperationException>undantag.</xref:System.InvalidOperationException> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Om samlingen har ändrats mellan anropar <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>och <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>returnerar elementet som den har angetts, även om uppräknaren redan är ogiltiga.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar ändå ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hämtar aktuellt <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objekt i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "När uppräknaren har skapats kan pekar den inte till ett objekt så att den aktuella egenskapen är inte giltigt och genereras ett undantagsfel om den används. Du måste först anropa den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metod för att placera markören på det första objektet i samlingen.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Flera anrop till aktuella med inga mellanliggande anrop till <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>returneras samma <xref:System.Security.Policy.ApplicationTrust>objektet.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Flyttar till nästa element i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "Metoden MoveNext returnerar omedelbart `false` om det finns inga objekt i samlingen.       MoveNext returnerar `true` förrän den har nått slutet av samlingen. Returneras sedan `false` för varje anrop. Men när MoveNext har returnerat `false`, inte att komma åt den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen genereras ett undantagsfel.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       När den skapas en Uppräknaren står före först <xref:System.Security.Policy.ApplicationTrust>objekt i samlingen och det första anropet till MoveNext placerar uppräknaren vid det första objektet i samlingen.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om uppräknaren har avancerade till nästa element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om uppräknaren har passerat slutet av samlingen."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Återställer uppräknaren till början av den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling."
  remarks: "En uppräknare flyttar i en endast-framåt-riktning. Använd den här metoden för att returnera uppräknaren till början av insamling av <xref:System.Security.Policy.ApplicationTrust>objekt.</xref:System.Security.Policy.ApplicationTrust>       Reset-metoden markören placeras vid det första objektet i samlingen. När Reset anropas, behöver du inte anropa den <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>metod för att flytta markören framåt till det första objektet.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Hämtar aktuellt <xref:System.Object>i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> samling.</xref:System.Object>"
  remarks: "Anropa inte den här metoden. Använd den <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>egenskapen i stället.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Aktuellt <xref:System.Object>i den <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
