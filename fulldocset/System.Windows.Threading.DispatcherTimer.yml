### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherTimer
  id: DispatcherTimer
  children:
  - System.Windows.Threading.DispatcherTimer.#ctor
  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)
  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)
  - System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)
  - System.Windows.Threading.DispatcherTimer.Dispatcher
  - System.Windows.Threading.DispatcherTimer.Interval
  - System.Windows.Threading.DispatcherTimer.IsEnabled
  - System.Windows.Threading.DispatcherTimer.Start
  - System.Windows.Threading.DispatcherTimer.Stop
  - System.Windows.Threading.DispatcherTimer.Tag
  - System.Windows.Threading.DispatcherTimer.Tick
  langs:
  - csharp
  name: DispatcherTimer
  nameWithType: DispatcherTimer
  fullName: System.Windows.Threading.DispatcherTimer
  type: Class
  summary: "En timer som är integrerat i den <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> kö som bearbetas på ett angivet tidsintervall och på en angiven prioritet."
  remarks: "DispatcherTimer reevaluated längst upp i varje <xref:System.Windows.Threading.Dispatcher>loop.</xref:System.Windows.Threading.Dispatcher>       Timers är inte säkert att köra exakt när tidsintervallet inträffar, men de är garanterat inte att köra innan tidsintervallet sker.  Detta beror på att DispatcherTimer operations placeras på den <xref:System.Windows.Threading.Dispatcher>kö som andra åtgärder.</xref:System.Windows.Threading.Dispatcher>  När DispatcherTimer-åtgärden körs är beroende av andra jobb i kön och deras prioriteter.       Om en <xref:System.Timers.Timer?displayProperty=fullName>används i en [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] program, vilket är som den <xref:System.Timers.Timer?displayProperty=fullName>körs på en annan tråd sedan [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] tråd.</xref:System.Timers.Timer?displayProperty=fullName> </xref:System.Timers.Timer?displayProperty=fullName>  För att komma åt objekt på den [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] tråd, är det nödvändigt att efter åtgärden på den <xref:System.Windows.Threading.Dispatcher>av den [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] tråd med hjälp av <xref:System.Windows.Threading.Dispatcher.Invoke%2A>eller <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> </xref:System.Windows.Threading.Dispatcher.Invoke%2A> </xref:System.Windows.Threading.Dispatcher> Skäl till att använda en DispatcherTimer motsats till en <xref:System.Timers.Timer?displayProperty=fullName>är som DispatcherTimer körs på samma tråd som den <xref:System.Windows.Threading.Dispatcher>och en <xref:System.Windows.Threading.DispatcherPriority>kan ställas in på DispatcherTimer.</xref:System.Windows.Threading.DispatcherPriority> </xref:System.Windows.Threading.Dispatcher> </xref:System.Timers.Timer?displayProperty=fullName>       En DispatcherTimer behåller objektets alive när objektets metoder som är bundna till timern.      <a name=&quot;xamlTextUsage_DispatcherTimer&quot;></a>## XAML Text användning"
  example:
  - "The following example creates a DispatcherTimer that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.  \n  \n A DispatcherTimer object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]  \n  \n The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]"
  syntax:
    content: public class DispatcherTimer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: DispatcherTimer()
  nameWithType: DispatcherTimer.DispatcherTimer()
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref> klass."
  remarks: '<xref:System.Windows.Threading.DispatcherTimer>körs på den <xref:System.Windows.Threading.Dispatcher>för den aktuella tråden på <xref:System.Windows.Threading.DispatcherPriority>prioritet.</xref:System.Windows.Threading.DispatcherPriority> </xref:System.Windows.Threading.Dispatcher></xref:System.Windows.Threading.DispatcherTimer>  Ange en annan <xref:System.Windows.Threading.Dispatcher>, Använd följande konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.</xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName> </xref:System.Windows.Threading.Dispatcher>'
  syntax:
    content: public DispatcherTimer ();
    parameters: []
  overload: System.Windows.Threading.DispatcherTimer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)
  id: '#ctor(System.Windows.Threading.DispatcherPriority)'
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: DispatcherTimer(DispatcherPriority)
  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref> klass som bearbetar timerhändelser vid den angivna prioriteten."
  remarks: '<xref:System.Windows.Threading.DispatcherTimer>körs på den <xref:System.Windows.Threading.Dispatcher>för den aktuella tråden.</xref:System.Windows.Threading.Dispatcher></xref:System.Windows.Threading.DispatcherTimer>  Ange en annan <xref:System.Windows.Threading.Dispatcher>, Använd följande konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29> </xref:System.Windows.Threading.Dispatcher>'
  syntax:
    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);
    parameters:
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: "Den prioritet som du vill anropa timern."
  overload: System.Windows.Threading.DispatcherTimer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)
  id: '#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)'
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: DispatcherTimer(DispatcherPriority,Dispatcher)
  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref> klass som körs på den angivna <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> vid den angivna prioriteten."
  syntax:
    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);
    parameters:
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: "Den prioritet som du vill anropa timern."
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: "Dispatcher timern är associerad med."
  overload: System.Windows.Threading.DispatcherTimer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dispatcher</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)
  id: '#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)'
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref> klass som använder angivet tidsintervall, prioritet, händelsehanterare, och <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>."
  syntax:
    content: public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);
    parameters:
    - id: interval
      type: System.TimeSpan
      description: "Tidsperiod mellan skalstreck."
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: "Den prioritet som du vill anropa timern."
    - id: callback
      type: System.EventHandler
      description: "Händelsehanteraren ska anropa när den <xref href=&quot;System.Windows.Threading.DispatcherTimer.Tick&quot;> </xref> händelse inträffar."
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: "Dispatcher timern är associerad med."
  overload: System.Windows.Threading.DispatcherTimer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>interval</code>är mindre än 0 eller större än <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Dispatcher
  id: Dispatcher
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Dispatcher
  nameWithType: DispatcherTimer.Dispatcher
  fullName: System.Windows.Threading.DispatcherTimer.Dispatcher
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar den <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> som är associerade med den här <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref>."
  remarks: "Egenskapen Dispatcher bestäms vid skapandet av den <xref:System.Windows.Threading.DispatcherTimer>objekt.</xref:System.Windows.Threading.DispatcherTimer>  Den <xref:System.Windows.Threading.Dispatcher>egenskap är inställd på aktuellt <xref:System.Windows.Threading.Dispatcher>vid tidpunkten för skapandet såvida inte en annan <xref:System.Windows.Threading.Dispatcher>har angetts.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher>"
  syntax:
    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }
    return:
      type: System.Windows.Threading.Dispatcher
      description: "Dispatcher."
  overload: System.Windows.Threading.DispatcherTimer.Dispatcher*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Interval
  id: Interval
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Interval
  nameWithType: DispatcherTimer.Interval
  fullName: System.Windows.Threading.DispatcherTimer.Interval
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar eller anger tidsperioden mellan timer-signaler."
  remarks: "Timers är inte säkert att köra exakt när tidsintervallet inträffar, men de är garanterat inte att köra innan tidsintervallet sker.  Detta beror på att <xref:System.Windows.Threading.DispatcherTimer>operations placeras på den <xref:System.Windows.Threading.Dispatcher>kö som andra åtgärder.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.DispatcherTimer>  När den <xref:System.Windows.Threading.DispatcherTimer>åtgärden körs är beroende av andra jobb i kön och deras prioriteter.</xref:System.Windows.Threading.DispatcherTimer>      <a name=&quot;XAMLTextUsage_Interval&quot;></a>## XAML Text användning"
  example:
  - "The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The Interval is set to 1 second using a <xref:System.TimeSpan> object.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]"
  syntax:
    content: public TimeSpan Interval { get; set; }
    return:
      type: System.TimeSpan
      description: "Tidsperiod mellan skalstreck. Standardvärdet är 00:00:00."
  overload: System.Windows.Threading.DispatcherTimer.Interval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>interval</code>är mindre än 0 eller större än <xref:System.Int32.MaxValue> millisekunder."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.IsEnabled
  id: IsEnabled
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: IsEnabled
  nameWithType: DispatcherTimer.IsEnabled
  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar eller anger ett värde som anger om timern körs."
  remarks: "IsEnabled måste anges till `true` för den <xref:System.Windows.Threading.DispatcherTimer.Tick>-händelse.</xref:System.Windows.Threading.DispatcherTimer.Tick>       Anropar <xref:System.Windows.Threading.DispatcherTimer.Start%2A>anger IsEnabled till `true`.</xref:System.Windows.Threading.DispatcherTimer.Start%2A>       Anropar <xref:System.Windows.Threading.DispatcherTimer.Stop%2A>anger IsEnabled till `false`.</xref:System.Windows.Threading.DispatcherTimer.Stop%2A>      <a name=&quot;XAMLTextUsage_IsEnabled&quot;></a>## XAML Text användning"
  example:
  - "The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om timern har aktiverats för; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherTimer.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Start
  id: Start
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Start()
  nameWithType: DispatcherTimer.Start()
  fullName: System.Windows.Threading.DispatcherTimer.Start()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Startar den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref>."
  remarks: "Ange <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `false` när timern startas stoppar timern.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>       Ange <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `true` när timern har stoppats startar timern.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>       Starta anger <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `true`.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>       Starta återställer timern <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</xref:System.Windows.Threading.DispatcherTimer.Interval%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimerinit)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimerinit)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Windows.Threading.DispatcherTimer.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Stop
  id: Stop
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Stop()
  nameWithType: DispatcherTimer.Stop()
  fullName: System.Windows.Threading.DispatcherTimer.Stop()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Stoppar den <xref href=&quot;System.Windows.Threading.DispatcherTimer&quot;> </xref>."
  remarks: "Ange <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `false` när timern startas stoppar timern.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>       Ange <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `true` när timern har stoppats startar timern.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>       Anropar stoppa anger <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>till `false`.</xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A>"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Threading.DispatcherTimer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Tag
  id: Tag
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Tag
  nameWithType: DispatcherTimer.Tag
  fullName: System.Windows.Threading.DispatcherTimer.Tag
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Hämtar eller anger ett objekt med användardefinierade data."
  remarks: "<a name=&quot;XAMLTextUsage_Tag&quot;></a>## XAML Text användning"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Användardefinierade data.  Standardvärdet är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherTimer.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherTimer.Tick
  id: Tick
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  name: Tick
  nameWithType: DispatcherTimer.Tick
  fullName: System.Windows.Threading.DispatcherTimer.Tick
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inträffar när tidsintervall har gått ut."
  remarks: "<a name=&quot;xamlTextUsage_Tick&quot;></a>## XAML Text användning"
  example:
  - "The following example creates a Tick event handler.  The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \n  \n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\n [!code-cs[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]"
  syntax:
    content: public event EventHandler Tick;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Threading.DispatcherTimer.#ctor
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: DispatcherTimer()
  nameWithType: DispatcherTimer.DispatcherTimer()
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer()
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: DispatcherTimer(DispatcherPriority)
  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority)
- uid: System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: DispatcherTimer(DispatcherPriority,Dispatcher)
  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(DispatcherPriority,Dispatcher)
- uid: System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  isExternal: false
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer(TimeSpan,DispatcherPriority,EventHandler,Dispatcher)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Threading.DispatcherTimer.Dispatcher
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherTimer.Dispatcher
  fullName: System.Windows.Threading.DispatcherTimer.Dispatcher
- uid: System.Windows.Threading.DispatcherTimer.Interval
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Interval
  nameWithType: DispatcherTimer.Interval
  fullName: System.Windows.Threading.DispatcherTimer.Interval
- uid: System.Windows.Threading.DispatcherTimer.IsEnabled
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: IsEnabled
  nameWithType: DispatcherTimer.IsEnabled
  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherTimer.Start
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Start()
  nameWithType: DispatcherTimer.Start()
  fullName: System.Windows.Threading.DispatcherTimer.Start()
- uid: System.Windows.Threading.DispatcherTimer.Stop
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Stop()
  nameWithType: DispatcherTimer.Stop()
  fullName: System.Windows.Threading.DispatcherTimer.Stop()
- uid: System.Windows.Threading.DispatcherTimer.Tag
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Tag
  nameWithType: DispatcherTimer.Tag
  fullName: System.Windows.Threading.DispatcherTimer.Tag
- uid: System.Windows.Threading.DispatcherTimer.Tick
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Tick
  nameWithType: DispatcherTimer.Tick
  fullName: System.Windows.Threading.DispatcherTimer.Tick
- uid: System.Windows.Threading.DispatcherTimer.#ctor*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: DispatcherTimer
  nameWithType: DispatcherTimer.DispatcherTimer
- uid: System.Windows.Threading.DispatcherTimer.Dispatcher*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherTimer.Dispatcher
- uid: System.Windows.Threading.DispatcherTimer.Interval*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Interval
  nameWithType: DispatcherTimer.Interval
- uid: System.Windows.Threading.DispatcherTimer.IsEnabled*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: IsEnabled
  nameWithType: DispatcherTimer.IsEnabled
- uid: System.Windows.Threading.DispatcherTimer.Start*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Start
  nameWithType: DispatcherTimer.Start
- uid: System.Windows.Threading.DispatcherTimer.Stop*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Stop
  nameWithType: DispatcherTimer.Stop
- uid: System.Windows.Threading.DispatcherTimer.Tag*
  parent: System.Windows.Threading.DispatcherTimer
  isExternal: false
  name: Tag
  nameWithType: DispatcherTimer.Tag
