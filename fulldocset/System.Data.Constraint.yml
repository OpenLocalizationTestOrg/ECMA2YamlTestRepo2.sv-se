### YamlMime:ManagedReference
items:
- uid: System.Data.Constraint
  id: Constraint
  children:
  - System.Data.Constraint.#ctor
  - System.Data.Constraint._DataSet
  - System.Data.Constraint.CheckStateForProperty
  - System.Data.Constraint.ConstraintName
  - System.Data.Constraint.ExtendedProperties
  - System.Data.Constraint.SetDataSet(System.Data.DataSet)
  - System.Data.Constraint.Table
  - System.Data.Constraint.ToString
  langs:
  - csharp
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint
  type: Class
  summary: "Representerar ett villkor som kan tillämpas på en eller flera <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekt."
  remarks: "En begränsning är en regel som används för att upprätthålla integriteten hos data i <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Till exempel när du tar bort ett värde som används i en eller flera relaterade tabeller, en <xref:System.Data.ForeignKeyConstraint>avgör om värdena i de relaterade tabellerna tas också bort, värdet null, inställd på standardvärdet värden eller om ingen åtgärd utförs.</xref:System.Data.ForeignKeyConstraint> En <xref:System.Data.UniqueConstraint>, å andra sidan bara ser till att alla värden i en viss tabell är unika.</xref:System.Data.UniqueConstraint> Mer information finns i [DataTable begränsningar](~/add/includes/ajax-current-ext-md.md).       En grundläggande begränsning konstruktor används inte. Primär eller unik nyckelvillkor skapas med hjälp av den <xref:System.Data.UniqueConstraint>konstruktorn och sekundärnyckelbegränsningar skapas med hjälp av den <xref:System.Data.ForeignKeyConstraint>konstruktor.</xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint>"
  example:
  - "The following example examines the collection of constraints for a <xref:System.Data.DataTable> and determines whether each constraint is a <xref:System.Data.UniqueConstraint> or a <xref:System.Data.ForeignKeyConstraint>. The properties of the constraint are then displayed.  \n  \n [!code-vb[Classic WebData Constraint Example#1](~/add/codesnippet/visualbasic/t-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData Constraint Example#1](~/add/codesnippet/csharp/t-system.data.constraint_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("ConstraintName")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.ConstraintConverter))]

      public abstract class Constraint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Constraint.#ctor
  id: '#ctor'
  parent: System.Data.Constraint
  langs:
  - csharp
  name: Constraint()
  nameWithType: Constraint.Constraint()
  fullName: System.Data.Constraint.Constraint()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Constraint&quot;> </xref> klass."
  remarks: "Den här konstruktorn anropas av härledd klasskonstruktorer initiera tillstånd i den här typen."
  syntax:
    content: protected Constraint ();
    parameters: []
  overload: System.Data.Constraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint._DataSet
  id: _DataSet
  parent: System.Data.Constraint
  langs:
  - csharp
  name: _DataSet
  nameWithType: Constraint._DataSet
  fullName: System.Data.Constraint._DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataSet&quot;> </xref> som den här begränsningen tillhör."
  syntax:
    content: protected virtual System.Data.DataSet _DataSet { get; }
    return:
      type: System.Data.DataSet
      description: "Den <xref href=&quot;System.Data.DataSet&quot;> </xref> som begränsningen tillhör."
  overload: System.Data.Constraint._DataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint.CheckStateForProperty
  id: CheckStateForProperty
  parent: System.Data.Constraint
  langs:
  - csharp
  name: CheckStateForProperty()
  nameWithType: Constraint.CheckStateForProperty()
  fullName: System.Data.Constraint.CheckStateForProperty()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataSet&quot;> </xref> som den här begränsningen tillhör."
  syntax:
    content: protected void CheckStateForProperty ();
    parameters: []
  overload: System.Data.Constraint.CheckStateForProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint.ConstraintName
  id: ConstraintName
  parent: System.Data.Constraint
  langs:
  - csharp
  name: ConstraintName
  nameWithType: Constraint.ConstraintName
  fullName: System.Data.Constraint.ConstraintName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Namnet på en begränsning i den <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref>."
  remarks: "Som <xref:System.Data.ConstraintCollection>returneras av <xref:System.Data.DataTable.Constraints%2A>egenskapen för <xref:System.Data.DataTable>klassen.</xref:System.Data.DataTable> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.ConstraintCollection>"
  example:
  - "The following example iterates through the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable> and prints each ConstraintName.  \n  \n [!code-vb[Classic WebData Constraint.ConstraintName Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_1_1.vb)]\n [!code-cs[Classic WebData Constraint.ConstraintName Example#1](~/add/codesnippet/csharp/p-system.data.constraint_1_1.cs)]"
  syntax:
    content: public virtual string ConstraintName { get; set; }
    return:
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Data.Constraint&quot;> </xref>."
  overload: System.Data.Constraint.ConstraintName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <xref href=&quot;System.Data.Constraint&quot;> </xref> namn är ett null-värde eller en tom sträng."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Den <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> innehåller redan en <xref href=&quot;System.Data.Constraint&quot;> </xref> med samma namn (jämförelsen inte är skiftlägeskänsligt.)."
  platform:
  - net462
- uid: System.Data.Constraint.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.Constraint
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: Constraint.ExtendedProperties
  fullName: System.Data.Constraint.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar insamlingen av egenskaper för användardefinierade villkor."
  remarks: "Utökade egenskaper måste vara av typen <xref:System.String>.</xref:System.String> Egenskaper som inte är av typen <xref:System.String>sparas inte när den <xref:System.Data.Constraint>skrivs som XML.</xref:System.Data.Constraint> </xref:System.String>"
  syntax:
    content: public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: "En <xref href=&quot;System.Data.PropertyCollection&quot;> </xref> till anpassad information."
  overload: System.Data.Constraint.ExtendedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint.SetDataSet(System.Data.DataSet)
  id: SetDataSet(System.Data.DataSet)
  parent: System.Data.Constraint
  langs:
  - csharp
  name: SetDataSet(DataSet)
  nameWithType: Constraint.SetDataSet(DataSet)
  fullName: System.Data.Constraint.SetDataSet(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger begränsningen <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: ''
  example:
  - "The following example uses the SetDataSet method to set the <xref:System.Data.DataSet> for a constraint.  \n  \n [!code-cs[Classic WebData Constraint.SetDataSet Example#1](~/add/codesnippet/csharp/m-system.data.constraint_3_1.cs)]\n [!code-vb[Classic WebData Constraint.SetDataSet Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_3_1.vb)]"
  syntax:
    content: protected void SetDataSet (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Den <xref href=&quot;System.Data.DataSet&quot;> </xref> till den här begränsningen ska tillhöra."
  overload: System.Data.Constraint.SetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint.Table
  id: Table
  parent: System.Data.Constraint
  langs:
  - csharp
  name: Table
  nameWithType: Constraint.Table
  fullName: System.Data.Constraint.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataTable&quot;> </xref> som villkoret gäller."
  remarks: ''
  example:
  - "The following example returns the <xref:System.Data.DataTable> of a <xref:System.Data.Constraint>.  \n  \n [!code-vb[Classic WebData Constraint.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_0_1.vb)]\n [!code-cs[Classic WebData Constraint.Table Example#1](~/add/codesnippet/csharp/p-system.data.constraint_0_1.cs)]"
  syntax:
    content: public abstract System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som villkoret gäller."
  overload: System.Data.Constraint.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Constraint.ToString
  id: ToString
  parent: System.Data.Constraint
  langs:
  - csharp
  name: ToString()
  nameWithType: Constraint.ToString()
  fullName: System.Data.Constraint.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref:System.Data.Constraint.ConstraintName*>, om sådan finns, som en sträng.</xref:System.Data.Constraint.ConstraintName*>"
  remarks: ''
  example:
  - "The following example returns the <xref:System.Data.Constraint.ConstraintName%2A> using the ToString method.  \n  \n [!code-vb[Classic WebData Constraint.ToString Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_10_1.vb)]\n [!code-cs[Classic WebData Constraint.ToString Example#1](~/add/codesnippet/csharp/m-system.data.constraint_10_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Strängvärdet för <xref:System.Data.Constraint.ConstraintName*>.</xref:System.Data.Constraint.ConstraintName*>"
  overload: System.Data.Constraint.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.Constraint.#ctor
  parent: System.Data.Constraint
  isExternal: false
  name: Constraint()
  nameWithType: Constraint.Constraint()
  fullName: System.Data.Constraint.Constraint()
- uid: System.Data.Constraint._DataSet
  parent: System.Data.Constraint
  isExternal: false
  name: _DataSet
  nameWithType: Constraint._DataSet
  fullName: System.Data.Constraint._DataSet
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Constraint.CheckStateForProperty
  parent: System.Data.Constraint
  isExternal: false
  name: CheckStateForProperty()
  nameWithType: Constraint.CheckStateForProperty()
  fullName: System.Data.Constraint.CheckStateForProperty()
- uid: System.Data.Constraint.ConstraintName
  parent: System.Data.Constraint
  isExternal: false
  name: ConstraintName
  nameWithType: Constraint.ConstraintName
  fullName: System.Data.Constraint.ConstraintName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Constraint.ExtendedProperties
  parent: System.Data.Constraint
  isExternal: false
  name: ExtendedProperties
  nameWithType: Constraint.ExtendedProperties
  fullName: System.Data.Constraint.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.Constraint.SetDataSet(System.Data.DataSet)
  parent: System.Data.Constraint
  isExternal: false
  name: SetDataSet(DataSet)
  nameWithType: Constraint.SetDataSet(DataSet)
  fullName: System.Data.Constraint.SetDataSet(DataSet)
- uid: System.Data.Constraint.Table
  parent: System.Data.Constraint
  isExternal: false
  name: Table
  nameWithType: Constraint.Table
  fullName: System.Data.Constraint.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Constraint.ToString
  parent: System.Data.Constraint
  isExternal: false
  name: ToString()
  nameWithType: Constraint.ToString()
  fullName: System.Data.Constraint.ToString()
- uid: System.Data.Constraint.#ctor*
  parent: System.Data.Constraint
  isExternal: false
  name: Constraint
  nameWithType: Constraint.Constraint
- uid: System.Data.Constraint._DataSet*
  parent: System.Data.Constraint
  isExternal: false
  name: _DataSet
  nameWithType: Constraint._DataSet
- uid: System.Data.Constraint.CheckStateForProperty*
  parent: System.Data.Constraint
  isExternal: false
  name: CheckStateForProperty
  nameWithType: Constraint.CheckStateForProperty
- uid: System.Data.Constraint.ConstraintName*
  parent: System.Data.Constraint
  isExternal: false
  name: ConstraintName
  nameWithType: Constraint.ConstraintName
- uid: System.Data.Constraint.ExtendedProperties*
  parent: System.Data.Constraint
  isExternal: false
  name: ExtendedProperties
  nameWithType: Constraint.ExtendedProperties
- uid: System.Data.Constraint.SetDataSet*
  parent: System.Data.Constraint
  isExternal: false
  name: SetDataSet
  nameWithType: Constraint.SetDataSet
- uid: System.Data.Constraint.Table*
  parent: System.Data.Constraint
  isExternal: false
  name: Table
  nameWithType: Constraint.Table
- uid: System.Data.Constraint.ToString*
  parent: System.Data.Constraint
  isExternal: false
  name: ToString
  nameWithType: Constraint.ToString
