### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnection
  id: EntityConnection
  children:
  - System.Data.EntityClient.EntityConnection.#ctor
  - System.Data.EntityClient.EntityConnection.#ctor(System.String)
  - System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  - System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.BeginTransaction
  - System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  - System.Data.EntityClient.EntityConnection.Close
  - System.Data.EntityClient.EntityConnection.ConnectionString
  - System.Data.EntityClient.EntityConnection.ConnectionTimeout
  - System.Data.EntityClient.EntityConnection.CreateCommand
  - System.Data.EntityClient.EntityConnection.CreateDbCommand
  - System.Data.EntityClient.EntityConnection.Database
  - System.Data.EntityClient.EntityConnection.DataSource
  - System.Data.EntityClient.EntityConnection.DbProviderFactory
  - System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  - System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  - System.Data.EntityClient.EntityConnection.Open
  - System.Data.EntityClient.EntityConnection.ServerVersion
  - System.Data.EntityClient.EntityConnection.State
  - System.Data.EntityClient.EntityConnection.StoreConnection
  langs:
  - csharp
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
  type: Class
  summary: "Innehåller en referens till en konceptuell modell och anslutning till en datakälla. Den här klassen kan inte ärvas."
  remarks: "Att undvika att oavsiktligt placera objekt som <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>synkroniserat med deras metadata EntityConnection måste låsa dess metadata.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst:-det EntityConnection instans skapas via Standardkonstruktorn eller via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktor som accepterar en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. Anropar <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -EntityConnection-instansen har skapats via <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktorn som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, verifierar på EntityConnection att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.       Kodexempel finns [arbeta med EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: 'public sealed class EntityConnection : System.Data.Common.DbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> klass."
  remarks: "Att undvika att oavsiktligt placera objekt som <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>inte synkroniserade med deras metadata <xref:System.Data.EntityClient.EntityConnection>måste låsa dess metadata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst: – <xref:System.Data.EntityClient.EntityConnection>instans skapas via Standardkonstruktorn eller via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktor som accepterar en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. Anropar <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Instansen har skapats via <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktorn som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, på <xref:System.Data.EntityClient.EntityConnection>verifierar att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.</xref:System.Data.EntityClient.EntityConnection>       Kodexempel finns [arbeta med EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> klassen, baserat på anslutningssträngen."
  remarks: "Generera en namngiven anslutningssträng som lagras i programmets konfigurationsfil. Den här namngivna anslutningssträngen kan anges i stället för den `connectionString` parameter när du skapa en instans av <xref:System.Data.EntityClient.EntityConnection>klassen.</xref:System.Data.EntityClient.EntityConnection>       Att undvika att oavsiktligt placera objekt <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>inte synkroniserade med deras metadata <xref:System.Data.EntityClient.EntityConnection>måste låsa dess metadata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst: – <xref:System.Data.EntityClient.EntityConnection>instans skapas via Standardkonstruktorn eller via den här konstruktorn (EntityConnection), som tar emot en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. Anropar <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Instansen har skapats via <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktorn som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, på <xref:System.Data.EntityClient.EntityConnection>verifierar att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.</xref:System.Data.EntityClient.EntityConnection>       Kodexempel finns [arbeta med EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Provider-specifik anslutningssträngen."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ogiltig nyckelordet för anslutningssträngen har angetts, eller en obligatorisk nyckelordet för anslutningssträngen har inte angetts."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> klass med en angiven <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> och <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Den här konstruktorn kan du skapa en <xref:System.Data.EntityClient.EntityConnection>från metadata som är inte från en fil på en disk eller en inbäddad resurs i en sammansättning.</xref:System.Data.EntityClient.EntityConnection>       Att undvika att oavsiktligt placera objekt som <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>inte synkroniserade med deras metadata i <xref:System.Data.EntityClient.EntityConnection>måste låsa dess metadata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst: – <xref:System.Data.EntityClient.EntityConnection>instans skapas via Standardkonstruktorn eller via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktor som accepterar en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. Anropar <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Instansen har skapats med den här konstruktorn (EntityConnection) som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, på <xref:System.Data.EntityClient.EntityConnection>verifierar att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);
    parameters:
    - id: workspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "En <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> som ska associeras med den här <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
    - id: connection
      type: System.Data.Common.DbConnection
      description: "De underliggande datakällan anslutning för den här <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> objekt."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>workspace</code> or <code>connection</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den konceptuella modellen saknas från arbetsytan.       - eller - mappningsfilen saknas från arbetsytan.       - eller - lagringsmodellen saknas från arbetsytan.       - eller - <code> connection </code> är inte en stängd."
  - type: System.Data.ProviderIncompatibleException
    commentId: T:System.Data.ProviderIncompatibleException
    description: "Den <code> connection </code> är inte från en leverantör av ADO.NET Entity Framework-kompatibel."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Som ska läggas till."
    return:
      type: System.Data.Common.DbTransaction
      description: "Som ska läggas till."
  overload: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Startar en transaktion med hjälp av den underliggande providern."
  remarks: "Metoden BeginTransaction använder den <xref:System.Data.IsolationLevel>transaktionsisoleringsnivån.</xref:System.Data.IsolationLevel> Om du vill ange en annan isoleringsnivå anropa <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Det här värdet kan tolkas av olika underliggande providrar på olika sätt. Om du vill att programmet kan flyttas över flera providers anger det explicit transaktionsisoleringsnivån genom att anropa <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>       När som helst viss kan det finnas mer än en aktiv transaktion som har skapats via BeginTransaction. Ett försök att anropa någon BeginTransaction överlagringar på en <xref:System.Data.EntityClient.EntityConnection>som redan har en aktuell transaktion resultat i en <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. Den returnerade <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> instans senare kan associeras med den <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> att köra kommandot under den aktuella transaktionen."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den underliggande providern är inte känd.       - eller - anropet till BeginTransaction gjordes för en <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> som redan har en aktuell transaktion.       - eller - tillståndet för den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> är inte <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Startar en transaktion med den angivna Isoleringsnivån med hjälp av den underliggande providern."
  remarks: "När som helst viss kan det finnas mer än en aktiv transaktion som har skapats via <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Ett försök att anropa någon <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>överlagringar på en <xref:System.Data.EntityClient.EntityConnection>som redan har en aktuell transaktion resultat i en <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Isoleringsnivå för transaktionen."
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. Den returnerade <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> instans senare kan associeras med den <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> att köra kommandot under den aktuella transaktionen."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den underliggande providern är inte känd.       - eller - anropet till <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>gjordes för en <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> som redan har en aktuell transaktion.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>       - eller - tillståndet för den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> är inte <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Stöds inte."
  remarks: "Metoden ChangeDatabase krävs när den härleds från <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> Den här metoden stöds inte och höjer <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Stöds inte."
  overload: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "När metoden anropas."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Close
  id: Close
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Stänger anslutningen till databasen."
  remarks: "Om den underliggande dataprovidern inte är känd ingenting anropet till Close."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett fel uppstod när anslutningen stängs."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar eller anger den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> anslutningssträngen."
  remarks: "An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons. The equals sign (=) connects each keyword and its value. The following table lists the valid names for keyword values in the ConnectionString.  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|`Provider`|Required if the `Name` keyword is not specified. The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider. This value is constant.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required. This keyword is mutually exclusive with the `Name` keyword.|  \n|`Provider Connection String`|Optional. Specifies the provider-specific connection string that is passed to the underlying data source. This connection string is expressed by using valid keyword/value pairs for the data provider. An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.<br /><br /> The value of the `Provider Connection String` must be surrounded by quotes. The following is an example:<br /><br /> `Provider Connection String =\"Server=serverName; User ID = userID\";`<br /><br /> The following example is not going to work:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  \n|`Metadata`|Required if the `Name` keyword is not specified. A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information. The following is an example:<br /><br /> `Metadata=`<br /><br /> `c:\\model &#124; c:\\model\\sql\\mapping.msl;`<br /><br /> Blank spaces on each side of the pipe separator are ignored.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.|  \n|`Name`|The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values. In this case, you cannot supply them directly in the connection string. The `Name` keyword is not allowed in a configuration file.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.<br /><br /> This keyword is mutually exclusive with all the other connection string keywords.|  \n  \n The application can supply the keyword/values directly in the ConnectionString property, or it can specify a value for the `Name` keyword. If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:  \n  \n `Name=AdventureWorksEntities;`  \n  \n If the `Name` keyword is used in the ConnectionString property, other keywords are not allowed. The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example. The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The keyword/value pairs can also be supplied directly in the ConnectionString property, as shown in the following example. In this case, the `Name` keyword is not used.  \n  \n```  \n\"Provider=System.Data.SqlClient;  \nMetadata=c:\\metadata|c:\\Metadata\\Sql;  \nProvider Connection String= 'Data Source=localhost;  \n    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' \"  \n```  \n  \n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \n  \n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string. Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Den anslutningssträng som krävs för att upprätta den första anslutningen till en datakälla. Standardvärdet är en tom sträng. Om en stängd anslutning och det inställda värdet returneras. Om inget värde har angetts, returneras en tom sträng."
  overload: System.Data.EntityClient.EntityConnection.ConnectionString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett försök gjordes att ange egenskapen ConnectionString efter den [EntityConnection](~/add/includes/ajax-current-ext-md.md)&quot;s <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> initierades. Den [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) är initierad antingen när de <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> instans skapas via överlagring som tar en <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> som en parameter eller när den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> instans har öppnats."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ogiltig nyckelordet för anslutningssträngen har angetts eller en obligatorisk nyckelordet för anslutningssträngen har inte angetts."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar antalet sekunder vid försök att upprätta en anslutning upprättas innan försöket avslutas och ett fel genereras."
  remarks: "Returnerar noll om den underliggande dataprovidern inte är känd."
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Tid (i sekunder) för en anslutning för att öppna. Standardvärdet är standardtidsgränsen för underliggande dataprovidern."
  overload: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är mindre än 0."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Skapar en ny instans av en <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref>, med den <xref:System.Data.EntityClient.EntityCommand.Connection*>inställd på detta <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>.</xref:System.Data.EntityClient.EntityCommand.Connection*>"
  syntax:
    content: public System.Data.EntityClient.EntityCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityCommand
      description: "En <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> objekt."
  overload: System.Data.EntityClient.EntityConnection.CreateCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Namnet på den underliggande dataprovidern är inte känd."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Som ska läggas till."
  overload: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Database
  id: Database
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar namnet på den aktuella databasen eller databasen som ska användas när en anslutning har öppnats."
  remarks: "För specifika nyckelord, som `Database`, som mappar till egenskapen databas, finns i dokumentationen för underliggande dataprovidern. För [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] motsvarande nyckelord finns i dokumentationen för den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Värdet för den <xref uid=&quot;langword_csharp_Database&quot; name=&quot;Database&quot; href=&quot;&quot;> </xref> -egenskapen för den underliggande dataprovidern."
  overload: System.Data.EntityClient.EntityConnection.Database*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den underliggande dataprovidern är inte känd."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DataSource
  id: DataSource
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar namnet på eller nätverksadressen-adressen för att ansluta till datakällan."
  remarks: "För specifika nyckelord, som `DataSource`, som mappar till egenskapen DataSource, finns i dokumentationen för underliggande dataprovidern. För [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] motsvarande nyckelord finns i dokumentationen för den <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>egenskapen.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Namnet på datakällan. Standardvärdet är en tom sträng."
  overload: System.Data.EntityClient.EntityConnection.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den underliggande dataprovidern är inte känd."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Som ska läggas till."
  overload: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Data.EntityClient.EntityConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Anger det <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> i den angivna transaktionen."
  remarks: "Den här metoden vidarebefordrar anrop till anslutningen till datakällan för att registrera explicit i skickade <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction>"
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Transaktionsobjektet att medverka i."
  overload: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tillståndet för den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> är inte <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  id: GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Returnerar den <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> som är associerade med den här <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  remarks: "En <xref:System.Data.Metadata.Edm.MetadataWorkspace>skapas automatiskt när den <xref:System.Data.EntityClient.EntityConnection>klassen skapas.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> Processen kan utlösa metadata-specifika undantag. Metadata är inlästa i minnet och ett Entity Data Model (EDM)-program som använder den metadata för åtkomst till information om den underliggande datakällan. Mer information finns i [ADO.NET Metadata](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).       Att undvika att oavsiktligt placera objekt som <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>inte synkroniserade med deras metadata <xref:System.Data.EntityClient.EntityConnection>måste låsa dess metadata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst: – <xref:System.Data.EntityClient.EntityConnection>instans skapas via Standardkonstruktorn eller via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktor som accepterar en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A></xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Instansen har skapats via <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktorn som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, på <xref:System.Data.EntityClient.EntityConnection>verifierar att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "Den <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> som är associerade med den här <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  exceptions:
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "Infogade anslutningssträngen innehåller ett ogiltigt <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> nyckelordet värde."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Open
  id: Open
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Upprättar en anslutning till datakällan genom att anropa underliggande dataprovidern<xref uid=&quot;langword_csharp_ Open&quot; name=&quot; Open&quot; href=&quot;&quot;> </xref> metod."
  remarks: "Att undvika att oavsiktligt placera objekt som <xref:System.Data.Common.CommandTrees>och <xref:System.Data.Objects.ObjectContext>inte synkroniserade med deras metadata <xref:System.Data.EntityClient.EntityConnection>måste låsa dess metadata.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Ändringar i anslutningssträngen inte är tillåtna när metadata är låst. Följande är två scenarier där metadata är låst: – <xref:System.Data.EntityClient.EntityConnection>instans skapas via Standardkonstruktorn eller via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktor som accepterar en anslutningssträng.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> I båda fallen kan anslutningssträngen ändras flera gånger innan anslutningen har öppnats. Anropar <xref:System.Data.EntityClient.EntityConnection.Open%2A>eller <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>låser metadata.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Instans skapas via den <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktorn som som accepterar en <xref:System.Data.Metadata.Edm.MetadataWorkspace>och en <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> I det här fallet är metadata låst konstruktionen för närvarande. Inga ändringar i anslutningssträngen tillåts någonsin.       När metadata har lästs in, på <xref:System.Data.EntityClient.EntityConnection>verifierar att den konceptuella modellen och lagringsmodellen mappningsfilen finns alla.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett fel uppstår när du öppnar anslutningen eller namnet på den underliggande dataprovidern inte är känd."
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "Infogade anslutningssträngen innehåller ett ogiltigt <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> nyckelordet värde."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar en sträng som innehåller versionen av datakällan som klienten är ansluten."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Versionen av den datakälla som ingår i anslutningssträngen för providern."
  overload: System.Data.EntityClient.EntityConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är stängd."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.State
  id: State
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Hämtar den <xref href=&quot;System.Data.ConnectionState&quot;> </xref> -egenskapen för den underliggande providern om den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> är öppen. Annars returnerar <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "<xref href=&quot;System.Data.ConnectionState&quot;></xref>, om och bara om både den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>&quot;s interna tillståndet och den underliggande providern <xref href=&quot;System.Data.ConnectionState&quot;> </xref> är öppna. Om den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>&quot;s status är öppen men leverantörens <xref href=&quot;System.Data.ConnectionState&quot;> </xref> är stängd visas den här egenskapen returnerar <xref href=&quot;System.Data.ConnectionState&quot;> </xref>. Annars returneras <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  id: StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Tillhandahåller åtkomst till den underliggande anslutningen till datakällan som används av den <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> objekt."
  remarks: "Om den <xref:System.Data.EntityClient.EntityConnection>-objektet är stängt, returnerade anslutningen till datakällan kommer att stängas.</xref:System.Data.EntityClient.EntityConnection> Om den är öppen, returneras en öppen anslutning till datakälla. Om anslutningsinformationen för datakällan har angetts är värdet som returneras alltid icke-null. Om det finns ingen anslutningsinformation för datakällan (till exempel om Standardkonstruktorn användes och ingen anslutningssträngen angavs efteråt), returnerade en null-referens.       Samma anslutningen till datakällan används av Entity Framework kan delas med andra delar av ett program. Anslutningen till datakällan returneras som ett <xref:System.Data.Common.DbConnection>objekt från den <xref:System.Data.Objects.ObjectContext.Connection%2A>egenskapen för <xref:System.Data.Objects.ObjectContext>, eller från egenskapen StoreConnection <xref:System.Data.EntityClient.EntityConnection>.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.Connection%2A> </xref:System.Data.Common.DbConnection>"
  syntax:
    content: public System.Data.Common.DbConnection StoreConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "Den <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> för anslutningen till datakällan."
  overload: System.Data.EntityClient.EntityConnection.StoreConnection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ProviderIncompatibleException
  parent: System.Data
  isExternal: false
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException
  fullName: System.Data.ProviderIncompatibleException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.MetadataException
  parent: System.Data
  isExternal: false
  name: MetadataException
  nameWithType: MetadataException
  fullName: System.Data.MetadataException
- uid: System.Data.EntityClient.EntityConnection.#ctor
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
- uid: System.Data.EntityClient.EntityTransaction
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityTransaction
  nameWithType: EntityTransaction
  fullName: System.Data.EntityClient.EntityTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
- uid: System.Data.EntityClient.EntityConnection.Close
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
- uid: System.Data.EntityClient.EntityCommand
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityCommand
  nameWithType: EntityCommand
  fullName: System.Data.EntityClient.EntityCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.EntityClient.EntityConnection.Database
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
- uid: System.Data.EntityClient.EntityConnection.Open
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
- uid: System.Data.EntityClient.EntityConnection.#ctor*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection.EntityConnection
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: EntityConnection.BeginDbTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: EntityConnection.BeginTransaction
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: EntityConnection.ChangeDatabase
- uid: System.Data.EntityClient.EntityConnection.Close*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close
  nameWithType: EntityConnection.Close
- uid: System.Data.EntityClient.EntityConnection.ConnectionString*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
- uid: System.Data.EntityClient.EntityConnection.CreateCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand
  nameWithType: EntityConnection.CreateCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: EntityConnection.CreateDbCommand
- uid: System.Data.EntityClient.EntityConnection.Database*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose
  nameWithType: EntityConnection.Dispose
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: EntityConnection.EnlistTransaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace
  nameWithType: EntityConnection.GetMetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.Open*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open
  nameWithType: EntityConnection.Open
- uid: System.Data.EntityClient.EntityConnection.ServerVersion*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
- uid: System.Data.EntityClient.EntityConnection.StoreConnection*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
