### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  id: ExportProvider
  children:
  - System.ComponentModel.Composition.Hosting.ExportProvider.#ctor
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  langs:
  - csharp
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider
  type: Class
  summary: "Hämtas export som matchar en angiven <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref> objekt."
  syntax:
    content: public abstract class ExportProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: ExportProvider()
  nameWithType: ExportProvider.ExportProvider()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportProvider()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> klass."
  syntax:
    content: protected ExportProvider ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  id: ExportsChanged
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: ExportsChanged
  nameWithType: ExportProvider.ExportsChanged
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inträffar när exporten av <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> ändra."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs> ExportsChanged;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  id: ExportsChanging
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: ExportsChanging
  nameWithType: ExportProvider.ExportsChanging
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inträffar när den angivna exporten ändrar."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs> ExportsChanging;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  id: GetExport``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExport()
  nameWithType: ExportProvider.GetExport()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public Lazy<T> GetExport<T> ();
    parameters: []
    return:
      type: System.Lazy{T}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  id: GetExport``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExport(String)
  nameWithType: ExportProvider.GetExport(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public Lazy<T> GetExport<T> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: System.Lazy{T}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  id: GetExport``2
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExport()
  nameWithType: ExportProvider.GetExport()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public Lazy<T,TMetadataView> GetExport<T,TMetadataView> ();
    parameters: []
    return:
      type: System.Lazy{T,TMetadataView}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  id: GetExport``2(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExport(String)
  nameWithType: ExportProvider.GetExport(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public Lazy<T,TMetadataView> GetExport<T,TMetadataView> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: System.Lazy{T,TMetadataView}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  id: GetExportedValue``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValue()
  nameWithType: ExportProvider.GetExportedValue()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public T GetExportedValue<T> ();
    parameters: []
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  id: GetExportedValue``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValue(String)
  nameWithType: ExportProvider.GetExportedValue(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public T GetExportedValue<T> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  id: GetExportedValueOrDefault``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValueOrDefault()
  nameWithType: ExportProvider.GetExportedValueOrDefault()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public T GetExportedValueOrDefault<T> ();
    parameters: []
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  id: GetExportedValueOrDefault``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValueOrDefault(String)
  nameWithType: ExportProvider.GetExportedValueOrDefault(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public T GetExportedValueOrDefault<T> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  id: GetExportedValues``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValues()
  nameWithType: ExportProvider.GetExportedValues()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<T> GetExportedValues<T> ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  id: GetExportedValues``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportedValues(String)
  nameWithType: ExportProvider.GetExportedValues(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<T> GetExportedValues<T> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: ExportProvider.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Hämtar alla exporter som matchar villkoren i definitionen för angivna importfilen."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Det objekt som definierar villkoren för de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som ska hämtas."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "En samling med alla de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar de villkor som anges av <code> definition </code>."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*
  exceptions:
  - type: System.ComponentModel.Composition.ImportCardinalityMismatchException
    commentId: T:System.ComponentModel.Composition.ImportCardinalityMismatchException
    description: "<>*> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det är noll <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>.       - eller - <> </> *> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> eller <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det finns fler än en <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports(ImportDefinition,AtomicComposition)
  nameWithType: ExportProvider.GetExports(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Hämtar alla exporter som matchar villkoren i den angivna importfilen definition och sammansättning."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Det objekt som definierar villkoren för de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som ska hämtas."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "Transaktionell behållare för sammansättningen."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "En samling med alla de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar de villkor som anges av <code> definition </code> och <code> atomicComposition </code>."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*
  exceptions:
  - type: System.ComponentModel.Composition.ImportCardinalityMismatchException
    commentId: T:System.ComponentModel.Composition.ImportCardinalityMismatchException
    description: "<>*> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det är noll <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>.       - eller - <> </> *> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> eller <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det finns fler än en <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>atomicComposition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  id: GetExports(System.Type,System.Type,System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports(Type,Type,String)
  nameWithType: ExportProvider.GetExports(Type,Type,String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(Type,Type,String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Hämtar alla exporter med angivet kontraktnamn."
  remarks: "Kontraktet för standardnamnet är resultatet av anropar den <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>metoden på `type`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Kontraktnamn jämförs med hjälp av den <xref:System.StringComparer.Ordinal%2A>egenskapen för att utföra en skiftlägeskänslig, icke-språkliga jämförelse.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Lazy<object,object>> GetExports (Type type, Type metadataViewType, string contractName);
    parameters:
    - id: type
      type: System.Type
      description: "Typparameter i den &lt;xref:System.Lazy%602&gt; objekt att returnera."
    - id: metadataViewType
      type: System.Type
      description: "Typ av metadatavyn i den &lt;xref:System.Lazy%602&gt; objekt att returnera."
    - id: contractName
      type: System.String
      description: "Kontraktnamn för den &lt;xref:System.Lazy%602&gt; objekt ska returneras eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;) att använda standardnamnet för kontraktet."
    return:
      type: System.Collections.Generic.IEnumerable{System.Lazy{System.Object,System.Object}}
      description: "En samling med alla de &lt;xref:System.Lazy%602&gt; objekt för matchning av kontrakt <code> contractName </code>."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Den <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> objektet har tagits bort av."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>metadataViewType</code>är inte en giltig metadatatyp för vyn."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  id: GetExports``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports()
  nameWithType: ExportProvider.GetExports()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<Lazy<T>> GetExports<T> ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  id: GetExports``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports(String)
  nameWithType: ExportProvider.GetExports(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<Lazy<T>> GetExports<T> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  id: GetExports``2
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports()
  nameWithType: ExportProvider.GetExports()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> GetExports<T,TMetadataView> ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  id: GetExports``2(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExports(String)
  nameWithType: ExportProvider.GetExports(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> GetExports<T,TMetadataView> (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Som ska läggas till."
    return:
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: "Som ska läggas till."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Hämtar alla exporterna som matchar begränsningen definitionen av den angivna."
  remarks: "Åsidosättningar av den här metoden ska inte behandla kardinalitet-relaterade avvikelser som fel och utlösa inte undantag i dessa fall. Till exempel om <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A>är <xref:System.ComponentModel.Composition.Primitives.ImportCardinality>och det är noll <xref:System.ComponentModel.Composition.Primitives.Export>objekt som matchar villkoren i den angivna <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, en tom <xref:System.Collections.Generic.IEnumerable%601>samling ska returneras.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.ComponentModel.Composition.Primitives.ImportDefinition> </xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Primitives.ImportCardinality> </xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A>"
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Det objekt som definierar villkoren för de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt att returnera."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "Transaktionell behållare för sammansättningen."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "En samling som innehåller alla exporterna som matchar de angivna villkoren."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  id: OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: OnExportsChanged(ExportsChangeEventArgs)
  nameWithType: ExportProvider.OnExportsChanged(ExportsChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(ExportsChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Genererar den <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged&quot;> </xref> händelse."
  syntax:
    content: protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
      description: "En <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  id: OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: OnExportsChanging(ExportsChangeEventArgs)
  nameWithType: ExportProvider.OnExportsChanging(ExportsChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(ExportsChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Genererar den <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging&quot;> </xref> händelse."
  syntax:
    content: protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
      description: "En <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  id: TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  langs:
  - csharp
  name: TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
  nameWithType: ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Hämtar alla exporterna som matchar villkoren i den angivna importfilen."
  syntax:
    content: public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Det objekt som definierar villkoren för de <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som ska hämtas."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "Transaktionell behållare för sammansättningen."
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "När den här metoden returnerar innehåller en samling <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar de villkor som definieras av <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>om hittas, annars en tom &lt;xref:System.Collections.Generic.IEnumerable%601&gt; objekt. Den här parametern skickas inte initierats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <> </> *> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> eller <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det är noll <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> objekt som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>; <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> om <> </> *> är <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> eller <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref> och det finns exakt en <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> som matchar villkoren i den angivna <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Composition.ImportCardinalityMismatchException
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportCardinalityMismatchException
  nameWithType: ImportCardinalityMismatchException
  fullName: System.ComponentModel.Composition.ImportCardinalityMismatchException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: ExportProvider()
  nameWithType: ExportProvider.ExportProvider()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportProvider()
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: ExportsChanged
  nameWithType: ExportProvider.ExportsChanged
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExportsChangeEventArgs>
  nameWithType: EventHandler<ExportsChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
    name: ExportsChangeEventArgs
    nameWithType: ExportsChangeEventArgs
    fullName: ExportsChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: ExportsChanging
  nameWithType: ExportProvider.ExportsChanging
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport()
  nameWithType: ExportProvider.GetExport()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()
- uid: System.Lazy{T}
  parent: System
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport(String)
  nameWithType: ExportProvider.GetExport(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport()
  nameWithType: ExportProvider.GetExport()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport()
- uid: System.Lazy{T,TMetadataView}
  parent: System
  isExternal: true
  name: Lazy<T,TMetadataView>
  nameWithType: Lazy<T,TMetadataView>
  fullName: System.Lazy<T,TMetadataView>
  spec.csharp:
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T,TMetadataView>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMetadataView
    name: TMetadataView
    nameWithType: TMetadataView
    fullName: TMetadataView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport(String)
  nameWithType: ExportProvider.GetExport(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValue()
  nameWithType: ExportProvider.GetExportedValue()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValue(String)
  nameWithType: ExportProvider.GetExportedValue(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValueOrDefault()
  nameWithType: ExportProvider.GetExportedValueOrDefault()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault()
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValueOrDefault(String)
  nameWithType: ExportProvider.GetExportedValueOrDefault(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValues()
  nameWithType: ExportProvider.GetExportedValues()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues()
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValues(String)
  nameWithType: ExportProvider.GetExportedValues(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: ExportProvider.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.Export
    name: Export
    nameWithType: Export
    fullName: Export
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports(ImportDefinition,AtomicComposition)
  nameWithType: ExportProvider.GetExports(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(ImportDefinition,AtomicComposition)
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports(Type,Type,String)
  nameWithType: ExportProvider.GetExports(Type,Type,String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(Type,Type,String)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{System.Object,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<Object,Object>>
  nameWithType: IEnumerable<Lazy<Object,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<System.Object,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<System.Object,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports()
  nameWithType: ExportProvider.GetExports()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T>>
  nameWithType: IEnumerable<Lazy<T>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports(String)
  nameWithType: ExportProvider.GetExports(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports()
  nameWithType: ExportProvider.GetExports()
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports()
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T,TMetadataView>>
  nameWithType: IEnumerable<Lazy<T,TMetadataView>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T,TMetadataView>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T,TMetadataView>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMetadataView
    name: TMetadataView
    nameWithType: TMetadataView
    fullName: TMetadataView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports(String)
  nameWithType: ExportProvider.GetExports(String)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(String)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: OnExportsChanged(ExportsChangeEventArgs)
  nameWithType: ExportProvider.OnExportsChanged(ExportsChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(ExportsChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportsChangeEventArgs
  nameWithType: ExportsChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: OnExportsChanging(ExportsChangeEventArgs)
  nameWithType: ExportProvider.OnExportsChanging(ExportsChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(ExportsChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
  nameWithType: ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(ImportDefinition,AtomicComposition,IEnumerable<Export>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.#ctor*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider.ExportProvider
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport<T>
  nameWithType: ExportProvider.GetExport<T>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExport<T,TMetadataView>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExport<T,TMetadataView>
  nameWithType: ExportProvider.GetExport<T,TMetadataView>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue<T>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValue<T>
  nameWithType: ExportProvider.GetExportedValue<T>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault<T>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValueOrDefault<T>
  nameWithType: ExportProvider.GetExportedValueOrDefault<T>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues<T>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportedValues<T>
  nameWithType: ExportProvider.GetExportedValues<T>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports
  nameWithType: ExportProvider.GetExports
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports<T>
  nameWithType: ExportProvider.GetExports<T>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExports<T,TMetadataView>*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExports<T,TMetadataView>
  nameWithType: ExportProvider.GetExports<T,TMetadataView>
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: GetExportsCore
  nameWithType: ExportProvider.GetExportsCore
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: OnExportsChanged
  nameWithType: ExportProvider.OnExportsChanged
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: OnExportsChanging
  nameWithType: ExportProvider.OnExportsChanging
- uid: System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports*
  parent: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: TryGetExports
  nameWithType: ExportProvider.TryGetExports
