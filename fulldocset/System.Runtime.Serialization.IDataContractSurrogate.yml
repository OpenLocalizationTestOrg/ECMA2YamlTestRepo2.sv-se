### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.IDataContractSurrogate
  id: IDataContractSurrogate
  children:
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  - System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  - System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  langs:
  - csharp
  name: IDataContractSurrogate
  nameWithType: IDataContractSurrogate
  fullName: System.Runtime.Serialization.IDataContractSurrogate
  type: Interface
  summary: "Innehåller metoder som behövs för att ersätta en typ för en annan av de <xref:System.Runtime.Serialization.DataContractSerializer>under serialisering, deserialisering, och export och import av XML-schemadokument (XSD).</xref:System.Runtime.Serialization.DataContractSerializer>"
  remarks: "Använd IDataContractSurrogate när du använder den <xref:System.Runtime.Serialization.DataContractSerializer>Om du behöver göra något av följande: ersätta en typ eller objekt för en annan eller att dynamiskt generera schemat variationer.</xref:System.Runtime.Serialization.DataContractSerializer> Ett exempelprogram finns [DataContract surrogat](~/add/includes/ajax-current-ext-md.md). Läs mer om datakontrakt [med datakontrakt](~/add/includes/ajax-current-ext-md.md).       Vid körning du hittar specifikt <xref:System.Runtime.Serialization.DataContractSerializer>för någon åtgärd i en tjänst med hjälp av den <xref:System.ServiceModel.Description.OperationDescription>att hitta den <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior>instans.</xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> </xref:System.ServiceModel.Description.OperationDescription> </xref:System.Runtime.Serialization.DataContractSerializer> Mer information om hur du implementerar gränssnittet för att skapa ett surrogat finns [Data kontraktet surrogat](~/add/includes/ajax-current-ext-md.md).       Du kan också använda IDataContractSurrogate för att påverka import och export av XML-scheman när du använder den <xref:System.Runtime.Serialization.XsdDataContractExporter>och <xref:System.Runtime.Serialization.XsdDataContractImporter>klasser.</xref:System.Runtime.Serialization.XsdDataContractImporter> </xref:System.Runtime.Serialization.XsdDataContractExporter> Du kan göra det genom att tilldela IDataContractSurrogate till den <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>egenskapen för den <xref:System.Runtime.Serialization.ExportOptions>klass, eller <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A>egenskapen för <xref:System.Runtime.Serialization.ImportOptions>klassen</xref:System.Runtime.Serialization.ImportOptions> </xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> </xref:System.Runtime.Serialization.ExportOptions> </xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>  Mer information finns i [schemaimport och Export](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows an implementation of the IDataContractSurrogate interface. The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.  \n  \n [!code-vb[IDataContractSurrogate#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_6_1.vb)]\n [!code-cs[IDataContractSurrogate#0](~/add/codesnippet/csharp/t-system.runtime.seriali_6_1.cs)]"
  syntax:
    content: public interface IDataContractSurrogate
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  id: GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Infogar kommentarer i schemat för icke-null returvärden under schemat exportåtgärder."
  syntax:
    content: public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);
    parameters:
    - id: memberInfo
      type: System.Reflection.MemberInfo
      description: "En <xref:System.Reflection.MemberInfo>som beskriver medlemmen.</xref:System.Reflection.MemberInfo>"
    - id: dataContractType
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Object
      description: "Ett objekt som representerar anteckningen som ska infogas i XML-schemadefinitionen."
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  id: GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Infogar kommentarer i schemat för icke-null returvärden under schemat exportåtgärder."
  syntax:
    content: public object GetCustomDataToExport (Type clrType, Type dataContractType);
    parameters:
    - id: clrType
      type: System.Type
      description: "CLR-typen som ska ersättas."
    - id: dataContractType
      type: System.Type
      description: "Datakontrakttypen till."
    return:
      type: System.Object
      description: "Ett objekt som representerar anteckningen som ska infogas i XML-schemadefinitionen."
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  id: GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerar en datakontrakttyp som ersätter den angivna typen under serialisering, deserialisering, och schemaimport och export."
  remarks: ''
  example:
  - "The following example shows an implementation of the GetDataContractType method.  \n  \n [!code-vb[IDataContractSurrogate#1](~/add/codesnippet/visualbasic/90968a41-34e3-48fc-8e53-_1.vb)]\n [!code-cs[IDataContractSurrogate#1](~/add/codesnippet/csharp/90968a41-34e3-48fc-8e53-_1.cs)]"
  syntax:
    content: public Type GetDataContractType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "CLR-typen <xref:System.Type>att ersätta.</xref:System.Type>"
    return:
      type: System.Type
      description: "Den <xref:System.Type>som ersättning för den <code> type </code> värde.</xref:System.Type> Den här typen måste kunna serialiseras av <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> Till exempel måste den markeras med den <xref:System.Runtime.Serialization.DataContractAttribute>attribut eller andra mekanismer som kan identifieras av serialiseraren.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  id: GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerar ett objekt som är en ersättning för det angivna objektet under deserialisering."
  remarks: "I en enkel implementering använder en om... sedan... annan styra strukturen för att testa om det `obj` värdet är av typen surrogated. I så fall, transformera dem som behövs och returnera det ersatta objektet. Ersatta objekt kan vara en ny instans eller samma `obj` instans."
  example:
  - "The following example shows an implementation of the GetDeserializedObject method.  \n  \n [!code-vb[IDataContractSurrogate#3](~/add/codesnippet/visualbasic/98dab246-6ee5-4fc3-8a64-_1.vb)]\n [!code-cs[IDataContractSurrogate#3](~/add/codesnippet/csharp/98dab246-6ee5-4fc3-8a64-_1.cs)]"
  syntax:
    content: public object GetDeserializedObject (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Avserialiserat objekt som ska ersättas."
    - id: targetType
      type: System.Type
      description: "Den <xref:System.Type>som ska tilldelas det ersatta objektet.</xref:System.Type>"
    return:
      type: System.Object
      description: "Ersatta avserialiserat objekt. Det här objektet måste vara av en typ som kan serialiseras av <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> Till exempel måste den markeras med den <xref:System.Runtime.Serialization.DataContractAttribute>attribut eller andra mekanismer som kan identifieras av serialiseraren.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  id: GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Anger samlingen av kända typer för serialisering och deserialisering av objekt för anpassade data."
  remarks: "Den här metoden krävs under schemaexport eller schemaimport bara om anteckningar infogas i schemat med hjälp av den <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>metoden.</xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>"
  syntax:
    content: public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection<Type> customDataTypes);
    parameters:
    - id: customDataTypes
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "En &lt;xref:System.Collections.ObjectModel.Collection%601&gt; av <xref:System.Type>att lägga till på kända typer.</xref:System.Type>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  id: GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerar ett objekt som ersätter det angivna-objektet under serialisering."
  remarks: "Den här metoden får inte returnera `null` eftersom vid deserialisering data kan typkonverteras till typen <xref:System.Object>och en <xref:System.InvalidCastException>genereras.</xref:System.InvalidCastException> </xref:System.Object>"
  example:
  - "The following example shows an implementation of the GetObjectToSerialize method.  \n  \n [!code-vb[IDataContractSurrogate#2](~/add/codesnippet/visualbasic/5c78fc6a-caaf-4bc0-ab0d-_1.vb)]\n [!code-cs[IDataContractSurrogate#2](~/add/codesnippet/csharp/5c78fc6a-caaf-4bc0-ab0d-_1.cs)]"
  syntax:
    content: public object GetObjectToSerialize (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ersättning."
    - id: targetType
      type: System.Type
      description: "Den <xref:System.Type>som ska tilldelas det ersatta objektet.</xref:System.Type>"
    return:
      type: System.Object
      description: "Det ersatta objekt som ska serialiseras. Objektet måste kunna serialiseras av <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> Till exempel måste den markeras med den <xref:System.Runtime.Serialization.DataContractAttribute>attribut eller andra mekanismer som kan identifieras av serialiseraren.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  id: GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Returnerar den typ som anges av schemat under schemaimport."
  remarks: '`Null`returneras om en CLR-typen inte finns för att representera schematypen. Detta innebär att en ny typ som ska genereras under schemaimport.'
  example:
  - "The following example shows an implementation of the GetReferencedTypeOnImport method.  \n  \n [!code-vb[IDataContractSurrogate#4](~/add/codesnippet/visualbasic/9ffa3127-8c36-42f6-862b-_1.vb)]\n [!code-cs[IDataContractSurrogate#4](~/add/codesnippet/csharp/9ffa3127-8c36-42f6-862b-_1.cs)]"
  syntax:
    content: public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);
    parameters:
    - id: typeName
      type: System.String
      description: "Namnet på typen i schemat."
    - id: typeNamespace
      type: System.String
      description: "Namnområdet för typen i schemat."
    - id: customData
      type: System.Object
      description: "Objekt som representerar anteckningen infogas i XML schemadefinition är data som kan användas för att hitta den refererade typen."
    return:
      type: System.Type
      description: "Den <xref:System.Type>ska användas för den refererade typen.</xref:System.Type>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  id: ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Bearbetar den typ som har genererats från det importerade schemat."
  remarks: "Indata <xref:System.CodeDom.CodeTypeDeclaration>eller annan information i den <xref:System.CodeDom.CodeCompileUnit>kan ändras av användaren i den här metoden.</xref:System.CodeDom.CodeCompileUnit> </xref:System.CodeDom.CodeTypeDeclaration> Om `null` returneras det leder till att typen inte genereras. Om en ny <xref:System.CodeDom.CodeTypeDeclaration>returneras, ersätts den ursprungliga typen genereras.</xref:System.CodeDom.CodeTypeDeclaration>"
  syntax:
    content: public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: typeDeclaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "En <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> till process som representerar typdeklarationen som genereras under schemaimport."
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "Den <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> som innehåller den kod som genereras under schemaimport."
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "En <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> som innehåller typen bearbetade."
  overload: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport
  nameWithType: IDataContractSurrogate.GetCustomDataToExport
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType
  nameWithType: IDataContractSurrogate.GetDataContractType
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject
  nameWithType: IDataContractSurrogate.GetDeserializedObject
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize
  nameWithType: IDataContractSurrogate.GetObjectToSerialize
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType
  nameWithType: IDataContractSurrogate.ProcessImportedType
