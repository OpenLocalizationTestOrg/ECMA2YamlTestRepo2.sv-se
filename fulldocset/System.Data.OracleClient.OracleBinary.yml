### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBinary
  id: OracleBinary
  children:
  - System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  - System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  - System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Equals(System.Object)
  - System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.GetHashCode
  - System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.IsNull
  - System.Data.OracleClient.OracleBinary.Item(System.Int32)
  - System.Data.OracleClient.OracleBinary.Length
  - System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Null
  - System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  - System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  - System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Value
  langs:
  - csharp
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
  type: Struct
  summary: "Representerar en dataström för variabel längd för binära data som ska lagras i eller hämtas från en databas."
  remarks: "För att få ett OracleBinary-objekt kan anropa den <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A>metoden.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A>"
  syntax:
    content: 'public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: OracleBinary(Byte[])
  nameWithType: OracleBinary.OracleBinary(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.OracleBinary(Byte[])
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initierar en ny instans av den <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur, ange den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen att innehållet i den angivna byte-matrisen.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public OracleBinary (byte[] b);
    parameters:
    - id: b
      type: System.Byte[]
      description: "Bytematrisen lagras i den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  overload: System.Data.OracleClient.OracleBinary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: OracleBinary.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleBinary.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför detta <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> objekt till det angivna objektet och returnerar en indikation på deras relativa värden."
  syntax:
    content: public int CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska jämföras med detta <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Int32
      description: "Ett signerade nummer som indikerar relativa värdena för detta <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur och objektet.       <table><thead><tr><th> Returvärde       </th><th> Villkor       </th></tr></thead><tbody><tr><td> Är mindre än noll       </td><td> Värdet för det här <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt är mindre än objektet.       </td></tr><tr><td> Noll       </td><td> Detta <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt är detsamma som objektet.       </td></tr><tr><td> Större än noll       </td><td> Detta <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objektet är större än objektet.       - eller - objektet är en null-referens.       </td></tr></tbody></table>"
  overload: System.Data.OracleClient.OracleBinary.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Concat(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Concat(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Concat(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sammanfogar två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att skapa en ny <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
  syntax:
    content: public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur med de sammanfogade värdena från den <code> x </code> och <code> y </code> parametrar."
  overload: System.Data.OracleClient.OracleBinary.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: OracleBinary.Equals(Object)
  fullName: System.Data.OracleClient.OracleBinary.Equals(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför parametern angivna objektet till den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen för den <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> objekt.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om objektet är en instans av <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> och två är lika, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Equals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Equals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Equals(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om de är lika."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser är lika eller <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser inte är lika. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GetHashCode
  id: GetHashCode
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: OracleBinary.GetHashCode()
  fullName: System.Data.OracleClient.OracleBinary.GetHashCode()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Returnerar hash-koden för den här <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> struktur."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "En 32-bitars heltal hash-kod."
  overload: System.Data.OracleClient.OracleBinary.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är större än andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är större än den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är större än eller lika med andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är större än eller lika med den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBinary.IsNull
  fullName: System.Data.OracleClient.OracleBinary.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar ett värde som anger om den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen för den <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> struktur är null.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> är null, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBinary.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleBinary.Item(Int32)
  fullName: System.Data.OracleClient.OracleBinary.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar den enda byten från den <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> egenskap som finns på den platsen som anges av parametern heltal <code> index </code>. Om <code> index </code> anger en position utanför slutet byte-matris, ett undantagsfel genereras."
  remarks: "Att undvika att en `OracleNullValueException`, kontrollera alltid den <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>egenskapen och `Length` egenskap innan läsning `this`.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public byte this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Positionen för byten som ska hämtas."
    return:
      type: System.Byte
      description: "Byte som finns på den platsen som anges av parametern heltal."
  overload: System.Data.OracleClient.OracleBinary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Length
  id: Length
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Length
  nameWithType: OracleBinary.Length
  fullName: System.Data.OracleClient.OracleBinary.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar längden i byte av den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen.</xref:System.Data.OracleClient.OracleBinary.Value*> Den här egenskapen är skrivskyddad."
  remarks: "Att undvika att en `OracleNullValueException`, kontrollera alltid den <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>egenskapen innan du läser den `Length` egenskapen.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "Längden för binära data i den <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> egenskapen."
  overload: System.Data.OracleClient.OracleBinary.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThan(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är mindre än andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är mindre än andra instansen, annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är mindre än eller lika med andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är mindre än eller lika med den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: NotEquals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.NotEquals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.NotEquals(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om de inte är lika."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser inte är lika eller <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser är lika. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBinary.Null
  fullName: System.Data.OracleClient.OracleBinary.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representerar ett null-värde som kan tilldelas till den <xref:System.Data.OracleClient.OracleBinary.Value*>egenskapen för ett <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> struktur.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  remarks: '`Null`fungerar som en konstant för den `OracleBinary` struktur.'
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBinary Null;
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Addition(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Addition(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Addition(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sammanfogar två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> parametrar för att skapa en ny <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
  remarks: "`x`visas först i den resulterande `OracleBinary`, följt av `y`.       [Visual Basic]       I Visual Basic kan du kan använda operatorer som definieras av en klass, men du kan inte åsidosätter dem eller skapa egna."
  syntax:
    content: public static System.Data.OracleClient.OracleBinary op_Addition (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "De sammanfogade värdena från den <code> x </code> och <code> y </code> parametrar."
  overload: System.Data.OracleClient.OracleBinary.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Equality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Equality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Equality(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om de är lika."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Equality (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser är lika eller <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser inte är lika. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  id: op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Explicit(OracleBinary)
  nameWithType: OracleBinary.op_Explicit(OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Explicit(OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static byte[] op_Explicit (System.Data.OracleClient.OracleBinary x);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "Som ska läggas till."
    return:
      type: System.Byte[]
      description: "Som ska läggas till."
  overload: System.Data.OracleClient.OracleBinary.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är större än andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är större än den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är större än eller lika med andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är större än eller lika med den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  id: op_Implicit(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Implicit(Byte[])
  nameWithType: OracleBinary.op_Implicit(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.op_Implicit(Byte[])
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static System.Data.OracleClient.OracleBinary op_Implicit (byte[] b);
    parameters:
    - id: b
      type: System.Byte[]
      description: "Som ska läggas till."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "Som ska läggas till."
  overload: System.Data.OracleClient.OracleBinary.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Inequality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om de är lika."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Inequality (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser inte är lika eller <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om två instanser är lika. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är mindre än andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är mindre än andra instansen, annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jämför två <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> strukturer för att avgöra om först är mindre än eller lika med andra."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "En <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "En <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> som <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> om den första instansen är mindre än eller lika med den andra instansen annars <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>. Om någon av instanserna av <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> är null, den <xref:System.Data.OracleClient.OracleBoolean.Value*>av den <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> blir <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Value
  id: Value
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Value
  nameWithType: OracleBinary.Value
  fullName: System.Data.OracleClient.OracleBinary.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Hämtar värdet för den <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> struktur. Den här egenskapen är skrivskyddad."
  remarks: "Att undvika att en `OracleNullValueException`, kontrollera alltid den <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>egenskapen innan du läser den `Value` egenskapen.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public byte[] Value { get; }
    return:
      type: System.Byte[]
      description: "Värdet för den <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> struktur."
  overload: System.Data.OracleClient.OracleBinary.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: OracleBinary(Byte[])
  nameWithType: OracleBinary.OracleBinary(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.OracleBinary(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: CompareTo(Object)
  nameWithType: OracleBinary.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleBinary.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Concat(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Concat(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Concat(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals(Object)
  nameWithType: OracleBinary.Equals(Object)
  fullName: System.Data.OracleClient.OracleBinary.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Equals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Equals(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBoolean
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBoolean
  nameWithType: OracleBoolean
  fullName: System.Data.OracleClient.OracleBoolean
- uid: System.Data.OracleClient.OracleBinary.GetHashCode
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GetHashCode()
  nameWithType: OracleBinary.GetHashCode()
  fullName: System.Data.OracleClient.OracleBinary.GetHashCode()
- uid: System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.IsNull
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: IsNull
  nameWithType: OracleBinary.IsNull
  fullName: System.Data.OracleClient.OracleBinary.IsNull
- uid: System.Data.OracleClient.OracleBinary.Item(System.Int32)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleBinary.Item(Int32)
  fullName: System.Data.OracleClient.OracleBinary.Item(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleBinary.Length
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Length
  nameWithType: OracleBinary.Length
  fullName: System.Data.OracleClient.OracleBinary.Length
- uid: System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: NotEquals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.NotEquals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.NotEquals(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.Null
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: "Null"
  nameWithType: OracleBinary.Null
  fullName: System.Data.OracleClient.OracleBinary.Null
- uid: System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Addition(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Addition(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Addition(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Equality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Equality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Equality(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Explicit(OracleBinary)
  nameWithType: OracleBinary.op_Explicit(OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Explicit(OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Implicit(Byte[])
  nameWithType: OracleBinary.op_Implicit(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.op_Implicit(Byte[])
- uid: System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Inequality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Inequality(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.Value
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Value
  nameWithType: OracleBinary.Value
  fullName: System.Data.OracleClient.OracleBinary.Value
- uid: System.Data.OracleClient.OracleBinary.#ctor*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary.OracleBinary
- uid: System.Data.OracleClient.OracleBinary.CompareTo*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: CompareTo
  nameWithType: OracleBinary.CompareTo
- uid: System.Data.OracleClient.OracleBinary.Concat*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Concat
  nameWithType: OracleBinary.Concat
- uid: System.Data.OracleClient.OracleBinary.Equals*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals
  nameWithType: OracleBinary.Equals
- uid: System.Data.OracleClient.OracleBinary.GetHashCode*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GetHashCode
  nameWithType: OracleBinary.GetHashCode
- uid: System.Data.OracleClient.OracleBinary.GreaterThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThan
  nameWithType: OracleBinary.GreaterThan
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: OracleBinary.GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.IsNull*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: IsNull
  nameWithType: OracleBinary.IsNull
- uid: System.Data.OracleClient.OracleBinary.Item*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Item
  nameWithType: OracleBinary.Item
- uid: System.Data.OracleClient.OracleBinary.Length*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Length
  nameWithType: OracleBinary.Length
- uid: System.Data.OracleClient.OracleBinary.LessThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThan
  nameWithType: OracleBinary.LessThan
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThanOrEqual
  nameWithType: OracleBinary.LessThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.NotEquals*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: NotEquals
  nameWithType: OracleBinary.NotEquals
- uid: System.Data.OracleClient.OracleBinary.op_Addition*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Addition
  nameWithType: OracleBinary.op_Addition
- uid: System.Data.OracleClient.OracleBinary.op_Equality*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Equality
  nameWithType: OracleBinary.op_Equality
- uid: System.Data.OracleClient.OracleBinary.op_Explicit*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Explicit
  nameWithType: OracleBinary.op_Explicit
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThan
  nameWithType: OracleBinary.op_GreaterThan
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: OracleBinary.op_GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.op_Implicit*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Implicit
  nameWithType: OracleBinary.op_Implicit
- uid: System.Data.OracleClient.OracleBinary.op_Inequality*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Inequality
  nameWithType: OracleBinary.op_Inequality
- uid: System.Data.OracleClient.OracleBinary.op_LessThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThan
  nameWithType: OracleBinary.op_LessThan
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: OracleBinary.op_LessThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.Value*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Value
  nameWithType: OracleBinary.Value
