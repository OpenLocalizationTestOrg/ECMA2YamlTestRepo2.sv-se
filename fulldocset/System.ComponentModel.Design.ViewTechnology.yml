### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "Definierar identifierare för en uppsättning tekniker som har stöd för designer värdar."
  remarks: "Visa kortet modellen ersätter och lägger till funktioner i funktionen ViewTechnology; funktionen ViewTechnology bevaras dock för både bakåtkompatibilitet och framtida användning om du väljer. Mer information finns i &quot;.NET form bibliotek: A exempel Designer&quot; i Windows Forms Knowledge Base på http://windowsforms.net/articles/shapedesigner.aspx.       ViewTechnology definierar identifierare som anger läge ska använda för att styra visningen av dokumentet värdbaserad designer.       Du bör endast använda standardvärdet i värdmiljön designer. I tidigare versioner av den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], uppräkningen ViewTechnology anges vilken typ av UI-modell som stöds av en rotdesigner. Eftersom den här modellen inte kan utökas, bör du istället använda en *visa kortet* modell. En vy adapter är en typ som anpassas efter ett objekt av en typ till en annan.       Till exempel en HTML-designer kan returnera en `DemoDOM` trädet som dess vy. HTML-designer returnerar en vy teknik default. En Windows Forms värdmiljön skulle ha en eller flera visa kortet tillgängliga klasser. Om en klass kan konvertera det `DemoDOM` i en Windows Forms-kontroll värd kan stödja den här typen av designer. Om inget kort kan hantera den datatyp som returnerades från designern <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>metoden inläsningen av designer misslyckas och användaren kommer att visas ett fel.</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]har ett Utökningsbart schema för att visa kort, så den kan anpassas till alla UI-teknik. Teknikleverantörer av tredjeparts-kan också erbjuda ett vy-kort och deras nätverksobjektmodellerna är omedelbart kan användas.       Ett exempel som använder Visa nätverkskort finns i avsnittet &quot;.NET form bibliotek: A exempel Designer&quot; i Windows Forms Knowledge Base på http://windowsforms.net/articles/shapedesigner.aspx."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Anger standard-tekniken för vyn."
  remarks: "Rotdesigner kan returnera alla typer av objekt, men objektet måste vara kompatibel med ett nätverkskort för värden-teknik. Värdmiljöer som [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] ger dig ett sätt att ansluta nya vyn teknik kort. Visa standardobjekt för Windows Forms-designer är en <xref:System.Windows.Forms.Control?displayProperty=fullName>instans.</xref:System.Windows.Forms.Control?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Representerar ett läge där objektet vy skickas direkt till utvecklingsmiljön."
  remarks: "Visa objekt måste implementera alla gränssnitt utvecklingsmiljön kräver. Den [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] utvecklingsmiljön stöder visa objekt som är en ActiveX-kontroll, aktivt dokument eller ett objekt som implementerar gränssnittet IVsWindowPane som är tillgängliga via [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Integration) program. Den [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] utvecklingsmiljö ger stöd för den här vyn tekniken. Stöd för den här vyn-tekniken är inte nödvändigtvis tillgänglig i alla utvecklingsmiljöer."
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Representerar ett läge som ett objekt för Windows Forms-kontrollen innehåller visningen för rotdesigner."
  remarks: "Designer värden fyller fönstret development environment dokument med Windows Forms-kontrollen."
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
