### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D
  id: ManipulationProcessor2D
  children:
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  langs:
  - csharp
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D
  type: Class
  summary: "Implementerar en flera-indata, utdata enskild sammansättning för tvådimensionell (2D) omvandlingar i en delad koordinatsystem."
  remarks: "Ett ManipulationProcessor2D objekt behandlar en samling manipulators som en sammansatt objekt. Programmet frigörs sedan från behovet av att spåra och hantera enskilda manipulators.       En manipulering processor ensamt innebär inte att flytta ett element. Programmet börjar en manipulering efter behov och sedan tar emot information från en processor manipulation genom att lyssna på de <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>och <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>händelser.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> De värden som tagits emot via dessa händelser kan du ändra plats, storlek och orientering för ett element efter behov.       Du informerar en manipulering processor vilka typer av ändringar tillåts (översätta, skala, rotera) genom att ange den <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>egenskapen.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> Sedan kan du ge icke villkorlig logik för omvandling av element som är manipuleras. Till exempel i stället för att kontrollera om rotation aktiveras innan du ändrar orienteringen för ett element kan ovillkorligt tillämpas rotation faktorn togs emot från manipulering processorn. Om rotation inte är aktiverad rapporterar manipulering processorn att ingen ändring av rotational har inträffat.       När ett element som är manipuleras släpps (alla manipulators tas bort) du kan använda tröghetsmassa bearbetning för att simulera friktion och orsaka elementet gradvis långsammare dess förflyttningar innan du kommer till en Stopp. Mer information finns i <xref:System.Windows.Input.Manipulations.InertiaProcessor2D>klassen.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D>"
  syntax:
    content: public class ManipulationProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Skapar en ny <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> objekt."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Första uppsättningen stöds ändringar."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> supportedManipulations </code> parametern är inte en giltig kombination av den <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> uppräkningsvärden."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Skapar en ny <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> objekt."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Första uppsättningen stöds ändringar."
    - id: pivot
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Pivot-information för enskild manipulator rotationer."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> supportedManipulations </code> parametern är inte en giltig kombination av den <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> uppräkningsvärden."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Inträffar när en manipulering har konkurrerade."
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  id: CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Tvingar aktuella modifieringen att slutföra och aktiverar den <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&quot;> </xref> händelse."
  syntax:
    content: public void CompleteManipulation (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Tidsstämpel för att slutföra manipulering, i 100 nanosekunder tick."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tidsstämpeln är mindre än föregående tidsstämpel för den aktuella manipulering."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Uppstår när manipulering ursprung har ändrats eller när översättning, skala och rotation har inträffat."
  remarks: "Delta-händelse och <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName>händelse är av samma typ.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> Normalt använder du samma händelsehanterare för båda händelserna."
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  id: MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Hämtar eller anger den minsta radien i koordinaten enheter krävs för en manipulator att delta i skalning och rotation."
  remarks: "Om en manipulator ligger mycket nära center of massa manipulators som för närvarande bearbetas, kan en liten manipulator rörelse bli mycket stora ändring rotation eller skalning. Undvik problemet genom att ange MinimumScaleRotateRadius till något som är större än noll. Alla manipulator som ligger närmast den sträcka center of massa inkluderas inte i rotation och skalning åtgärder.       Ett vanligt värde att använda ska baseras på &quot;oavsiktliga&quot; rörelser för manipulators sannolikt omfattning. Till exempel om manipulator är en mänsklig fingeravtrycksläsare vidrör en skärm, kan en radie som motsvarar en cm, eller så vara lämpligt.       Värdet för MinimumScaleRotateRadius måste vara ett begränsat, icke-negativt tal."
  syntax:
    content: public float MinimumScaleRotateRadius { get; set; }
    return:
      type: System.Single
      description: "Den minsta radien i koordinaten enheter, krävs för en manipulator att delta i skalning och rotation."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  id: Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Hämtar eller anger pivot-information för manipulering processor."
  remarks: "Egenskapen Pivot används för att tillhandahålla pivot-information för enskild manipulator rotationer. Om denna egenskap anges till null inaktiverar enkel manipulator rotationer."
  syntax:
    content: public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }
    return:
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Pivot-information för manipulering processor."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  id: ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Bearbetar angivna manipulators som en enskild batch-åtgärd."
  remarks: "Parametern `manipulators` vara en tom lista eller null. Om detta resulterar i antalet manipulators når noll, den <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>händelsen utlöses.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>"
  example:
  - "In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the ProcessManipulators method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D> manipulators);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Tidsstämpel för batch i 100 nanosekunder skalstreck."
    - id: manipulators
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
      description: "Uppsättningen manipulators som finns i omfattningen."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Tidsstämpeln är mindre än föregående tidsstämpel för den aktuella manipulering."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Anger parametrar på processorn manipulation."
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "Parametrar för att konfigurera."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  id: Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Inträffar när en ny manipulering har startats."
  remarks: ''
  example:
  - "In the following example, an event handler for the Started event checks to see if inertia processing is running and if so, stops it.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs> Started;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  id: SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Hämtar eller anger den aktuella mängden stöds ändringar."
  syntax:
    content: public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }
    return:
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Den aktuella mängden stöds ändringar."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen försöker ange ett värde som inte är en giltig kombination av den <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> uppräkningsvärden."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
- uid: System.Windows.Input.Manipulations.Manipulations2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulations2D
  nameWithType: Manipulations2D
  fullName: System.Windows.Input.Manipulations.Manipulations2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
- uid: System.Windows.Input.Manipulations.ManipulationPivot2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationPivot2D
  nameWithType: ManipulationPivot2D
  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Manipulator2D>
  nameWithType: IEnumerable<Manipulator2D>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulator2D
    name: Manipulator2D
    nameWithType: Manipulator2D
    fullName: Manipulator2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DStartedEventArgs>
  nameWithType: EventHandler<Manipulation2DStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
    name: Manipulation2DStartedEventArgs
    nameWithType: Manipulation2DStartedEventArgs
    fullName: Manipulation2DStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation
  nameWithType: ManipulationProcessor2D.CompleteManipulation
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators
  nameWithType: ManipulationProcessor2D.ProcessManipulators
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: ManipulationProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
