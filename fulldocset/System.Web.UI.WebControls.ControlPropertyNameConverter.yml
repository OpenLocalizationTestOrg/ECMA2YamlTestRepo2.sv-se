### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter
  id: ControlPropertyNameConverter
  children:
  - System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ControlPropertyNameConverter
  nameWithType: ControlPropertyNameConverter
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter
  type: Class
  summary: "Ger en typkonverterare som hämtar en lista över egenskapsnamn för den aktuella kontrollen."
  remarks: "ControlPropertyNameConverter-klass som härleds från den <xref:System.ComponentModel.StringConverter>klassen och innehåller en lista med egenskapsnamn som ska visas i en egenskap rutnätet i designläge miljöer.</xref:System.ComponentModel.StringConverter>      > [!CAUTION] > Du bör aldrig åtkomst till en typkonverterare direkt. Anropa i stället lämplig konverterare med hjälp av <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>klassen.</xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> Mer information finns i exemplen i <xref:System.ComponentModel.TypeConverter>grundläggande klass.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: 'public class ControlPropertyNameConverter : System.ComponentModel.StringConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.StringConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: ControlPropertyNameConverter()
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.ControlPropertyNameConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.ControlPropertyNameConverter&quot;> </xref> klass."
  remarks: "Den här konstruktorn är inte avsedd att anropas direkt. Du bör aldrig åtkomst till en typkonverterare direkt. Anropa i stället lämplig konverterare med hjälp av <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>klassen.</xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName> Mer information finns i exemplen i <xref:System.ComponentModel.TypeConverter>grundläggande klass.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public ControlPropertyNameConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returnerar en mängd med egenskapsnamn för kontrollen inom en designer som implementerar <xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> när förses med en kontext som format."
  remarks: "GetStandardValues-metoden returnerar en <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>samling som innehåller en uppsättning strängar som motsvarar namnen på de aktuella kontrollens egenskaper.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>       Använd den `context` parametern för att extrahera ytterligare information om designläge miljön där den här konverteraren anropas. Den här parametern kan vara `null`, och egenskaper för context-objektet kan returnera `null`. Om den `context` parametern är `null`, den här metoden returnerar `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format som kan användas för att extrahera mer information om miljön där den här konverteraren anropas. Den här parametern eller egenskaper för den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "En <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>som innehåller en uppsättning strängar som representerar egenskapsnamn för den aktuella kontrollen.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Om det är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, returneras en tom samling. If the <code>context</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returnerar ett värde som anger om samlingen standardvärden som returneras av den <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*>metoden är en lista av värden, med det angivna sammanhanget.</xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*>"
  remarks: "Metoden GetStandardValuesExclusive returnerar alltid `false` att indikera att listan över värden som returneras av den <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>metoden är inte en lista över möjliga värden.</xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A>       Använd den `context` parametern för att extrahera ytterligare information om miljön där den här konverteraren anropas. Den här parametern kan vara `null`, och egenskaper för context-objektet kan returnera `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format som kan användas för att extrahera mer information om miljön där den här konverteraren anropas. Den här parametern eller egenskaper för den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i alla fall, vilket innebär att listan inte är exklusiva."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returnerar ett värde som anger om det här objektet har stöd för en standarduppsättning med värden som kan väljas från en lista med de angivna kontexten."
  remarks: "Metoden GetStandardValuesSupported returnerar ett värde som anger om det här objektet har stöd för en standarduppsättning med värden.       Den `context` parametern extraherar ytterligare information om designläge miljön där den här konverteraren anropas. Den här parametern kan vara `null`, och egenskaper för context-objektet kan returnera `null`. Om den `context` parametern är `null`, den här metoden returnerar `false`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "En <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> som ger en kontext som format som kan användas för att extrahera mer information om miljön där den här konverteraren anropas. Den här parametern eller egenskaper för den här parametern kan vara <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>context</code> parameter is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.StringConverter
  isExternal: false
  name: System.ComponentModel.StringConverter
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: ControlPropertyNameConverter()
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter()
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.ControlPropertyNameConverter()
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: ControlPropertyNameConverter
  nameWithType: ControlPropertyNameConverter.ControlPropertyNameConverter
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ControlPropertyNameConverter.GetStandardValues
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ControlPropertyNameConverter.GetStandardValuesExclusive
- uid: System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported*
  parent: System.Web.UI.WebControls.ControlPropertyNameConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ControlPropertyNameConverter.GetStandardValuesSupported
