### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.ICodeGenerator
  id: ICodeGenerator
  children:
  - System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  langs:
  - csharp
  name: ICodeGenerator
  nameWithType: ICodeGenerator
  fullName: System.CodeDom.Compiler.ICodeGenerator
  type: Interface
  summary: "Definierar ett gränssnitt för generering av kod."
  remarks: "> [!NOTE]> I .NET Framework-versioner 1.0- och 1.1 kod providers består av implementeringar av <xref:System.CodeDom.Compiler.CodeDomProvider>, ICodeGenerator, <xref:System.CodeDom.Compiler.ICodeParser>, och <xref:System.CodeDom.Compiler.ICodeCompiler>.</xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.ICodeParser> </xref:System.CodeDom.Compiler.CodeDomProvider> I den [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, och <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>metoder är inaktuell och metoder för ICodeGenerator och <xref:System.CodeDom.Compiler.ICodeCompiler>är tillgängliga direkt i <xref:System.CodeDom.Compiler.CodeDomProvider>klass</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> Du ska åsidosätta de här metoderna i din kod providerns implementering och anropar inte de grundläggande metoderna.       Utvecklare av kompilerare kan implementera gränssnittet för att tillåta personer att dynamiskt generera kod i ett visst språk. Detta kan användas för en rad olika syften, till exempel skapa guider för generering av kod som skapar dynamiska sammansättningar med innehåll som kan felsökas och mallbaserat dokument med inbäddad kod, till exempel ASP.NET.       En implementering av ICodeGenerator som vanligtvis har erhållits via ett anrop till <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>metoden <xref:System.CodeDom.Compiler.CodeDomProvider>.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>"
  syntax:
    content: public interface ICodeGenerator
  implements: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar en ESC identifierare för det angivna värdet."
  remarks: "CreateEscapedIdentifier testar om ID står i konflikt med reserverade eller nyckelord, och i så fall, returnerar ett motsvarande namn med formatering av språkspecifika escape-kod. Detta kallas för en överhoppad identifierare. Överhoppad identifierare innehåller samma `value` , men har escape formatera koden till skilja identifieraren från nyckelordet. Två exempel på implementering av före den `value` med &quot;@&quot; eller parenteser i `value` med &quot;[&quot; och &quot;]&quot;."
  syntax:
    content: public string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strängen som ska skapa en ESC identifierare för."
    return:
      type: System.String
      description: "Överhoppad identifierare för värdet."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar en giltig identifierare för det angivna värdet."
  remarks: "CreateValidIdentifier tester om ID står i konflikt med reserverade eller nyckelord och returnerar en giltig identifierare namn som inte står i konflikt. Returnerade identifierare innehåller samma `value` men står i konflikt med reserverade eller nyckelord, måste escape formatera koden till skilja identifieraren från nyckelordet. Normalt om värdet måste ändras, returneras värdet preceded med understreck &quot;_&quot;."
  syntax:
    content: public string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Strängen som ska generera en giltig identifierare för."
    return:
      type: System.String
      description: "Ett giltigt ID för det angivna värdet."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar kod för den angivna koden Document Object Model (CodeDOM) kompilering enheten och matar ut den angivna texten-skrivare med hjälp av de angivna alternativen."
  syntax:
    content: public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "En <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> att generera kod för."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>till utdata kod.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som anger alternativ som ska användas för att generera kod."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar kod för det angivna uttrycket kod Document Object Model (CodeDOM) och matar ut den angivna texten Writer."
  syntax:
    content: public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "En <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> som anger att generera kod för uttrycket."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>till utdata kod.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som anger alternativ som ska användas för att generera kod."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar kod för det angivna namnområdet kod Document Object Model (CodeDOM) och matar ut den angivna texten-skrivare med hjälp av de angivna alternativen."
  syntax:
    content: public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "En <xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> som anger namnområdet för att generera kod för."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>till utdata kod.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som anger alternativ som ska användas för att generera kod."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Skapar kod för den angivna koden Document Object Model (CodeDOM)-instruktionen och matar ut den angivna texten-skrivare med hjälp av de angivna alternativen."
  syntax:
    content: public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "En <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> som innehåller CodeDOM-element för att översätta."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>till utdata kod.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som anger alternativ som ska användas för att generera kod."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererar koden för den angivna koden Document Object Model (CodeDOM) typdeklarationen och matar ut den angivna texten-skrivare med hjälp av de angivna alternativen."
  syntax:
    content: public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "En <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> som anger typen för att generera kod för."
    - id: w
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>till utdata kod.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "En <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> som anger alternativ som ska användas för att generera kod."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hämtar den typ som anges av den angivna <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  syntax:
    content: public string GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som anger att returnera."
    return:
      type: System.String
      description: "En textrepresentation av den angivna typen för den här kodgeneratorn är utformat för att generera kod i språket. I Visual Basic kan returneras om typen System.Int32 &quot;Heltal&quot;."
  overload: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hämtar ett värde som anger om det angivna värdet är en giltig identifierare för det aktuella språket."
  remarks: "Den här metoden testar om en identifierare som är giltig. När du implementerar IsValidIdentifier i en härledd klass utforma metoden för att testa värdet som skickas till den och returnera `true` om värdet passar reglerna för språket och inte står i konflikt med ett nyckelord."
  syntax:
    content: public bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Värdet som ska testas för att vara en giltig identifierare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <code> value </code> parameter är en giltig identifierare, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Hämtar ett värde som anger om generatorn ger stöd för funktioner för språk som representeras av det angivna <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;> </xref> objekt."
  remarks: "Den här metoden kan anropas med ett antal <xref:System.CodeDom.Compiler.GeneratorSupport>flaggor samtidigt för att testa om en uppsättning funktioner genom att ansluta till lämplig funktionalitet flaggor tillsammans med en binär operator &quot;Eller&quot; (|).</xref:System.CodeDom.Compiler.GeneratorSupport>"
  syntax:
    content: public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);
    parameters:
    - id: supports
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "Funktioner för att testa generatorn för."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om de angivna funktionerna stöds. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Genererar ett undantag om det angivna värdet inte är en giltig identifierare."
  remarks: "Den här metoden genereras ett undantag om den angivna identifieraren inte är giltig enligt metodimplementering i stället för att returnera ett värde. Undantaget är vanligtvis <xref:System.ArgumentException>.</xref:System.ArgumentException> Den här metoden kan en kodgeneratorn som implementerar den här metoden för att skapa ett informativt felmeddelande baserat på värdet för en ogiltig identifierare."
  syntax:
    content: public void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Identifierare för att verifiera."
  overload: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identifieraren är inte giltig."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression
  nameWithType: ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement
  nameWithType: ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType
  nameWithType: ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports
  nameWithType: ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: ICodeGenerator.ValidateIdentifier
