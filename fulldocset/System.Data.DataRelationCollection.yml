### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelationCollection
  id: DataRelationCollection
  children:
  - System.Data.DataRelationCollection.#ctor
  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Clear
  - System.Data.DataRelationCollection.CollectionChanged
  - System.Data.DataRelationCollection.Contains(System.String)
  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  - System.Data.DataRelationCollection.GetDataSet
  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  - System.Data.DataRelationCollection.IndexOf(System.String)
  - System.Data.DataRelationCollection.Item(System.Int32)
  - System.Data.DataRelationCollection.Item(System.String)
  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Remove(System.String)
  - System.Data.DataRelationCollection.RemoveAt(System.Int32)
  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  langs:
  - csharp
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
  type: Class
  summary: "Representerar mängden <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt för den här <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "Ett DataRelationCollection-objekt kan navigera mellan relaterade överordnade-underordnade <xref:System.Data.DataTable>objekt.</xref:System.Data.DataTable>       Du skapar ett DataRelationCollection objekt genom att definiera den som en egenskap för antingen den <xref:System.Data.DataSet>eller <xref:System.Data.DataTable>, i stället för direkt med en konstruktor.</xref:System.Data.DataTable> </xref:System.Data.DataSet> (Använd det <xref:System.Data.DataSet.Relations%2A>-egenskapen för den <xref:System.Data.DataSet>, eller <xref:System.Data.DataTable.ParentRelations%2A>-egenskapen för den <xref:System.Data.DataTable>.)</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       För att komma åt samlingen använder den <xref:System.Data.DataSet.Relations%2A>egenskapen för den <xref:System.Data.DataSet>objekt.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       Så snart samlingen finns kan du hantera objekt som den innehåller genom att använda metoder som <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, och <xref:System.Data.DataRelationCollection.Remove%2A>.</xref:System.Data.DataRelationCollection.Remove%2A> </xref:System.Data.DataRelationCollection.Clear%2A> </xref:System.Data.DataRelationCollection.Add%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRelationCollection.#ctor
  id: '#ctor'
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> klass."
  syntax:
    content: protected DataRelationCollection ();
    parameters: []
  overload: System.Data.DataRelationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  id: Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a <xref href=&quot;System.Data.DataRelation&quot;></xref> to the <xref href=&quot;System.Data.DataRelationCollection&quot;></xref>."
  remarks: "Om relationen har lagts till i samlingen av <xref:System.Data.DataRelationCollection.CollectionChanged>händelse inträffar.</xref:System.Data.DataRelationCollection.CollectionChanged>       När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public void Add (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Den <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> att lägga till i samlingen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> relation </code> parametern är ett null-värde."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör redan den här samlingen eller det hör till en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen redan innehåller en relation med det angivna namnet. (Jämförelsen är inte skiftlägeskänsligt.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationen har angett ett ogiltigt tillstånd eftersom den har skapats."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med en angiven överordnad och underordnad kolumn, och det läggs till i samlingen."
  remarks: "När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "Den överordnade kolumnen för relationen."
    - id: childColumn
      type: System.Data.DataColumn
      description: "Kolumnen underordnade för relationen."
    return:
      type: System.Data.DataRelation
      description: "Skapade relationen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med det angivna överordnade och underordnade kolumner och lägger till den samlingen."
  remarks: "När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "De överordnade kolumnerna för relationen."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "De underordnade kolumnerna för relationen."
    return:
      type: System.Data.DataRelation
      description: "Skapade relationen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <code> relation </code> argumentet är ett null-värde."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör redan den här samlingen eller det hör till en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen redan innehåller en relation med samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationen har angett ett ogiltigt tillstånd eftersom den har skapats."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med angivet namn och överordnade och underordnade kolumner och lägger till den samlingen."
  remarks: "När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på relationen."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "Den överordnade kolumnen för relationen."
    - id: childColumn
      type: System.Data.DataColumn
      description: "Kolumnen underordnade för relationen."
    return:
      type: System.Data.DataRelation
      description: "Skapade relationen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med det angivna namnet och matriser av överordnade och underordnade kolumner och lägger till den samlingen."
  remarks: "Om relationen har lagts till i samlingen av <xref:System.Data.DataRelationCollection.CollectionChanged>händelse inträffar.</xref:System.Data.DataRelationCollection.CollectionChanged>       När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  example:
  - >-
    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]
     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> att skapa."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "En matris med överordnade <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekt."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "En matris med underordnade <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> objekt."
    return:
      type: System.Data.DataRelation
      description: "Den skapade <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relationsnamnet på är ett null-värde."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör redan den här samlingen eller det hör till en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen redan innehåller en relation med samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationen har angett ett ogiltigt tillstånd eftersom den har skapats."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med de angivna namnet, överordnade och underordnade kolumnerna, med valfria begränsningar enligt värdet för den <code> createConstraints </code> parameter, och det läggs till i samlingen."
  remarks: "När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation> Du kan ange om du vill förhindra detta `createConstraints` till FALSKT."
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på relationen."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "Den överordnade kolumnen för relationen."
    - id: childColumn
      type: System.Data.DataColumn
      description: "Kolumnen underordnade för relationen."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att skapa begränsningar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. (Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Data.DataRelation
      description: "Skapade relationen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Skapar en <xref href=&quot;System.Data.DataRelation&quot;> </xref> med angivet namn, matriser av överordnade och underordnade kolumner och värde som anger om du vill skapa en begränsning, och det läggs till i samlingen."
  remarks: "När en <xref:System.Data.DataRelation>objekt läggs till i samlingen <xref:System.Data.ForeignKeyConstraint>och <xref:System.Data.UniqueConstraint>objekt skapas som standard om de inte redan finns.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på den <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> att skapa."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "En matris med överordnade <xref href=&quot;System.Data.DataColumn&quot;> </xref> objekt."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "En matris med underordnade <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> objekt."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Skapa en begränsning; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRelation
      description: "Skapade relationen."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relationsnamnet på är ett null-värde."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör redan den här samlingen eller det hör till en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen redan innehåller en relation med samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Relationen har angett ett ogiltigt tillstånd eftersom den har skapats."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  id: AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Utför verifieringen på tabellen."
  syntax:
    content: protected virtual void AddCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relationen att kontrollera."
  overload: System.Data.DataRelationCollection.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relationen är null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör redan den här samlingen eller det hör till en annan samling."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Samlingen redan innehåller en relation med samma namn. (Jämförelsen är inte skiftlägeskänsligt.)"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  id: AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar delarna av den angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> matris till slutet av samlingen."
  remarks: "Om <xref:System.Data.DataSet.BeginInit%2A>har anropats `AddRange` lägger inte till alla objekt i samlingen förrän <xref:System.Data.DataSet.EndInit%2A>kallas.</xref:System.Data.DataSet.EndInit%2A> </xref:System.Data.DataSet.BeginInit%2A> Vid tidpunkten som `EndInit` är anropas samlingen fylls i med objekt som angetts i det senaste anropet till `AddRange`. Om `AddRange` anropas flera gånger i en `BeginInit`  /  `EndInit` aktivitetssekvensen bara de objekt som angetts i det senaste anropet till `AddRange` har lagts till."
  example:
  - >-
    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]
     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]
  syntax:
    content: public virtual void AddRange (System.Data.DataRelation[] relations);
    parameters:
    - id: relations
      type: System.Data.DataRelation[]
      description: "Matris med <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt som ska läggas till i samlingen."
  overload: System.Data.DataRelationCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  id: CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kontrollerar om den angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> kan tas bort från samlingen."
  syntax:
    content: public virtual bool CanRemove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relationen att kontrollera mot."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Data.DataRelation&quot;> </xref> kan vara borttagen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Clear
  id: Clear
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rensar samlingen av relationer."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Data.DataRelationCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inträffar när samlingen har ändrats."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kontrollerar om ett <xref href=&quot;System.Data.DataRelation&quot;> </xref> med det specifika namnet (skiftlägeskänsligt) finns i samlingen."
  syntax:
    content: public virtual bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på att hitta relationen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, om det finns en relation med det angivna namnet. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  id: CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopierar mängden <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt som börjar med det angivna indexet."
  syntax:
    content: public void CopyTo (System.Data.DataRelation[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRelation[]
      description: "Matris med <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt som ska kopieras till samlingen."
    - id: index
      type: System.Int32
      description: "Indexet för att starta från."
  overload: System.Data.DataRelationCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.GetDataSet
  id: GetDataSet
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Den här metoden stöder .NET Framework-infrastrukturen och är inte avsedd att användas direkt från din kod."
  syntax:
    content: protected abstract System.Data.DataSet GetDataSet ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "Den refererade datamängden."
  overload: System.Data.DataRelationCollection.GetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  id: IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index för den angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt."
  syntax:
    content: public virtual int IndexOf (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relationen som eftersöks."
    return:
      type: System.Int32
      description: "0-baserade index relationen eller -1 om relationen inte hittas i samlingen."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar index för den <xref href=&quot;System.Data.DataRelation&quot;> </xref> som anges."
  syntax:
    content: public virtual int IndexOf (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "Namnet på att hitta relationen."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för relation med det angivna namnet eller -1 om relationen inte finns i samlingen."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektet med det angivna indexet."
  syntax:
    content: public abstract System.Data.DataRelation this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet för att hitta."
    return:
      type: System.Data.DataRelation
      description: "Den <xref href=&quot;System.Data.DataRelation&quot;> </xref>, eller ha ett null-värde om det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> finns inte."
  overload: System.Data.DataRelationCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Indexet är större än antalet objekt i samlingen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Hämtar den <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt som angetts av namn."
  syntax:
    content: public abstract System.Data.DataRelation this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Namnet på att hitta relationen."
    return:
      type: System.Data.DataRelation
      description: "Den namngivna <xref href=&quot;System.Data.DataRelation&quot;> </xref>, eller ha ett null-värde om det angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> finns inte."
  overload: System.Data.DataRelationCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genererar den <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> händelse."
  remarks: 'Att en händelse utlöstes anropar händelsehanteraren via ett ombud. En översikt finns [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "En <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Data.DataRelationCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genererar den <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> händelse."
  remarks: 'Att en händelse utlöstes anropar händelsehanteraren via ett ombud. En översikt finns [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "En <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Data.DataRelationCollection.OnCollectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  id: Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort den angivna relationen från samlingen."
  remarks: "Den <xref:System.Data.DataRelationCollection.CollectionChanged>händelsen utlöses om remove-åtgärden lyckas.</xref:System.Data.DataRelationCollection.CollectionChanged> Observera att ta bort relationen inte tas bort alla associerade begränsningen-objekt."
  syntax:
    content: public void Remove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Ta bort relationen."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relationen är ett null-värde."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relationen tillhör inte samlingen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort relation med det angivna namnet från samlingen."
  remarks: "Den <xref:System.Data.DataRelationCollection.CollectionChanged>händelsen utlöses om remove-åtgärden lyckas.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på att ta bort relationen."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Samlingen har inte en relation med det angivna namnet."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tar bort relation med det angivna indexet från samlingen."
  remarks: "Den <xref:System.Data.DataRelationCollection.CollectionChanged>händelsen utlöses om remove-åtgärden lyckas.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indexet för att ta bort relationen."
  overload: System.Data.DataRelationCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Samlingen har inte en relation med det angivna indexet."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  id: RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Utför en kontroll på den angivna <xref href=&quot;System.Data.DataRelation&quot;> </xref> objekt."
  syntax:
    content: protected virtual void RemoveCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Den <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> objekt att kontrollera."
  overload: System.Data.DataRelationCollection.RemoveCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Samlingen har inte en relation med det angivna indexet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna relationen tillhör inte samlingen eller det hör till en annan samling."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRelationCollection.#ctor
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
- uid: System.Data.DataRelation[]
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation[]
  spec.csharp:
  - uid: System.Data.DataRelation
    name: DataRelation
    nameWithType: DataRelation
    fullName: DataRelation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
- uid: System.Data.DataRelationCollection.Clear
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
- uid: System.Data.DataRelationCollection.CollectionChanged
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataRelationCollection.Contains(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRelationCollection.GetDataSet
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
- uid: System.Data.DataRelationCollection.Item(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
- uid: System.Data.DataRelationCollection.Remove(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
- uid: System.Data.DataRelationCollection.#ctor*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection.DataRelationCollection
- uid: System.Data.DataRelationCollection.Add*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add
  nameWithType: DataRelationCollection.Add
- uid: System.Data.DataRelationCollection.AddCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore
  nameWithType: DataRelationCollection.AddCore
- uid: System.Data.DataRelationCollection.AddRange*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange
  nameWithType: DataRelationCollection.AddRange
- uid: System.Data.DataRelationCollection.CanRemove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataRelationCollection.CanRemove
- uid: System.Data.DataRelationCollection.Clear*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear
  nameWithType: DataRelationCollection.Clear
- uid: System.Data.DataRelationCollection.Contains*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains
  nameWithType: DataRelationCollection.Contains
- uid: System.Data.DataRelationCollection.CopyTo*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRelationCollection.CopyTo
- uid: System.Data.DataRelationCollection.GetDataSet*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet
  nameWithType: DataRelationCollection.GetDataSet
- uid: System.Data.DataRelationCollection.IndexOf*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRelationCollection.IndexOf
- uid: System.Data.DataRelationCollection.Item*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item
  nameWithType: DataRelationCollection.Item
- uid: System.Data.DataRelationCollection.OnCollectionChanged*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataRelationCollection.OnCollectionChanged
- uid: System.Data.DataRelationCollection.OnCollectionChanging*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging
  nameWithType: DataRelationCollection.OnCollectionChanging
- uid: System.Data.DataRelationCollection.Remove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove
  nameWithType: DataRelationCollection.Remove
- uid: System.Data.DataRelationCollection.RemoveAt*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRelationCollection.RemoveAt
- uid: System.Data.DataRelationCollection.RemoveCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore
  nameWithType: DataRelationCollection.RemoveCore
