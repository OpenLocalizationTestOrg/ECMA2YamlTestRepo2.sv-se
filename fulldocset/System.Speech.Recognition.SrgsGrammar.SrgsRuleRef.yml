### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  id: SrgsRuleRef
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri
  - System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void
  langs:
  - csharp
  name: SrgsRuleRef
  nameWithType: SrgsRuleRef
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  type: Class
  summary: "Representerar elementet grammatik som anger en referens till en regel."
  remarks: "Klassen SrgsRuleRef är särskilt användbart när du vill återanvända en <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>element vars innehåll har redan definierats.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Genom att återanvända befintliga regler, kan du skapa komplexa grammatik snabbare.       Du kan använda någon av konstruktorer av klassen SrgsRuleRef för att referera till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt eller en `rule` element om följande är sant:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objektet är i innehållande grammatiken och värdet för den <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A>egenskapen är <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope>eller <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>      - `rule` Element finns i en extern grammatik och värdet för dess `scope` attributet `public`.      - `rule` Elementet är i ett externt grammatik värdet för dess `scope` attributet `private`, och det har deklarerats som den `root rule` för externa grammatik.       Den här klassen representerar den `ruleref` element som har definierats i World Wide Web Consortium (W3C) [Speech Recognition grammatik specifikationen (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). Information om SRGS `ruleref` element och information om stödet av System.Speech, se [ruleref elementet](http://msdn.microsoft.com/en-us/56eb0031-4908-4788-83ab-7c5e19aa4ac0)."
  syntax:
    content: >-
      [System.ComponentModel.ImmutableObject(true)]

      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString()}")]

      public class SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(SrgsRule)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klassen och anger regeln för att referera till."
  remarks: "Den här konstruktorn skapar en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt i den innehållande grammatiken.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Skapa en regel som refererar till en `rule` element i en extern grammatikfilen använder någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>"
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. After creating the <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object `winnerRule` and giving it the string identifier `WorldCupWinner`, the example appends the string  \"A nation that has won the World Cup is\" to the rule. Using <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objects, the example then builds a list of European countries and a list of South American countries, and adds each list to its respective rule, `ruleEurope` or `ruleSAmerica`. The example then creates rule references for `ruleEurope` and `ruleSAmerica` and adds them to the `WorldCupWinner` rule.  \n  \n```  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n```  \n  \n The created grammar has the following form.  \n  \n```  \n<grammar version=\"1.0\" xml:lang=\"en-US\" xmlns=\"http://www.w3.org/2001/06/grammar\" root=\"WorldCupWinner\">  \n    <rule id=\"WorldCupWinner\" scope=\"public\">  \n        <item> A nation that has won the world cup is </item>  \n        <one-of>  \n            <item>  \n                <ruleref uri=\"#EuropeanNations\" />  \n            </item>  \n            <item>  \n                <ruleref uri=\"#SouthAmericanNations\" />  \n            </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"EuropeanNations\">  \n        <one-of>  \n            <item> England </item>  \n            <item> France </item>  \n            <item> Germany </item>  \n            <item> Italy </item>  \n        </one-of>  \n    </rule>  \n    <rule id=\"SouthAmericanNations\">  \n        <one-of>  \n            <item> Argentina </item>  \n            <item> Brazil </item>  \n            <item> Uruguay </item>  \n        </one-of>  \n    </rule>  \n</grammar>  \n```"
  syntax:
    content: public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule);
    parameters:
    - id: rule
      type: System.Speech.Recognition.SrgsGrammar.SrgsRule
      description: "Objektet att referera till."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(Uri)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klassen och anger platsen för den externa grammatikfilen att referera till."
  remarks: "Den här konstruktorn skapar en regel som refererar till en extern grammatikfil. URI: N kan också innehålla identifierare för en regel för att referera till exempel `http://www.contoso.com/ExternalGrammar.grxml#targetRule`.  Om den `uri` som du anger en regel-ID, regel referenspunkter för rot-regeln för grammatik target. Skapa en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt inom samma grammatik, använda någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  example:
  - "The following example creates a grammar for an application that returns information about bus shuttle service. The first method, `GrammarUrlForRoute`, takes a string that specifies a route and appends it to a string specifying the location of a grammar. This specifies a particular rule in that grammar. The method returns a `Uri` for that rule.  \n  \n The second method, `CreateGrammarForRoute`, creates an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> element named `grammar` with a rule reference specified by the `Uri` passed to it by `GrammarUrlForRoute`. Note that the variable named _route is a member of an enclosing class.  \n  \n```  \nprivate Uri GrammarUrlForRoute(string route)  \n{  \n  return new Uri(\"http://localhost/MyBus/MyBusLocations.grxml#LocationsForRoute\" + route);  \n}  \n  \nprivate SrgsDocument CreateGrammarForRoute()  \n{  \n  SrgsDocument grammar = new SrgsDocument();  \n  grammar.Mode = SrgsGrammarMode.Voice;  \n  SrgsRule rule = new SrgsRule(\"LocationsForRoute\" + _route);  \n  SrgsRuleRef ruleref = new SrgsRuleRef(GrammarUrlForRoute(_route));  \n  \n  SrgsSemanticInterpretationTag tag = new SrgsSemanticInterpretationTag (\"$.Location = $$\");  \n  \n  rule.Elements.Add(ruleref);  \n  rule.Elements.Add(tag);  \n  grammar.Rules.Add(rule);  \n  grammar.Root = rule;  \n  return grammar;  \n}  \n```  \n  \n> [!NOTE]\n>  The variable named _`route` is undeclared and undefined in the preceding sample. It should be declared as a <xref:System.String> and contain the route number for a particular bus route before the preceding sample is compiled and run."
  syntax:
    content: public SrgsRuleRef (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för en grammatikfil utanför den innehållande grammatiken."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(SrgsRule,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klassen som anger att regeln ska referens- och en sträng som innehåller en semantisk nyckel."
  remarks: "Den här konstruktorn skapar en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt i den innehållande grammatiken.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Skapa en regel som refererar till en `rule` element i en extern grammatikfilen använder någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>"
  example:
  - "The following example creates a grammar for choosing the cities for a flight. The example constructs two <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> instances, each of which specifies a semantic key. Both rule references target the same <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> object, named `cities`, but tag the recognition result from the rule reference with a different semantic key. The semantic key identifies a recognized city as the departure city or the arrival city for the flight. The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the keys to retrieve the semantics values created using <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> from the recognition result.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize a SpeechRecognitionEngine object.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\"en-US\")))  \n      {  \n  \n        // Build a rule with a list of cities, assign a semantic value to each city.  \n        SrgsItem chi = new SrgsItem(\"Chicago\");  \n        chi.Add(new SrgsNameValueTag(\"ORD\"));  \n        SrgsItem bos = new SrgsItem(\"Boston\");  \n        bos.Add(new SrgsNameValueTag(\"BOS\"));  \n        SrgsItem mia = new SrgsItem(\"Miami\");  \n        mia.Add(new SrgsNameValueTag(\"MIA\"));  \n        SrgsItem dal = new SrgsItem(\"Dallas\");  \n        dal.Add(new SrgsNameValueTag(\"DFW\"));  \n  \n        SrgsOneOf cities = new SrgsOneOf(new SrgsItem[] { chi, bos, mia, dal });  \n        SrgsRule citiesRule = new SrgsRule(\"flightCities\");  \n        citiesRule.Add(cities);  \n  \n        // Build the root rule, add rule references to the cities rule.  \n        SrgsRule flightBooker = new SrgsRule(\"bookFlight\");  \n        flightBooker.Add(new SrgsItem(\"I want to fly from\"));  \n        flightBooker.Add(new SrgsRuleRef(citiesRule, \"departureCity\"));  \n        flightBooker.Add(new SrgsItem(\"to\"));  \n        flightBooker.Add(new SrgsRuleRef(citiesRule, \"arrivalCity\"));  \n  \n        // Build an SrgsDocument object from the flightBooker rule and add the cities rule.  \n        SrgsDocument cityChooser = new SrgsDocument(flightBooker);  \n        cityChooser.Rules.Add(citiesRule);  \n  \n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \n        Grammar departArrive = new Grammar(cityChooser);  \n        departArrive.Name = (\"Cities Grammar\");  \n        recognizer.LoadGrammarAsync(departArrive);  \n  \n        // Configure recognizer input.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Start asynchronous recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting asynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Speech recognized: \" + e.Result.Text);  \n      Console.WriteLine();  \n      Console.WriteLine(\"Semantic results:\");  \n      Console.WriteLine(\"  The departure city is: \" + e.Result.Semantics[\"departureCity\"].Value);  \n      Console.WriteLine(\"  The destination city is: \" + e.Result.Semantics[\"arrivalCity\"].Value);  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey);
    parameters:
    - id: rule
      type: System.Speech.Recognition.SrgsGrammar.SrgsRule
      description: "Objektet att referera till."
    - id: semanticKey
      type: System.String
      description: "Semantisk nyckel."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(Uri,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klass, ange platsen för den externa grammatikfilen och identifierare för regeln för att referera till."
  remarks: "Den här konstruktorn skapar en regel som refererar till en `rule` element i en extern grammatikfilen. Skapa en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt inom samma grammatik, använda någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  syntax:
    content: public SrgsRuleRef (Uri uri, string rule);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för en grammatikfil utanför den innehållande grammatiken."
    - id: rule
      type: System.String
      description: "Identifierare för regeln för att referera till."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       <code>rule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rule</code>är tom."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(SrgsRule,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule,String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klassen som anger att regeln ska referera sträng alias för semantisk ordlista och initieringsparametrar."
  remarks: "Den här konstruktorn skapar en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt i den innehållande grammatiken.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Skapa en regel som refererar till en `rule` element i en extern grammatikfilen använder någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>"
  syntax:
    content: public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey, string parameters);
    parameters:
    - id: rule
      type: System.Speech.Recognition.SrgsGrammar.SrgsRule
      description: "Objektet att referera till."
    - id: semanticKey
      type: System.String
      description: "Semantisk nyckel."
    - id: parameters
      type: System.String
      description: "Initieringsparametrar för en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> objekt."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)
  id: '#ctor(System.Uri,System.String,System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(Uri,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klass, ange platsen för den externa grammatiken fil, identifierare för regeln och strängen alias för semantisk ordlistan."
  remarks: "Den här konstruktorn skapar en regel som refererar till en `rule` element i en extern grammatikfilen. Skapa en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt inom samma grammatik, använda någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  syntax:
    content: public SrgsRuleRef (Uri uri, string rule, string semanticKey);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för en grammatikfil utanför den innehållande grammatiken."
    - id: rule
      type: System.String
      description: "Identifierare för regeln för att referera till."
    - id: semanticKey
      type: System.String
      description: "En aliassträng för semantisk ordlistan."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       <code>semanticKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>semanticKey</code>är tom."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)
  id: '#ctor(System.Uri,System.String,System.String,System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SrgsRuleRef(Uri,String,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String,String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Initierar en ny instans av den <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> klass, ange platsen för den externa grammatiken fil, identifierare för regeln, sträng alias för semantisk ordlista och initieringsparametrar."
  remarks: "Den här konstruktorn skapar en regel som refererar till en `rule` element i en extern grammatikfilen. Skapa en regel som refererar till ett <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>objekt inom samma grammatik, använda någon av följande konstruktorer:- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>"
  syntax:
    content: public SrgsRuleRef (Uri uri, string rule, string semanticKey, string parameters);
    parameters:
    - id: uri
      type: System.Uri
      description: "Platsen för en grammatikfil utanför den innehållande grammatiken."
    - id: rule
      type: System.String
      description: "Identifierare för regeln för att referera till."
    - id: semanticKey
      type: System.String
      description: "Semantisk nyckel."
    - id: parameters
      type: System.String
      description: "Initieringsparametrar för en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> objekt."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation
  id: Dictation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: Dictation
  nameWithType: SrgsRuleRef.Dictation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Definierar en regel som kan matcha talade indata som angetts av diktamenavsnittet som är associerade med denna grammatik."
  syntax:
    content: public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation;
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage
  id: Garbage
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: Garbage
  nameWithType: SrgsRuleRef.Garbage
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Definierar en regel som kan matcha alla tal upp till nästa regel matchning, Nästa token, eller till slutet av talade indata."
  syntax:
    content: public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage;
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling
  id: MnemonicSpelling
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: MnemonicSpelling
  nameWithType: SrgsRuleRef.MnemonicSpelling
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Anger att talindata kan innehålla stavat out bokstäver i ett ord och den stavat out bokstäver kan tolkas som ett ord."
  syntax:
    content: public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling;
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null
  id: "Null"
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: "Null"
  nameWithType: SrgsRuleRef.Null
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Definierar en regel som matchas automatiskt i frånvaron av alla ljudinsignal."
  syntax:
    content: public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null;
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params
  id: Params
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: Params
  nameWithType: SrgsRuleRef.Params
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Hämtar initieringsparametrar för en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> element."
  syntax:
    content: public string Params { get; }
    return:
      type: System.String
      description: "Initieringsparametrar för en <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> element."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey
  id: SemanticKey
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: SemanticKey
  nameWithType: SrgsRuleRef.SemanticKey
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Hämtar en aliassträng för semantisk ordlistan."
  syntax:
    content: public string SemanticKey { get; }
    return:
      type: System.String
      description: "En aliassträng för semantisk ordlistan."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri
  id: Uri
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: Uri
  nameWithType: SrgsRuleRef.Uri
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Hämtar URI: N för regeln som detta <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsRuleRef&quot;> </xref> referenser."
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "Platsen för regeln för att referera till."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void
  id: Void
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  langs:
  - csharp
  name: Void
  nameWithType: SrgsRuleRef.Void
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Definierar en regel som aldrig kan läsas. Lägga till VOID i en sekvens automatiskt gör sekvens unspeakable."
  syntax:
    content: public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void;
    return:
      type: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(SrgsRule)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRule
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsRule
  nameWithType: SrgsRule
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRule
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(Uri)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(SrgsRule,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(Uri,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(SrgsRule,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(SrgsRule,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(SrgsRule,String,String)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(Uri,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String,String)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef(Uri,String,String,String)
  nameWithType: SrgsRuleRef.SrgsRuleRef(Uri,String,String,String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SrgsRuleRef(Uri,String,String,String)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Dictation
  nameWithType: SrgsRuleRef.Dictation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsRuleRef
  nameWithType: SrgsRuleRef
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Garbage
  nameWithType: SrgsRuleRef.Garbage
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: MnemonicSpelling
  nameWithType: SrgsRuleRef.MnemonicSpelling
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: "Null"
  nameWithType: SrgsRuleRef.Null
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Params
  nameWithType: SrgsRuleRef.Params
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SemanticKey
  nameWithType: SrgsRuleRef.SemanticKey
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Uri
  nameWithType: SrgsRuleRef.Uri
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Void
  nameWithType: SrgsRuleRef.Void
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SrgsRuleRef
  nameWithType: SrgsRuleRef.SrgsRuleRef
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Params
  nameWithType: SrgsRuleRef.Params
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: SemanticKey
  nameWithType: SrgsRuleRef.SemanticKey
- uid: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsRuleRef
  isExternal: false
  name: Uri
  nameWithType: SrgsRuleRef.Uri
