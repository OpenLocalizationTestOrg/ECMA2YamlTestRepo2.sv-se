### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "Representerar en ASPX-fil, även kallat ett webbformulär sidan begärs från en server som är värd för ASP.NET-webbprogram."
  remarks: "Klassen sida är associerad med filer som har filnamnstillägget aspx. Dessa filer kompileras under körning som sidan objekt och cachelagras i serverminnet.       Om du vill skapa en Web Forms-sida med bakomliggande kod tekniken härleds från den här klassen. Snabb utveckling (RAD) programutvecklare, till exempel Microsoft Visual Studio använder automatiskt den här modellen för att skapa webbformulär.       Sidan objektet fungerar som namngivande behållare för alla serverkontroller på en sida, utom de som implementerar det <xref:System.Web.UI.INamingContainer>gränssnitt eller är underordnade kontroller av kontroller som implementerar det här gränssnittet.</xref:System.Web.UI.INamingContainer>       Klassen sidan är en kontroll som fungerar som användargränssnittet för ditt webbprogram och ska därför granskas för att säkerställa bästa praxis för att skriva kod som säkra och skydda program följs. Allmän information om det finns [översikt av Web Application säkerhetshot](~/add/includes/ajax-current-ext-md.md), [NIB: säkerhetsmetoder för principen](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), och [viktiga säkerhetsfunktioner](~/add/includes/ajax-current-ext-md.md). Mer detaljerad information finns i [skydda standardkontroller](~/add/includes/ajax-current-ext-md.md), [så: Visa säker felmeddelanden](~/add/includes/ajax-current-ext-md.md), [så: skydda mot skript utnyttjar i ett webbprogram genom att använda HTML-kodas till strängar](~/add/includes/ajax-current-ext-md.md), och [introduktion till verifiering kontroller](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.Page&quot;> </xref> klass."
  remarks: "Standardkonstruktorn initierar alla fält till respektive standardvärde."
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anropa initiera sidan för att skapa en samling av innehåll som överförs till en huvudsida (från innehållskontroller) om den aktuella sidan eller huvudsida som refererar till en huvudsida."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "Namnet på mallen innehåll för att lägga till."
    - id: template
      type: System.Web.UI.ITemplate
      description: "Innehållsmallen"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Det finns redan en mall för innehåll med samma namn."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar inledande och avslutande händelse ombud för hanterare som inte kräver statusinformation för en asynkron sida."
  remarks: "Använd metoden AddOnPreRenderCompleteAsync för att lägga till hanterare i en asynkron webbsida.       Du kan registrera flera asynkrona hanterare; endast en hanterare körs dock i taget. Om du vill bearbeta flera asynkrona metoder samtidigt bör du använda en enda <xref:System.Web.BeginEventHandler>metod och starta flera asynkrona åtgärder från hanteraren.</xref:System.Web.BeginEventHandler>       De asynkrona hanterarna kallas mellan den <xref:System.Web.UI.Control.PreRender>och <xref:System.Web.UI.Page.PreRenderComplete>händelser.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       Först och alla <xref:System.Web.UI.Page>händelser (via den <xref:System.Web.UI.Control.PreRender>händelse) körs, och vart registreras <xref:System.Web.BeginEventHandler>metoden anropas.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> När hanteraren har slutförts motsvarande <xref:System.Web.EndEventHandler>metoden anropas.</xref:System.Web.EndEventHandler> Om det finns flera asynkrona hanterare, kallas nästa hanteraren.       Efter de registrerade asynkrona händelsehanterarna har anropats, resten av sidan händelser kallas, från och med den <xref:System.Web.UI.Page.PreRenderComplete>händelse.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Delegaten för den <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> metod."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Delegaten för den <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> metod."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar inledande och avslutande händelsehanterare ombud för en asynkron sida."
  remarks: "Använd metoden AddOnPreRenderCompleteAsync för att lägga till hanterare som kräver statusinformation till en asynkron webbsida. Objektet som skickats i den `state` parametern kan vara ett objekt som krävs för ditt program för att överföra information mellan händelsehanterare delegater som anges i den `beginHandler` och `endHandler` parametrar.       Du kan registrera flera asynkrona hanterare; endast en hanterare körs dock i taget. Om du vill bearbeta flera asynkrona metoder samtidigt bör du använda en enda <xref:System.Web.BeginEventHandler>metod och starta flera asynkrona åtgärder från hanteraren.</xref:System.Web.BeginEventHandler>       De asynkrona hanterarna kallas mellan den <xref:System.Web.UI.Control.PreRender>och <xref:System.Web.UI.Page.PreRenderComplete>händelser.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       Först och alla <xref:System.Web.UI.Page>händelser (via den <xref:System.Web.UI.Control.PreRender>händelse) körs, och vart registreras <xref:System.Web.BeginEventHandler>metoden anropas.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> När hanteraren har slutförts motsvarande <xref:System.Web.EndEventHandler>metoden anropas.</xref:System.Web.EndEventHandler> Om det finns flera asynkrona hanterare, kallas nästa hanteraren.       Efter de registrerade asynkrona händelsehanterarna har anropats, resten av sidan händelser kallas, från och med den <xref:System.Web.UI.Page.PreRenderComplete>händelse.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Delegaten för den <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> metod."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Delegaten för den <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> metod."
    - id: state
      type: System.Object
      description: "Ett objekt som innehåller information om tillstånd för händelsehanterare."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till en lista över beroende filer som utgör den aktuella sidan. Den här metoden används internt av ASP.NET-sidans ramverk och är inte avsedd att användas direkt från din kod."
  remarks: "Metoden AddWrappedFileDependencies lägger till en lista över filer, till exempel användare kontrollfiler som utgör den aktuella sidan. Om någon av dessa sidor kompileras hela sidan nästa gång den begärs. Den här metoden stöder .NET Framework-infrastrukturen och är inte avsedd att användas direkt från din kod."
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "En <xref:System.Object>med en lista över filnamn.</xref:System.Object>"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> objekt för den aktuella webbegäran."
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "Den aktuella informationen i den <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> klass."
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar en begäran för sidan ASP (Active Server) resurser. Den här metoden ger kompatibilitet med äldre ASP-program."
  remarks: "Anropa inte den här metoden."
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "En <xref href=&quot;System.Web.HttpContext&quot;> </xref> med information om den aktuella begäranden."
    - id: cb
      type: System.AsyncCallback
      description: "Återanropsmetoden."
    - id: extraData
      type: System.Object
      description: "Några extra data som behövs för att bearbeta begäran på samma sätt som en ASP-begäran."
    return:
      type: System.IAsyncResult
      description: "Ett <xref:System.IAsyncResult>objekt.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Avbryter en begäran om sidan ASP (Active Server) resurser. Den här metoden ger kompatibilitet med äldre ASP-program."
  remarks: "Anropa inte den här metoden."
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "ASP-sidan som genererats av begäran."
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger ett värde som anger om sidan kan utföras i en enkeltrådad inneslutning (STA) tråd."
  remarks: "Om värdet är `true`, den här egenskapen kan köras på en enkeltrådad inneslutning (STA) tråd sidan. På så sätt kan sidan för att anropa STA-komponenter, till exempel komponenter som utvecklats med Visual Basic 6.0. Egenskapen `true` kan sidan för att anropa COM +-komponenter som kräver åtkomst till ohanterad inbyggda ASP-objekt. De är tillgängliga via ASP `ObjectContext` objekt eller `OnStartPage` metod.       I de flesta fall behöver du inte ange egenskapen i kod. Ange den `aspcompat` attributet `true` med direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan har stöd för Active Server Pages (ASP) kod. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger ett värde som anger om sidan bearbetas synkront eller asynkront."
  remarks: "Egenskapen AsyncMode har angetts av den <xref:System.Web.UI.Page>parsern när koden för sidan har genererats.</xref:System.Web.UI.Page> Använd den `Async` attribut i direktivet att ange värdet.       Asynkron sidor fungerar inte när den `AspCompat` -attributet är inställt på `true` eller `Transaction` attribut anges till ett värde annat än `Disabled` i direktivet."
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan bearbetas asynkront; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Påbörjar bearbetningen av en asynkron begäran."
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Den <xref href=&quot;System.Web.HttpContext&quot;> </xref> för begäran."
    - id: callback
      type: System.AsyncCallback
      description: "Återanropsmetoden ska meddelas när processen är klar."
    - id: extraData
      type: System.Object
      description: "Tillstånd data för den asynkrona metoden."
    return:
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>som refererar till asynkron begäran.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bearbetning av en asynkron begäran avslutas."
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "En <xref:System.IAsyncResult>refererar till en väntande asynkron begäran.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger timeout-intervall som används vid bearbetning av asynkrona åtgärder."
  remarks: "Asynkron timeout på sidan representerar tidsperiod som sidan väntar för asynkrona åtgärder. I de flesta fall behöver du inte ange egenskapen i kod. Sidan asynkron timeout intervall med den Webbkonfigurationsfilen eller i direktivet. Värden som anges i konfigurationsavsnittet sida skrivs över av page-direktivet.       Definiera asynkrona aktiviteten med hjälp av den <xref:System.Web.UI.PageAsyncTask>klass och registrera en inledande, en avslutas och en timeout-hanterare.</xref:System.Web.UI.PageAsyncTask> Om den asynkrona aktiviteten inte slutförs inom det tidsintervallet som angetts kommer att anropas timeout-hanteraren."
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "En <xref:System.TimeSpan>som innehåller tillåtna tidsperioden för asynkrona aktiviteten har slutförts.</xref:System.TimeSpan> Standard-tidsintervall är 45 sekunder."
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egenskapen har angetts till ett negativt värde."
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger kontrollen på sidan som används för att utföra återanslag."
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "Den kontroll som används för att utföra återanslag."
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger ett värde som indikerar om sidans utdata buffertlagras."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange attributet buffert till `true` med direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad.      > [!NOTE] > I bufferten egenskapen anger och hämtar den <xref:System.Web.HttpResponse.BufferOutput%2A>egenskapen.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidans utdata buffertlagras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objekt som är associerade med applikationen som sidan finns."
  remarks: "Ett program <xref:System.Web.Caching.Cache>objektet kan du lagra och hämta godtyckliga data för efterföljande förfrågningar.</xref:System.Web.Caching.Cache> Cacheminnet är inte specifikt associerad med ett session-sida eller användare. Den används huvudsakligen för att förbättra programmets prestanda. Mer information finns i [cachelagring programdata](~/add/includes/ajax-current-ext-md.md). Mer information om skillnaden mellan program cachelagring och cachelagring av utdata i sidan finns [översikt över cachelagring ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "Den <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> kopplad till sidans programmet."
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "En instans av <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> har inte skapats."
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den fråga strängdelen för begärd URL."
  remarks: "Egenskapen ClientQueryString innehåller frågan sträng-delen av en URL som begärs av webbläsaren. Till exempel begärd URL är &quot;http://www.contoso.com/default.aspx?id=100&quot;, egenskapen ClientQueryString innehåller &quot;id =&100;&quot;. Egenskapen ClientQueryString kodas; Använd den <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>metod för att avkoda frågesträngen.</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "Frågan strängdelen för begärd URL."
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en <xref href=&quot;System.Web.UI.ClientScriptManager&quot;> </xref> objekt som används för att hantera, registrera och lägga till skript på sidan."
  remarks: "Använd egenskapen ClientScript för att hämta en <xref:System.Web.UI.ClientScriptManager>objekt som kan användas för att hantera, registrera och lägga till skript till en webbsida.</xref:System.Web.UI.ClientScriptManager> Mer information finns i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager>       Den <xref:System.Web.UI.ClientScriptManager>klassen är ny i [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] och ersätter <xref:System.Web.UI.Page>klassen metoder för att hantera skript som är nu föråldrade.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager>"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som gör det möjligt att åsidosätta automatisk avkänning av webbläsarfunktioner och ange hur en sidan renderas för webbläsarklienter viss."
  remarks: "Om du inte anger egenskapen ClientTarget den <xref:System.Web.HttpBrowserCapabilities>som är associerat med den <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>egenskapen visar funktionerna i klientens webbläsare.</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> Om du anger den här egenskapen, identifiering av klientens webbläsare är inaktiverad och sidan använder webbläsarfunktioner som är associerade med värdet (alias) som du anger.       Web.config-konfigurationsfil på webbserver som definierar följande standardalias som du kan använda som en förkortning för vanliga användaragent strängar:- `uplevel`, vilket innebär att webbläsarfunktioner motsvarar Internet Explorer 6.0.      - `downlevel`, vilket innebär att webbläsarfunktioner motsvarar gamla webbläsare som inte stöder klientskript. Du kan använda detta alias för att avgöra hur webbsidor fungerar i en webbläsare som klienten skript är inaktiverat.       Du kan ange det alias som genom programmering med den här egenskapen eller kan du ändra det deklarativt med den `ClientTarget` attribut i direktivet.       Du kan definiera ytterligare alias i den `clientTarget` avsnitt i Web.config-filen på programnivå. Mer information finns i [clientTarget Element (inställningsschema för ASP.NET)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)."
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "En <xref:System.String>som anger webbläsarfunktioner som du vill åsidosätta.</xref:System.String>"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger ID på sidan koden för aktuellt <xref href=&quot;System.Web.UI.Page&quot;> </xref>."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `CodePage` attribut till det värde du vill använda direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "Ett heltal som motsvarar den kod sida identifieraren för aktuellt <xref href=&quot;System.Web.UI.Page&quot;> </xref>."
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger http-MIME-typ för den <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objektet som är associerat med sidan."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `ContentType` attributet med direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "HTTP-MIME-typen som är associerade med den aktuella sidan."
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.HttpContext&quot;> </xref> objektet som är associerat med sidan."
  remarks: "Den här egenskapen ger programmatisk åtkomst till kontexten sidan som körs i, inklusive information om begäran, svar, session och program."
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "En <xref href=&quot;System.Web.HttpContext&quot;> </xref> objekt som innehåller information som associeras med den aktuella sidan."
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skapar en <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt att återge sidans innehåll."
  remarks: "Metoden CreateHtmlTextWriter skapar en <xref:System.IO.TextWriter>via den <xref:System.Web.HttpRequest.Browser%2A>egenskapen för den <xref:System.Web.HttpContext.Request%2A>som är associerat med begäran.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.IO.TextWriter> Du kan lägga till en referens till en <xref:System.Web.UI.HtmlTextWriter>i den `browserCaps` konfigurationsavsnittet.</xref:System.Web.UI.HtmlTextWriter> Åsidosätta metoden CreateHtmlTextWriter för att utföra anpassad sökning."
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>används för att skapa den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skapar en angiven <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt att återge sidans innehåll."
  remarks: "Den här metoden används internt i sidan nätverkskort."
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>används för att skapa den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: writerType
      type: System.Type
      description: "Typ av text-skrivaren för att skapa."
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> som skapar innehåll på sidan."
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den <code> writerType </code> parametern anges till en ogiltig datatyp."
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger kultur-ID för den <xref href=&quot;System.Threading.Thread&quot;> </xref> objektet som är associerat med sidan."
  remarks: "Ange den `Culture` attribut i direktivet i ASPX-fil. När sidan begärs anger dynamiskt genererad klassen värdet för den här egenskapen. Du kan dessutom också explicit ange värdet på egenskapen kultur programmässigt eller i elementet i Web.config-filen.       Egenskapen kultur används för att lokalisera innehåll. Du kan ändra det till någon giltig kultur-ID. Till exempel den `en-us` kultur-ID anger sidan till amerikansk engelska, medan den `fr` kultur-ID anger sidan till franska. Du kan också ange värdet `auto` som utför automatisk identifiering av webbläsaren prioriterade språk och Ställ in den. Automatisk identifiering kan vara kvalificerat med ett standardvärde som `auto:en-us`.       Mer information finns i <xref:System.Globalization.CultureInfo>Översikt över klassen.</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "En giltig kultur-ID."
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Utför alla initieringen av instansen av den <xref href=&quot;System.Web.UI.Page&quot;> </xref> klass som krävs av RAD designers. Den här metoden används endast i designläge."
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> av data som skickats tillbaka till sidan med en POST eller en GET-kommandot."
  remarks: "DeterminePostBackMode-metoden returnerar en <xref:System.Collections.Specialized.NameValueCollection>objekt som innehåller data bokförd tillbaka till sidan.</xref:System.Collections.Specialized.NameValueCollection> Förekomsten av sidan dolda fält VIEWSTATE och EVENTTARGET används för att avgöra om ett återanslående har uppstått. Den <xref:System.Web.UI.Page.IsPostBack%2A>egenskapen när DeterminePostBackMode-metoden anropas.</xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objekt som innehåller formulärdata. Om kommandot efter återanslåendet informationen returneras från den <xref:System.Web.UI.Page.Context*>objekt.</xref:System.Web.UI.Page.Context*> Om återanslåendet används kommandot GET, returneras sträng frågeinformation. Om sidan begärs för första gången <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras."
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en mängd data som anslogs namn-värde med hjälp av en POST eller GET-command utan att utföra valideringen för ASP.NET på begäran."
  remarks: "Mer information finns i <xref:System.Web.UnvalidatedRequestValues>klassen.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Ett objekt som innehåller unvalidated formulärdata."
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om sidan validerar återanslående och motringning händelser."
  remarks: "När egenskapen EnableEventValidation har angetts `true`, ASP.NET verifierar att en kontroll händelse kommer från användargränssnittet som renderades av kontrollen. En kontroll registrerar händelser under återgivningen och verifierar sedan händelser vid återanslående eller återanrop hantering. Om en listkontroll innehåller alternativ som numrerade 1, 2 eller 3 när sidan renderas och om ett återanslående begäran tas emot för att ange Alternativnummer 4, genererar ASP.NET ett undantag. Alla händelsedriven kontroller i ASP.NET använder den här funktionen som standard.       Om du skriver klientskript som ändrar en kontroll i klienten vid körning, du kan behöva använda det <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metod för att undvika falska händelse verifieringsfel.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>      > [!IMPORTANT] > Funktionen minskar risken för obehöriga återanslående begäranden och återanrop. Det rekommenderas starkt att du inte inaktivera validering av händelsen.       Anger du egenskapen EnableEventValidation genom att ange den `enableEventValidation` attribut i direktivet eller `enableEventValidation` attribut för elementet i Web.config-filen. Om du anger den här egenskapen i koden kan ange du den innan sidan har initierats."
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan validerar återanslående och motringning händelserna. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen EnableEventValidation angavs när sidan har initierats."
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om sidan behåller sin visningsstatus och visningsstatus för alla servrar som styr den innehåller, när den aktuella begäranden avslutas."
  remarks: "Information om varför du kanske vill inaktivera visningsstatus finns <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>       Även om EnableViewState är `false`, sidan kan innehålla ett tillstånd dolda view-fält som används av ASP.NET för att identifiera ett återanslående."
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan behåller sitt visningstillstånd; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om ASP.NET ska kontrollera Meddelandekoder autentisering (MAC) på sidans visningstillstånd när sidan skickas tillbaka från klienten."
  remarks: "Visa status MAC är en krypterad version av den dolda variabel som en sidas visningsstatus till när sidan skickas till webbläsaren. När den här egenskapen har angetts `true`, krypterade visningsstatus kontrolleras för att kontrollera att den inte har ändrats på klienten.       Ange inte den här egenskapen i kod. Ange den `EnableViewStateMac` attributet med direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad.      > [!IMPORTANT] > Det här attributet ska aldrig vara inställd på `false` i en produktionsmiljö webbplats, även om programmet eller sidan inte använder Visa status. Visningsstatus MAC hjälper till att säkerställa säkerheten för andra ASP.NET-funktioner utöver visningsstatus."
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om visningsstatus ska vara MAC kontrolleras och kodade; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger den felsidan som den begärande webbläsaren omdirigeras vid ett ohanterat sidan undantag."
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "Felsidan som webbläsaren omdirigeras."
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Startar körning av en asynkron åtgärd."
  remarks: "Definiera en asynkron åtgärd använder <xref:System.Web.UI.PageAsyncTask>klass.</xref:System.Web.UI.PageAsyncTask> När aktiviteten har definierats och har registrerats med en sida med hjälp av den <xref:System.Web.UI.Page.RegisterAsyncTask%2A>metoden ExecuteRegisteredAsyncTasks-metod kan anropas för att börja asynkrona aktiviteten.</xref:System.Web.UI.Page.RegisterAsyncTask%2A>       ExecuteRegisteredAsyncTasks metoden anropas automatiskt vid punkten i sidan bearbetning när alla registrerade asynkrona uppgifter om de finns anropas för en icke asynkron sida. Den här automatiska anrop till ExecuteRegisteredAsyncTasks inträffar precis före den <xref:System.Web.UI.Page.PreRenderComplete>händelse.</xref:System.Web.UI.Page.PreRenderComplete> Anropa metoden ExecuteRegisteredAsyncTasks för aktiviteter som ska anropas vid tillfällen än automatisk anropet till den här metoden. Observera att asynkrona åtgärder som körs bara en gång även om ExecuteRegisteredAsyncTasks kan anropas mer än en gång.       Den <xref:System.Web.UI.Page.AsyncTimeout%2A>Egenskapen återställs vid varje anrop till metoden ExecuteRegisteredAsyncTasks.</xref:System.Web.UI.Page.AsyncTimeout%2A> Det sista värdet för den <xref:System.Web.UI.Page.AsyncTimeout%2A>innan du anropar ExecuteRegisteredAsyncTasks metoden företräde.</xref:System.Web.UI.Page.AsyncTimeout%2A> Om en asynkron åtgärd tar mer än den <xref:System.Web.UI.Page.AsyncTimeout%2A>, efterföljande aktiviteter anropas under ExecuteRegisteredAsyncTasks anropet nådde tidsgränsen omedelbart.</xref:System.Web.UI.Page.AsyncTimeout%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Det finns ett undantag i den asynkrona aktiviteten."
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger en matris med filer som aktuellt <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objekt är beroende av."
  remarks: "Den här egenskapen är inaktuell. Använd den <xref:System.Web.HttpResponse.AddFileDependencies%2A>metoden eller <xref:System.Web.HttpResponse.AddFileDependency%2A>-metoden i den <xref:System.Web.HttpResponse>klassen i stället.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.AddFileDependency%2A> </xref:System.Web.HttpResponse.AddFileDependencies%2A>       I de flesta fall behöver du inte ange egenskapen i kod. Ange den `FileDependencies` attributet `true` med direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "Matris med filer som aktuellt <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objekt är beroende av."
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Söker igenom sidan namngivande behållare för en serverkontroll med den angivna identifieraren."
  remarks: "Metoden FindControl kan användas för åtkomst till en kontroll vars <xref:System.Web.UI.Control.ID%2A>är inte tillgänglig vid designtillfället.</xref:System.Web.UI.Control.ID%2A> Genomsökas endast sidans omedelbar eller på den högsta nivån, behållaren. Det stöder inte rekursiv sökning för kontroller i namngivande behållare som finns på sidan. För att komma åt kontroller i en underordnad namngivande behållare anropa den `FindControl` metoden för behållaren."
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "Identifierare för kontrollen som ska hittas."
    return:
      type: System.Web.UI.Control
      description: "Den angivna kontrollen eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om den angivna kontrollen inte finns."
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar HTML-formulär för sidan."
  remarks: "Använd egenskapen formuläret åtkomst till metoder och egenskaper i den <xref:System.Web.UI.HtmlControls.HtmlForm>objekt som är grunden för hierarkin kontroll på sidan.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "Den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> objektet som är associerat med sidan."
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar kontrollträdet under genereringen av sidan baserat på de deklarativa natur."
  remarks: "Metoden FrameworkInitialize initierar den <xref:System.Web.UI.Page>objekt och skapar kontrollträdet baserat på de deklarativa natur.</xref:System.Web.UI.Page> Metoden FrameworkInitialize åsidosätts av sidan parsning och kodgenerering för den <xref:System.Web.UI.Page>klass för en deklarativ sida.</xref:System.Web.UI.Page> Normalt bör du inte över behöver åsidosätta den här metoden. Om åsidosätta, måste du anropa metoden i klassen base FrameworkInitialize."
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar dataobjekt överst i Kontextstack databindning."
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "Objektet högst upp i Kontextstack för data-bindning."
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finns ingen databindning kontext för sidan."
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens som kan användas i en klienthändelse för att skicka tillbaka till servern för den angivna kontrollen och med de angivna händelseargument."
  remarks: "Finns det <xref:System.Web.UI.ClientScriptManager>klass för alternativ till den här föråldrad medlemmen.</xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen som tar emot klienten händelse återanslående."
    - id: argument
      type: System.String
      description: "En <xref:System.String>som skickas till &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;.</xref:System.String>"
    return:
      type: System.String
      description: "Den sträng som representerar händelsen klienten."
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens med <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> läggs till i början av det, som kan användas i en klienthändelse för att skicka tillbaka till servern för den angivna kontrollen och med de angivna händelseargument."
  remarks: "Finns det <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>metod för ett alternativ till att den här föråldrad medlemmen.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen bearbeta återanslåendet."
    - id: argument
      type: System.String
      description: "Parametern har överförts till server-kontroll."
    return:
      type: System.String
      description: "En sträng som representerar ett JavaScript-anrop till funktionen återanslående som innehåller målkontrollen-ID och händelsen argument."
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som kan användas i en klienthändelse att orsaka återanslående till servern. Referenssträngen definieras av den angivna <xref href=&quot;System.Web.UI.Control&quot;> </xref> objekt."
  remarks: "Den här metoden är inaktuell. Använd den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metod i den <xref:System.Web.UI.ClientScriptManager>klassen i stället.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen bearbeta återanslående på servern."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar återanslåendet."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som kan användas i en klienthändelse att orsaka återanslående till servern. Referenssträngen definieras av den angivna kontrollen som hanterar återanslåendet och ett strängargument av ytterligare händelseinformation."
  remarks: "Den här metoden är inaktuell. Använd den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metod i den <xref:System.Web.UI.ClientScriptManager>klassen i stället.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen bearbeta återanslåendet."
    - id: argument
      type: System.String
      description: "Parametern har överförts till server-kontroll."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar återanslåendet."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en Hashkod som genereras av <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt som genereras vid körning. Den här hashkoden är unik för den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objektets kontrollhierarki."
  remarks: "Den här metoden Åsidosätt inte."
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hashkoden som genererats vid körning. Standardvärdet är 0."
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en mängd kontrollen verifierare för en angiven valideringsgrupp."
  remarks: "Metoden GetValidators returnerar alla validering-objekt som är associerade med en specifik valideringsgrupp. Du kan gå tillbaka validering standardgruppen (alla validering kontroller som är associerade med kontroller utan den `ValidationGroup` egenskapsuppsättning) genom att ange den `validationGroup` parameter till `null`.       Om du vill validera medlemmar i valideringsgruppen du kan räkna upp över insamling och anrop i <xref:System.Web.UI.IValidator.Validate%2A>metod för varje verifieraren returnerade.</xref:System.Web.UI.IValidator.Validate%2A>"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "Valideringsgruppen ska returneras eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> att returnera standardgruppen för verifiering."
    return:
      type: System.Web.UI.ValidatorCollection
      description: "En <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref> som innehåller kontrollen verifierare för angivna valideringsgruppen."
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en lista över fysiska filnamnen som är kopplade till en lista över virtuella sökvägar."
  remarks: "Metoden GetWrappedFileDependencies hämtar en lista över filer, till exempel användare kontrollfiler som utgör den aktuella sidan. Om någon av dessa sidor har ändrats, kompileras hela sidan nästa gång den begärs. Den här metoden Åsidosätt inte."
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "En strängmatris virtuella sökvägar."
    return:
      type: System.Object
      description: "Ett objekt som innehåller en lista över fysiska sökvägar."
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar dokumentets sidhuvud för sidan, om den <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> elementet har definierats med en <xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;> </xref> sida-deklarationen."
  remarks: "Egenskapen sidhuvud hämtar en referens till ett <xref:System.Web.UI.HtmlControls.HtmlHead>objekt som du kan använda för att ange dokumentet huvudinformationen för sidan.</xref:System.Web.UI.HtmlControls.HtmlHead> Den <xref:System.Web.UI.HtmlControls.HtmlHead>kan du lägga till information, till exempel formatmallar, formatmallsregler, en rubrik och metadata för den `head` element.</xref:System.Web.UI.HtmlControls.HtmlHead>      > [!NOTE] > Att lägga till formatmallar programmässigt med hjälp av den <xref:System.Web.UI.IStyleSheet>gränssnittet under asynkrona återanslag stöds inte.</xref:System.Web.UI.IStyleSheet> När du lägger till AJAX-funktioner på en webbsida uppdatera asynkrona återanslag områden på sidan utan att uppdatera hela sidan. Mer information finns i [översikt över Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "En <xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref> som innehåller sidhuvudet."
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger en identifierare för en viss instans av den <xref href=&quot;System.Web.UI.Page&quot;> </xref> klass."
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "Identifieraren för instansen av den <xref href=&quot;System.Web.UI.Page&quot;> </xref> klass. Standardvärdet är &quot;_Page&quot;."
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar det tecken som används för att avgränsa identifierare kontroll när du skapar ett unikt ID för en kontroll på en sida."
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "Det tecken som används för att avgränsa identifierare för kontrollen. Standardvärdet anges av den <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> -instans som återger sidan. IdSeparator är ett fält för serversidan och bör inte ändras."
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar när sidan har initierats."
  remarks: "Händelsen InitComplete kallas i slutet av sidans initieringen steget. I det här skedet av sidans livscykel deklarera alla kontroller på sidan har initierats, men sidans tillstånd inte ännu har fyllts i. Du kan komma åt serverkontroller, men de kommer ännu inte innehåller information som returneras från användaren.       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger den <> </> *> och <> </> *> för den aktuella tråden på sidan."
  remarks: "Metoden InitializeCulture innehåller inga kodning logik. Kontrollera utvecklare att utöka funktionerna i den <xref:System.Web.UI.Page>klassen kan åsidosätta metoden InitializeCulture att initiera den <xref:System.Web.UI.Page.Culture%2A>och <xref:System.Web.UI.Page.UICulture%2A>information på sidan.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar utdatacachen för den aktuella sida begäranden baserat på en <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> objekt."
  remarks: "Du bör inte anropa den här metoden. Om du vill aktivera och hantera cachelagring av utdata för en sida, använder du antingen direktivet i ASPX-fil eller metoder och egenskaper för <xref:System.Web.HttpCachePolicy>klass.</xref:System.Web.HttpCachePolicy> Den kan nås via `Response.Cache` syntax i sidans deklaration blockera eller bakomliggande kod kodfilen. Mer information finns i [cachelagring av ASP.NET-sidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "En <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> som innehåller inställningar för cachelagring av."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Inställningar för utdata cacheplats är ogiltig."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar utdatacachen för den aktuella begäranden."
  remarks: "Du bör inte anropa den här metoden. Om du vill aktivera och hantera cachelagring av utdata för en sida, använder du antingen direktivet i ASPX-fil eller metoder och egenskaper för <xref:System.Web.HttpCachePolicy>klass.</xref:System.Web.HttpCachePolicy> Den kan nås via `Response.Cache` syntax i sidans kod. Mer information finns i [cachelagring av ASP.NET-sidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "Tidsperiod som objekt som lagras i cacheminnet för utdata är giltig."
    - id: varyByHeader
      type: System.String
      description: "En semikolonavgränsad lista över sidhuvuden som innehåll från utdatacachen varierar beroende på."
    - id: varyByCustom
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP-huvud."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "En av de <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> värden."
    - id: varyByParam
      type: System.String
      description: "En semikolonavgränsad lista över parametrar som tagits emot av en GET eller POST-metod som innehåll från utdatacachen varierar beroende på."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ett ogiltigt värde har angetts för <code> location </code>."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar utdatacachen för den aktuella begäranden."
  remarks: "Du bör inte anropa den här metoden. Om du vill aktivera och hantera cachelagring av utdata för en sida, använder du antingen direktivet i ASPX-fil eller metoder och egenskaper för <xref:System.Web.HttpCachePolicy>klass.</xref:System.Web.HttpCachePolicy> Den kan nås via `Response.Cache` syntax i sidans kod. Mer information finns i [cachelagring av ASP.NET-sidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "Tidsperiod som objekt som lagras i cacheminnet för utdata är giltig."
    - id: varyByContentEncoding
      type: System.String
      description: "En semikolonavgränsad lista över teckenuppsättningar (innehåll kodningar) som innehåll från utdatacachen varierar av."
    - id: varyByHeader
      type: System.String
      description: "En semikolonavgränsad lista över sidhuvuden som innehåll från utdatacachen varierar beroende på."
    - id: varyByCustom
      type: System.String
      description: "Den <xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP-huvud."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "En av de <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> värden."
    - id: varyByParam
      type: System.String
      description: "En semikolonavgränsad lista över parametrar som tagits emot av en GET eller POST-metod som innehåll från utdatacachen varierar beroende på."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ett ogiltigt värde har angetts för <code> location </code>."
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om sidan bearbetas asynkront."
  remarks: "Använd egenskapen IsAsync för att fastställa om sidan körs i asynkron läge. Den här informationen är användbar om kontroller eller kod på sidan måste du ändra deras beteende beroende på om sidan är asynkron. Mer information om asynkron programmering finns [asynkrona åtgärder](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan finns i asynkron läge; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>;"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om begäran är resultatet av ett återanrop."
  remarks: "Mer information finns i [implementera klienten återanrop utan återanslag](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om begäran är resultatet av ett återanrop; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klienten skriptblock med den angivna nyckeln är registrerad med sidan."
  remarks: "Anropa den här metoden innan du anropar för <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>att undvika att i onödan montering klientsidans skript.</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       IsClientScriptBlockRegistered-metoden är inaktuell. Använd <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metoden i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Strängnyckeln för klientskript att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om skriptblocket är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om sidan ingår i ett återanslående mellan flera sidor."
  remarks: "ASP.NET innehåller två mekanismer för kontrollen överförs från en sida till en annan. Du kan använda den <xref:System.Web.HttpServerUtility.Transfer%2A>metod för att överföra bearbetning mellan sidor eller du kan begära en mellan flera sidor genom att tilldela en URL som ska den <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>egenskapen för en viss kontroll som implementerar det <xref:System.Web.UI.WebControls.IButtonControl>gränssnittet.</xref:System.Web.UI.WebControls.IButtonControl> </xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> </xref:System.Web.HttpServerUtility.Transfer%2A>       I båda fallen den <xref:System.Web.UI.Page.PreviousPage%2A>page-egenskapen innehåller ett objekt som representerar sidan tidigare eller upphovsmannen.</xref:System.Web.UI.Page.PreviousPage%2A> Om till exempel Page A bokför till sidan B, sidan A IsCrossPagePostBack egenskapen (tillgänglig via den <xref:System.Web.UI.Page.PreviousPage%2A>egenskapen) kommer att `true` och sidan B <xref:System.Web.UI.Page.PreviousPage%2A>egenskapen har namnet på sidan A.</xref:System.Web.UI.Page.PreviousPage%2A> </xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan ingår i en begäran för mellan flera sidor. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om sidan renderas för första gången eller läses som svar på ett återanslående."
  remarks: "En förklaring av skillnaden mellan återanslåenden och återanrop finns [implementera klienten återanrop utan återanslag](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan läses som svar på en klient återanslående; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om kontrollen på sidan som utför återanslag har registrerats."
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om kontrollen har registrerats; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt kan återanvändas."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klientskript för start är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt."
  remarks: "Anropa den här metoden innan du anropar för <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>att undvika att i onödan montering klientsidans skript.</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       IsStartupScriptRegistered-metoden är inaktuell. Använd <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metoden i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Strängnyckeln för startskriptet att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om startskriptet är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett värde som anger om sidan verifieringen har slutförts."
  remarks: "För den här egenskapen att returnera `true`, alla serverkontroller för verifiering i aktuella valideringsgruppen måste valideras. Bör du kontrollera den här egenskapen efter att du har anropat den <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metoden eller ange den `CausesValidation` egenskapen `true` i den `OnServerClick` händelsehanteraren för en ASP.NET-Serverkontrollen som initierar formulär bearbetas.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> Servern bland de <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, och <xref:System.Web.UI.WebControls.LinkButton>klasser.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.WebControls.Button>       Om du tvingar validering av en verifiering med den <xref:System.Web.UI.Page.Validate%2A>metoden och sedan alla valideringskontrollerna i den angivna valideringsgruppen måste valideras samt.</xref:System.Web.UI.Page.Validate%2A>"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om sidan verifieringen lyckades Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Egenskapen IsValid anropas innan verifieringen har uppstått."
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en lista med objekt som lagras i kontexten för sidan."
  remarks: "Använd egenskapen artiklar för att lagra objekt med samma livslängd som begäran. Den här egenskapen är skrivskyddade. Du kan dock lägga till objekt till den <xref:System.Collections.IDictionary>objekt returneras.</xref:System.Collections.IDictionary>       Objekt som lagts till i egenskapen objekt är tillgängliga under hela livslängden på sidan så att du kan lägga till objekt i egenskapen objekt i händelser tidigt i livscykeln för sidan och åtkomst till dessa objekt i senare händelser."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "En referens till en <xref:System.Collections.IDictionary>som innehåller objekt som lagras i kontexten för sidan.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger språk-ID för den <xref href=&quot;System.Threading.Thread&quot;> </xref> objektet som är associerat med sidan."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Den `LCID` attribut kan anges i direktivet aspx-fil, men den bästa metoden för att språkvariant-ID är med i <xref:System.Web.UI.Page.Culture%2A>och <xref:System.Web.UI.Page.UICulture%2A>Egenskaper.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "Språkvariant-ID ska skickas till den <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar i slutet av belastningen steget i sidans livscykel."
  remarks: "Händelsen LoadComplete när alla återanslående och visningsstatus data har lästs in på sidan och efter den <xref:System.Web.UI.Control.OnLoad%2A>metoden har anropats för alla kontroller på sidan.</xref:System.Web.UI.Control.OnLoad%2A>       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Belastningar någon spara visningsläget information till den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt."
  remarks: "Metoden LoadPageStateFromPersistenceMedium använder den <xref:System.Web.UI.PageStatePersister.Load%2A>metod för den <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>objekt som refereras av den <xref:System.Web.UI.Page.PageStatePersister%2A>egenskapen att läsa in alla sparade visningsstatus information för den <xref:System.Web.UI.Page>objekt.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Load%2A>       ASP.NET innehåller två underordnade av den <xref:System.Web.UI.PageStatePersister>klassen, de <xref:System.Web.UI.HiddenFieldPageStatePersister>klass som sparar information om tillstånd i ett dolt fält som ingår i ASP.NET-sida och <xref:System.Web.UI.SessionPageStatePersister>klass som sparar tillstånd i den <xref:System.Web.UI.Page.Session%2A>som är associerat med begäran.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister>       Om du vill spara tillstånd i önskad plats bör du skapa en ny underordnad den <xref:System.Web.UI.PageStatePersister>klass som sparar och läser in tillståndet till beständiga mellan önskat.</xref:System.Web.UI.PageStatePersister> Ett exempel på hur du skapar ett nytt <xref:System.Web.UI.PageStatePersister>objekt, se <xref:System.Web.UI.PageStatePersister>klass.</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       Om du använder .NET Framework version 1.0 eller 1.1, åsidosätta den här metoden om du vill läsa in den <xref:System.Web.UI.Page>tillstånd från något annat än ett dolt fält.</xref:System.Web.UI.Page> Om du väljer att göra det, måste du även åsidosätta den <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>metoden.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "Sparade visningsstatus."
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om du vill gå tillbaka användaren till samma position i klientens webbläsare efter återanslåendet. Den här egenskapen ersätter den föråldrade <xref:System.Web.UI.Page.SmartNavigation*>egenskap.</xref:System.Web.UI.Page.SmartNavigation*>"
  remarks: "När webbsidor skickas tillbaka till servern, returneras användaren överst på sidan. På lång webbsidor innebär detta att användaren har rulla sidan tillbaka till den sista positionen på sidan.       När egenskapen MaintainScrollPositionOnPostBack har angetts `true`, användaren i stället returneras till den senaste position på sidan.       Egenskapen MaintainScrollPositionOnPostBack på den [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direktiv."
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om klienten positionen ska behållas. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den fysiska sökvägen som en virtuell sökväg, absolut eller relativ, eller en program-relativ sökväg som mappar till."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "En <xref:System.String>som representerar den virtuella sökvägen.</xref:System.String>"
    return:
      type: System.String
      description: "Den fysiska sökvägen som är associerade med den virtuella sökvägen eller application-relativ sökväg."
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar huvudsidan som anger utseende på sidan."
  remarks: "Huvudservern egenskapen returnerar den <xref:System.Web.UI.MasterPage>som är associerat med den här sidan.</xref:System.Web.UI.MasterPage> Den här egenskapen är skrivskyddade. men du kan ange egenskaper för den <xref:System.Web.UI.MasterPage>objekt returneras.</xref:System.Web.UI.MasterPage>       Master-egenskapen är giltig endast på sidor som refererar en huvudsida i den <xref:System.Web.UI.Page.MasterPageFile%2A>egenskapen.</xref:System.Web.UI.Page.MasterPageFile%2A> Om du ansluter till huvudservern egenskapen på en sida som inte refererar till en huvudsida `null` returneras. Innehållet i en huvudsida är inte tillgängliga förrän efter den <xref:System.Web.UI.Page.PreInit>händelse har utlösts.</xref:System.Web.UI.Page.PreInit>"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "Den <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> associerade med den här sidan om den finns, i annat fall <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger den virtuella sökvägen till huvudsidan."
  remarks: "MasterPageFile-egenskapen är en virtuell sökväg (från roten av programmet) i filen huvudsida som är associerade med den här sidan. MasterPageFile-egenskapen kan bara anges i den <xref:System.Web.UI.Page.PreInit>händelse; vid försök att ange egenskapen MasterPageFile efter den <xref:System.Web.UI.Page.PreInit>händelse genereras ett <xref:System.InvalidOperationException>undantag.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit> Om MasterPageFile-egenskapen inte är giltig, ett undantag av typen <xref:System.Web.HttpException>genereras senare i livscykeln för sidan, men inget undantag genereras när egenskapen har angetts den <xref:System.Web.UI.Page.PreInit>händelse.</xref:System.Web.UI.Page.PreInit> </xref:System.Web.HttpException>       Sidor som har egenskapsuppsättningen MasterPageFile är innehållssidor och därför kan innehålla endast översta kontroller som är <xref:System.Web.UI.WebControls.Content>kontroller.</xref:System.Web.UI.WebControls.Content>"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "Den virtuella sökvägen till huvudsidan."
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen MasterPageFile anges efter den <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> händelse är klar."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger den maximala längden för fältet för sidans tillstånd."
  remarks: "När egenskapen MaxPageStateFieldLength anges till ett positivt tal visningsstatus skickas till klientens webbläsare är uppdelad i flera dolda fält och värdet för varje fält är mindre än den storlek som anges i egenskapen MaxPageStateFieldLength.       Ange egenskapen MaxPageStateFieldLength till ett negativt tal (standard) anger fältet i visningstillstånd inte separeras i segment. Ange MaxPageStateFieldLength till ett litet antal kan resultera i sämre prestanda.       Ange värdet på egenskapen MaxPageStateFieldLength i den i Web.config-filen."
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "Den maximala längden i byte för sidans tillstånd fältet. Standardvärdet är -1."
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MaxPageStateFieldLength-egenskapen är inte lika med -1 eller ett positivt tal."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen MaxPageStateFieldLength angavs när sidan har initierats."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger innehållet i &quot;beskrivning&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> element."
  remarks: "HTML `meta` element kan användas för att förbättra sökmotor listor. &quot;Beskrivning&quot; `meta` elementet används av vissa sökmotorer för att förbättra lista förhandsgranskningar.       Om det finns ingen &quot;beskrivning&quot; `meta` element i den `head` element i sidkoden, den `meta` elementet läggs till på sidan när sidan renderas. Om sidkoden redan har en &quot;beskrivning&quot; `meta` elementet egenskapen hämtar eller anger den `content` attribut för den `meta` element.       Du kan också ange egenskapen i direktivet."
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "Innehållet i &quot;beskrivning&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> element."
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Sidan saknar en huvudkontroll (en <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> element med den <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> -attributet inställt på &quot;server&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger innehållet i &quot;nyckelord&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> element."
  remarks: "HTML `meta` element kan användas för att förbättra sökmotor listor. &quot;Nyckelord&quot; `meta` element är antingen inte använts alls eller ges mycket lite vikten av större sökmotorer.       Om det finns inga &quot;nyckelord&quot; `meta` element i den `head` element i sidkoden, den `meta` elementet läggs till på sidan när sidan renderas. Om sidkoden redan har en &quot;nyckelord&quot; `meta` elementet egenskapen hämtar eller anger den `content` attribut för den `meta` element.       Du kan också ange egenskapen i direktivet."
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "Innehållet i &quot;nyckelord&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> element."
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Sidan saknar en huvudkontroll (en <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> element med den <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> -attributet inställt på &quot;server&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar körningskontexten modellen bindning."
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "Modellen bindning körningskontexten skapades. Om modellen bindning körningskontexten <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, en ny en skapas och returneras."
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar modellen tillstånd dictionary-objektet som innehåller modellen och modellbindning verifiering."
  remarks: "En självstudiekurs serie om hur du använder modellbindning med Web Forms finns [Modellbindning och Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)."
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "Modellen tillstånd dictionary-objektet."
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> händelsen för att initiera sidan."
  remarks: "Metoden OnInit utför initiering och installationen steg som krävs för att skapa en <xref:System.Web.UI.Page>instans.</xref:System.Web.UI.Page> I det här steget av sidans livscykel har deklarerade serverkontroller på sidan initierats till sitt ursprungsläge; men för varje kontroll inte ännu har fyllts i. En kontroll på sidan kan inte komma åt andra kontroller på sidan under den `Page_Init` fasen, oavsett om andra kontroller är underordnade eller överordnade kontroller. Andra kontroller är inte garanterat skapade och redo för åtkomst.       OnInit-metoden anropas efter den <xref:System.Web.UI.Page.OnPreInit%2A>metoden och innan den <xref:System.Web.UI.Page.OnInitComplete%2A>metoden.</xref:System.Web.UI.Page.OnInitComplete%2A> </xref:System.Web.UI.Page.OnPreInit%2A>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnInit kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.InitComplete&quot;> </xref> händelse efter initiering av sidan."
  remarks: "OnInitComplete-metoden anropas när sidan har initierats. I det här steget av sidans livscykel deklarera alla kontroller på sidan har initierats, men sidans visningstillstånd inte ännu har fyllts i. Du kan komma åt serverkontroller, men de kommer ännu inte innehåller information som returneras från användaren.       Metoden OnInitComplete inträffar i slutet av den <xref:System.Web.UI.Page>initieringen steg och innan load steget.</xref:System.Web.UI.Page>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnInitComplete kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> händelse i slutet av sidan belastningen steget."
  remarks: "OnLoadComplete-metoden anropas i slutet av sidan belastningen steget. Nu i livscykeln för sidan alla återanslående data och visningsstatus data har lästs in i kontroller på sidan.       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnLoadComplete kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> händelse i början av sidan initiering."
  remarks: "OnPreInit-metoden anropas i början av sidan initieringen steget.       När OnPreInit-metoden anropas anpassningsinformation har lästs in och sidans tema eventuella har initierats. Det är också det önskade steget dynamiskt definiera en <xref:System.Web.UI.PageTheme>eller <xref:System.Web.UI.MasterPage>för sidan.</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.PageTheme>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnPreInit kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.PreLoad&quot;> </xref> händelse efter återanslående data läses in i serverkontroller sidan men innan det <xref:System.Web.UI.Control.OnLoad*>händelse.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "OnPreLoad metoden anropas när alla återanslående data som returneras från användaren har lästs in. I det här skedet i livscykeln för sidans visningstillstånd information och återanslående data för deklarera kontroller och kontroller som skapats under initieringen steg läses in i sidans kontroller.       Kontroller som har skapats i metoden OnPreLoad läses även visa status och återanslående data.       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnPreLoad kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;> </xref> händelse efter händelsen OnPreRenderComplete och innan sidan renderas."
  remarks: "OnPreRenderComplete-metoden anropas när prerendering steg i livscykeln för sidan är klar. I det här skedet av livscykel sidan alla kontroller har skapats och sidan är redo att visas utdata.       Det här är den sista händelsen anropas innan sidans visningstillstånd sparas.       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnPreRenderComplete kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genererar den <xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;> </xref> händelse efter status för sidan har sparats till beständiga medium."
  remarks: "OnSaveStateComplete-metoden anropas när statusinformation för kontrollen har skrivits till beständiga medium för sidan. Statusinformationen ska skrivas till mediet beständiga genom att anropa den <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>metoden.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>       Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [händelser](~/add/includes/ajax-current-ext-md.md).       Metoden OnSaveStateComplete kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>objekt som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar kortet som återger sidan för den specifika begärande webbläsaren."
  remarks: "Egenskapen PageAdapter returnerar specifikt <xref:System.Web.UI.Adapters.PageAdapter>objekt som ändrar funktionssättet för den <xref:System.Web.UI.Page>objekt för den begärande webbläsaren.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>       Specifikt <xref:System.Web.UI.Adapters.PageAdapter>objektet bestäms genom att undersöka egenskaper hos inkommande <xref:System.Web.UI.Page.Request%2A>objektet.</xref:System.Web.UI.Page.Request%2A> </xref:System.Web.UI.Adapters.PageAdapter> När ett kort är valt för begäran livscykel händelser på den <xref:System.Web.UI.Adapters.PageAdapter>åsidosätts motsvarande händelser på den <xref:System.Web.UI.Page>objekt.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "Den <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> som återger sidan."
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> objektet som är associerat med sidan."
  remarks: "HTTP-begäranden och svar är natur tillståndslösa. För att upprätthålla tillstånd mellan HTTP-begäranden som ASP.NET server-sidor kan lagra <xref:System.Web.UI.Page>tillstånd.</xref:System.Web.UI.Page> Det här tillståndet kallas visningsstatus, består av sidan och styra inställningar och data som gör sidor och kontroller visas som om de är samma som användaren såg och har åtgärdat med på deras senaste onödig kommunikation till sidan. Det finns mekanismer för att lagra visningsstatus mellan efterföljande förfrågningar till samma sida. Abstract <xref:System.Web.UI.PageStatePersister>klassen representerar basklass för dessa mekanismer för lagring av tillstånd.</xref:System.Web.UI.PageStatePersister>       Sidan utvecklare behöver normalt inte använda egenskapen PageStatePersister. Egenskapen PageStatePersister används främst av kontrollen utvecklare utöka funktionaliteten för <xref:System.Web.UI.Page>klass.</xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "En <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> som är associerade med sidan."
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "En sträng som definierar det dolda fältet EVENTARGUMENT i den återgivna sidan."
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "En sträng som definierar det dolda fältet EVENTTARGET i den återgivna sidan."
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar innan sidan initiering."
  remarks: "Den här händelsen kan du kontrollera villkoren för begäran, till exempel om sidan läses som svar på ett återanslående. Du kan också kontrollera värdena för profilegenskaper.       Händelsen kan du ange värden som används senare i livscykeln för sidan. Du kan dynamiskt ange en huvudsida eller ett tema för den begärda sidan och skapa dynamiska kontroller.       Mer information om hur händelsen PreInit passar in i livscykeln för ASP.NET finns [översikt över ASP.NET Page-livscykeln](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar innan sidan <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> händelse."
  remarks: 'PreLoad händelsen utlöses när alla återanslående databehandling och innan den <xref:System.Web.UI.Control.Load>händelse.</xref:System.Web.UI.Control.Load> Det finns ett andra försök att läsa in återanslående data innan de <xref:System.Web.UI.Page.OnLoadComplete%2A>händelse.</xref:System.Web.UI.Page.OnLoadComplete%2A> Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar innan sidinnehållet återges."
  remarks: "Sidhändelsen-händelsen utlöses när före render steg i livscykeln för sidan har slutförts. Alla kontroller har skapats i det här skedet av sidan livscykel, en sidbrytning som krävs har slutförts och sidan är redo att återge i utdata.       Det här är den sista händelsen som utlöses innan sidans visningstillstånd sparas.       Mer information om hur du hanterar händelser finns [NIB: förbrukar händelser](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den sida som överförs kontroll till den aktuella sidan."
  remarks: "När du använder den <xref:System.Web.HttpServerUtility.Transfer%2A>metoden eller Använd mellan flera sidor bokföring för att överföra bearbetning från en ASP.NET-sida till en annan ursprungliga sidan innehåller information om begäran som kan krävas för den här sidan.</xref:System.Web.HttpServerUtility.Transfer%2A> Du kan använda egenskapen PreviousPage för att komma åt informationen.       Om den aktuella sidan renderas på grund av en direkt förfrågan (inte en överföring eller cross-post från en annan sida), egenskapen PreviousPage innehåller `null`."
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "Den <xref href=&quot;System.Web.UI.Page&quot;> </xref> som representerar den sida som överförs kontroll till den aktuella sidan."
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den aktuella användaren tillåts inte att få åtkomst till föregående sida.       - eller - Routning av ASP.NET används och den föregående sidan URL: en är en routade URL. När ASP.NET kontrollerar behörighet, förutsätts det att URL: en är en faktiska sökvägen till en fil. Eftersom detta inte är fallet med en routade URL misslyckas kontrollen."
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger inre server-objekt för den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt som den <> </> *>, <> </> *>, <> </> *>, och <> </> *> egenskaper."
  remarks: "Du bör inte anropa den här metoden."
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "En <xref href=&quot;System.Web.HttpContext&quot;> </xref> objekt som innehåller referenser till inbäddade server-objekt (till exempel <> </> *>, <> </> *>, och <xref:System.Web.HttpContext.Session*>) används för att hantera HTTP-begäranden.</xref:System.Web.HttpContext.Session*>"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Meddelar Serverkontrollen som orsakade återanslåendet som den ska hantera en inkommande återanslående."
  remarks: "Den <xref:System.Web.UI.Page>objekt anropar metoden RaisePostBackEvent när det uppstår ett återanslående.</xref:System.Web.UI.Page> Det här anropet inträffar i livscykeln för sidan efter inläsning och ändrar meddelande har slutförts men innan prerendering sker."
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "Kontrollen för ASP.NET-servern som gjorde återanslåendet. Den här kontrollen måste implementera den <xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;> </xref> gränssnitt."
    - id: eventArgument
      type: System.String
      description: "Argumentet återanslående."
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Deklarerar ett värde som har deklarerats som en ECMAScript matris deklaration när sidan renderas."
  remarks: "Den här metoden kan användas av skriptbaserade kontroller för att deklarera sig inom en matris så att ett skript klientbiblioteket fungerar med alla kontroller av samma typ.       RegisterArrayDeclaration-metoden är inaktuell. Använd <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>metoden i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "Namnet på matrisen att deklarera värdet."
    - id: arrayValue
      type: System.String
      description: "Värdet som ska placeras i matrisen."
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en ny asynkron uppgift med sidan."
  remarks: "Definiera en asynkron åtgärd använder <xref:System.Web.UI.PageAsyncTask>klass.</xref:System.Web.UI.PageAsyncTask> När aktiviteten har definierats kan du använda metoden RegisterAsyncTask för att registrera aktiviteten med sidan. När du har registrerat aktiviteten anropa den <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>metod för att börja asynkrona aktiviteten.</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>       Metoden RegisterAsyncTask kan användas med både synkrona och asynkrona sidor."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "En <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref> som definierar den asynkrona aktiviteten."
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den asynkrona åtgärden är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skickar klientskript block i svaret."
  remarks: "Klientsidans skript genereras bara efter den inledande taggen för den <xref:System.Web.UI.Page>objektets `<form runat= server>` element.</xref:System.Web.UI.Page> Se till att ta inledande och avslutande `<script>` elementen skriptet blockera strängen som anges i den `script` parameter.       Eftersom den här metoden använder en nyckel för att identifiera skriptblocket, saknar blocket script som ska skickas till utdataströmmen varje gång den begärs av en annan server-instans för kontrollen. Använda en nyckel också minskar sannolikheten för olika kontroller skriptblocken stör ut varandra.       Alla skriptblock med samma `key` parametervärden anses vara dubbletter.      > [!NOTE] > Kom ihåg att inkludera HTML-kommenterar runt skriptet så att den inte kan återges om den begärande webbläsaren inte stöder skript.       RegisterClientScriptBlock-metoden är inaktuell. Använd den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metod i den <xref:System.Web.UI.ClientScriptManager>klassen i stället.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Unik nyckel som identifierar ett skriptblock."
    - id: script
      type: System.String
      description: "Innehållet i skriptet som skickas till klienten."
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gör kontroller att automatiskt registrera ett dolt fält i formuläret. Fältet kommer att skickas till den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt när den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> Serverkontrollen återges."
  remarks: "RegisterHiddenField-metoden är inaktuell. Använd <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>metoden i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "Det unika namnet på det dolda fältet ska renderas."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "Värdet som ska skickas i formuläret dolda."
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gör en sida att komma åt klienten <xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;> </xref> händelse. Skriptet ska vara ett funktionsanrop till klientkod registrerat någon annanstans."
  remarks: "RegisterOnSubmitStatement-metoden är inaktuell. Använd <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metoden i <xref:System.Web.UI.ClientScriptManager>klassen.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Unik nyckel som identifierar ett skriptblock."
    - id: script
      type: System.String
      description: "Klientsidans skript som ska skickas till klienten."
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en kontroll som en vars status måste sparas."
  remarks: "Anpassade kontroller som använder status måste anropa metoden RegisterRequiresControlState för varje begäran eftersom registreringen av kontrollens status inte överförs begäran på begäran vid ett återanslående. Det rekommenderas att registrering sker i den <xref:System.Web.UI.Control.Init>händelse.</xref:System.Web.UI.Control.Init>"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrollen att registrera."
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kontrollen att registrera är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "RegisterRequiresControlState-metod kan anropas endast före eller under den <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> händelse."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en kontroll som som kräver återanslående hantering när sidan skickas tillbaka till servern."
  remarks: "Kontrollen som ska registreras måste implementera den <xref:System.Web.UI.IPostBackDataHandler>gränssnitt eller en <xref:System.Web.HttpException>utlöses.</xref:System.Web.HttpException> </xref:System.Web.UI.IPostBackDataHandler> När implementeras av en kontroll av <xref:System.Web.UI.IPostBackDataHandler>gränssnittet aktiverar hantering av post tillbaka data och Utlösning av någon post tillbaka ändrade Datahändelser.</xref:System.Web.UI.IPostBackDataHandler> Mer information om händelsen servermodellen kontrollen finns [ASP.NET Web Forms kontrollen händelse servermodellen](~/add/includes/ajax-current-ext-md.md).       Registrera kontroller med sidan vid eller före den `Page_PreRender` händelse av sidan livscykel."
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrollen som ska registreras."
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Implementerar inte behörighet att registrera den <xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;> </xref> gränssnitt."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en ASP.NET-kontroll för servern som en som kräver en händelse ska uppstå när kontrollen bearbetas på den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt."
  remarks: "Endast en server-kontroll kan registreras per begäran. RegisterRequiresRaiseEvent måste användas när kontrollen inte innehåller dess kontroll-ID i formuläret postdata. Dessutom den kontroll som är registrerad måste implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt.</xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "Kontrollen att registrera."
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en kontroll med sidan som en kräver visningsstatus kryptering."
  remarks: "Om du skapar en anpassad kontroll som behandlar potentiellt känslig information kan du anropa metoden RegisterRequiresViewStateEncryption för att registrera kontrollen med sidan och se till att visa status för kontrollen är krypterad.       Krypteras hela sidan tillstånd om den <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>är inställd på <xref:System.Web.UI.ViewStateEncryptionMode>eller <xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoden RegisterRequiresViewStateEncryption måste anropas före eller under sidan <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>fas i livscykeln för sidan."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skickar ett klientskript block i svaret på sidan."
  remarks: "Liknar den <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>metoden metoden RegisterStartupScript avger skriptet precis före den avslutande taggen för den <xref:System.Web.UI.Page>objektets `<form runat= server>` element.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> Se till att ta inledande och avslutande `<script>` elementen skriptet blockera strängen som anges i den `script` parameter.       Eftersom den här metoden använder en nyckel för att identifiera skriptblocket, blocket script saknar som ska skickas till utdataströmmen varje gång den begärs av en annan kontroll serverinstans alla skriptblock med samma `key` parametervärden anses vara dubbletter.      > [!NOTE] > Kom ihåg att inkludera HTML-kommenterar runt skriptet så att den inte kan återges om den begärande webbläsaren inte stöder skript.       RegisterStartupScript-metoden är inaktuell. Använd den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metod i den <xref:System.Web.UI.ClientScriptManager>klassen i stället.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Unik nyckel som identifierar ett skriptblock."
    - id: script
      type: System.String
      description: "Innehållet i skriptet som ska skickas till klienten."
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gör sidan Visa status ska sparas, om den anropas."
  remarks: "RegisterViewStateHandler-metoden anropas automatiskt via den <xref:System.Web.UI.HtmlControls.HtmlForm>Serverkontrollen.</xref:System.Web.UI.HtmlControls.HtmlForm> Om den här metoden inte anropas, behålls inte visningsläge för sidan.      > [!NOTE] > Vanligtvis bara den <xref:System.Web.UI.HtmlControls.HtmlForm>server-kontroll på sidan anropar den här metoden.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objektet och anrop på de underordnade kontrollerna för den <xref href=&quot;System.Web.UI.Page&quot;> </xref> ska renderas."
  remarks: "Metoden Render ansvarar för att skapa text och kod som skickas till klientens webbläsare. Standard-Render metodanrop <xref:System.Web.UI.Control.RenderChildren%2A>att skriva text och markering för kontroller som finns på sidan.</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> som tar emot sidinnehållet."
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objekt för den begärda sidan."
  remarks: "Den <xref:System.Web.HttpRequest>objekt innehåller information om den aktuella HTTP-begäranden.</xref:System.Web.HttpRequest>"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "Aktuellt <xref href=&quot;System.Web.HttpRequest&quot;> </xref> som är associerade med sidan."
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Inträffar när den <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objektet är inte tillgängligt."
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om den angivna <xref href=&quot;System.Web.UI.Control&quot;> </xref> objekt som har registrerats för att delta i kontrollen tillståndshantering."
  remarks: "Kontrollens status är ett objekt som består av viktiga data i vyn tillstånd som webbserverkontroller behöver för att fungera; Det finns i ett separat objekt från normalläge tillstånd.       Anpassade kontroller med hjälp av kontrollens status måste anropa den <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>metoden innan du sparar status.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Använd metoden RequiresControlState för att söka efter kontroller som är registrerade med sidan kräver kontrollens status."
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> att söka efter ett krav för kontrollen tillstånd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna <xref href=&quot;System.Web.UI.Control&quot;> </xref> kräver kontroll tillstånd, i annat fall<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.HttpResponse&quot;> </xref> som är associerat med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt. Det här objektet kan du skicka HTTP-svar till en klient och innehåller information om svaret."
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "Aktuellt <xref href=&quot;System.Web.HttpResponse&quot;> </xref> som är associerade med sidan."
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objektet är inte tillgängligt."
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger teckenkodning för aktuellt <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objekt."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `ResponseEncoding` attribut till det värde du vill använda direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "En sträng som innehåller teckenkodning för aktuellt <xref href=&quot;System.Web.HttpResponse&quot;> </xref>."
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; värdet för aktuellt &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instans."
  remarks: "Om en sida körs som svar på en begäran via ASP.NET-routning, ger åtkomst till URL-parametervärden som skickades som vidarebefordra data i den här egenskapen. Om sidan körs som svar på en fysisk URL i stället för en väg-URL, den här egenskapen är `null`. I följande exempel visas hur du extrahera värdet för en URL-parameter som heter `year`.       [Visual Basic]      ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#] ```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ``` om vägen definieras med hjälp av URL-mönster `{locale}/{year}` för domänen `contoso.com`, och om begärd URL är `contoso.com/US/2010`, `year` kommer att innehålla värdet &quot;2010&quot; när den här koden körs.       Mer information om ASP.NET-routning finns [ASP.NET-routning](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "Den &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; värdet för aktuellt &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instans."
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sparar all visningstillstånd och kontrollens status information på sidan."
  remarks: "Metoden SavePageStateToPersistenceMedium använder den <xref:System.Web.UI.PageStatePersister.Save%2A>metod för den <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>objekt som refereras av den <xref:System.Web.UI.Page.PageStatePersister%2A>egenskapen att lagra information om visningstillstånd och status för sidan.</xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Save%2A>       ASP.NET innehåller två underordnade av den <xref:System.Web.UI.PageStatePersister>klassen, de <xref:System.Web.UI.HiddenFieldPageStatePersister>klass som sparar information om tillstånd i ett dolt fält som ingår i ASP.NET-sida och <xref:System.Web.UI.SessionPageStatePersister>klass som sparar tillstånd i den <xref:System.Web.UI.Page.Session%2A>som är associerat med begäran.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister> Observera att när du använder den <xref:System.Web.UI.SessionPageStatePersister>klass som det dolda fältet VIEWSTATE fortfarande återges som används för att fastställa post tillbaka.</xref:System.Web.UI.SessionPageStatePersister>       Om du vill spara tillstånd i önskad plats bör du skapa en ny underordnad den <xref:System.Web.UI.PageStatePersister>klass som sparar och läser in tillståndet till beständiga mellan önskat.</xref:System.Web.UI.PageStatePersister> Ett exempel på hur du skapar ett nytt <xref:System.Web.UI.PageStatePersister>objekt, se <xref:System.Web.UI.PageStatePersister>klass.</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       Om du använder .NET Framework version 1.0 eller 1.1, åsidosätta den här metoden om du vill spara den <xref:System.Web.UI.Page>tillstånd i något annat än ett dolt fält.</xref:System.Web.UI.Page> Om du väljer att göra det, måste du även åsidosätta den <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>metoden.</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "En <xref:System.Object>där du kan lagra informationen visningstillstånd.</xref:System.Object>"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inträffar när sidan har slutförts sparas alla Visa tillstånd och kontroll statusinformation för sidan och kontroller på sidan."
  remarks: "Statusinformationen för kontroller på sidan sparas när den <xref:System.Web.UI.Page.PreRenderComplete>händelse.</xref:System.Web.UI.Page.PreRenderComplete> SaveStateComplete-händelse utlöses efter att visa status och status på sidan och kontroller på sidan sparas till beständiga medium.       Det här är den sista händelsen som utlöses innan sidan renderas till den begärande webbläsaren.       Mer information om hur du hanterar händelser finns [händelser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> -objektet, vilket är en instans av den <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> klass."
  remarks: "Den här egenskapen ger åtkomst till ofta använda <xref:System.Web.HttpServerUtility.HtmlEncode%2A>och <xref:System.Web.HttpServerUtility.MapPath%2A>metoder, bland annat.</xref:System.Web.HttpServerUtility.MapPath%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A>"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "Aktuellt <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> objektet som är associerat med sidan."
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar aktuellt <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref> objekt som tillhandahålls av ASP.NET."
  remarks: "Den här egenskapen innehåller information om den aktuella begäran-session. En `Session` upprätthålls för varje användare som begär en sida eller dokument från ett ASP.NET-program. Variabler som lagrats i den `Session` objekt tas inte bort när användaren flyttar mellan sidorna i programmet, i stället finns variablerna kvar så länge användaren har åtkomst till sidor i din applikation. Mer information om sessionens tillstånd finns [översikt över sessionstillståndet ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Den aktuella sessionstillståndsdata."
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Inträffar när sessionsinformation är inställd på <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger i webbläsaren fokus till kontrollen med den angivna identifieraren."
  remarks: "Använd metoden SetFocus göra kontrollen med angivet ID-sträng den aktiva kontrollen på webbsidan som visas i webbläsaren. Metoden SetFocus måste anropas innan sidan förbereds för återgivning till klienten i den <xref:System.Web.UI.Control.PreRender>händelse.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > I SetFocus metoden fungerar bara på webbläsare som stöder ECMAScript version 1.3 eller senare."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "ID för kontrollen att fokusera på."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger i webbläsaren fokus till den angivna kontrollen."
  remarks: "Använd metoden SetFocus så att den angivna kontrollen ActiveX-kontroll på webbsidan som visas i webbläsaren. Metoden SetFocus måste anropas innan sidan förbereds för återgivning till klienten i den <xref:System.Web.UI.Control.PreRender>händelse.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > I SetFocus metoden fungerar bara på webbläsare som stöder ECMAScript version 1.3 eller senare."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Kontrollen som får fokus."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om frågesträngsvärdet har verifierats."
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om frågan sträng validering ska hoppas över (frågesträngen ska inte verifieras); Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> om frågan sträng validering ska börja placera som vanligt. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om smart navigering har aktiverats. Den här egenskapen är föråldrad."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `SmartNavigation` attributet `true` i direktivet i ASPX-fil. När sidan begärs klassen dynamiskt genererad den här egenskapen.      > [!NOTE] > I ASP.NET version 2.0, SmartNavigation egenskapen är inaktuell. Använd den <xref:System.Web.UI.Page.SetFocus%2A>metoden och <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>egenskapen i stället.</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> </xref:System.Web.UI.Page.SetFocus%2A>       När sidan begärs av Microsoft Internet Explorer 5.5 webbläsaren eller senare, smart navigering förbättrar användarens upplevelse på sidan genom att utföra följande:-eliminera flash på grund av navigering.      -Beständighet rullningsposition när du flyttar från en sida.      -Bestående elementet fokus mellan navigering.      -Behåller bara det sista sidan tillståndet i webbläsarens historik.       Smart navigering fungerar bäst med ASP.NET-sidor som kräver ofta återanslag men med visuellt innehåll som inte ändras dramatiskt på RETUR. Noggrant om du bestämmer dig för att ange egenskapen till `true`."
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om smart navigering aktiveras; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger namnet på det tema som används för sidan tidigt i livscykeln för sidan."
  remarks: "Den här egenskapen refererar inte direkt till en övergripande formatmallar (CSS). Egenskapen innehåller namnet på en ASP.NET-tema, vilket kan innefatta CSS-filer i den.       Egenskapen StyleSheetTheme anger namnet på ett tema som tillämpas på en sida i början av sidan livscykel, medan den <xref:System.Web.UI.Page.Theme%2A>egenskapen anger namnet på ett tema som tillämpas på en sida senare i livscykeln för sidan.</xref:System.Web.UI.Page.Theme%2A> Det innebär att inställningarna på sidan åsidosätter inställningar i formatmallstema. Mer information finns i [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).       Ett värde för den här egenskapen anges normalt i page-direktivet eller genom att åsidosätta egenskapen. Information finns i följande avsnitt:- [så här: använda ASP.NET teman](~/add/includes/ajax-current-ext-md.md)      -   [så: tillämpa ASP.NET teman programmässigt](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "Namnet på det tema som används för sidan tidigt i livscykeln för sidan."
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett försök gjordes att ange egenskapen StyleSheetTheme efter den <xref:System.Web.UI.Page.FrameworkInitialize*>metoden anropades.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme anges till ett ogiltigt temanamn. Detta undantag när den <xref:System.Web.UI.Page.FrameworkInitialize*>metoden anropas, inte av egenskapen set.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger namnet på sidans tema."
  remarks: "Egenskapen tema anger namnet på det tema som används för sidan. Om du vill att inställningarna på sidan ska företräde framför inställningar i temat använder den <xref:System.Web.UI.Page.StyleSheetTheme%2A>egenskapen.</xref:System.Web.UI.Page.StyleSheetTheme%2A> Mer information finns i [ASP.NET teman och skal](~/add/includes/ajax-current-ext-md.md).       Tema-egenskapen måste anges före den <xref:System.Web.UI.Page.PreInit>händelse; egenskapen tema efter den <xref:System.Web.UI.Page.PreInit>händelse genereras ett <xref:System.InvalidOperationException>undantag.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit>       Det angivna temat måste finnas som ett program eller ett globalt tema. Om temat inte finns en <xref:System.Web.HttpException>undantag.</xref:System.Web.HttpException>"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "Namn på sidans tema."
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett försök gjordes att ange tema efter den <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> händelse har inträffat."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Temat är inställt på ett ogiltigt temanamn."
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger rubrik för sidan."
  remarks: "Använd egenskapen rubrik om du vill ange en rubrik i HTML-huvudet som skickas till den begärande webbläsaren.      > [!NOTE] > Sidan måste innehålla en `head` element som har attributet `runat=&quot;server&quot;`, annars rubrik inte att återge."
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Rubriken som visas på sidan."
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Objektets egenskap Title kräver en huvudkontroll på sidan."
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.TraceContext&quot;> </xref> objekt för den aktuella webbegäran."
  remarks: "Spårning spårar och visar körning av information om en webbegäran. För spårningsdata som ska visas i en renderade sida, måste du aktivera spårning på sidan- eller programnivå.       Spårning på en sida är inaktiverad som standard. Aktivera spårning för en sida med direktivet `<% @ Page trace=&quot;true&quot; %>`. Om du vill aktivera spårning för ett helt program måste du aktivera den i programmets konfigurationsfil, Web.config, som finns i rotkatalogen för programmet. Mer information finns i [översikt över spårning av ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "Data från den <xref href=&quot;System.Web.TraceContext&quot;> </xref> objekt för den aktuella webbegäran."
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger ett värde som anger om spårning är aktiverat för den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `Trace` attributet `true` i direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om spårning är aktiverat för sidan. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger läget i vilket spårning instruktioner visas på sidan."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `TraceMode` attribut i direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "En av de <xref href=&quot;System.Web.TraceMode&quot;> </xref> Uppräkningsmedlemmar."
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger nivån av transaktionen som har stöd för sidan."
  remarks: "I de flesta fall behöver du inte ange egenskapen i kod. Ange den `Transaction` attribut i direktivet i ASPX-fil. När sidan begärs egenskapen klassen dynamiskt genererad."
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "Ett heltal som representerar en av de <xref href=&quot;System.EnterpriseServices.TransactionOption&quot;> </xref> Uppräkningsmedlemmar."
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "Som ska läggas till."
    return:
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "Som ska läggas till."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "Som ska läggas till."
    return:
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger användar-ID för användargränssnittet (UI) för den <xref href=&quot;System.Threading.Thread&quot;> </xref> objektet som är associerat med sidan."
  remarks: "Den här egenskapen är en genväg för den <xref:System.Threading.Thread.CurrentThread%2A>egenskapen.</xref:System.Threading.Thread.CurrentThread%2A> Kulturen är en egenskap för verkställande tråden uppsättningen av `UICulture` attribut i direktivet i ASPX-fil. När sidan begärs anger dynamiskt genererad klassen värdet för den här egenskapen. Dessutom kan du också explicit ange värdet på egenskapen UICulture i den i Web.config-filen."
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "UI-ID."
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar ett unikt suffix för att lägga till sökvägen till filen för cachelagring webbläsare."
  remarks: "Egenskapen UniqueFilePathSuffix returnerar en sträng som läggs till i slutet av en sökväg till filen vid behov för cachelagring av webbläsare. Strängen används för att identifiera den sökväg som är associerade med en specifik begäran."
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "Ett unikt suffix läggs till sökvägen till filen. Standardvärdet är &quot;__ufps =&quot; plus en unik 6 siffror."
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om används diskret JavaScript för klientsidan verifiering."
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om diskret JavaScript används. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Stoppar persistence för status för den angivna kontrollen."
  remarks: "Anpassade kontroller som använder status måste anropa den <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>för varje begäran under innan tillståndet sparas.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Registrering för kontrollens status överförs inte begäran på begäran vid ett återanslående. Använd metoden UnregisterRequiresControlState så att inte sparas status för kontroller som inte längre behöver sparas för återanslående.       Internt UnregisterRequiresControlState-metoden anropas när du använder den <xref:System.Web.UI.Control.RemovedControl%2A>metod för att ta bort en kontroll från en kontrollsamling.</xref:System.Web.UI.Control.RemovedControl%2A>"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> som du vill stoppa persistence för kontrollens status."
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "Som ska läggas till."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "Som ska läggas till."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "Som ska läggas till."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar information om den användare som skickar begäran."
  remarks: "En <xref:System.Security.Principal.IPrincipal>-objektet representerar säkerhetskontexten för användaren vars räkning koden körs, inklusive användarens identitet och alla roller som de tillhör.</xref:System.Security.Principal.IPrincipal>       Den här egenskapen används den <xref:System.Web.HttpContext>objektets <xref:System.Web.HttpContext.User%2A>egenskapen fastställa där begäran har sitt ursprung.</xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext>"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "En <xref:System.Security.Principal.IPrincipal>som representerar den användare som skickar begäran.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instruerar validering kontroller på sidan för att verifiera sina tilldelade information."
  remarks: "Den här metoden anropas när en användare klickar på alla ASP.NET server-kontroll som har den `CausesValidation` egenskapen `true`, vilket är standard. Dessa inkluderar den <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, och <xref:System.Web.UI.WebControls.LinkButton>Web server-kontroller i <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, och <xref:System.Web.UI.HtmlControls.HtmlButton>HTML-kontroller och kontroller som automatiskt kan skicka tillbaka till servern som den <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, och <xref:System.Web.UI.WebControls.BulletedList>kontroller.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       Om du vill inaktivera validering för alla knappen kontroller på sidan Ange knappkontrollen `CausesValidation` egenskapen `false`.       När den här metoden anropas den går igenom valideringskontrollerna i den <xref:System.Web.UI.ValidatorCollection>som är associerat med den <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>egenskapen och anropar valideringslogik för varje kontroll för verifiering i aktuella valideringsgruppen.</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> </xref:System.Web.UI.ValidatorCollection> Valideringsgruppen bestäms av den kontroll som bokförd sidan till servern. Om inga valideringsgrupp har angetts används ingen valideringsgrupp.      > [!NOTE] > Beteendet för sidvalidering har ändrats. I [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], kontrollerar inte längre anropa Validate-metoden; de använder den <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>metoden i stället.</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> Om du använder Validate-metoden på en [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] sida, valideringsgrupper ignoreras och alla kontroller verifieras."
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instruerar valideringskontrollerna i angivna valideringsgruppen att verifiera sina tilldelade information."
  remarks: "Den här metoden anropas när en användare klickar på alla ASP.NET server-kontroll som har den `CausesValidation` egenskapen `true`, vilket är standard. Dessa inkluderar den <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, och <xref:System.Web.UI.WebControls.LinkButton>Web server-kontroller i <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, och <xref:System.Web.UI.HtmlControls.HtmlButton>HTML-kontroller och kontroller som automatiskt kan skicka tillbaka till servern som den <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, och <xref:System.Web.UI.WebControls.BulletedList>kontroller.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       Om du vill inaktivera validering för alla knappen kontroller på sidan Ange knappkontrollen `CausesValidation` egenskapen `false`.       Validate-metoden validerar angivna valideringsgruppen. När du anropar Validate-metoden på en valideringsgrupp den <xref:System.Web.UI.Page.IsValid%2A>metoden returnerar `true` bara om både angivna valideringsgruppen och valideringsgruppen för kontrollen som gjorde att sidan ska publiceras till servern är giltigt.</xref:System.Web.UI.Page.IsValid%2A>"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "Gruppnamn validering av kontroller för att verifiera."
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om sidan kontrollerar klienten indata från webbläsaren för potentiellt farliga värden."
  remarks: "Värdet <xref:System.Web.UI.ValidateRequestMode>används inte i den <xref:System.Web.UI.Page>klassen eftersom det inte finns något att ärva från.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidateRequestMode>"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Ett värde som anger om sidan kontrollerar klienten indata. Standardvärdet är <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en samling av alla validering kontroller som finns på den begärda sidan."
  remarks: "Du kan använda den här egenskapen för att manipulera metoder och egenskaper i den <xref:System.Web.UI.ValidatorCollection>som är associerat med aktuellt <xref:System.Web.UI.Page>instans.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidatorCollection> Den här samlingen innehåller alla validering serverkontroller som finns på en sida.       Anropar den <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metoden gör valideringslogik att utföras för varje server-kontroll för verifiering i aktuella valideringsgruppen.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> Om någon av dessa kontroller inte klarar den <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>egenskapen returnerar `false`.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       Mer information om valideringskontrollerna finns [ASP.NET Valideringskontrollerna](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "Mängden med kontroller för verifiering."
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Bekräftar att ett <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> kontrollen återges för den angivna ASP.NET server-kontrollen vid körning."
  remarks: "Kontroller som krävs för att finnas i `<form runat=server>` taggar kan anropa metoden innan de renderas så att ett felmeddelande visas om de är placerade utanför taggarna. Kontroller som publicerar tillbaka eller beror på registrerade skriptblocken ska anropa denna metod i en åsidosättning av den <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metoden.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> Sidor som har ett annat sätt för att göra servern formulärelement kan åsidosätta den här metoden för att utlösa ett undantag under olika förhållanden.       Kontroller som publicera tillbaka eller använda klientskript fungerar inte om de inte är inom den <xref:System.Web.UI.HtmlControls.HtmlForm>Serverkontrollen (`form runat=&quot;server&quot;>`) taggar.</xref:System.Web.UI.HtmlControls.HtmlForm> Dessa kontroller kan anropa den här metoden när de gör för att tillhandahålla en tydlig felmeddelande när de inte är inom den <xref:System.Web.UI.HtmlControls.HtmlForm>kontroll.</xref:System.Web.UI.HtmlControls.HtmlForm>       När du utvecklar en egen serverkontroll är det vanligt att anropa den här metoden när du åsidosätta den `Render` metoden för alla typer av indatatagg. Detta är särskilt viktigt om kontrollen inkommande anrop <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, eller om den skickar klienten skriptet.</xref:System.Web.UI.Page.GetPostBackEventReference%2A> En sammansatt Serverkontrollen behöver inte göra det här anropet."
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ASP.NET server-kontroll som krävs i den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> kontroll."
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Den angivna Serverkontrollen finns inte mellan inledande och avslutande taggar i den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> Serverkontrollen vid körning."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Kontrollen att verifiera är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger kryptering läget för visningsstatus."
  remarks: "Egenskapen ViewStateEncryptionMode kan inte anges i koden. Det kan bara anges i direktivet eller i den< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> Värden som anges i direktivet åsidosätter alla värden som anges i konfigurationsfilen.       Syntaxen för den här egenskapen i direktivet är: ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ``` syntaxen för den här egenskapen i konfigurationsfilen är: ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ``` anpassad kontroll utvecklare kan vilja kontrollera värdet för den här egenskapen i kod innan du sparar potentiellt känsliga data om du vill visa status i deras kontroll.            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "En av de <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> värden. Standardvärdet är <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>."
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet är inte en medlem av den <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> uppräkning."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egenskapen ViewStateEncryptionMode kan anges under eller före sidan <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>fas i livscykeln för sidan."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "En identifierare som tilldelas en enskild användare i variabeln visningstillstånd som är associerade med den aktuella sidan."
  remarks: "Egenskapen ViewStateUserKey kan hjälpa dig att förhindra angrepp på ditt program från skadliga användare. Det gör du genom att du kan tilldela en identifierare till variabeln visa status för enskilda användare så att de inte kan använda variabeln för att generera en attack. Läs mer om webbattacker och om vad du kan göra för att hindra dem [dra nytta av ASP.NET inbyggda funktioner för Fend av webbattacker](http://go.microsoft.com/fwlink/?LinkId=163557).       Du kan ange egenskapen till valfritt strängvärde som användaren har autentiserats namn eller <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>värde.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>      > [!NOTE] > Måste du ange den här egenskapen när den `Page_Init` fasen av bearbetningen av sidan. Den här egenskapen när den `Page_Load` fasen utlöser ett undantag."
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "Identifierare för enskilda användare."
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Egenskapen ViewStateUserKey användes för sent under bearbetningen av sidan."
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger ett värde som anger om den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt återges."
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Web.UI.Page&quot;> </xref> ska vara renderade, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
