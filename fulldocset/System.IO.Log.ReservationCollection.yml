### YamlMime:ManagedReference
items:
- uid: System.IO.Log.ReservationCollection
  id: ReservationCollection
  children:
  - System.IO.Log.ReservationCollection.#ctor
  - System.IO.Log.ReservationCollection.Add(System.Int64)
  - System.IO.Log.ReservationCollection.Clear
  - System.IO.Log.ReservationCollection.Contains(System.Int64)
  - System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  - System.IO.Log.ReservationCollection.Count
  - System.IO.Log.ReservationCollection.Finalize
  - System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  - System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  - System.IO.Log.ReservationCollection.GetEnumerator
  - System.IO.Log.ReservationCollection.IsReadOnly
  - System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  - System.IO.Log.ReservationCollection.Remove(System.Int64)
  - System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  - System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  - System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ReservationCollection
  nameWithType: ReservationCollection
  fullName: System.IO.Log.ReservationCollection
  type: Class
  summary: "Hanterar mängden utrymme reservationer som gjorts i en postsekvens."
  remarks: "Den här klassen representerar en uppsättning reservation områden som görs i en postsekvens. Lägga till objekt i samlingen allokerar nya reservationer. Ta bort objekt från samlingen Frigör dessa reservationer.       Ett program reserverar utrymme i loggen när den har data som ska skrivas till loggen i framtiden, men det går inte att skriva det direkt. Reservationer ger en garanti för att data kan skrivas till loggen när data är tillgängliga som ska skrivas. När du använder loggar reservera en eller flera loggposter i ett omvandlingsområde ofta i program. Du måste reservera poster innan du lägger till dem.       Reservationer kan användas för att garantera att en åtgärd kan utföras innan data genomförs. Annars återställs ändringarna. Det kan också användas för att registrera en &quot;åtgärden&quot; i loggen. Under en återställningsåtgärd kunna transaktionella resurshanteraren (RM) återställa dess tillstånd om RM avbryts under återställningen igen. Med hjälp av ett område för reservation reservera en RM utrymme i en logg innan den används.       Den <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>metod kan reservera diskutrymme eller Lägg till data eller både och, beroende på de parametrar som anges när anropet.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> När arbetar fortlöper i en transaktion kan ett program bifoga ångra-information och reservera diskutrymme för ersättning poster. Under en återställningsåtgärd indikera ersättning poster som skapats vad har ångrats på disken. Posterna läggs utrymme har reserverats tidigare. Detta garanterar att en RM inte slut loggutrymme är ett oåterkalleligt fel när du utför en återställningsåtgärd. Om en logg fylls under en transaktion, återställa ett program på ett säkert sätt en transaktion utan att skada beständiga data.       CLFS är en ARIES-kompatibel loggning, avsedda för write-ahead loggning. I write-ahead-loggning skriver ett program en Ångra-post innan den utför åtgärden, reserverar mängden utrymme som det tar i loggen för att skriva en kompenserande post som kan användas under återställningen. Reserverat minne används senare, när posten ersättning skrivits.       Program kan reservera eller komma åt långt mellanrum vid en given tidpunkt (de är ömsesidigt uteslutande operations). Efter ett genomförande skrivs posten till loggen, ett program kan frigöra reservationer för poster för kompensation. Den här åtgärden kan utföras genom att anropa antingen den <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>eller <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>metod.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> </xref:System.IO.Log.ReservationCollection.FreeReservation%2A> Anropar den <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>metoden garanterar att åtgärden har atomiska när du anropar den <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>metoden inte.</xref:System.IO.Log.ReservationCollection.FreeReservation%2A> </xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>       När du frigör poster måste du frigöra samma poster som du reserverade tillsammans i ett tidigare anrop till den <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>metoden.</xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>      > [!NOTE] > Implementeringen av <xref:System.IO.Log.IRecordSequence>måste implementera de <xref:System.IO.Log.ReservationCollection.MakeReservation%2A>och <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>metoder för att utföra den faktiska reservation tilldelning och flyttningen.</xref:System.IO.Log.ReservationCollection.FreeReservation%2A> </xref:System.IO.Log.ReservationCollection.MakeReservation%2A> </xref:System.IO.Log.IRecordSequence> Dessutom implementeringen också måste anropa <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A>när en post har skrivits till ett reserverat utrymme.</xref:System.IO.Log.ReservationCollection.ReservationFreed%2A>"
  example:
  - "Reservations can be performed in two ways as shown in the following examples. You can adopt the practices in the samples for robust processing. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \n//Using the ReserveAndAppend Method  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nlong[] lengthOfUndoRecords = new long[] { 1000 };  \nrecordSequence.ReserveAndAppend(recordData,  \n                                                     userSqn,  \n                                                     previousSqn,  \n                                                     RecordSequenceAppendOptions.None,  \n                                                     reservations,  \n                                                     lengthOfUndoRecords);  \nrecordSequence.Append(undoRecordData,    // If necessary …  \n                                    userSqn,  \n                                    previousSqn,  \n                                    RecordSequenceAppendOptions.ForceFlush,  \n                                    reservations);  \n  \n// Using the Manual Approach  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: 'public abstract class ReservationCollection : System.Collections.Generic.ICollection<long>, System.Collections.Generic.IEnumerable<long>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Int64>
  - System.Collections.Generic.IEnumerable<System.Int64>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.#ctor
  id: '#ctor'
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationCollection()
  nameWithType: ReservationCollection.ReservationCollection()
  fullName: System.IO.Log.ReservationCollection.ReservationCollection()
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Initierar en ny instans av den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> klass."
  syntax:
    content: protected ReservationCollection ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Add(System.Int64)
  id: Add(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Add(Int64)
  nameWithType: ReservationCollection.Add(Int64)
  fullName: System.IO.Log.ReservationCollection.Add(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Allokerar en reservation och lägger till den samlingen. Den här metoden kan inte ärvas."
  remarks: ''
  example:
  - "The following example shows how to manually make a reservation. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: public void Add (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på den begärda reservationen i byte."
  overload: System.IO.Log.ReservationCollection.Add*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>är inte mellan basnummer och sista nummer i sekvensen."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>size</code>är ogiltig eller överskrider maximalt Reservationsstorleken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstår när du skapar arkivögonblicksbilden."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Postsekvensen är full."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Clear
  id: Clear
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ReservationCollection.Clear()
  fullName: System.IO.Log.ReservationCollection.Clear()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Frigör alla reservationer i samlingen. Den här metoden kan inte ärvas."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.Clear*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>size</code>är ogiltig eller överskrider maximalt Reservationsstorleken."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstår när du skapar arkivögonblicksbilden."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Postsekvensen är full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Contains(System.Int64)
  id: Contains(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Contains(Int64)
  nameWithType: ReservationCollection.Contains(Int64)
  fullName: System.IO.Log.ReservationCollection.Contains(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Avgör om en reservation för den angivna storleken har gjorts. Den här metoden kan inte ärvas."
  syntax:
    content: public bool Contains (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storlek för att hitta i samlingen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om minst en reservation för den angivna storleken har gjorts. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.Contains*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  id: CopyTo(System.Int64[],System.Int32)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: CopyTo(Int64[],Int32)
  nameWithType: ReservationCollection.CopyTo(Int64[],Int32)
  fullName: System.IO.Log.ReservationCollection.CopyTo(Int64[],Int32)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Kopierar hela samlingen till en endimensionell matris som börjar med det angivna indexet för Målmatrisen. Den här metoden kan inte ärvas."
  syntax:
    content: public void CopyTo (long[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Int64[]
      description: "Matrisen som är mål för kopian."
    - id: arrayIndex
      type: System.Int32
      description: "Det nollbaserade indexet i matrisen vid kopiering av vilka börjar."
  overload: System.IO.Log.ReservationCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>or <code>arrayIndex</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>arrayIndex</code>är mindre än noll eller större än eller lika med längden på <code>array</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Det finns inte tillräckligt med utrymme i den angivna matrisen för att kopiera data.       - eller - <code> array </code> är inte en endimensionell matris, vilket är den enda typ som stöds för den begärda åtgärden."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Count
  id: Count
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Count
  nameWithType: ReservationCollection.Count
  fullName: System.IO.Log.ReservationCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Hämtar antalet reservationer i samlingen."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Antal reservationer i samlingen."
  overload: System.IO.Log.ReservationCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Finalize
  id: Finalize
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: ReservationCollection.Finalize()
  fullName: System.IO.Log.ReservationCollection.Finalize()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Gör den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> att frigöra de resurser innan den förstörs av skräpinsamlingen."
  syntax:
    content: ~ReservationCollection ();
    parameters: []
  overload: System.IO.Log.ReservationCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  id: FreeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: FreeReservation(Int64)
  nameWithType: ReservationCollection.FreeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.FreeReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Frigör en reservation för den angivna storleken när åsidosätts i en härledd klass."
  syntax:
    content: protected abstract void FreeReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på reservationen att släppa."
  overload: System.IO.Log.ReservationCollection.FreeReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  id: GetBestMatchingReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: GetBestMatchingReservation(Int64)
  nameWithType: ReservationCollection.GetBestMatchingReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.GetBestMatchingReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "När åsidosätts i en härledd klass, hämtar du den mest matchande reservation för en given storlek."
  remarks: "Den här metoden anropas vanligtvis när du lägger till en post från reserverat minne till en postsekvens. När den returnerar har en reservation returnerade storlek tagits bort från samlingen. Om du av någon anledning reserverat minne inte är att komma åt, den <xref:System.IO.Log.ReservationCollection.ReservationMade%2A>metoden ska anropas för att säkerställa att den <xref:System.IO.Log.ReservationCollection>korrekt representerar mängden reserverat utrymme i postsekvensen.</xref:System.IO.Log.ReservationCollection> </xref:System.IO.Log.ReservationCollection.ReservationMade%2A>"
  syntax:
    content: protected long GetBestMatchingReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på reservationen måste få plats."
    return:
      type: System.Int64
      description: "En reservation från samlingen som är större än eller lika med den angivna storleken eller -1 om ingen sådan reservation finns."
  overload: System.IO.Log.ReservationCollection.GetBestMatchingReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReservationCollection.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Returnerar en uppräknare kan gå igenom den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Den här metoden kan inte ärvas."
  syntax:
    content: public System.Collections.Generic.IEnumerator<long> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Int64}
      description: "En uppräknare kan gå igenom den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är ogiltig för en av följande orsaker:-uppräkningen är avslutad.      -Samlingen har ändrats.      -Uppräkningen har inte startats. Ett anrop till <xref:System.Collections.IEnumerator.MoveNext*>måste göras.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.IsReadOnly
  id: IsReadOnly
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
  fullName: System.IO.Log.ReservationCollection.IsReadOnly
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Hämtar ett värde som anger om samlingen är skrivskyddad."
  remarks: "En <xref:System.IO.Log.ReservationCollection>aldrig är skrivskyddad.</xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Den här egenskapen returnerar alltid <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  id: MakeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: MakeReservation(Int64)
  nameWithType: ReservationCollection.MakeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.MakeReservation(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "När åsidosätts i en härledd klass allokerar en reservation för den angivna storleken."
  syntax:
    content: protected abstract void MakeReservation (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på reservationen allokera."
  overload: System.IO.Log.ReservationCollection.MakeReservation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.Remove(System.Int64)
  id: Remove(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: Remove(Int64)
  nameWithType: ReservationCollection.Remove(Int64)
  fullName: System.IO.Log.ReservationCollection.Remove(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Frigör en reservation för den angivna storleken om har gjorts. Den här metoden kan inte ärvas."
  remarks: ''
  example:
  - "The following example shows how to manually make a reservation. Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.  \n  \n```  \nReservationCollection reservations = recordSequence.CreateReservationCollection();  \nreservations.Add(lengthOfUndoRecord);  \ntry  \n{  \n   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  \n}  \ncatch (Exception)  \n{  \n   reservations.Remove(lengthOfUndoRecord);  \n   throw;  \n}  \n  \nrecordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  \n```"
  syntax:
    content: public bool Remove (long item);
    parameters:
    - id: item
      type: System.Int64
      description: "Storleken på reservationen att släppa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om en reservation för den angivna storleken gick att hitta och ta bort Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ingen reservation som är tillräckligt stor för att passa den angivna posten kan hittas i den angivna reservationssamlingen."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ett i/o-fel uppstår när du skapar arkivögonblicksbilden."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "Postsekvensen är full."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  id: ReservationFreed(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationFreed(Int64)
  nameWithType: ReservationCollection.ReservationFreed(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationFreed(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "När åsidosätts i en härledd klass anger att en reservation har släppts."
  remarks: "När du ärver från <xref:System.IO.Log.ReservationCollection>, måste du anropa den här metoden när en reservation släpps av skäl än tas bort från samlingen.</xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: protected void ReservationFreed (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på reservationen som har släppts."
  overload: System.IO.Log.ReservationCollection.ReservationFreed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  id: ReservationMade(System.Int64)
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: ReservationMade(Int64)
  nameWithType: ReservationCollection.ReservationMade(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationMade(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "När åsidosätts i en härledd klass anger att en reservation har gjorts."
  remarks: "När du ärver från <xref:System.IO.Log.ReservationCollection>, måste du anropa den här metoden när en reservation görs utanför ett anrop till <xref:System.IO.Log.ReservationCollection.Add%2A>.</xref:System.IO.Log.ReservationCollection.Add%2A> </xref:System.IO.Log.ReservationCollection>"
  syntax:
    content: protected void ReservationMade (long size);
    parameters:
    - id: size
      type: System.Int64
      description: "Storleken på reservationen som har gjorts."
  overload: System.IO.Log.ReservationCollection.ReservationMade*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.ReservationCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Returnerar en uppräknare kan gå igenom den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Den här metoden kan inte ärvas."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En uppräknare kan gå igenom den <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Åtgärden är ogiltig för en av följande orsaker:-uppräkningen är avslutad.      -Samlingen har ändrats.      -Uppräkningen har inte startats. Ett anrop till <xref:System.Collections.IEnumerator.MoveNext*>måste göras.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metoden anropades efter sekvensen har avslutats av."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Det finns inte tillräckligt med minne för att fortsätta körningen av programmet."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Åtkomst för den angivna loggen store nekas av operativsystemet."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Log.ReservationCollection.#ctor
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationCollection()
  nameWithType: ReservationCollection.ReservationCollection()
  fullName: System.IO.Log.ReservationCollection.ReservationCollection()
- uid: System.IO.Log.ReservationCollection.Add(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Add(Int64)
  nameWithType: ReservationCollection.Add(Int64)
  fullName: System.IO.Log.ReservationCollection.Add(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.ReservationCollection.Clear
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Clear()
  nameWithType: ReservationCollection.Clear()
  fullName: System.IO.Log.ReservationCollection.Clear()
- uid: System.IO.Log.ReservationCollection.Contains(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Contains(Int64)
  nameWithType: ReservationCollection.Contains(Int64)
  fullName: System.IO.Log.ReservationCollection.Contains(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: CopyTo(Int64[],Int32)
  nameWithType: ReservationCollection.CopyTo(Int64[],Int32)
  fullName: System.IO.Log.ReservationCollection.CopyTo(Int64[],Int32)
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.ReservationCollection.Count
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Count
  nameWithType: ReservationCollection.Count
  fullName: System.IO.Log.ReservationCollection.Count
- uid: System.IO.Log.ReservationCollection.Finalize
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Finalize()
  nameWithType: ReservationCollection.Finalize()
  fullName: System.IO.Log.ReservationCollection.Finalize()
- uid: System.IO.Log.ReservationCollection.FreeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: FreeReservation(Int64)
  nameWithType: ReservationCollection.FreeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.FreeReservation(Int64)
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetBestMatchingReservation(Int64)
  nameWithType: ReservationCollection.GetBestMatchingReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.GetBestMatchingReservation(Int64)
- uid: System.IO.Log.ReservationCollection.GetEnumerator
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReservationCollection.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Int64}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Int64>
  nameWithType: IEnumerator<Int64>
  fullName: System.Collections.Generic.IEnumerator<System.Int64>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.ReservationCollection.IsReadOnly
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
  fullName: System.IO.Log.ReservationCollection.IsReadOnly
- uid: System.IO.Log.ReservationCollection.MakeReservation(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: MakeReservation(Int64)
  nameWithType: ReservationCollection.MakeReservation(Int64)
  fullName: System.IO.Log.ReservationCollection.MakeReservation(Int64)
- uid: System.IO.Log.ReservationCollection.Remove(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Remove(Int64)
  nameWithType: ReservationCollection.Remove(Int64)
  fullName: System.IO.Log.ReservationCollection.Remove(Int64)
- uid: System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationFreed(Int64)
  nameWithType: ReservationCollection.ReservationFreed(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationFreed(Int64)
- uid: System.IO.Log.ReservationCollection.ReservationMade(System.Int64)
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationMade(Int64)
  nameWithType: ReservationCollection.ReservationMade(Int64)
  fullName: System.IO.Log.ReservationCollection.ReservationMade(Int64)
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.ReservationCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.ReservationCollection.#ctor*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationCollection
  nameWithType: ReservationCollection.ReservationCollection
- uid: System.IO.Log.ReservationCollection.Add*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Add
  nameWithType: ReservationCollection.Add
- uid: System.IO.Log.ReservationCollection.Clear*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Clear
  nameWithType: ReservationCollection.Clear
- uid: System.IO.Log.ReservationCollection.Contains*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Contains
  nameWithType: ReservationCollection.Contains
- uid: System.IO.Log.ReservationCollection.CopyTo*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: CopyTo
  nameWithType: ReservationCollection.CopyTo
- uid: System.IO.Log.ReservationCollection.Count*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Count
  nameWithType: ReservationCollection.Count
- uid: System.IO.Log.ReservationCollection.Finalize*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Finalize
  nameWithType: ReservationCollection.Finalize
- uid: System.IO.Log.ReservationCollection.FreeReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: FreeReservation
  nameWithType: ReservationCollection.FreeReservation
- uid: System.IO.Log.ReservationCollection.GetBestMatchingReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetBestMatchingReservation
  nameWithType: ReservationCollection.GetBestMatchingReservation
- uid: System.IO.Log.ReservationCollection.GetEnumerator*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ReservationCollection.GetEnumerator
- uid: System.IO.Log.ReservationCollection.IsReadOnly*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ReservationCollection.IsReadOnly
- uid: System.IO.Log.ReservationCollection.MakeReservation*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: MakeReservation
  nameWithType: ReservationCollection.MakeReservation
- uid: System.IO.Log.ReservationCollection.Remove*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: Remove
  nameWithType: ReservationCollection.Remove
- uid: System.IO.Log.ReservationCollection.ReservationFreed*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationFreed
  nameWithType: ReservationCollection.ReservationFreed
- uid: System.IO.Log.ReservationCollection.ReservationMade*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: ReservationMade
  nameWithType: ReservationCollection.ReservationMade
- uid: System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.ReservationCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ReservationCollection.System.Collections.IEnumerable.GetEnumerator
