### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffect
  id: BitmapEffect
  children:
  - System.Windows.Media.Effects.BitmapEffect.#ctor
  - System.Windows.Media.Effects.BitmapEffect.Clone
  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
  type: Class
  summary: "**Obs: Detta API är nu föråldrad.** Giltiga alternativet är <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>.       Definierar en bitmapp effekt. Härledda klasser definierar effekter som kan tillämpas på en <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> objekt, till exempel en <xref href=&quot;System.Windows.Controls.Button&quot;> </xref> eller en <xref href=&quot;System.Windows.Controls.Image&quot;> </xref>."
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]bitmappseffekter är programvara som renderas. Alla objekt som gäller en effekt kommer också återges i programvaran. Bitmappseffekter bör inte tillämpas på stora visuell information eller animeringar, eftersom detta kan försämra prestanda.      > [!CAUTION] > Bitmappseffekter har inte stöd för körning av partiellt förtroende. Ett program måste ha fullständigt förtroende behörighet att använda bitmappseffekter.       Skala transformeringar tillämpas på en visuell innan en effekt används. Vid en icke-enhetlig skala transformering använder effekten större skala värden.       Uppdateringar till det visuella trädet i en <xref:System.Windows.Media.VisualBrush>kommer inte att sprida om en BitmapEffect i penselns överordnade kedja.</xref:System.Windows.Media.VisualBrush> Du kan kringgå den här begränsningen genom att tvinga en uppdatering av scenen till det överordnade objektet för effekten. Du kan anropa <xref:System.Windows.UIElement.InvalidateVisual%2A>eller innehåller en animering om du vill framtvinga en uppdatering av scen.</xref:System.Windows.UIElement.InvalidateVisual%2A>       Anpassade effekter ärver den här klassen om du vill skapa ett gränssnitt för hanterad till ohanterad effekten. Mer information finns i [ohanterade BitmapEffect](https://msdn.microsoft.com/library/ms735092.aspx) API."
  syntax:
    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> klass."
  syntax:
    content: protected BitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Skapar en ändringsbar kloning av detta <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>, att göra djup kopior av värden för det här objektet. När du kopierar beroendeegenskaper kopierar resurs referenser och data Bindningar (men de inte längre kan lösa) men inte animeringar eller deras aktuella värden."
  remarks: "Den här metoden används för att skapa ändringsbar kopior av fryst <xref:System.Windows.Freezable>objekt (eller någon <xref:System.Windows.Freezable>objekt).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> För enkelhetens skull skuggar den ärvda versionen i den här metoden.       Mer information finns i <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "En ändringsbar kloning av det aktuella objektet. Det klonade objektet <> </> *> egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> även om källans <> </> *> egenskapen var<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Skapar en ändringsbar kloning av detta <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> objekt, gör djup kopior av det här objektets aktuella värden. Resursreferenser, databindningar och animeringar kopieras inte, men deras aktuella värden finns."
  remarks: "Den här metoden används för att skapa ändringsbar kopior av fryst <xref:System.Windows.Freezable>objekt (eller någon <xref:System.Windows.Freezable>objekt).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> För enkelhetens skull skuggar den ärvda versionen i den här metoden.       Mer information finns i <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "En ändringsbar kloning av det aktuella objektet. Det klonade objektet <> </> *> egenskapen <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> även om källans <> </> *> egenskapen var <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  id: CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Skapar en referens till en [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objekt som används för att initiera en anpassad effekt."
  remarks: "Framework interaktion med anpassade effekter hanteras via en [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objekt. Yttre effekten har initierats med anpassade effekten via den <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>metoden.</xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>"
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the CreateBitmapEffectOuter method to retrieve a wrapper effect object.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "En referens till en [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objekt."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Skapar en klon av ohanterade effekten när åsidosätts i en härledd klass."
  remarks: ''
  example:
  - "The following example demonstrates an override of the CreateUnmanagedEffect method.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "En referens till ohanterad effekt klonen."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Returnerar den <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> som uppstår när effekten till den angivna <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);
    parameters:
    - id: input
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "Indata för att använda effekten på."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "Den <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> med effekten till indata."
  overload: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Initierar en [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) referensen hämtas från <xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>med den angivna [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx).</xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>"
  remarks: ''
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the InitializeBitmapEffect method to initialize the wrapper object with the custom effect.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);
    parameters:
    - id: outerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "Yttre IMILBitmapEffect wrapper initieras."
    - id: innerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "Den inre IMILBitmapEffectPrimitive."
  overload: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Anger den angivna egenskapen till det angivna värdet."
  remarks: "Den här metoden är avsedd som en hjälpmetod för <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A> När du åsidosätta <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, Använd SetValue för att uppdatera ohanterade egenskapsvärden.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>"
  syntax:
    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);
    parameters:
    - id: effect
      type: System.Runtime.InteropServices.SafeHandle
      description: "Referensen till den effekt som innehåller egenskapen du vill ändra."
    - id: propertyName
      type: System.String
      description: "Namnet på egenskapen för att ändra."
    - id: value
      type: System.Object
      description: "Värdet som ska användas för att ange egenskapen."
  overload: System.Windows.Media.Effects.BitmapEffect.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "När åsidosätts i en härledd klass, uppdaterar du egenskapen tillstånd för ohanterade egenskaperna för effekten."
  remarks: "När du ställer in ohanterade egenskaper i en åsidosättning av den här metoden hjälpmetoden <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>"
  syntax:
    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "Referensen till den effekt som innehåller egenskaper som ska uppdateras."
  overload: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BitmapEffect.Clone
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter
  nameWithType: BitmapEffect.CreateBitmapEffectOuter
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput
  nameWithType: BitmapEffect.GetOutput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect
  nameWithType: BitmapEffect.InitializeBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue
  nameWithType: BitmapEffect.SetValue
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState
