### YamlMime:ManagedReference
items:
- uid: System.Data.IDbTransaction
  id: IDbTransaction
  children:
  - System.Data.IDbTransaction.Commit
  - System.Data.IDbTransaction.Connection
  - System.Data.IDbTransaction.IsolationLevel
  - System.Data.IDbTransaction.Rollback
  langs:
  - csharp
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
  type: Interface
  summary: "Representerar en transaktion utförs på en datakälla och implementeras av .NET Framework dataproviders som kommer åt relationsdatabaser."
  remarks: "Du kan använda en ärvande klass att implementera en transaktion-klass som representerar transaktionen som ska utföras på en datakälla i IDbTransaction-gränssnittet. Mer information om transaktionen klasser finns [transaktioner och samtidighet](~/add/includes/ajax-current-ext-md.md).       Ett program skapa inte en instans av gränssnittet IDbTransaction direkt, men de skapar en instans av en klass som ärver IDbTransaction.       Klasser som ärver IDbTransaction måste implementera ärvda medlemmar och vanligtvis definiera ytterligare medlemmar för att lägga till provider-specifik funktion. Till exempel IDbTransaction-gränssnittet definierar den <xref:System.Data.IDbTransaction.Commit%2A>metoden.</xref:System.Data.IDbTransaction.Commit%2A> I sin tur den <xref:System.Data.OleDb.OleDbTransaction>klassen ärver den här egenskapen och definierar också den <xref:System.Data.OleDb.OleDbTransaction.Begin%2A>metoden.</xref:System.Data.OleDb.OleDbTransaction.Begin%2A> </xref:System.Data.OleDb.OleDbTransaction>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/t-system.data.idbtransac_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/t-system.data.idbtransac_1.vb)]"
  syntax:
    content: 'public interface IDbTransaction : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbTransaction.Commit
  id: Commit
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genomför databastransaktion."
  remarks: ''
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_0_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_0_1.vb)]"
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.Data.IDbTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ett fel uppstod vid försök att genomföra transaktionen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transaktionen har redan bekräftats eller återställts.       - eller - anslutningen har brutits."
  platform:
  - net462
- uid: System.Data.IDbTransaction.Connection
  id: Connection
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger anslutningsobjektet som ska associeras med transaktionen."
  remarks: "Ett program kan ha flera databasanslutningar, var och en med noll eller flera transaktioner. Den här egenskapen kan du bestämma det anslutningsobjekt som är associerade med en viss transaktion."
  syntax:
    content: public System.Data.IDbConnection Connection { get; }
    return:
      type: System.Data.IDbConnection
      description: "Anslutningsobjektet som ska associeras med transaktionen."
  overload: System.Data.IDbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anger den <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> för den här transaktionen."
  remarks: "Parallella transaktioner stöds inte. Därför kan den <xref:System.Data.IsolationLevel>gäller för hela transaktionen.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "Den <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> för den här transaktionen. Standardvärdet är <xref uid=&quot;langword_csharp_ReadCommitted&quot; name=&quot;ReadCommitted&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.Rollback
  id: Rollback
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Återställer en transaktion från ett väntande tillstånd."
  remarks: "Transaktionen kan bara återställas från ett väntande tillstånd (när <xref:System.Data.IDbConnection.BeginTransaction%2A>har anropats, men innan <xref:System.Data.IDbTransaction.Commit%2A>kallas).</xref:System.Data.IDbTransaction.Commit%2A> </xref:System.Data.IDbConnection.BeginTransaction%2A>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_1_1.vb)]"
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Data.IDbTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ett fel uppstod vid försök att genomföra transaktionen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transaktionen har redan bekräftats eller återställts.       - eller - anslutningen har brutits."
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbTransaction.Commit
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
- uid: System.Data.IDbTransaction.Connection
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbTransaction.IsolationLevel
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
- uid: System.Data.IDbTransaction.Commit*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit
  nameWithType: IDbTransaction.Commit
- uid: System.Data.IDbTransaction.Connection*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
- uid: System.Data.IDbTransaction.IsolationLevel*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback
  nameWithType: IDbTransaction.Rollback
