### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlTextWriter
  id: HtmlTextWriter
  children:
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.BeginRender
  - System.Web.UI.HtmlTextWriter.Close
  - System.Web.UI.HtmlTextWriter.DefaultTabString
  - System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  - System.Web.UI.HtmlTextWriter.Encoding
  - System.Web.UI.HtmlTextWriter.EndRender
  - System.Web.UI.HtmlTextWriter.EndTagLeftChars
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.EqualsChar
  - System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.FilterAttributes
  - System.Web.UI.HtmlTextWriter.Flush
  - System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.Indent
  - System.Web.UI.HtmlTextWriter.InnerWriter
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  - System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  - System.Web.UI.HtmlTextWriter.NewLine
  - System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.OutputTabs
  - System.Web.UI.HtmlTextWriter.PopEndTag
  - System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderAfterContent
  - System.Web.UI.HtmlTextWriter.RenderAfterTag
  - System.Web.UI.HtmlTextWriter.RenderBeforeContent
  - System.Web.UI.HtmlTextWriter.RenderBeforeTag
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderEndTag
  - System.Web.UI.HtmlTextWriter.SelfClosingChars
  - System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  - System.Web.UI.HtmlTextWriter.SemicolonChar
  - System.Web.UI.HtmlTextWriter.SingleQuoteChar
  - System.Web.UI.HtmlTextWriter.SlashChar
  - System.Web.UI.HtmlTextWriter.SpaceChar
  - System.Web.UI.HtmlTextWriter.StyleEqualsChar
  - System.Web.UI.HtmlTextWriter.TagKey
  - System.Web.UI.HtmlTextWriter.TagLeftChar
  - System.Web.UI.HtmlTextWriter.TagName
  - System.Web.UI.HtmlTextWriter.TagRightChar
  - System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  - System.Web.UI.HtmlTextWriter.Write(System.Char)
  - System.Web.UI.HtmlTextWriter.Write(System.Char[])
  - System.Web.UI.HtmlTextWriter.Write(System.Double)
  - System.Web.UI.HtmlTextWriter.Write(System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.Int64)
  - System.Web.UI.HtmlTextWriter.Write(System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.Single)
  - System.Web.UI.HtmlTextWriter.Write(System.String)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteBreak
  - System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
  type: Class
  summary: "Skriver markup tecken och text till en ASP.NET-kontrollen utdataström. Den här klassen innehåller funktioner för formatering som serverkontroller användas vid återgivning av markup till klienter."
  remarks: "Klassen HtmlTextWriter används för att återge HTML 4.0 i webbläsare. HtmlTextWriter också är basklass för alla markup-skrivare i den <xref:System.Web.UI>namnområde, inklusive den <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, och <xref:System.Web.UI.XhtmlTextWriter>klasser.</xref:System.Web.UI.XhtmlTextWriter> </xref:System.Web.UI.Html32TextWriter> </xref:System.Web.UI.ChtmlTextWriter> </xref:System.Web.UI> Dessa klasser används för att skriva element, attribut och information om format och layout för olika typer av markering. Dessutom kan som dessa klasser används av sidan och kontroll kortet klasser som är associerade med varje markup language.       I de flesta fall använder ASP.NET automatiskt lämpliga skrivaren för begärd enhet. Men om du skapar en egen text-skrivare eller om du vill ange en viss skrivare för att rendera en sida för en specifik enhet, måste du mappa skrivaren till sidan i den `controlAdapters` i programmet .browser-filen."
  example:
  - "The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class. The code example illustrates how to use various HtmlTextWriter methods, properties, and fields.  \n  \n [!code-cs[MarkupTextWriter_Samples1#1](~/add/codesnippet/csharp/t-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: 'public class HtmlTextWriter : System.IO.TextWriter'
  inheritance:
  - System.IO.TextWriter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> klass som använder en standard fliken sträng."
  remarks: "HtmlTextWriter överlagring för HtmlTextWriter konstruktorn använder den <xref:System.Web.UI.HtmlTextWriter.DefaultTabString>konstant när indrag för en rad krävs.</xref:System.Web.UI.HtmlTextWriter.DefaultTabString> Anropar den <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>överlagring initieras den nya instansen.</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>"
  example:
  - "The following code example demonstrates how to use the HtmlTextWriter constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_26_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_26_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_26_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>-instans som skapar markup innehåll.</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> klass med angiven sträng tabbtecken."
  remarks: "HtmlTextWriter överlagring för HtmlTextWriter konstruktorn använder `tabString` när indrag för en rad krävs. Anropar den <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>grundläggande konstruktorn initieras den nya instansen.</xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_31_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_31_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_31_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer, string tabString);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Den <xref:System.IO.TextWriter>som skapar markup innehåll.</xref:System.IO.TextWriter>"
    - id: tabString
      type: System.String
      description: "Strängen som används för att återge indrag för en rad."
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till angivna markup-attribut och värde i den inledande taggen för elementet som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som skapas med ett efterföljande anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddAttribute överlagringen för metoden AddAttribute om attributet inte är en av de <xref:System.Web.UI.HtmlTextWriterAttribute>värden, eller om attributet inte är känd tills körningstid.</xref:System.Web.UI.HtmlTextWriterAttribute>       För en instans av alla angivna markup-element i <xref:System.Web.UI.HtmlTextWriter>klassen finns en lista med attribut för elementet.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, alla attribut som läggs till av den <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metoden renderas till den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan med attribut sedan bort från den <xref:System.Web.UI.HtmlTextWriter>objekt.</xref:System.Web.UI.HtmlTextWriter>       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metod för att lägga till alla attribut i elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementets inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream. The AddAttribute method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_42_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_42_1.vb)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på attributet för att lägga till."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Attributet markup och attributvärdet som läggs till i den inledande taggen för elementet som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som skapas med ett efterföljande anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddAttribute överlagringen för metoden AddAttribute för att rendera en standard markup-attributet.       För en instans av alla angivna markup-element i <xref:System.Web.UI.HtmlTextWriter>klassen finns en lista med attribut för elementet.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, alla attribut som läggs till av den <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metoden renderas till den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan med attribut raderas sedan från <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter>       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metod för att lägga till alla attribut i elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementets inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:  \n  \n```  \nalert('Hello');  \n```  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/visualbasic/f7056fa3-ef89-45d7-9cdd-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/csharp/f7056fa3-ef89-45d7-9cdd-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/cpp/f7056fa3-ef89-45d7-9cdd-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som representerar markup attributet ska läggas till utdataströmmen."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  id: AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till angivna markup-attribut och värde i den inledande taggen för elementet som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som skapas med ett efterföljande anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metod med valfria kodning.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddAttribute överlagringen för metoden AddAttribute om attributet inte är en av de <xref:System.Web.UI.HtmlTextWriterAttribute>värden eller om attributet inte är känd tills körningstid och kodning krävs.</xref:System.Web.UI.HtmlTextWriterAttribute>       För en instans av alla angivna markup-element i <xref:System.Web.UI.HtmlTextWriter>klassen finns en lista med attribut för elementet.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, alla attribut som läggs till av den <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metoden renderas till den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan med attribut sedan bort från den <xref:System.Web.UI.HtmlTextWriter>objekt.</xref:System.Web.UI.HtmlTextWriter>       Använd metoden AddAttribute med `fEncode` inställd på `true`, om attributet kan möjligtvis innehålla ett citattecken (&quot;), ett mindre än-tecken (<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> Metodanropet kommer koda attributet för att uppfylla kraven för begärd enhet. Du kan ange `fEncode` till `false`, om du vet att ingen av dessa tecken genereras eller om du vet att attributet är redan kodad.       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metod för att lägga till alla attribut i elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementets inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/42cbe4de-f3a3-40dc-8e06-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/42cbe4de-f3a3-40dc-8e06-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/42cbe4de-f3a3-40dc-8e06-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value, bool fEndode);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på attributet för att lägga till."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
    - id: fEndode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att koda attributet och dess värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till angivna markup-attribut och värde, tillsammans med en <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> uppräkningsvärdet till den inledande taggen för elementet som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som skapas med ett efterföljande anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddAttribute överlagringen för metoden AddAttribute endast vid arv från <xref:System.Web.UI.HtmlTextWriter>klass.</xref:System.Web.UI.HtmlTextWriter> Du kan skapa en ny `name` och `key` par för attribut."
  syntax:
    content: protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på attributet för att lägga till."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som representerar attributet."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Attributet markup och attributvärdet som läggs till i den inledande taggen för elementet som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt som skapas med ett efterföljande anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metod med valfria kodning.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddAttribute överlagringen för metoden AddAttribute för att återge attributet standard markeringen valfria kodning.       För en instans av alla angivna markup-element i <xref:System.Web.UI.HtmlTextWriter>klassen finns en lista med attribut för elementet.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, alla attribut som läggs till av den <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>återges den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan med attribut sedan bort från den <xref:System.Web.UI.HtmlTextWriter>objekt.</xref:System.Web.UI.HtmlTextWriter>       Använd metoden AddAttribute med `fEncode` inställd på `true`, om attributet kan möjligtvis innehålla ett citattecken (&quot;), ett mindre än-tecken (<), or an ampersand (&). or=&quot;&quot; an=&quot;&quot; ampersand=&quot;&quot;></), or an ampersand (&).> Metodanropet kommer koda attributet för att uppfylla kraven för begärd enhet. Du kan ange `fEncode` till `false`, om du vet att ingen av dessa tecken genereras eller om du vet att attributet är redan kodad.       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>metod för att lägga till alla attribut i elementet.</xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementets inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use the AddAttribute method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/5fc4f314-c4b1-473d-abfa-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/5fc4f314-c4b1-473d-abfa-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/5fc4f314-c4b1-473d-abfa-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som representerar markup attributet ska läggas till utdataströmmen."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att koda attributet och dess värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  id: AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till angivna markup formatattributet och attributvärdet öppnas markup tagg som skapats av ett anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddStyleAttribute överlagringen för metoden AddStyleAttribute när formatet som inte är medlem i den <xref:System.Web.UI.HtmlTextWriterStyle>uppräkning eller inte är känd tills körningstid.</xref:System.Web.UI.HtmlTextWriterStyle>       Den <xref:System.Web.UI.HtmlTextWriter>klassen upprätthåller en lista över format för markeringselement som det återgivningar.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, formatmallar läggs till som den <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metoden renderas till den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan över formatmallar rensas sedan.       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metod för att lägga till ett format som attribut till elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementet inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the AddStyleAttribute method to render `font-size` and `color` style attributes on a `<p>` element. This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.  \n  \n [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_13_1.cpp)]\n [!code-cs[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_13_1.cs)]\n [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_13_1.vb)]"
  syntax:
    content: public virtual void AddStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller formatattributet för att lägga till."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  id: AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till attributet markup format som är associerade med den angivna <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> värdet och attributvärdet som ska öppnas markup tagg som skapats av ett anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddStyleAttribute överlagringen för metoden AddStyleAttribute när formatet som är medlem i den <xref:System.Web.UI.HtmlTextWriterStyle>uppräkningen och är känd innan körning.</xref:System.Web.UI.HtmlTextWriterStyle>       Den <xref:System.Web.UI.HtmlTextWriter>klassen upprätthåller en lista över format för markeringselement som det återgivningar.</xref:System.Web.UI.HtmlTextWriter> När den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropas, alla format som lagts till av den <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metoden renderas till den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> I listan över formatmallar rensas sedan.       Kodning mönstret för att återge markeringselement är följande:-användning av <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metod för att lägga till ett format som attribut till elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>      -Använda andra metoder som behövs för att återge innehållet mellan elementet inledande och avslutande taggar.      – Använd den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The code checks whether a `<Label>` element is being rendered. If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element. If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/da7f284f-e06a-4e07-bda6-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/da7f284f-e06a-4e07-bda6-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/da7f284f-e06a-4e07-bda6-_1.cs)]"
  syntax:
    content: public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som representerar formatattributet att lägga till utdataströmmen."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lägger till angivna markup formatattributet och attributvärdet för tillsammans med en <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> uppräkningsvärdet till ingående markup tagg som skapats av ett anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Använd AddStyleAttribute överlagringen för metoden AddStyleAttribute endast vid arv från <xref:System.Web.UI.HtmlTextWriter>klass.</xref:System.Web.UI.HtmlTextWriter> Du kan skapa en ny `name` och `value` -par för <xref:System.Web.UI.HtmlTextWriterStyle>attribut.</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller formatattributet som ska läggas till."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet för att tilldela attributet."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som representerar formatattributet att lägga till."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  id: BeginRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Meddelar en <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt eller ett objekt i en härledd klass som en kontroll håller på att återges."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden BeginRender har inga funktioner.</xref:System.Web.UI.HtmlTextWriter> Du måste åsidosätta metoden BeginRender i en klass som härleds från <xref:System.Web.UI.HtmlTextWriter>att tillhandahålla egna återgivning funktioner.</xref:System.Web.UI.HtmlTextWriter> Till exempel i en markup language som kan kräva `<p>` element som ska renderas direkt i en kontroll, men var behovet av att den `<p>` element bestäms tidigare, kan du använda BeginRender åsidosättning."
  syntax:
    content: public virtual void BeginRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Close
  id: Close
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Stänger den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objektet och släpper systemresurser som är kopplade till den."
  remarks: "Den här implementeringen av Stäng metodanrop på <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>bas-metoden.</xref:System.IO.TextWriter.Close%2A?displayProperty=fullName>       Efter ett anrop till metoden Close några åtgärder den <xref:System.Web.UI.HtmlTextWriter>objekt kan utlösa undantag eftersom alla resurser som har släppts.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  id: DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar ett enda tabbtecken."
  remarks: "Fliken enda representeras av 9 ASCII-tecken."
  example:
  - "The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the DefaultTabString field as a parameter argument to a second version of the constructor. When this constructor is called from code, the DefaultTabString field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.  \n  \n [!code-cs[MarkupTextWriter_Methods3#1](~/add/codesnippet/csharp/f-system.web.ui.htmltext_8_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#1](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_8_1.vb)]"
  syntax:
    content: public const string DefaultTabString;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  id: DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar citattecken (&quot;)."
  remarks: "Fältet DoubleQuoteChar används av den <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metod för att stänga ett attribut.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and DoubleQuoteChar fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_7_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_7_1.cs)]"
  syntax:
    content: public const char DoubleQuoteChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  id: EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kodar värdet för attributet angivna markup baserat på kraven för den <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objekt av den aktuella kontexten."
  remarks: "Använd EncodeAttributeValue överlagringen för den <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>metoden om attributet inte är en <xref:System.Web.UI.HtmlTextWriterAttribute>uppräkningsvärdet eller känns inte förrän körningstid.</xref:System.Web.UI.HtmlTextWriterAttribute> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>       Den <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>metoden tar bort dubbla citattecken (&quot;), et-tecken (&) och mindre än-tecken (<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;> </) so that invalid tags are not generated, regardless of the input.> </xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Den faktiska kodningen utförs av den <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metoden.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  example:
  - "The following code example shows how to call the EncodeAttributeValue method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.  \n  \n [!code-cs[HtmlTextWriter_Methods#5](~/add/codesnippet/csharp/ca3d7869-90f7-46e1-a9f1-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#5](~/add/codesnippet/visualbasic/ca3d7869-90f7-46e1-a9f1-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#5](~/add/codesnippet/cpp/ca3d7869-90f7-46e1-a9f1-_1.cpp)]"
  syntax:
    content: protected string EncodeAttributeValue (string value, bool fEncode);
    parameters:
    - id: value
      type: System.String
      description: "En sträng som innehåller attributvärdet som koda."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att koda attributvärdet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En sträng som innehåller kodade attributvärdet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om <code> value </code> är tom eller kodat attributvärdet om <code> fEncode </code> är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kodar värdet för attributet angivna markup baserat på kraven för den <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objekt av den aktuella kontexten."
  remarks: "Metoden EncodeAttributeValue tar bort dubbla citattecken (&quot;), et-tecken (&) och mindre än loggar ()<) so that invalid tags are not generated, regardless of the input. so=&quot;&quot; that=&quot;&quot; invalid=&quot;&quot; tags=&quot;&quot; are=&quot;&quot; not=&quot;&quot; generated,=&quot;&quot; regardless=&quot;&quot; of=&quot;&quot; the=&quot;&quot;></) so that invalid tags are not generated, regardless of the input.> Den faktiska kodningen utförs av den <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metoden.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som representerar markup-attributet."
    - id: value
      type: System.String
      description: "En sträng som innehåller attributvärdet som koda."
    return:
      type: System.String
      description: "En sträng som innehåller attributvärdet som kodad."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  id: EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Utför minimal URL-kodning genom att konvertera blanksteg i den angivna URL: en till strängen &quot;%&20;&quot;."
  remarks: "URL-kodning av ett tecken som består av ett procenttecken (%) följt av två siffror hexadecimala representationen (skiftlägesokänslig) i ISO-Latin-kodpunkt för tecknet. Hexadecimal representation av ett utrymme är 20."
  example:
  - "The following code example demonstrates how to call the EncodeUrl method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.  \n  \n [!code-cs[HtmlTextWriter_Methods#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_41_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_41_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#6](~/add/codesnippet/cpp/m-system.web.ui.htmltext_41_1.cpp)]"
  syntax:
    content: protected string EncodeUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "En sträng som innehåller URL: en för kodning."
    return:
      type: System.String
      description: "En sträng som innehåller den kodade URL."
  overload: System.Web.UI.HtmlTextWriter.EncodeUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Encoding
  id: Encoding
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar kodning som den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objektet används för att skriva innehållet till sidan."
  remarks: "Egenskapen kodning hämtar värdet från basklassen <xref:System.IO.TextWriter>objektet.</xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use the Encoding property to write the type of encoding that a custom control uses to render text to the page that contains it.  \n  \n [!code-cpp[HtmlTextWriter_Properties#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_3_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: "Den <xref:System.Text.Encoding>i som koden skrivs till sidan.</xref:System.Text.Encoding>"
  overload: System.Web.UI.HtmlTextWriter.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndRender
  id: EndRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Meddelar en <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt eller ett objekt i en härledd klass att en kontroll har slutförts återgivning. Du kan använda den här metoden för att stänga alla markeringselement som öppnas i den <xref:System.Web.UI.HtmlTextWriter.BeginRender*>metoden.</xref:System.Web.UI.HtmlTextWriter.BeginRender*>"
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden EndRender har inga funktioner.</xref:System.Web.UI.HtmlTextWriter> Du måste åsidosätta EndRender i en klass som härleds från den <xref:System.Web.UI.HtmlTextWriter>klassen för att tillhandahålla egna återgivning funktioner.</xref:System.Web.UI.HtmlTextWriter>       Du kan använda metoden EndRender för att stänga alla markeringselement som öppnas i den <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>"
  syntax:
    content: public virtual void EndRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  id: EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar markeringen vänstra vinkel hakparentes och snedstreck (&lt;/) på avslutande taggen för elementet markering."
  remarks: "Fältet EndTagLeftChars används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metod för att konstruera markup elementet sluttaggar.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` markup element by using the EndTagLeftChars and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_10_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_10_1.cs)]"
  syntax:
    content: public const string EndTagLeftChars;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  id: EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den inledande taggen för en <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> element som innehåller attribut som implementerar layout och tecknet formatering av det angivna formatet."
  remarks: "Använd metoden EnterStyle för att tillämpa format, till exempel bakgrund färg eller kantlinje bredden på ett block av markering.       EnterStyle och <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metoderna gör en enhetsadapter eller kontroll för att skapa markup som använder formateringen på det angivna formatet.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Använd samma värde för `style` EnterStyle-metod som du använder i motsvarande <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metod.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       EnterStyle överlagringen för metoden EnterStyle återgivningar starttaggen i en `<span>` element. Den här metoden lägger sedan till nödvändiga attribut och attribut i starttaggen i den `<span>` elementet så att de inställningar som anges av den <xref:System.Web.UI.WebControls.Style>objekt.</xref:System.Web.UI.WebControls.Style> Om du vill att ett annat markup element ska innehålla de attribut och attribut, använder den <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>överlagra.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the EnterStyle method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The EnterStyle method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_43_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "En <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> som anger layout och format som du vill börja använda block av markering."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den inledande taggen för elementet markering som innehåller attribut som implementerar layouten och formateringen på det angivna formatet."
  remarks: "Använd metoden EnterStyle för att tillämpa format, till exempel bakgrund färg eller kantlinje bredden på ett block av markering.       EnterStyle och <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metoderna gör en enhetsadapter eller kontroll för att skapa markup som använder formateringen på det angivna formatet.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Använd samma värde för `style` EnterStyle-metod som du använder i motsvarande <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>metod.</xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>       Den <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>överlagringen för metoden EnterStyle återger den inledande taggen för elementet som anges av den `tag` parameter.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoden EnterStyle lägger sedan till nödvändiga attribut och attribut i den inledande taggen för elementet så att inställningarna som anges av den <xref:System.Web.UI.WebControls.Style>objekt.</xref:System.Web.UI.WebControls.Style> Använd den <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>överlagring ska renderas starttaggen i en `<span>` element.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/92807ec1-50d1-4344-bc65-_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "En <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> som anger layout och format som du vill börja använda block av markering."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> som anger starttagg markup-element som innehåller style-objekt som angetts i `style`."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  id: EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar likhetstecknet (<xref uid=&quot;langword_csharp_=&quot; name=&quot;=&quot; href=&quot;&quot;></xref>)."
  remarks: "Du kanske vill använda den <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>fältet i stället för fältet EqualsChar när man skapar den inledande avgränsaren i ett attributvärde.</xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>"
  example:
  - "The following code example shows how to render the `src` attribute and part of its value for an `<img>` element. The code uses the EqualsChar field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public const char EqualsChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  id: EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar ett likhetstecken (=) och ett dubbelt citattecken (&quot;) tillsammans i en sträng (=&quot;)."
  remarks: "Fältet EqualsDoubleQuoteString används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>och <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metoder för att konstruera den inledande avgränsaren i attributvärden.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the EqualsDoubleQuoteString and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_5_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_5_1.cs)]"
  syntax:
    content: public const string EqualsDoubleQuoteString;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  id: ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den avslutande taggen för en <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> element till slutet av den angivna layout och formatera tecken."
  remarks: "ExitStyle överlagringen för metoden ExitStyle återger den avslutande taggen för en `<span>` elementet efter den avslutande taggen för kontrollen stänger elementet öppnas av motsvarande <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>anropa.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>       ExitStyle och <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metoderna gör en enhetsadapter eller kontroll för att skapa markeringar som börjar och slutar ett block med hjälp av formateringen på det angivna formatet.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Använd samma värde för `style` i den <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metod som ska användas i metoden motsvarande ExitStyle.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The ExitStyle method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_32_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "En <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> som anger layout och formatering för att stänga."
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den avslutande taggen för elementet angivna markeringen till slutet av den angivna layout och formatering."
  remarks: "ExitStyle överlagringen för metoden ExitStyle återger den avslutande taggen för elementet som anges av `tag` efter den avslutande taggen för kontrollen, stänger du det element som har öppnats av motsvarande <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>metodanrop.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>       ExitStyle och <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metoderna gör en enhetsadapter eller kontroll för att skapa markeringar som börjar och slutar ett block med hjälp av formateringen på det angivna formatet.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Använd samma värde för `style` i den <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>metod som ska användas i metoden motsvarande ExitStyle.</xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>"
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/5d790280-f115-4c9e-8ee8-_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "En <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> som anger layout och format som du vill sluta att använda resultattexten."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> som anger den avslutande taggen för elementet markering som innehåller de attribut som används av det angivna formatet. Nyckeln som har skickats i motsvarande måste matcha <xref:System.Web.UI.HtmlTextWriter.EnterStyle*>anropa.</xref:System.Web.UI.HtmlTextWriter.EnterStyle*>"
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  id: FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Tar bort alla påläggs- och attribut för alla egenskaper för den sida eller webbserverkontrollen."
  remarks: "Innan attribut renderas på ett element som markeringar, anropas FilterAttributes-metoden. I sin tur metoden FilterAttributes anropar den <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>och <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>metoder för varje attribut och format för att återge.</xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> </xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>"
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the FilterAttributes method. When called, the FilterAttributes override checks whether the text writer renders any `<label>` or `<a>` elements:  \n  \n-   If a `<label>` element is being rendered, the FilterAttributes method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.  \n  \n-   If an `<a>` element is being rendered, the FilterAttributes method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_16_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_16_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_16_1.cpp)]"
  syntax:
    content: protected virtual void FilterAttributes ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Flush
  id: Flush
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Rensar alla buffertar för aktuellt <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objektet och alla buffrade data skrivs till utdataströmmen orsaker."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden Flush anropar bara den <xref:System.IO.TextWriter.Flush%2A>bas-metoden.</xref:System.IO.TextWriter.Flush%2A> </xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  id: GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar motsvarande <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> uppräkningsvärde för det angivna attributet."
  remarks: "Om `attrName` är `null` eller en tom sträng (&quot;&quot;), eller kan inte hittas i tabellen i attributnamn värdet -1, typbestämd till ett <xref:System.Web.UI.HtmlTextWriterAttribute>objekt, returneras.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag> field, which indicates that a `<font>` markup element will be rendered. If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the GetAttributeKey method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_9_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_9_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_9_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);
    parameters:
    - id: attrName
      type: System.String
      description: "En sträng som innehåller attribut som du vill hämta den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> uppräkningsvärde för det angivna attributet; annars en ogiltig <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> värde om attributet inte är medlem i uppräkningen."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  id: GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar namnet på attributet markup som är associerade med den angivna <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> värde."
  remarks: "Metoden GetAttributeName returnerar en tom sträng (&quot;&quot;), om `attrKey` är inte ett giltigt <xref:System.Web.UI.HtmlTextWriterAttribute>värde.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use the GetAttributeName method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value to its string name.  \n  \n [!code-vb[HtmlTextWriter_Methods3#6](~/add/codesnippet/visualbasic/fd0863d4-1999-4326-849f-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#6](~/add/codesnippet/cpp/fd0863d4-1999-4326-849f-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#6](~/add/codesnippet/csharp/fd0863d4-1999-4326-849f-_1.cs)]"
  syntax:
    content: protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> att hämta markup attributnamnet för."
    return:
      type: System.String
      description: "En sträng som innehåller namnet på attributet markering."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  id: GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> uppräkningsvärde för det angivna formatet."
  remarks: "Metoden GetStyleKey returnerar värdet -1 som en <xref:System.Web.UI.HtmlTextWriterStyle>värde om `styleName` motsvarar inte någon <xref:System.Web.UI.HtmlTextWriterStyle>uppräkningsvärdet.</xref:System.Web.UI.HtmlTextWriterStyle> </xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle> attribute. If a <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the GetStyleKey method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `red`.  \n  \n [!code-cs[HtmlTextWriter_Methods#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_14_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_14_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_14_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);
    parameters:
    - id: styleName
      type: System.String
      description: "Attributet för format som du vill hämta den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> uppräkning värde motsvarar <code> styleName </code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  id: GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar markup format attributets namn som är associerade med den angivna <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> uppräkningsvärde."
  remarks: "Om `styleKey` är inte ett giltigt <xref:System.Web.UI.HtmlTextWriterStyle>objekt GetStyleName-metoden returnerar en tom sträng (&quot;&quot;).</xref:System.Web.UI.HtmlTextWriterStyle>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the GetStyleName method converts the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_29_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_29_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_29_1.cs)]"
  syntax:
    content: protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);
    parameters:
    - id: styleKey
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> att hämta format attributnamnet för."
    return:
      type: System.String
      description: "Attributnamnet format som är associerade med den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> uppräkningsvärdet som anges i <code> styleKey </code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  id: GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> uppräkningsvärdet som associeras med det angivna markup-elementet."
  remarks: "Om `tagName` är `null`, en tom sträng (&quot;&quot;), eller kan inte hittas i tabellen i markup taggnamn GetTagKey-metoden returnerar den <xref:System.Web.UI.HtmlTextWriterTag>fält.</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter. The string is passed to the GetTagKey method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.  \n  \n [!code-vb[HtmlTextWriter_Methods3#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_17_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#8](~/add/codesnippet/cpp/m-system.web.ui.htmltext_17_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_17_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Markup-element som du vill hämta den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>."
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> uppräkningsvärdet; annars, om <code> tagName </code> är inte associerad med en specifik <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> värde, <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.GetTagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  id: GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar markup-element som är associerade med den angivna <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> uppräkningsvärde."
  remarks: "Om `tagKey` är inte ett giltigt <xref:System.Web.UI.HtmlTextWriterTag>-värde, GetTagName-metoden returnerar en tom sträng (&quot;&quot;).</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method. The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the GetTagName method to convert the <xref:System.Web.UI.HtmlTextWriterTag> value to a string.  \n  \n [!code-vb[HtmlTextWriter_Methods3#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_40_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_40_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_40_1.cs)]"
  syntax:
    content: protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> att hämta markup-element för."
    return:
      type: System.String
      description: "En sträng som representerar elementet markering."
  overload: System.Web.UI.HtmlTextWriter.GetTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Indent
  id: Indent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger antalet positioner som fliken dra in i början av varje rad med kod."
  remarks: "Indraget utförs genom att skriva strängen som anges av den `tabString` parameter för den <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>konstruktorn antalet gånger som anges av egenskapen indrag.</xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>       Om egenskapen indrag anges med ett negativt värde, ändras den till 0 innan de sparas."
  example:
  - "The following code example demonstrates how to increment the value that is assigned to the Indent property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called. This increases the indentation for any markup that is rendered inside the `<span>` element.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: public int Indent { get; set; }
    return:
      type: System.Int32
      description: "Antalet positioner fliken dra in varje rad."
  overload: System.Web.UI.HtmlTextWriter.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  id: InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger textskrivare som skriver innehållet i elementet markering."
  remarks: "Inre markup innehåll är den text som finns mellan inledande och avslutande taggar för en markering-språkelement.       Om egenskapen InnerWriter anges till ett <xref:System.IO.TextWriter>objekt som är en instans av den <xref:System.Web.HttpWriter>klass, detta faktum noteras och en separat referens sparas.</xref:System.Web.HttpWriter> </xref:System.IO.TextWriter>"
  example:
  - "The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method. It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element. After it writes the opening tag of the element, it uses the InnerWriter property to write the string `\"<br> The time on the server:\"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[HtmlTextWriter_Properties#3](~/add/codesnippet/cpp/p-system.web.ui.htmltext_0_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#3](~/add/codesnippet/csharp/p-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#3](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_0_1.vb)]"
  syntax:
    content: public System.IO.TextWriter InnerWriter { get; set; }
    return:
      type: System.IO.TextWriter
      description: "En <xref:System.IO.TextWriter>som skriver inre markup-innehåll.</xref:System.IO.TextWriter>"
  overload: System.Web.UI.HtmlTextWriter.InnerWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om det angivna markup-attributet och dess värde ska renderas under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Att hämta värdet som ska tilldelas den <xref:System.Web.UI.HtmlTextWriterAttribute>objekt, använda den <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>överlagra i stället för den här.</xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> </xref:System.Web.UI.HtmlTextWriterAttribute>"
  example:
  - "The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered. If so, the override calls the IsAttributeDefined method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/cbdca703-4aa0-4111-9334-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/cbdca703-4aa0-4111-9334-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/cbdca703-4aa0-4111-9334-_1.cpp)]"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som är associerade med attributet markering."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om attributet återges under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om det angivna markup-attributet och dess värde ska renderas under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Om metoden IsAttributeDefined returnerar `true`, värdet som ska tilldelas den <xref:System.Web.UI.HtmlTextWriterAttribute>objekt returneras i den `value` parameter.</xref:System.Web.UI.HtmlTextWriterAttribute>"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som är associerade med attributet markering."
    - id: value
      type: System.String
      description: "Värdet på attributet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om attributet återges under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om formatattributet angivna markup återges under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "För att få det värde som ska renderas med angivna formatattributet kan använda den <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>överlagringen för metoden IsStyleAttributeDefined.</xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>"
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, the IsStyleAttributeDefined method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle> attribute and sets its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/47188de5-abf6-4bc4-9c12-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/47188de5-abf6-4bc4-9c12-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/47188de5-abf6-4bc4-9c12-_1.cs)]"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som är associerade med attributet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om attributet ska renderas under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om attributet angivna markup format och dess värde ska renderas under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  remarks: "Om IsStyleAttributeDefined-metoden returnerar `true`, värdet som ska tilldelas den <xref:System.Web.UI.HtmlTextWriterStyle>attributet returneras den `value` parameter.</xref:System.Web.UI.HtmlTextWriterStyle>"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som är associerade med attributet."
    - id: value
      type: System.String
      description: "Värdet som tilldelas för formatattributet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om attributet och dess värde ska renderas under nästa anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>metoden, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*>"
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  id: IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kontrollerar ett attribut för att säkerställa kan återges i starttaggen i en <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> markup-element."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden IsValidFormAttribute returnerar `true` för alla attribut.</xref:System.Web.UI.HtmlTextWriter> Åsidosätta IsValidFormAttribute för att begränsa de attribut som kan återges i starttaggen i en `<form>` element."
  syntax:
    content: public virtual bool IsValidFormAttribute (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "En sträng som innehåller namnet på attributet för att kontrollera."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.NewLine
  id: NewLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger rad Begränsare sträng som används av den <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objekt."
  remarks: "The default line terminator string is a carriage return, followed by a line feed (\"\\r\\n\").  \n  \n The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called. If the NewLine property is set to `null`, the default new line character is used."
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method. When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements. If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label. If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue. The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the NewLine property to insert a line break in the markup tag and writes any other defined attributes.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/p-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_2_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/p-system.web.ui.htmltext_2_1.cpp)]"
  syntax:
    content: public override string NewLine { get; set; }
    return:
      type: System.String
      description: "Används av aktuellt raden Begränsare strängen <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.NewLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om det angivna markup-attributet och dess värde kan återges i elementet aktuell markering."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden OnAttributeRender alltid returnerar `true`.</xref:System.Web.UI.HtmlTextWriter> OnAttributeRender åsidosättningar kan avgöra om ett attribut renderas på sidan."
  example:
  - "The following code example shows how to override the OnAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute> value is not `30pt`, the OnAttributeRender override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `30pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#5](~/add/codesnippet/csharp/d0e562f6-9a39-4246-a984-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#5](~/add/codesnippet/visualbasic/d0e562f6-9a39-4246-a984-_1.vb)]"
  syntax:
    content: protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på attributet som ska renderas."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet som tilldelas till attributet."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som är associerade med attributet markering."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om attributet angivna markup format och dess värde kan återges i elementet aktuell markering."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden OnStyleAttributeRender alltid returnerar `true`.</xref:System.Web.UI.HtmlTextWriter> OnStyleAttributeRender åsidosättningar kan avgöra om en formatattributet ska renderas på sidan."
  example:
  - "The following code example shows how to override the OnStyleAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle> value is not `purple`, the OnStyleAttributeRender override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `purple`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#6](~/add/codesnippet/csharp/d9590f65-fa57-44a8-99c7-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#6](~/add/codesnippet/visualbasic/d9590f65-fa57-44a8-99c7-_1.vb)]"
  syntax:
    content: protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på formatattributet som ska renderas."
    - id: value
      type: System.String
      description: "En sträng som innehåller värdet som tilldelas formatattributet."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som är associerade med attributet för format."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  id: OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om det angivna markup-elementet ska återges till sidan för begärande."
  remarks: "Den <xref:System.Web.UI.HtmlTextWriter>klassen implementering av metoden OnTagRender alltid returnerar `true`.</xref:System.Web.UI.HtmlTextWriter> OnTagRender åsidosättningar kan avgöra om ett element ska återges på sidan."
  example:
  - "The following code example shows how to override the OnTagRender method. If a <xref:System.Web.UI.HtmlTextWriterTag> element is being rendered, the OnTagRender override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is being rendered. If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `20pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#4](~/add/codesnippet/csharp/e717512e-2198-4ad0-a7c8-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#4](~/add/codesnippet/visualbasic/e717512e-2198-4ad0-a7c8-_1.vb)]"
  syntax:
    content: protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på elementet ska renderas."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> som är kopplade till elementet."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnTagRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  id: OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en serie med fliken strängar som representerar indragsnivå för en rad med kod tecken."
  remarks: "The OutputTabs method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.  \n  \n The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor. If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\\t`) is used."
  example:
  - "The following code example shows how to override the OutputTabs method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class. The OutputTabs override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.  \n  \n [!code-cs[HtmlTextWriter_Methods#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_34_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_34_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_34_1.cpp)]"
  syntax:
    content: protected virtual void OutputTabs ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.OutputTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  id: PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Tar bort det senast sparade markup-elementet från listan över renderade element."
  remarks: "Element som har lagts till i listan över renderade markeringselement av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden tar bort markerade element i listan genom att anropa metoden PopEndTag.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected string PopEndTag ();
    parameters: []
    return:
      type: System.String
      description: "En <xref:System.String>som innehåller den senast utförda markup element.</xref:System.String>"
  overload: System.Web.UI.HtmlTextWriter.PopEndTag*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Listan över renderade element är tom."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  id: PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sparar det angivna markup-elementet för senare användning vid generering av sluttaggen för elementet markering."
  remarks: "Element har lagts till i listan över renderade markeringselement när den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden anropar metoden PushEndTag.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden tar bort markerade element i listan efter att den återger sluttaggen för elementet.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  syntax:
    content: protected void PushEndTag (string endTag);
    parameters:
    - id: endTag
      type: System.String
      description: "Den avslutande taggen för elementet markering."
  overload: System.Web.UI.HtmlTextWriter.PushEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar markup attribut om literaler eller dynamiskt genererade så att de kan återges korrekt till den begärande klienten från källfilen."
  remarks: "Fördefinierade attribut i HTML-koden har registrerats av anrop till metoden RegisterAttribute när först <xref:System.Web.UI.HtmlTextWriter>objektet har skapats.</xref:System.Web.UI.HtmlTextWriter> Dynamisk attribut kan registreras med hjälp av metoden RegisterAttribute andra tider.       Tabellen registrering som används av RegisterAttribute-metoden är `static`, så att registrering av attribut som gäller för alla <xref:System.Web.UI.HtmlTextWriter>objekt på värddatorn.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller namnet på attributet markup att registrera."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;> </xref> som motsvarar attributets namn."
  overload: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  id: RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar markup formatmallsegenskaper om literaler eller dynamiskt genererade så att de kan återges korrekt till den begärande klienten från källfilen."
  remarks: "Fördefinierade cascading style sheet (CSS) attributen för HTML markup language registreras av anrop till metoden RegisterStyle när först <xref:System.Web.UI.HtmlTextWriter>objektet har skapats.</xref:System.Web.UI.HtmlTextWriter> Dynamisk formatattribut kan registreras med hjälp av metoden RegisterStyle andra tider.       Tabellen registrering som används av RegisterStyle-metoden är `static`, så att registrering av attribut som gäller för alla <xref:System.Web.UI.HtmlTextWriter>objekt på värddatorn.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "Strängen som skickas från källfilen att ange namnet."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "Den <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;> </xref> som motsvarar det angivna formatet."
  overload: System.Web.UI.HtmlTextWriter.RegisterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  id: RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar taggar, om literaler eller dynamiskt genererade så att de kan återges korrekt till den begärande klienten från källfilen."
  remarks: "De fördefinierade taggarna i HTML-språk som har registrerats av anrop till metoden RegisterTag när först <xref:System.Web.UI.HtmlTextWriter>objektet har skapats.</xref:System.Web.UI.HtmlTextWriter> Dynamisk taggar kan registreras med hjälp av metoden RegisterTag andra tider.       Tabellen registrering som används av RegisterTag-metoden är `static`, så att registrering av taggar som gäller för alla <xref:System.Web.UI.HtmlTextWriter>objekt på värddatorn.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "En sträng som innehåller HTML-tagg."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> som anger vilket element ska renderas."
  overload: System.Web.UI.HtmlTextWriter.RegisterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  id: RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver all text eller avstånd som görs efter innehållet och före den avslutande taggen för elementet markup till utdataströmmen markering."
  remarks: "Metoden RenderAfterContent kan vara användbart om du vill infoga underordnade element i det aktuella markup-elementet."
  example:
  - "The following code example shows how to override the RenderAfterContent method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered. If so, the RenderAfterContent override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element. If an element other than `<label>` is being rendered, the RenderAfterContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_6_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_6_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterContent ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som innehåller text som ska skriva efter innehållet i elementet eller avstånd."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  id: RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver några avstånd eller text som visas efter den avslutande taggen för elementet markering."
  remarks: "Metoden RenderAfterTag kan vara användbart om du vill göra ytterligare avslutande taggar efter elementtaggen."
  example:
  - "The following code example shows how to override the RenderAfterTag method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element. If so, the RenderAfterTag override inserts the closing tag of a `<font>` element immediately after the `<label>` element. If it is not a `<label>` element, the RenderAfterTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_7_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_7_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_7_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterTag ();
    parameters: []
    return:
      type: System.String
      description: "Avstånd eller text som ska skriva efter den avslutande taggen för elementet."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  id: RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver text eller avstånd före innehållet och efter den inledande taggen för elementet markering."
  remarks: "Metoden RenderBeforeContent kan vara användbart om du vill infoga underordnade element i det aktuella elementet markup innan den inre markeringen."
  example:
  - "The following code example shows how to override the RenderBeforeContent method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeContent override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element. If it is not a `<label>` element, the RenderBeforeContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_0_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_0_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_0_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeContent ();
    parameters: []
    return:
      type: System.String
      description: "Text eller avstånd att skriva innan innehållet i elementet. Om du inte har åsidosatts gäller RenderBeforeContent returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  id: RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver all text eller avstånd som inträffar före den inledande taggen för elementet markering."
  remarks: "Metoden RenderBeforeTag kan vara användbart om du vill att återge ytterligare öppna taggar innan den inledande taggen för det avsedda elementet."
  example:
  - "The following code example shows how to override the RenderBeforeTag method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeTag override inserts the opening tag of a `<font>` element immediately before the `<label>` element. If it is not rendering a `<label>` element, the RenderBeforeTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_20_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_20_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_20_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeTag ();
    parameters: []
    return:
      type: System.String
      description: "Text eller avstånd att skriva innan elementet markup startkoden. Om du inte har åsidosatts gäller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  id: RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den inledande taggen för elementet angivna markup till utdataströmmen."
  remarks: "Använd RenderBeginTag åsidosättning av metoden RenderBeginTag om markup-elementet inte är en av de <xref:System.Web.UI.HtmlTextWriterTag>uppräkningsvärdena.</xref:System.Web.UI.HtmlTextWriterTag>       Om du vill generera ett markup-element med hjälp av metoden RenderBeginTag först anropa den <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>och <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metoder som behövs för att ange alla elementattribut eller attribut som ska visas i den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Efter genererar inre koden anropar den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metod för att generera den avslutande taggen.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to call the RenderBeginTag method in a custom control to render the opening tag of a non-standard `MyTag` element. The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_35_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_35_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_35_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "En sträng som innehåller namnet på markup-elementet som ska renderas starttaggen."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver markup-element som är associerade med den angivna starttagg <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> uppräkningsvärdet till utdataströmmen."
  remarks: "Använd RenderBeginTag överlagringen för metoden RenderBeginTag om markup-elementet är av en känd typ som är en av de <xref:System.Web.UI.HtmlTextWriterTag>uppräkningsvärdena.</xref:System.Web.UI.HtmlTextWriterTag>       Att generera ett markup-element med hjälp av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden, första anropet av <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>och <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>metoder som behövs för att ange alla elementattribut eller attribut som ska visas i den inledande taggen för elementet.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Efter genererar inre koden anropar den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metod för att generera den avslutande taggen.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example shows how to use the RenderBeginTag method to output the opening tag of an `<img>` element. The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"Encoding \"Required\"\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_36_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_36_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_36_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "En av de <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> värden som definierar den inledande taggen för elementet markup ska renderas."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  id: RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver sluttaggen för elementet markup till utdataströmmen."
  remarks: "Anropa metoden RenderEndTag efter den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>överlagring anropas och när allt innehåll mellan inledande och avslutande taggar (inre markup) för elementet har gjorts.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates how to call the RenderEndTag method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_1_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_1_1.cpp)]"
  syntax:
    content: public virtual void RenderEndTag ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  id: SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar ett blanksteg och automatisk avslutande snedstreck (/) en markup-tagg."
  remarks: "Fältet SelfClosingChars används i markeringselement som är själva stängd. Exempel:`<input type=&quot;submit&quot; value=&quot;go&quot;  />`"
  syntax:
    content: public const string SelfClosingChars;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  id: SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar avslutande snedstreck markering och höger vinkelparentes (/&gt;) av en automatisk markup-element."
  remarks: "Fältet SelfClosingTagEnd används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden vid automatisk markeringselement.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the SelfClosingTagEnd field. The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the SelfClosingTagEnd field as the parameter argument to close the element.  \n  \n This code example renders the `FileName` property value, and then the following markup:  \n  \n `\" />`  \n  \n [!code-cs[MarkupTextWriter_Constants#11](~/add/codesnippet/csharp/f-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#11](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public const string SelfClosingTagEnd;
    return:
      type: System.String
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  id: SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar semikolon (;)."
  remarks: "Skicka fältet SemicolonChar som parametern-argument i en <xref:System.Web.UI.HtmlTextWriter.Write%2A>metodanrop när du vill återge semikolon från en anpassad kontroll eller nätverkskort.</xref:System.Web.UI.HtmlTextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to manually render a series of styles on a markup element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes. The SemicolonChar field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.  \n  \n This code example renders the following markup:  \n  \n `style=\"font-size:12pt;border-style:ridge\"`  \n  \n [!code-cs[MarkupTextWriter_Constants#7](~/add/codesnippet/csharp/f-system.web.ui.htmltext_4_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#7](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_4_1.vb)]"
  syntax:
    content: public const char SemicolonChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  id: SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar en apostrof (&quot;)."
  remarks: "Använd fältet SingleQuoteChar när det är nödvändigt att återge apostrof."
  syntax:
    content: public const char SingleQuoteChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  id: SlashChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar snedstreck (/)."
  remarks: "Använd fältet SlashChar för att återge snedstrecken när du skriver en URL. Den <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>metoden använder fältet SlashChar när du skriver den avslutande taggen för elementet markup.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>"
  example:
  - "The following code example demonstrates how to manually render the `src` attribute of an `<img>` element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the SlashChar field as its parameter to render slash marks in the path that is applied to the `src` attribute.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public const char SlashChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  id: SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar ett blanksteg ()."
  remarks: "Fältet SpaceChar används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>och <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>metoder när du skriver mellan element och attribut.</xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create a <xref:System.Char> array that contains the SpaceChar field.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_1.vb)]  \n  \n The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_2.vb)]"
  syntax:
    content: public const char SpaceChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  id: StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar de format som är lika med (<xref uid=&quot;langword_csharp_:&quot; name=&quot;:&quot; href=&quot;&quot;></xref>) tecken som används för att ange formatet attribut lika med värden."
  remarks: "Fältet StyleEqualsChar används av den <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>metod för att avgränsa formatmallsnamn och värden.</xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>"
  example:
  - "The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the StyleEqualsChar field as the parameter to render the character that sets the value of each style attribute.  \n  \n This code example renders the following markup:  \n  \n `FontWeight:\"bold\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#5](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#5](~/add/codesnippet/csharp/f-system.web.ui.htmltext_1_1.cs)]"
  syntax:
    content: public const char StyleEqualsChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagKey
  id: TagKey
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger den <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> värde för det angivna markup-elementet."
  remarks: "Egenskapen TagKey är endast som klasser som ärver från <xref:System.Web.UI.HtmlTextWriter>klass.</xref:System.Web.UI.HtmlTextWriter> Du bör läsa eller ange egenskapen TagKey endast i ett anrop till den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metoden; detta är den enda gången som den är inställd på ett konsekvent värde.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. It uses the value of the TagKey property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element. If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Det markup-element som har dess inledande taggen renderas."
  overload: System.Web.UI.HtmlTextWriter.TagKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapens värde kan inte anges."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  id: TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar öppna vinkelparentes (&lt;) en markup-tagg."
  remarks: "Fältet TagLeftChar används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, och <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>metoder när du skriver taggar.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example renders the first character of the opening tag of a `<table>` element with the element name. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagLeftChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `<table`  \n  \n [!code-vb[MarkupTextWriter_Constants#9](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_9_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#9](~/add/codesnippet/csharp/f-system.web.ui.htmltext_9_1.cs)]"
  syntax:
    content: public const char TagLeftChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagName
  id: TagName
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar eller anger taggnamnet på elementet markup renderas."
  remarks: "TagName-egenskapen är endast som klasser som ärver från <xref:System.Web.UI.HtmlTextWriter>klass.</xref:System.Web.UI.HtmlTextWriter> Du bör läsa eller ange egenskapen TagName i <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>metodanrop; detta är den enda gången som den är inställd på ett konsekvent värde.</xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=fullName> method, and then passing the TagName property value and a string, `\"label\"`, as the parameter arguments. If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag. If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/p-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_5_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/p-system.web.ui.htmltext_5_1.cpp)]"
  syntax:
    content: protected string TagName { get; set; }
    return:
      type: System.String
      description: "Taggnamnet på elementet markup renderas."
  overload: System.Web.UI.HtmlTextWriter.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  id: TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representerar avslutande vinkelparentes (&gt;) en markup-tagg."
  remarks: "Fältet TagRightChar används av den <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, och <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>metoder när du skriver taggar.</xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> </xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> </xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>"
  example:
  - "The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method. To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagRightChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_6_1.cs)]"
  syntax:
    content: public const char TagRightChar;
    return:
      type: System.Char
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett booleskt värde till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Den <xref:System.Boolean>att skriva till utdataströmmen.</xref:System.Boolean>"
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett Unicode-tecken till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates using the Write method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.  \n  \n This code example renders the following markup:  \n  \n `<img alt=\"A custom image\">`  \n  \n `</img>`  \n  \n [!code-cs[MarkupTextWriter_Samples1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_21_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_21_1.vb)]"
  syntax:
    content: public override void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Unicode-tecken att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av en matris med Unicode-tecken till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array of characters. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_1.vb)]  \n  \n The following code example demonstrates how to use the Write method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matris med Unicode-tecken för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett flyttal med dubbel precision till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_10_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_10_1.vb)]"
  syntax:
    content: public override void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Det dubbel precision Flyttalet att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett 32-byte heltal till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Den 32-byte heltal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett heltal med 64 byte till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  syntax:
    content: public override void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Den 64 byte heltal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett objekt till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property.  \n  \n This code example generates the following markup:  \n  \n `This is a rendered CultureInfo object.`  \n  \n `<bold>`  \n  \n The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:  \n  \n `</bold>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_19_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_19_1.vb)]"
  syntax:
    content: public override void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som används för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett flyttal med enkel precision till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_28_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_28_1.vb)]"
  syntax:
    content: public override void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Det enda Flyttalet precision att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den angivna strängen till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example demonstrates how to use the Write method to render a string between the opening and closing tags of a custom markup element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_25_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_25_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_25_1.cpp)]"
  syntax:
    content: public override void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strängen som ska skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en fliken sträng och en formaterad sträng till utdataströmmen med hjälp av samma semantik som den &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metod, tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_18_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_18_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg0
      type: System.Object
      description: "Ett objekt för att formatera."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en formaterad sträng som innehåller Textrepresentationen av ett objektmatris till utdataströmmen, tillsammans med eventuella väntande fliken avstånd. Den här metoden använder samma semantik som den &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metod."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a formatted string and the contents of an array. The second one demonstrates how to declare the array.  \n  \n The following code example shows how to use the Write method to render a formatted string and the contents of an object array, named `curPriceTime`. The method call renders the second member of the array before it renders the first member.  \n  \n [!code-cs[MarkupTextWriter_Methods2#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_1.vb)]  \n  \n The following code example demonstrates declaring the `curPriceTime` object array.  \n  \n [!code-cs[MarkupTextWriter_Methods2#14](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#14](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_2.vb)]"
  syntax:
    content: public override void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg
      type: System.Object[]
      description: "En objektmatris med att formatera."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver Textrepresentationen av ett subarray Unicode-tecken till utdataströmmen tillsammans med eventuella väntande fliken avstånd."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_1.vb)]  \n  \n The following portion of the code example uses the `index` and `count` parameters of the Write method to render the first five characters of the array created in the preceding example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#11](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#11](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matris med tecken som du vill skriva text till utdataströmmen."
    - id: index
      type: System.Int32
      description: "Index platsen i matrisen var skrivning börjar."
    - id: count
      type: System.Int32
      description: "Antal tecken för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en formaterad sträng som innehåller Textrepresentationen av två objekt till utdataströmmen, tillsammans med eventuella väntande fliken avstånd. Den här metoden använder samma semantik som den &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; metod."
  remarks: "Metoden Write genererar alla flikar som väntar och anrop i <xref:System.IO.TextWriter.Write%2A>bas-metoden.</xref:System.IO.TextWriter.Write%2A>"
  example:
  - "The following code example shows how to use the Write method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.  \n  \n [!code-cs[MarkupTextWriter_Methods1#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_39_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_39_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg0
      type: System.Object
      description: "Ett objekt för att formatera."
    - id: arg1
      type: System.Object
      description: "Ett objekt för att formatera."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den angivna markup-attribut och ett värde till utdataströmmen."
  remarks: "Använd metoden WriteAttribute för att skriva markup-attribut och deras värden utan kodning. Metoden WriteAttribute skriver attributvärdet inom dubbla citattecken (&quot;). Om `value` är `null`, metoden WriteAttribute skriver attributets namn."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the WriteAttribute overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_8_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_8_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_8_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Attributet för att skriva till utdataströmmen."
    - id: value
      type: System.String
      description: "Värdet på attributet."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  id: WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den angivna markup-attribut och ett värde till utdataströmmen och om du skriver värdet kodad."
  remarks: "Använd metoden WriteAttribute för att skriva markup-attribut och deras värden med eller utan kodning. Metoden WriteAttribute använder den <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metod för att göra kodning.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>       Metoden WriteAttribute skriver attributvärdet inom dubbla citattecken (&quot;). Om `value` är `null`, metoden WriteAttribute skriver attributets namn."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the WriteAttribute overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/be7115c4-7933-43ab-93e3-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/be7115c4-7933-43ab-93e3-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/be7115c4-7933-43ab-93e3-_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "Attributet markup att skriva till utdataströmmen."
    - id: value
      type: System.String
      description: "Värdet på attributet."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att koda attributet och dess tilldelade värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  id: WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver fliken mellanrum och den inledande taggen för elementet angivna markup till utdataströmmen."
  remarks: "Metoden WriteBeginTag kan inte skriva avslutande vinkelparentes (>) för elementet markup starttagg. Detta gör att skrivning av markup-attribut för att den inledande taggen för elementet. Använd den <xref:System.Web.UI.HtmlTextWriter.TagRightChar>konstant att stänga den inledande taggen när du anropar metoden WriteBeginTag.</xref:System.Web.UI.HtmlTextWriter.TagRightChar> Använd metoden WriteBeginTag med den <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>konstant när du skriver markeringselement som är automatisk.</xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>       Metoden WriteBeginTag används av anpassade kontroller som inte tillåter-tagg eller attributmappning och återge markup elementen på samma sätt för varje begäran."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the WriteBeginTag method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_15_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_15_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_15_1.cpp)]"
  syntax:
    content: public virtual void WriteBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Markup-element att skriva den inledande taggen."
  overload: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  id: WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en <xref uid=&quot;langword_csharp_&lt;br /&gt;&quot; name=&quot;&lt;br /&gt;&quot; href=&quot;&quot;> </xref> markup element till utdataströmmen."
  remarks: "Använd metoden WriteBreak ska renderas radbrytningar i anpassad kontroll eller kort markeringar. Metoden WriteBreak skriver ett blanksteg mellan den `br` och `/` för förbättrad HTML-kompatibilitet."
  example:
  - "The following code example shows how to call the WriteBreak method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `<custID> & <invoice#>` markup.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_38_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_38_1.vb)]"
  syntax:
    content: public virtual void WriteBreak ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  id: WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kodar den angivna texten för begärd enhet och sedan skriver till utdataströmmen."
  remarks: "Use the WriteEncodedText method when a string contains angle brackets (\\< or >) or an ampersand (&).  \n  \n The WriteEncodedText method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to ` `."
  example:
  - "The following code example shows how to use the WriteEncodedText method to write the encoded markup `<custID> & \\<invoice#>` to the output stream. The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_44_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_44_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedText (string text);
    parameters:
    - id: text
      type: System.String
      description: "En textsträng att koda och skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  id: WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kodar den angivna URL: en och skriver den till utdataströmmen. URL: en kan innehålla parametrar."
  remarks: "Metoden WriteEncodedUrl kodar strängen i den `url` parametern enligt specifikationen för URL-kodning. De parametrar som följer avgränsaren frågetecken (?) är inte kodad."
  example:
  - "The following code example shows how to use the WriteEncodedUrl method, which generates the following output:  \n  \n `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_30_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_30_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "URL-sträng att koda och skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  id: WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Kodar den angivna URL-parametern för begärd enhet och sedan skriver till utdataströmmen."
  remarks: "Blanksteg i parametern-delen av en URL anges som plustecken (+) och likhetstecken (=) kodas som `%3d`."
  example:
  - "The following code example shows how to use the WriteEncodedUrlParameter method, which generates the following output:  \n  \n `ID%3dCity+State`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrlParameter (string urlText);
    parameters:
    - id: urlText
      type: System.String
      description: "URL-parametern-strängen att koda och skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  id: WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver fliken mellanrum och den avslutande taggen för det angivna markup-elementet."
  remarks: "Till skillnad från den <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>metoden WriteEndTag-metoden innehåller inga logik för att elementet sluttaggen matchar motsvarande startkoden.</xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>"
  example:
  - "The following code example demonstrates rendering an `<img>` element. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.  \n  \n-   Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.  \n  \n-   Calls the WriteEndTag method to close the `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: public virtual void WriteEndTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Att skriva den avslutande taggen för elementet."
  overload: System.Web.UI.HtmlTextWriter.WriteEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  id: WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver fliken mellanrum och den inledande taggen för elementet angivna markup till utdataströmmen."
  remarks: "Metoden WriteFullBeginTag skriver automatiskt avslutande vinkelparentes (>) på inledande taggen för elementet, till skillnad från den <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>metod som inte skriver vinkelparentes avslutande.</xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Använd WriteFullBeginTag för markeringselement som har inga attribut."
  syntax:
    content: public virtual void WriteFullBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "Elementet att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  id: WriteLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en rad Begränsare strängen till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Mer information finns i <xref:System.IO.TextWriter.WriteLine%2A>.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to insert a line after an `<img>` element is rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_27_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_27_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_27_1.cpp)]"
  syntax:
    content: public override void WriteLine ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett booleskt värde, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Booleskt värde att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver alla väntande fliken avstånd och en Unicode-tecken följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Tecknet som används för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och en matris med Unicode-tecken, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array. The second one demonstrates how to use that array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_1.vb)]  \n  \n The following code example renders the `hello world` character array that was created in the preceding example by using the WriteLine method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tecknet matris att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett dubbel precision flyttal, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_33_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_33_1.vb)]"
  syntax:
    content: public override void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Det dubbel precision Flyttalet att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett 32-byte heltal, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Den 32-byte heltal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett 64-byte heltal, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Den 64 byte heltal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett objekt, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property to a control.  \n  \n [!code-cs[MarkupTextWriter_Methods1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Objektet som används för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av en enkel precision flyttal, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public override void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Den enkel precision flyttal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver alla väntande fliken avstånd och en textsträng, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strängen som ska skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och Textrepresentationen av ett osignerat heltal på 4 byte, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  syntax:
    content: public override void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "4 byte osignerat heltal att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och en formaterad sträng som innehåller Textrepresentationen av ett objekt, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Metoden WriteLine använder samma semantik som den <xref:System.String.Format%28System.String%2CSystem.Object%29>metoden.</xref:System.String.Format%28System.String%2CSystem.Object%29> Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example shows how to use the WriteLine method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_23_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_23_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg0
      type: System.Object
      description: "Ett objekt för att formatera."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och en formaterad sträng som innehåller Textrepresentationen av ett objektmatris följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Metoden WriteLine använder samma semantik som den [Format (sträng, objekt\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) metod. Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` metoden.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to render a string and an array to the output stream. The second one shows how to declare the array.  \n  \n The following code example demonstrates how to use the WriteLine method to render a formatted string and the contents of an object array to the output stream.  \n  \n [!code-cs[MarkupTextWriter_Methods2#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_1.vb)]  \n  \n The following code example shows how to declare the object array that was rendered in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_2.vb)]"
  syntax:
    content: public override void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg
      type: System.Object[]
      description: "En objektmatris med att formatera."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och en subarray Unicode-tecken följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "This section contains two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_1.vb)]  \n  \n The following code example uses the `index` and `count` parameters of the WriteLine method to render the first five characters of the array created in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#4](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#4](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrisen tecken som du vill skriva text till utdataströmmen."
    - id: index
      type: System.Int32
      description: "Platsen i matrisen tecken där skrivningen börjar."
    - id: count
      type: System.Int32
      description: "Antalet tecken i matrisen för att skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver väntande fliken avstånd och en formaterad sträng som innehåller Textrepresentationen av två objekt, följt av en rad Begränsare sträng, till utdataströmmen."
  remarks: "Standard rad Begränsare strängen är en radmatning följt av en radmatning (&quot;\\r&quot;). Metoden WriteLine använder samma semantik som den <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>metoden.</xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> Den <xref:System.IO.TextWriter.WriteLine%2A>basmetoden används för att skriva den `value` parameter.</xref:System.IO.TextWriter.WriteLine%2A>"
  example:
  - "The following code example demonstrates how to use the WriteLine method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#2](~/add/codesnippet/csharp/efeeb384-c97a-43fc-baf0-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#2](~/add/codesnippet/visualbasic/efeeb384-c97a-43fc-baf0-_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "En sträng som innehåller noll eller flera format-objekt."
    - id: arg0
      type: System.Object
      description: "Ett objekt för att formatera."
    - id: arg1
      type: System.Object
      description: "Ett objekt för att formatera."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  id: WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver en sträng, följt av en rad Begränsare sträng, till utdataströmmen. Den här metoden ignorerar angivna fliken mellanrum."
  remarks: "Use the WriteLineNoTabs method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.  \n  \n The default line terminator string is a carriage return followed by a line feed (\"\\r\\n\"). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public void WriteLineNoTabs (string s);
    parameters:
    - id: s
      type: System.String
      description: "Strängen som ska skriva till utdataströmmen."
  overload: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  id: WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den angivna formatattributet till utdataströmmen."
  remarks: "Metoden WriteStyleAttribute skriver formatattributet i följande format: `name` `=` `value``;`"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Formatattributet att skriva till utdataströmmen."
    - id: value
      type: System.String
      description: "Värdet som tilldelas för formatattributet."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  id: WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver det angivna formatattributet och värdet till utdataströmmen och kodar värdet om anges."
  remarks: "Metoden WriteStyleAttribute skriver formatattributet i följande format: `name` `=` `value` `;` den <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>metoden används för att koda den `value` parameter.</xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "Formatattributet att skriva till utdataströmmen."
    - id: value
      type: System.String
      description: "Värdet som tilldelas för formatattributet."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att koda formatattributet och dess tilldelade värde. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  id: WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Skriver den angivna strängen, kodning enligt URL-kraven."
  remarks: "Metoden WriteUrlEncodedString kodar tecken som kan anses vara URL avgränsare (beroende på inställningen för `argument`) i strängar i formuläret `%``xx`om ASCII-koden är mindre än 128, annars `%u``xxxx`, där `x` är ett hexadecimalt värde.       Den <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>och <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>metoder använda metoden WriteUrlEncodedString som en metod för verktyget.</xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> </xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>"
  syntax:
    content: protected void WriteUrlEncodedString (string text, bool argument);
    parameters:
    - id: text
      type: System.String
      description: "Strängen som koda och skriva till utdataströmmen."
    - id: argument
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>koda strängen som en del av parameteravsnittet i URL-Adressen. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att koda strängen som en del av avsnittet sökväg i URL: en."
  overload: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.TextWriter
  isExternal: false
  name: System.IO.TextWriter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriterAttribute
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterAttribute
  nameWithType: HtmlTextWriterAttribute
  fullName: System.Web.UI.HtmlTextWriterAttribute
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriterStyle
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterStyle
  nameWithType: HtmlTextWriterStyle
  fullName: System.Web.UI.HtmlTextWriterStyle
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
- uid: System.Web.UI.HtmlTextWriter.Close
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
- uid: System.Web.UI.HtmlTextWriter.Encoding
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
- uid: System.Web.UI.HtmlTextWriter.Flush
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.Indent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
- uid: System.Web.UI.HtmlTextWriter.NewLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
- uid: System.Web.UI.HtmlTextWriter.TagKey
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
- uid: System.Web.UI.HtmlTextWriter.TagName
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.#ctor*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter.HtmlTextWriter
- uid: System.Web.UI.HtmlTextWriter.AddAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute
  nameWithType: HtmlTextWriter.AddAttribute
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute
  nameWithType: HtmlTextWriter.AddStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.BeginRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender
  nameWithType: HtmlTextWriter.BeginRender
- uid: System.Web.UI.HtmlTextWriter.Close*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close
  nameWithType: HtmlTextWriter.Close
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue
  nameWithType: HtmlTextWriter.EncodeAttributeValue
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl
  nameWithType: HtmlTextWriter.EncodeUrl
- uid: System.Web.UI.HtmlTextWriter.Encoding*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender
  nameWithType: HtmlTextWriter.EndRender
- uid: System.Web.UI.HtmlTextWriter.EnterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle
  nameWithType: HtmlTextWriter.EnterStyle
- uid: System.Web.UI.HtmlTextWriter.ExitStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle
  nameWithType: HtmlTextWriter.ExitStyle
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes
  nameWithType: HtmlTextWriter.FilterAttributes
- uid: System.Web.UI.HtmlTextWriter.Flush*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush
  nameWithType: HtmlTextWriter.Flush
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey
  nameWithType: HtmlTextWriter.GetAttributeKey
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName
  nameWithType: HtmlTextWriter.GetAttributeName
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey
  nameWithType: HtmlTextWriter.GetStyleKey
- uid: System.Web.UI.HtmlTextWriter.GetStyleName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName
  nameWithType: HtmlTextWriter.GetStyleName
- uid: System.Web.UI.HtmlTextWriter.GetTagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey
  nameWithType: HtmlTextWriter.GetTagKey
- uid: System.Web.UI.HtmlTextWriter.GetTagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName
  nameWithType: HtmlTextWriter.GetTagName
- uid: System.Web.UI.HtmlTextWriter.Indent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
- uid: System.Web.UI.HtmlTextWriter.InnerWriter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined
  nameWithType: HtmlTextWriter.IsAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute
  nameWithType: HtmlTextWriter.IsValidFormAttribute
- uid: System.Web.UI.HtmlTextWriter.NewLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender
  nameWithType: HtmlTextWriter.OnAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender
  nameWithType: HtmlTextWriter.OnStyleAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnTagRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender
  nameWithType: HtmlTextWriter.OnTagRender
- uid: System.Web.UI.HtmlTextWriter.OutputTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs
  nameWithType: HtmlTextWriter.OutputTabs
- uid: System.Web.UI.HtmlTextWriter.PopEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag
  nameWithType: HtmlTextWriter.PopEndTag
- uid: System.Web.UI.HtmlTextWriter.PushEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag
  nameWithType: HtmlTextWriter.PushEndTag
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute
  nameWithType: HtmlTextWriter.RegisterAttribute
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle
  nameWithType: HtmlTextWriter.RegisterStyle
- uid: System.Web.UI.HtmlTextWriter.RegisterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag
  nameWithType: HtmlTextWriter.RegisterTag
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent
  nameWithType: HtmlTextWriter.RenderAfterContent
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag
  nameWithType: HtmlTextWriter.RenderAfterTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent
  nameWithType: HtmlTextWriter.RenderBeforeContent
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag
  nameWithType: HtmlTextWriter.RenderBeforeTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag
  nameWithType: HtmlTextWriter.RenderBeginTag
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag
  nameWithType: HtmlTextWriter.RenderEndTag
- uid: System.Web.UI.HtmlTextWriter.TagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.Write*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write
  nameWithType: HtmlTextWriter.Write
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: HtmlTextWriter.WriteAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag
  nameWithType: HtmlTextWriter.WriteBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteBreak*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak
  nameWithType: HtmlTextWriter.WriteBreak
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText
  nameWithType: HtmlTextWriter.WriteEncodedText
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl
  nameWithType: HtmlTextWriter.WriteEncodedUrl
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag
  nameWithType: HtmlTextWriter.WriteEndTag
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag
  nameWithType: HtmlTextWriter.WriteFullBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine
  nameWithType: HtmlTextWriter.WriteLine
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs
  nameWithType: HtmlTextWriter.WriteLineNoTabs
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute
  nameWithType: HtmlTextWriter.WriteStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString
  nameWithType: HtmlTextWriter.WriteUrlEncodedString
