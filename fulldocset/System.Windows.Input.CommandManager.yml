### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CommandManager
  id: CommandManager
  children:
  - System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.CanExecuteEvent
  - System.Windows.Input.CommandManager.ExecutedEvent
  - System.Windows.Input.CommandManager.InvalidateRequerySuggested
  - System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  - System.Windows.Input.CommandManager.PreviewExecutedEvent
  - System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  - System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  - System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandManager.RequerySuggested
  langs:
  - csharp
  name: CommandManager
  nameWithType: CommandManager
  fullName: System.Windows.Input.CommandManager
  type: Class
  summary: "Innehåller kommandot relaterade metoder som registrerar <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> och <xref href=&quot;System.Windows.Input.InputBinding&quot;> </xref> objekt för klassen ägare och kommandon, lägga till och ta bort händelsehanterare för kommandot och tillhandahåller tjänster för att fråga status för ett kommando."
  remarks: "CommandManager ansvarar för att hantera routade kommandon.  Mer information om hur du drar till sig finns [drar till sig översikt](~/add/includes/ajax-current-ext-md.md).       Använd <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A>att registrera en <xref:System.Windows.Input.CommandBinding>till en klass i stället för en instans.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A>       Använd <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>att registrera en <xref:System.Windows.Input.InputBinding>till en klass i stället för en instans.</xref:System.Windows.Input.InputBinding> </xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>       Den <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>metoden tvingar CommandManager att öka den <xref:System.Windows.Input.CommandManager.RequerySuggested>händelse.</xref:System.Windows.Input.CommandManager.RequerySuggested> </xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>  Den <xref:System.Windows.Input.CommandManager.RequerySuggested>händelsen informerar Kommandokälla om du vill fråga kommandot som den är associerad med att fastställa huruvida kommandot kan utföras.</xref:System.Windows.Input.CommandManager.RequerySuggested>"
  syntax:
    content: public sealed class CommandManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Kopplar det angivna <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> till det angivna elementet."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the AddCanExecuteHandler and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet för att koppla `handler` till."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Den kan köra hanteraren."
  overload: System.Windows.Input.CommandManager.AddCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Kopplar det angivna <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> till det angivna elementet."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and AddExecutedHandler.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet för att koppla `handler` till."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Utförda hanteraren."
  overload: System.Windows.Input.CommandManager.AddExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Kopplar det angivna <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> till det angivna elementet."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddPreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet för att koppla `handler` till."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Den kan köra hanteraren."
  overload: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Kopplar det angivna <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> till det angivna elementet."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \n  \n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/add/codesnippet/xaml/CommandingOverviewSnippets/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \n  \n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \n  \n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]"
  syntax:
    content: public static void AddPreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet för att koppla `handler` till."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Den kan köra hanteraren."
  overload: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.CanExecuteEvent
  id: CanExecuteEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: CanExecuteEvent
  nameWithType: CommandManager.CanExecuteEvent
  fullName: System.Windows.Input.CommandManager.CanExecuteEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.CommandManager.CanExecute>kopplad händelse.</xref:System.Windows.Input.CommandManager.CanExecute>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent CanExecuteEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.ExecutedEvent
  id: ExecutedEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: ExecutedEvent
  nameWithType: CommandManager.ExecutedEvent
  fullName: System.Windows.Input.CommandManager.ExecutedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.CommandManager.Executed>kopplad händelse.</xref:System.Windows.Input.CommandManager.Executed>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent ExecutedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested
  id: InvalidateRequerySuggested
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: InvalidateRequerySuggested()
  nameWithType: CommandManager.InvalidateRequerySuggested()
  fullName: System.Windows.Input.CommandManager.InvalidateRequerySuggested()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Framtvingar den <xref href=&quot;System.Windows.Input.CommandManager&quot;> </xref> att öka den <xref href=&quot;System.Windows.Input.CommandManager.RequerySuggested&quot;> </xref> händelse."
  remarks: "Den <xref:System.Windows.Input.CommandManager>endast fokuserar att vissa villkor för att fastställa när kommandot target har ändrats, t.ex ändring i tangentbordsfokus.</xref:System.Windows.Input.CommandManager>  I situationer där den <xref:System.Windows.Input.CommandManager>kontrollerar inte tillräckligt en ändring i villkor som gör att ett kommando för att inte kunna köra InvalidateRequerySuggested kan användas för att tvinga den <xref:System.Windows.Input.CommandManager>att öka den <xref:System.Windows.Input.CommandManager.RequerySuggested>händelse.</xref:System.Windows.Input.CommandManager.RequerySuggested> </xref:System.Windows.Input.CommandManager> </xref:System.Windows.Input.CommandManager>"
  example:
  - "The following example uses a <xref:System.Windows.Threading.DispatcherTimer> to periodically call InvalidateRequerySuggested to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  \n  \n [!code-vb[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/visualbasic/invalidaterequerywithdispatchertimer/window1.xaml.vb#invalidatesampledispatchertimer)]\n [!code-cs[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/add/codesnippet/csharp/InvalidateRequeryWithDispatcherTimer/Window1.xaml.cs#invalidatesampledispatchertimer)]"
  syntax:
    content: public static void InvalidateRequerySuggested ();
    parameters: []
  overload: System.Windows.Input.CommandManager.InvalidateRequerySuggested*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  id: PreviewCanExecuteEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: PreviewCanExecuteEvent
  nameWithType: CommandManager.PreviewCanExecuteEvent
  fullName: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.CommandManager.PreviewCanExecute>kopplad händelse.</xref:System.Windows.Input.CommandManager.PreviewCanExecute>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewCanExecuteEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent
  id: PreviewExecutedEvent
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: PreviewExecutedEvent
  nameWithType: CommandManager.PreviewExecutedEvent
  fullName: System.Windows.Input.CommandManager.PreviewExecutedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.CommandManager.PreviewExecuted>kopplad händelse.</xref:System.Windows.Input.CommandManager.PreviewExecuted>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewExecutedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  id: RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RegisterClassCommandBinding(Type,CommandBinding)
  nameWithType: CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Registrerar en <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> med den angivna typen."
  remarks: "Den här metoden kan en <xref:System.Windows.Input.CommandBinding>kopplas till en klass i stället än en instans av en klass.</xref:System.Windows.Input.CommandBinding>"
  syntax:
    content: public static void RegisterClassCommandBinding (Type type, System.Windows.Input.CommandBinding commandBinding);
    parameters:
    - id: type
      type: System.Type
      description: "Den klass som ska registrera `commandBinding`."
    - id: commandBinding
      type: System.Windows.Input.CommandBinding
      description: "Att registrera kommandot bindningen."
  overload: System.Windows.Input.CommandManager.RegisterClassCommandBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>commandBinding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  id: RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RegisterClassInputBinding(Type,InputBinding)
  nameWithType: CommandManager.RegisterClassInputBinding(Type,InputBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassInputBinding(Type,InputBinding)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Registrerar den angivna <xref href=&quot;System.Windows.Input.InputBinding&quot;> </xref> med den angivna typen."
  remarks: "Den här metoden kan en <xref:System.Windows.Input.InputBinding>som ska associeras med en typ i stället för en instans av en klass.</xref:System.Windows.Input.InputBinding>"
  syntax:
    content: public static void RegisterClassInputBinding (Type type, System.Windows.Input.InputBinding inputBinding);
    parameters:
    - id: type
      type: System.Type
      description: "Den typ som ska registrera `inputBinding` med."
    - id: inputBinding
      type: System.Windows.Input.InputBinding
      description: "Indatabindning att registrera."
  overload: System.Windows.Input.CommandManager.RegisterClassInputBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>inputBinding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> från det angivna elementet."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemoveCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet du vill ta bort `handler` från."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Den kan köra hanteraren."
  overload: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> från det angivna elementet."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemoveExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet du vill ta bort `handler` från."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Utförda hanteraren."
  overload: System.Windows.Input.CommandManager.RemoveExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Input.CanExecuteRoutedEventHandler&quot;> </xref> från det angivna elementet."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemovePreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet du vill ta bort `handler` från."
    - id: handler
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Den kan köra hanteraren."
  overload: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  id: RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort den angivna <xref href=&quot;System.Windows.Input.ExecutedRoutedEventHandler&quot;> </xref> från det angivna elementet."
  remarks: ''
  example:
  - "The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/csharp/CommandingOverviewSnippets/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/add/codesnippet/visualbasic/commandingoverviewsnippets/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]"
  syntax:
    content: public static void RemovePreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Elementet du vill ta bort `handler` från."
    - id: handler
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Utförda hanteraren."
  overload: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>or <code>handler</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.CommandManager.RequerySuggested
  id: RequerySuggested
  parent: System.Windows.Input.CommandManager
  langs:
  - csharp
  name: RequerySuggested
  nameWithType: CommandManager.RequerySuggested
  fullName: System.Windows.Input.CommandManager.RequerySuggested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Inträffar när den <xref href=&quot;System.Windows.Input.CommandManager&quot;> </xref> identifierar villkor som kan ändra möjligheten för ett kommando som ska köras."
  remarks: "Eftersom den här händelsen är statisk, kommer den bara hålla till hanteraren som svaga referensen.  Objekt som lyssna efter händelsen bör ha en stark referens till deras händelsehanterare för att undvika att skräpinsamlas. Detta kan åstadkommas genom med ett privat fält och tilldela hanteraren som värde före eller efter att den kopplas till den här händelsen."
  syntax:
    content: public static event EventHandler RequerySuggested;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Input.CanExecuteRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: CanExecuteRoutedEventHandler
  nameWithType: CanExecuteRoutedEventHandler
  fullName: System.Windows.Input.CanExecuteRoutedEventHandler
- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.CanExecuteEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: CanExecuteEvent
  nameWithType: CommandManager.CanExecuteEvent
  fullName: System.Windows.Input.CommandManager.CanExecuteEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.CommandManager.ExecutedEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: ExecutedEvent
  nameWithType: CommandManager.ExecutedEvent
  fullName: System.Windows.Input.CommandManager.ExecutedEvent
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: InvalidateRequerySuggested()
  nameWithType: CommandManager.InvalidateRequerySuggested()
  fullName: System.Windows.Input.CommandManager.InvalidateRequerySuggested()
- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: PreviewCanExecuteEvent
  nameWithType: CommandManager.PreviewCanExecuteEvent
  fullName: System.Windows.Input.CommandManager.PreviewCanExecuteEvent
- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: PreviewExecutedEvent
  nameWithType: CommandManager.PreviewExecutedEvent
  fullName: System.Windows.Input.CommandManager.PreviewExecutedEvent
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassCommandBinding(Type,CommandBinding)
  nameWithType: CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassCommandBinding(Type,CommandBinding)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Input.CommandBinding
  parent: System.Windows.Input
  isExternal: false
  name: CommandBinding
  nameWithType: CommandBinding
  fullName: System.Windows.Input.CommandBinding
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassInputBinding(Type,InputBinding)
  nameWithType: CommandManager.RegisterClassInputBinding(Type,InputBinding)
  fullName: System.Windows.Input.CommandManager.RegisterClassInputBinding(Type,InputBinding)
- uid: System.Windows.Input.InputBinding
  parent: System.Windows.Input
  isExternal: false
  name: InputBinding
  nameWithType: InputBinding
  fullName: System.Windows.Input.InputBinding
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemoveExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(UIElement,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(UIElement,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.CommandManager.RequerySuggested
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RequerySuggested
  nameWithType: CommandManager.RequerySuggested
  fullName: System.Windows.Input.CommandManager.RequerySuggested
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddCanExecuteHandler
  nameWithType: CommandManager.AddCanExecuteHandler
- uid: System.Windows.Input.CommandManager.AddExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddExecutedHandler
  nameWithType: CommandManager.AddExecutedHandler
- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewCanExecuteHandler
  nameWithType: CommandManager.AddPreviewCanExecuteHandler
- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: AddPreviewExecutedHandler
  nameWithType: CommandManager.AddPreviewExecutedHandler
- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: InvalidateRequerySuggested
  nameWithType: CommandManager.InvalidateRequerySuggested
- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassCommandBinding
  nameWithType: CommandManager.RegisterClassCommandBinding
- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RegisterClassInputBinding
  nameWithType: CommandManager.RegisterClassInputBinding
- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveCanExecuteHandler
  nameWithType: CommandManager.RemoveCanExecuteHandler
- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemoveExecutedHandler
  nameWithType: CommandManager.RemoveExecutedHandler
- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewCanExecuteHandler
  nameWithType: CommandManager.RemovePreviewCanExecuteHandler
- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*
  parent: System.Windows.Input.CommandManager
  isExternal: false
  name: RemovePreviewExecutedHandler
  nameWithType: CommandManager.RemovePreviewExecutedHandler
