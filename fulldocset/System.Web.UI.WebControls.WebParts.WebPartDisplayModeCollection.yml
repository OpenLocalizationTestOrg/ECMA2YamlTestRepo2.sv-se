### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  id: WebPartDisplayModeCollection
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[],System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet(System.Int32,System.Object,System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate(System.Object)
  langs:
  - csharp
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  type: Class
  summary: "Innehåller en samling <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt. Den här klassen kan inte ärvas."
  remarks: "Klassen WebPartDisplayModeCollection är utformat för att innehålla en samling <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Det används främst av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>behörighet för att hantera samlingar av <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Ett visningsläge är en särskild vy av en webbsida som visas när den är tilldelad som det aktuella visningsläget på den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A?displayProperty=fullName> Visningslägen används i kontrollen webbdelar som vill skapa sidvyer där användarna kan utföra speciella aktiviteter, till exempel redigera kontroller eller ordna om layouten för en sida. Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll definierar flera visningslägen, inklusive <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Insamling av visningslägen refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A?displayProperty=fullName>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A?displayProperty=fullName>       På en viss webbsida som använder webbdelar kontroller, endast vissa visningslägen som är tillgängliga. Bläddra standardläget och designläget nästan alltid är tillgängliga, men andra visningslägen är bara tillgängligt om deras motsvarande zontyper finns på sidan. Mer information finns i <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Översikt över klassen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen håller reda på de tillgängliga visningslägen på en sida med dess <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>egenskap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Den här egenskapen refererar till ett WebPartDisplayModeCollection-objekt som innehåller alla visningslägen som stöds.       Klassen WebPartDisplayModeCollection har inte en exponerade konstruktor, så du inte kan skapa en egen ny instans av den. Om du skapar en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt och den ska vara en del av insamling av visningslägen som stöds i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll, du måste ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen, åsidosätta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>metoden anropa metoden bas för att skapa samlingen och Lägg sedan till alla anpassade visningslägen i samlingen med hjälp av dess <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       WebPartDisplayModeCollection klassen har två offentliga egenskaper. Den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly%2A>egenskapen är en skrivskyddad egenskap som anger om samlingen är skrivskyddad.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly%2A> Den överlagrade <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item%2A>egenskapen ger åtkomst till medlemmar i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item%2A>       WebPartDisplayModeCollection-klassen har också flera metoder. Den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>metoden redan nämnts kan du lägga till <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains%2A>metoden avgör om ett visst visningsläge finns i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo%2A>metoden kopierar samlingen till en matris med objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf%2A>metoden returnerar index för ett visst visningsläge i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf%2A> Slutligen den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert%2A>metoden kan du infoga ett visningsobjekt läge vid ett visst index i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert%2A>"
  example:
  - "The following code example demonstrates working with the WebPartDisplayModeCollection class. The key point is that you must inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class and override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method to add a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to the WebPartDisplayModeCollection collection created by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n This code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control; the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   An explanation of how the example works.  \n  \n The source code for the first part of the code example, the user control that lets you change display modes, comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_103_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_103_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. Notice that it uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the user interface (UI). One view is displayed with the button, the other without. Notice that the in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode, and if so, it displays the first view of the user control, which includes the button. If the page is not in the custom display mode (for example, if the page is in browse or design mode), the button is hidden.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_103_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_103_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method, calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_103_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_103_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is not in the custom display mode."
  syntax:
    content: 'public sealed class WebPartDisplayModeCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  id: Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: Add(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Add(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(WebPartDisplayMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lägger till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt i samlingen."
  remarks: "Du kan använda Add-metod för att lägga till nya <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt till en befintlig <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection>objektet.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Ett exempel på ett scenario där du vill göra detta är när du skapar en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klass, och du vill lägga till den i samlingen för visningslägen som stöds på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Om du vill göra det måste ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen och åsidosätta dess <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>metoden först anropa basmetoden och sedan använda Add-metod för att lägga till anpassade visningsläge i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "This code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> class. For the full code and instructions required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> class overview.  \n  \n The following section of code occurs in a derived <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method and adds a custom display mode to the collection.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/c874d767-2daf-41f6-8701-_1.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/c874d767-2daf-41f6-8701-_1.vb)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.WebParts.WebPartDisplayMode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> att lägga till i samlingen."
    return:
      type: System.Int32
      description: "Ett heltalsvärde som anger var den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> infogades i samlingen."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  id: Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: Contains(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Contains(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(WebPartDisplayMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar ett värde som anger om en viss <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> finns objekt i samlingen."
  remarks: "Metoden innehåller kan du kontrollera en viss <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt och avgöra om den är i ett <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection>objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.WebPartDisplayMode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> kontrolleras om finns i en samling."
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om <code> value </code> finns i samlingen."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: CopyTo(WebPartDisplayMode[],Int32)
  nameWithType: WebPartDisplayModeCollection.CopyTo(WebPartDisplayMode[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(WebPartDisplayMode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kopierar samlingen till en matris med <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt."
  remarks: "Metoden CopyTo är användbart när du vill skapa en anpassad matris om du vill hantera en uppsättning programmatiskt <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.WebPartDisplayMode[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode[]
      description: "En matris med <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt som innehåller den kopierade samlingen."
    - id: index
      type: System.Int32
      description: "Ett heltal som anger startpunkten i matrisen som du vill placera innehållet samling."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  id: IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: IndexOf(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.IndexOf(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(WebPartDisplayMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar positionen för en viss medlem i mängden."
  remarks: "IndexOf-metoden är användbar om du har flera <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt, och du behöver veta ordningstalspositionen (index) för ett objekt i förhållande till andra.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.WebPartDisplayMode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> som är medlem i mängden."
    return:
      type: System.Int32
      description: "Ett heltal som anger positionen för ett visst objekt i samlingen."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  id: Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: Insert(Int32,WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Insert(Int32,WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(Int32,WebPartDisplayMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Infogar en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt i samlingen vid den angivna positionen."
  remarks: "Om `index` är lika med antalet objekt i samlingen, sedan `value` läggs till i slutet av samlingen."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.WebParts.WebPartDisplayMode value);
    parameters:
    - id: index
      type: System.Int32
      description: "Ett heltal som anger ordningstalspositionen i samlingen som en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> ska infogas."
    - id: value
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> att infoga i samlingen."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WebPartDisplayModeCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett värde som anger om samlingen är skrivskyddad."
  remarks: "Värdet för egenskapen IsReadOnly ändras internt av kontrollen webbdelar som den ändrar innehållet i samlingen vid olika tidpunkter. Till exempel efter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll har lagt till alla stöds visningslägen dess <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>samling, internt anger den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection>objekt till skrivskyddat läge för att förhindra att den ändras.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > Det finns ingen mekanism för att ändra egenskapsvärdet från din kod, även om du kan läsa dess värde."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om samlingen är skrivskyddad."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WebPartDisplayModeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en viss medlem i samlingen enligt dess index."
  remarks: "Egenskapen Item kan du få en <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt inom en <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection>samlingen med hjälp av ett index som representerar dess ordningstal i samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayMode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Ett heltal som anger index för en medlem i samlingen."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> med det angivna indexet i samlingen."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: WebPartDisplayModeCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en viss medlem i samlingen enligt en unik identifierare."
  remarks: "Egenskapen Item kan du få en <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt inom en <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection>med hjälp av ett sträng-ID för ett visst visningsläge.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayMode this[string modeName] { get; }
    parameters:
    - id: modeName
      type: System.String
      description: "En sträng som innehåller namnet på ett visst visningsläge i samlingen."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Först <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> vars läge namn överensstämmer med värdet för den <code> modeName </code> parameter."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: WebPartDisplayModeCollection.OnClear()
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: WebPartDisplayModeCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Som ska läggas till."
    - id: value
      type: System.Object
      description: "Som ska läggas till."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: WebPartDisplayModeCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Som ska läggas till."
    - id: value
      type: System.Object
      description: "Som ska läggas till."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet(System.Int32,System.Object,System.Object)
  id: OnSet(System.Int32,System.Object,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: OnSet(Int32,Object,Object)
  nameWithType: WebPartDisplayModeCollection.OnSet(Int32,Object,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet(Int32,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnSet (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "Som ska läggas till."
    - id: oldValue
      type: System.Object
      description: "Som ska läggas till."
    - id: newValue
      type: System.Object
      description: "Som ska läggas till."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: WebPartDisplayModeCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Som ska läggas till."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Add(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Add(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(WebPartDisplayMode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Contains(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Contains(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(WebPartDisplayMode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: CopyTo(WebPartDisplayMode[],Int32)
  nameWithType: WebPartDisplayModeCollection.CopyTo(WebPartDisplayMode[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(WebPartDisplayMode[],Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
    name: WebPartDisplayMode
    nameWithType: WebPartDisplayMode
    fullName: WebPartDisplayMode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: IndexOf(WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.IndexOf(WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(WebPartDisplayMode)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartDisplayMode)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Insert(Int32,WebPartDisplayMode)
  nameWithType: WebPartDisplayModeCollection.Insert(Int32,WebPartDisplayMode)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(Int32,WebPartDisplayMode)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WebPartDisplayModeCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WebPartDisplayModeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Item(String)
  nameWithType: WebPartDisplayModeCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnClear()
  nameWithType: WebPartDisplayModeCollection.OnClear()
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: WebPartDisplayModeCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert(Int32,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: WebPartDisplayModeCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove(Int32,Object)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet(System.Int32,System.Object,System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnSet(Int32,Object,Object)
  nameWithType: WebPartDisplayModeCollection.OnSet(Int32,Object,Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet(Int32,Object,Object)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: WebPartDisplayModeCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Add
  nameWithType: WebPartDisplayModeCollection.Add
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Contains
  nameWithType: WebPartDisplayModeCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: CopyTo
  nameWithType: WebPartDisplayModeCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: IndexOf
  nameWithType: WebPartDisplayModeCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Insert
  nameWithType: WebPartDisplayModeCollection.Insert
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WebPartDisplayModeCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: Item
  nameWithType: WebPartDisplayModeCollection.Item
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnClear*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnClear
  nameWithType: WebPartDisplayModeCollection.OnClear
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnInsert*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnInsert
  nameWithType: WebPartDisplayModeCollection.OnInsert
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnRemove*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnRemove
  nameWithType: WebPartDisplayModeCollection.OnRemove
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnSet
  nameWithType: WebPartDisplayModeCollection.OnSet
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.OnValidate*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  isExternal: false
  name: OnValidate
  nameWithType: WebPartDisplayModeCollection.OnValidate
