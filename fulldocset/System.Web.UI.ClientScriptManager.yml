### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ClientScriptManager
  id: ClientScriptManager
  children:
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  langs:
  - csharp
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
  type: Class
  summary: "Definierar metoder för att hantera klientskript i webbprogram."
  remarks: "Klassen ClientScriptManager används för att hantera klientskript och lägger till dem i webbprogram. Du kan hämta en referens till klassen ClientScriptManager från den <xref:System.Web.UI.Page.ClientScript%2A>egenskapen för den <xref:System.Web.UI.Page>objekt.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>       Du kan lägga till ett klientskript en webbsida deklarativt genom att inkludera skriptet i HTML-kod på sidan. Det finns dock situationer när det behövs för att dynamiskt lägga till klientskript. Om du vill lägga till ett skript dynamiskt använde <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metoden den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>, eller <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metod, beroende på hur och när du vill lägga till skriptet.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Mer information finns i [hur man: Lägg till klienten skript dynamiskt till ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       Klassen ClientScriptManager identifierar skript med en nyckel <xref:System.String>och en <xref:System.Type>.</xref:System.Type> </xref:System.String> Skript med samma nyckel och typen anses vara dubbletter. Använda skripttypen hjälper dig för att undvika förvirrande liknande skript från olika användarkontroller som kanske används på sidan.       Klassen ClientScriptManager kan användas för att anropa klienten återanrop i situationer när det är önskvärt att köra serverkoden från klienten utan att utföra ett återanslående. Detta kallas att utföra en out-of-band-återanrop till servern. I ett Klientåteranrop skickar en skriptfunktion klienten en asynkron begäran till en ASP.NET-webbsida. Sidan körs en modifierad version av dess normala livscykel för processen återanropet. Använd den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod för att hämta en referens till en klient-funktion som, när den anropas, initierar Klientåteranrop till en serverhändelse.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Mer information finns i [implementera klienten återanrop utan återanslag](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Skript återanrop fungerar inte i äldre webbläsare som inte stöder den modellen DOM (Document Object) och de kräver att ECMAScript är aktiverad på klienten. Använd för att kontrollera om webbläsaren stöder återanrop i <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>-egenskap som är tillgänglig via den <xref:System.Web.HttpRequest.Browser%2A>egenskapen ASP.NET inre <xref:System.Web.HttpContext.Request%2A>objektet.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       Använd den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden och <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>metod för att definiera en klient återanslående.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Dessa metoder aktivera skript klientfunktioner, när den anropas för att göra servern att skicka tillbaka till sidan. En klient återanslående skiljer sig från ett Klientåteranrop i att webbsidan har slutförts en normal livscykel till klienten återanslående-processen.      > [!NOTE] > Om du använder en <xref:System.Web.UI.WebControls.Button>kontroll och <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskap är inställd på `false`, kan du använda den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metod för att returnera klienten återanslående händelsen för den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> </xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button>       Den <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>egenskapen för den <xref:System.Web.UI.WebControls.Button>styra <xref:System.Web.UI.WebControls.ImageButton>kontroll och <xref:System.Web.UI.WebControls.LinkButton>kontrollen kan användas för att köra klienten skriptet.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.OnClientClick%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the ClientScriptManager class. Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/t-system.web.ui.clientsc_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/t-system.web.ui.clientsc_1.aspx)]"
  syntax:
    content: public sealed class ClientScriptManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens till en funktion för klienten att när den anropas, initierar en klient anropar tillbaka till en serverhändelse. Funktionen klienten för den här överlagrade metoden innehåller en angivna kontrollen, argument, klientskript och kontext."
  remarks: "Metoden GetCallbackEventReference utför en out-of-band-återanrop till den server som är en modifierad version av en sida normal livscykel. Mer information finns i [implementera klienten återanrop utan återanslag](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > När webbläsaren är Microsoft Internet Explorer (version 5.0 eller senare), skript återanrop mekanism implementeras via Microsoft.XmlHttp COM-objektet och kräver webbläsaren anges ActiveX-kontroller. En XMLHttpRequest med webbläsarens lokala modellen DOM (Document Object) används för andra webbläsare. Använd för att kontrollera om en webbläsare som stöder återanrop för klienten i <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>egenskap.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Kontrollera om en webbläsare stöder XML över HTTP genom att använda den <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>egenskapen.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Båda egenskaperna är tillgängliga via den <xref:System.Web.HttpRequest.Browser%2A>egenskapen inre ASP.NET <xref:System.Web.HttpContext.Request%2A>objektet.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A>       GetCallbackEventReference överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden utför ett återanrop synkront med XML över HTTP.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> När du skickar data synkront i ett scenario med motringning, synkron återanrop returnerar omedelbart och blockerar inte webbläsaren. Ingen två synkron återanrop motringning kan köra samtidigt i webbläsaren. Om andra synkron återanrop utlöses när en väntar, andra synkron återanropet avbryter först och andra återanropet returneras.       Om du vill skicka data asynkront med någon av överlagringar som tar den `useAsync` parametern, som är en boolesk värde som styr det här beteendet. I det asynkrona scenariot har du flera väntande återanrop; den ordning som de returnera är inte säkert att matcha den ordning som de har initierats.       Dessutom kan den här överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden anger ingen klient funktion för att hantera i fallet med ett feltillstånd som genererats av den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metoden.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Om du vill ange ett återanrop felhanterare klienten med någon av överlagringar som tar den `clientErrorCallback` parameter.       Metoden GetCallbackEventReference tar en valfri sträng `argument` parameter och returnerar en sträng. Att skicka in eller ta emot flera värden sammanfoga värden i indata eller returnera sträng, respektive.      > [!NOTE] > Undvik att använda visningsstatus i implementeringen av sida eller kontroll egenskaper som behöver uppdateras vid återanrop skriptåtgärder. Om de är att överleva sidförfrågningar, kan du använda sessionstillstånd."
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/0153bfa5-9a40-4257-b817-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/0153bfa5-9a40-4257-b817-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Servern <xref href=&quot;System.Web.UI.Control&quot;> </xref> som hanterar återanropet för klienten. Kontrollen måste implementera den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt och ange en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Ett argument som skickats från klienten skriptet till servern <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet av lyckade serverhändelse."
    - id: context
      type: System.String
      description: "Klientskript som ska utvärderas på klienten innan du påbörjar återanropet. Resultatet av skriptet skickas tillbaka till klienten händelsehanterare."
    return:
      type: System.String
      description: "Namnet på en klient-funktion som anropar Klientåteranrop."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angivna implementerar inte det <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens till en klient-funktion, när den anropas, initierar en klient anropa serverhändelser. Funktionen klienten för den här överlagrade metoden innehåller en angivna kontrollen, argument, klientskript, kontext och booleskt värde."
  remarks: "Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod kräver en `useAsync` parametern, som du kan utföra klienten återanropet asynkront genom att ange värdet `true`.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> De versioner av den här metoden överlagring som inte kräver den `useAsync` parametern anger du värdet till `false` som standard.       Mer information om den här metoden finns i Anmärkningar för överlagring <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Servern <xref href=&quot;System.Web.UI.Control&quot;> </xref> som hanterar återanropet för klienten. Kontrollen måste implementera den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt och ange en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Ett argument som skickats från klienten skriptet till servern <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet av lyckade serverhändelse."
    - id: context
      type: System.String
      description: "Klientskript som ska utvärderas på klienten innan du påbörjar återanropet. Resultatet av skriptet skickas tillbaka till klienten händelsehanterare."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att utföra återanropet asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att utföra återanropet synkront."
    return:
      type: System.String
      description: "Namnet på en klient-funktion som anropar Klientåteranrop."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angivna implementerar inte det <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens till en klient-funktion, när den anropas, initierar en klient anropa serverhändelser. Funktionen klienten för den här överlagrad metod innehåller angivet mål, argument, klientskript, kontext, felhanterare och booleskt värde."
  remarks: "Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden tar en `target` strängparameter i stället för en <xref:System.Web.UI.Control>parameter.</xref:System.Web.UI.Control> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Använd den här överlagring när du vill återanropet gå tillbaka till något annat än en sträng som innehåller den <xref:System.Web.UI.Control.UniqueID%2A>för kontrollen.</xref:System.Web.UI.Control.UniqueID%2A>       Dessutom kan den här överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metoden kräver att en `useAsync` och en `clientErrorCallback` parameter.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Den `useAsync` parametern kan du utföra klienten återanropet asynkront genom att ange värdet `true`. De versioner av den här metoden överlagring som inte kräver den `useAsync` parametern anger du värdet till `false` som standard. Den `clientErrorCallback` parametern kan du ange namnet på klient-funktion som kallas om server-hanteraren i <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>-metoden returnerar ett fel.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> De versioner av den här metoden överlagring som inte kräver den `clientErrorCallback` parametern anger du värdet null.       Mer information om den här metoden finns i Anmärkningar för överlagring <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/b09113ee-01c3-4887-82a1-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/b09113ee-01c3-4887-82a1-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: target
      type: System.String
      description: "Namnet på en server <xref href=&quot;System.Web.UI.Control&quot;> </xref> som hanterar återanropet för klienten. Kontrollen måste implementera den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt och ange en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Ett argument som skickats från klienten skriptet till servern <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet av lyckade serverhändelse."
    - id: context
      type: System.String
      description: "Klientskript som ska utvärderas på klienten innan du påbörjar återanropet. Resultatet av skriptet skickas tillbaka till klienten händelsehanterare."
    - id: clientErrorCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet när ett fel uppstår i händelsehanteraren server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>att utföra återanropet asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att utföra återanropet synkront."
    return:
      type: System.String
      description: "Namnet på en klient-funktion som anropar Klientåteranrop."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens till en klient-funktion, när den anropas, initierar en klient anropa serverhändelser. Funktionen klienten för den här överlagrad metod innehåller angivna kontrollen, argument, klientskript, kontext, felhanterare och booleskt värde."
  remarks: "Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod kräver en `useAsync` och en `clientErrorCallback` parameter.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Den `useAsync` parametern kan du utföra klienten återanropet asynkront genom att ange värdet `true`. De versioner av den här metoden överlagring som inte kräver den `useAsync` parametern anger du värdet till `false` som standard. Den `clientErrorCallback` parametern kan du ange namnet på klient-funktion som kallas om server-hanteraren (den <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metoden) returnerar ett fel.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> De versioner av den här metoden överlagring som inte kräver den `clientErrorCallback` parametern anger du värdet null.       Mer information om den här metoden finns i Anmärkningar för överlagring <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metod.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Servern <xref href=&quot;System.Web.UI.Control&quot;> </xref> som hanterar återanropet för klienten. Kontrollen måste implementera den <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt och ange en <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Ett argument som skickats från klienten skriptet till servern <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metod.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet av lyckade serverhändelse."
    - id: context
      type: System.String
      description: "Klientskript som ska utvärderas på klienten innan du påbörjar återanropet. Resultatet av skriptet skickas tillbaka till klienten händelsehanterare."
    - id: clientErrorCallback
      type: System.String
      description: "Namnet på klienten händelsehanteraren som tar emot resultatet när ett fel uppstår i händelsehanteraren server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>att utföra återanropet asynkront; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att utföra återanropet synkront."
    return:
      type: System.String
      description: "Namnet på en klient-funktion som anropar Klientåteranrop."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> angivna implementerar inte det <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> gränssnitt."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens med <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> läggs till i början av det, som kan användas i en klienthändelse för att skicka tillbaka till servern för den angivna kontrollen och med de angivna händelseargument."
  remarks: "Med den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kräver att den kontroll som hanterar återanslående att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example demonstrates the use of the GetPostBackClientHyperlink method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_2.aspx)]"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen bearbeta återanslåendet."
    - id: argument
      type: System.String
      description: "Parametern har överförts till server-kontroll."
    return:
      type: System.String
      description: "En sträng som representerar ett JavaScript-anrop till funktionen återanslående som innehåller målkontrollen-ID och händelsen argument."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en referens med <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> läggs till i början av det, som kan användas i en klienthändelse för att skicka tillbaka till servern för den angivna kontroll med angivna händelseargument och booleskt uppgift om du vill registrera post för Händelseverifiering."
  remarks: "Med den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kräver att den kontroll som hanterar återanslående att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Serverkontrollen bearbeta återanslåendet."
    - id: argument
      type: System.String
      description: "Parametern har överförts till server-kontroll."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>att registrera återanslående för godkännande. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> inte registrera tillbaka händelsen post för verifiering."
    return:
      type: System.String
      description: "En sträng som representerar ett JavaScript-anrop till funktionen återanslående som innehåller målkontrollen-ID och händelsen argument."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som kan användas i en klienthändelse att orsaka återanslående till servern. Referenssträngen definieras av den angivna <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> instans."
  remarks: "Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan användas med den <xref:System.Web.UI.WebControls.Button>styr när den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen är `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I det här fallet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerar klienten återanslående händelsen för den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som definierar återanslåendet."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar klienten återanslående."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> parametern är<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som kan användas i en klienthändelse att orsaka återanslående till servern. Referenssträngen definieras av den angivna kontrollen som hanterar återanslåendet och ett strängargument av ytterligare händelseinformation."
  remarks: "Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan användas med den <xref:System.Web.UI.WebControls.Button>styr när den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen är `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I det här fallet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerar klienten återanslående händelsen för den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - "The following code example demonstrates the use of the GetPostBackEventReference method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_2.aspx)]"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Servern <xref href=&quot;System.Web.UI.Control&quot;> </xref> som bearbetar återanslående på servern."
    - id: argument
      type: System.String
      description: "En sträng med valfria argument att skicka till den kontroll som bearbetar återanslåendet."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar återanslåendet."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som kan användas i en klienthändelse att orsaka återanslående till servern. Referenssträngen definieras av den angivna <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objekt. Du kan också registrerar händelse-referens för verifiering."
  remarks: "Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>objekt, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan användas med den <xref:System.Web.UI.WebControls.Button>styr när den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen är `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I det här fallet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerar klienten återanslående händelsen för den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Om `registerForEventValidation` är `true`, metodanrop GetPostBackEventReference den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metod för att registrera händelse-referens för verifiering med ett unikt kontroll-ID som representerar klientkontrollen som orsakar händelsen.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> som definierar återanslåendet."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här registrerar du händelse-referens för godkännande. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar klienten återanslående."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returnerar en sträng som ska användas i en klienthändelse för att orsaka återanslående till servern. Referenssträngen definieras av den angivna kontrollen som hanterar återanslåendet och ett strängargument av ytterligare händelseinformation. Du kan också registrerar händelse-referens för verifiering."
  remarks: "Att implementera den <xref:System.Web.UI.IPostBackEventHandler>gränssnitt för en <xref:System.Web.UI.Page>, direktiv.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden kan användas med den <xref:System.Web.UI.WebControls.Button>styr när den <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>egenskapen är `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> I det här fallet den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metoden returnerar klienten återanslående händelsen för den <xref:System.Web.UI.WebControls.Button>kontroll.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Om `registerForEventValidation` är sant, det <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>metodanrop på <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metod för att registrera händelse-referens för verifiering med ett unikt kontroll-ID som representerar klientkontrollen som orsakar händelsen.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Servern <xref href=&quot;System.Web.UI.Control&quot;> </xref> som bearbetar återanslående på servern."
    - id: argument
      type: System.String
      description: "En sträng med valfria argument att skicka till `control`."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Så här registrerar du händelse-referens för godkännande. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "En sträng som, när behandlas som skriptet på klienten, initierar återanslåendet."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  id: GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hämtar en URL: en referens till en resurs i en sammansättning."
  remarks: "Metoden GetWebResourceUrl returnerar en URL: en referens till en resurs som är inbäddad i en sammansättning. Den returnerade referensen är inte URL-kodade. Resurser kan vara filer, bilder eller en statisk fil. Anger typen baserat på det objekt som kommer att ha åtkomst till resursen.       En webbresurs som registrerats med sidan som identifieras unikt med dess typ och namn. Endast en resurs med en angiven typ och namn par kan registreras med sidan. Försök att registrera en resurs som redan har registrerats skapar inte en dubblett av den registrerade resursen.       Metoden GetWebResourceUrl används tillsammans med den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>metoden för åtkomst till resurser som är inbäddad i sammansättningar.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Läs mer om hur du använder resurser i program, [resurser översikt över för ASP.NET-webbsida](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the GetWebResourceUrl method. The *type* parameter in this example is set to the type of class in the assembly containing the resource. The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served. Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`. The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object. If you are using [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected. If you are compiling the library at the command line, use the  switch to embed the resource.  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```"
  syntax:
    content: public string GetWebResourceUrl (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av resursen."
    - id: resourceName
      type: System.String
      description: "Det fullständigt kvalificerade namnet på resursen i sammansättningen."
    return:
      type: System.String
      description: "URL: en referens till resursen."
  overload: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The web resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The web resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klienten skriptblock är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden för att undvika registrerar dubbla skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter.       Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodanrop överlagring som inte tar med både en `key` och en `type` parametern med typen som angetts som ett <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - >-
    [!code-cs[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_0_1.aspx)]
     [!code-vb[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_0_1.aspx)]
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptblocket att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om klienten skriptblock är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  id: IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klienten skriptblock är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en nyckel och typen."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden för att undvika registrerar dubbla skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Anger typen baserat på det objekt som kommer att ha åtkomst till resursen. Till exempel när du använder en `Page` instans åtkomst till resursen, anger du den `Page` typen."
  example:
  - "The following code example demonstrates the use of the IsClientScriptBlockRegistered method. Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/b20ef5ac-aa44-4132-8ad3-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/b20ef5ac-aa44-4132-8ad3-_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av skriptblocket klienten att söka efter."
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptblocket att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om klienten skriptblock är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skriptet Klienttypen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  id: IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klienten skriptet innehåller har registrerats med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metoden för att undvika registrerar dubbla skript.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Inkludera ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter.       Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodanrop överlagring som inte tar med både en `key` och en `type` parametern med typen som angetts som en <xref:System.Web.UI.Page>objektet.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptet inkluderar om du vill söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om klienten skriptet innehåller är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  id: IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om klienten skriptet innehåller har registrerats med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en nyckel och typen."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metoden för att undvika dubbla klientskript registrerar inkluderar.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Inkludera ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Anger typen baserat på det objekt som kommer att ha åtkomst till resursen. Till exempel när du använder en Page-instansen för åtkomst till resursen kan du ange den `Page` typen."
  example:
  - "The following code example demonstrates the use of the IsClientScriptIncludeRegistered method. Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/1a97f23b-4196-4af6-89d9-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/1a97f23b-4196-4af6-89d9-_1.aspx)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av klientskript inkluderar om du vill söka efter."
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptet inkluderar om du vill söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om klienten skriptet innehåller är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klienten skriptet innehåller typen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  id: IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om instruktionen OnSubmit är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metoden för att undvika registrerar dubbla OnSubmit-satser.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Detta är särskilt viktigt om instruktionen kräver en stor mängd serverresurser för att skapa.       En instruktion identifieras unikt med dess nyckel och dess typ.. Instruktioner med samma nyckel och typ anses vara dubbletter.       Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metodanrop överlagring som inte tar med både en `key` och en `type` parametern med typen som angetts som ett <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nyckeln för OnSubmit-instruktionen för att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om instruktionen OnSubmit är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  id: IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om instruktionen OnSubmit är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln och typen."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metoden för att undvika registrerar dubbla instruktioner.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Detta är särskilt viktigt om instruktionen kräver en stor mängd serverresurser för att skapa.       En instruktion identifieras unikt med dess nyckel och dess typ.. Instruktioner med samma nyckel och typ anses vara dubbletter. Anger typen baserat på det objekt som kommer att ha åtkomst till resursen. Till exempel när du använder en `Page` instans åtkomst till resursen, anger du den `Page` typen."
  example:
  - "The following code example demonstrates the use of the IsOnSubmitStatementRegistered method. A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/081fc7d2-9213-49e8-ad42-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/081fc7d2-9213-49e8-ad42-_1.aspx)]"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av OnSubmit-instruktionen för att söka efter."
    - id: key
      type: System.String
      description: "Nyckeln för OnSubmit-instruktionen för att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>om instruktionen OnSubmit är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "OnSubmit-instruktionen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om startskriptet är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden för att undvika registrerar dubbla skript.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Ett startskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter.       Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodanrop överlagring som tar både en sträng `key` och en `type` parametern med typen som angetts som ett <xref:System.Web.UI.Page>objekt</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nyckeln för startskriptet att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om startskriptet är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  id: IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Anger om startskriptet är registrerad med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med den angivna nyckeln och typen."
  remarks: "Anropa den här metoden innan du anropar den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden för att undvika registrerar dubbla skript.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Detta är särskilt viktigt om skriptet kräver en stor mängd serverresurser för att skapa.       Ett startskript klienten identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter."
  example:
  - "The following code example demonstrates the use of the IsStartupScriptRegistered method. Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/31c56db0-942d-4a34-be1e-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/31c56db0-942d-4a34-be1e-_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av startskriptet att söka efter."
    - id: key
      type: System.String
      description: "Nyckeln för startskriptet att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om startskriptet är registrerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Starttyp för skript är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en deklaration med JavaScript-matris med de <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en matrisnamnet och ett matrisvärde."
  remarks: "The RegisterArrayDeclaration checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter. Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed. If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.  \n  \n If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\\\\") in the `arrayValue` parameter. The value of the `arrayValue` parameter should be a single element. If more than one value needs to be added to the array, make multiple calls using the RegisterArrayDeclaration method."
  example:
  - "The following code example demonstrates the use of the RegisterArrayDeclaration and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/fb15aead-cb5d-4924-8be4-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/fb15aead-cb5d-4924-8be4-_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "Matrisnamnet att registrera."
    - id: arrayValue
      type: System.String
      description: "Matrisen värdet eller värdena för att registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar klientskript med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, nyckel och skript som literal."
  remarks: "Ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Endast ett skript med en viss typ och nyckelparet kan registreras med sidan. Försök att registrera ett skript som redan har registrerats, skapar inte en dubblett av skriptet.       Anropa den <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metod för att fastställa om ett klientskript med ett givet nyckelpar och typ är redan registrerad och undvika att i onödan försöker lägga till skript.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>       I den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, måste du se till att skriptet finns i den `script` parametern kapslas i en `<script>` elementblock.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>       Den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden lägger till ett skriptblock renderade sidans överkant.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Skriptblock är inte garanterat utdata i den ordning som de har registrerats. Om skriptblock är viktigt, använda en <xref:System.Text.StringBuilder>objekt om du vill samla in skripten i en enskild textsträng och sedan registrera dem i en enskild klient-skriptblocket.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/csharp/41f57bff-a479-4a3c-91bb-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/visualbasic/41f57bff-a479-4a3c-91bb-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av klientskript att registrera."
    - id: key
      type: System.String
      description: "Nyckeln för klientskript för att registrera."
    - id: script
      type: System.String
      description: "Literalen att registrera klientskript."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar klientskript med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, nyckel, skript literal och booleskt värde som anger om du vill lägga till skripttaggar."
  remarks: "Ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Endast ett skript med en viss typ och nyckelparet kan registreras med sidan. Försök att registrera ett skript som redan har registrerats, skapar inte en dubblett av skriptet.       Anropa den <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metod för att bestämma om ett klientskript med en viss nyckel och typ är redan registrerad.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> På så sätt kan du undvika att i onödan försöker lägga till skriptet.       I den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden, anger du om skriptet finns i den `script` parametern kapslas in med ett `<script>` elementblock med hjälp av den `addScriptTags` parameter.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Ange `addScriptTags` till `true` anger att skript-taggar läggs automatiskt.       Den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metoden lägger till ett skriptblock renderade sidans överkant.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Skriptblock är inte garanterat utdata i den ordning som de har registrerats. Om skriptblock är viktigt, använda en <xref:System.Text.StringBuilder>objekt om du vill samla in skripten i en enskild textsträng och sedan registrera dem i en enskild klient-skriptblocket.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method. Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/e4221441-a348-44c8-8a15-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/e4221441-a348-44c8-8a15-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av klientskript att registrera."
    - id: key
      type: System.String
      description: "Nyckeln för klientskript för att registrera."
    - id: script
      type: System.String
      description: "Literalen att registrera klientskript."
    - id: addScriptTags
      type: System.Boolean
      description: "Ett booleskt värde som anger om du vill lägga till skripttaggar."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Skriptet block Klienttypen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  id: RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar klientskript med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en nyckel och en URL, vilket gör skriptet som ska anropas från klienten."
  remarks: "Inkludera ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Endast ett skript med en viss typ och nyckelparet kan registreras med sidan. Försök att registrera ett skript som redan har registrerats, skapar inte en dubblett av skriptet.       Anropa <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>metoden för att avgöra om ett klientskript inkluderar med en viss nyckel och typ är redan registrerad och undvika att i onödan försöker lägga till skript.</xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>      > [!NOTE] > Lös URL-Adressen för klienten med den <xref:System.Web.UI.Control.ResolveClientUrl%2A>metoden.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Den här metoden använder kontexten för URL: en som kallas för att matcha sökvägen.       Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodanrop överlagring som tar en `key`, `URL`, och en `type` parameter.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>       Metoden lägger till ett skriptblock överst på sidan renderade."
  example:
  - For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.
  syntax:
    content: public void RegisterClientScriptInclude (string key, string url);
    parameters:
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptet inkluderar om du vill registrera."
    - id: url
      type: System.String
      description: "URL till klientskript inkluderar om du vill registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar klient-skriptet innehåller med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, en nyckel och en URL."
  remarks: "Den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metoden tar *nyckeln* och *url* parametrar för att identifiera skriptet samt en `type` identifiering av skriptet klienten med parametern innehåller.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Anger typen baserat på det objekt som kommer att ha åtkomst till resursen. Till exempel när du använder en `Page` instans åtkomst till resursen, anger du den `Page` typen.      > [!NOTE] > Lös URL-Adressen för klienten med den <xref:System.Web.UI.Control.ResolveClientUrl%2A>metoden.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Den här metoden använder kontexten för URL: en som kallas för att matcha sökvägen.       Den här metoden lägger till ett skriptblock överst på sidan renderade."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptInclude method. Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/cbae2904-30a8-438b-9fac-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/cbae2904-30a8-438b-9fac-_1.aspx)]  \n  \n This example requires a JavaScript file named Script_include.js with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public void RegisterClientScriptInclude (Type type, string key, string url);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av klientskript inkluderar om du vill registrera."
    - id: key
      type: System.String
      description: "Nyckeln för klienten skriptet inkluderar om du vill registrera."
    - id: url
      type: System.String
      description: "URL till klientskript inkluderar om du vill registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Klienten skriptet innehåller typen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The URL is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The URL is empty."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  id: RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar skriptresurs klienten med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ och ett resursnamn."
  remarks: "Metoden RegisterClientScriptResource används vid åtkomst till resurser kompileras i från sammansättningar via HTTP WebResource.axd-hanteraren. Metoden RegisterClientScriptResource registrerar skriptet med den <xref:System.Web.UI.Page>objekt och förhindrar att duplicerade skript.</xref:System.Web.UI.Page> Den här metoden radbryts innehållet i resurs-URL med en `<script>` elementblock."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptResource method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```  \n  \n Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class."
  syntax:
    content: public void RegisterClientScriptResource (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av klient skriptresursen att registrera."
    - id: resourceName
      type: System.String
      description: "Namnet på den klient skriptresursen att registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The client resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  id: RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar ett namn/värde-par som attributet anpassad (expando) med den angivna kontrollen en kontroll-ID, attributnamn och attributvärde."
  remarks: "Metoden RegisterExpandoAttribute registrerar ett namn/värde-par som en anpassad (expando) attribut i den angivna <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Attributet expando anges dynamiskt från JavaScript för att bevara XHTML kompatibiliteten för den återgivna kontrollen markering. Citattecken och omvända snedstreck i anpassade (expando) attributvärden är undantagna. Om du inte vill att undvika citattecken och omvända snedstreck anropa den <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>överlagra metod och ange den `encode` parametern `false`.</xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>       Om det gick inte att hitta attributet expando eller gick inte att hitta kontrollen att lägga till attributet expando till skriptet klienten fortfarande orsakat, men kontrollen påverkas inte."
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);
    parameters:
    - id: controlId
      type: System.String
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> på den sida som innehåller det anpassade attributet."
    - id: attributeName
      type: System.String
      description: "Namnet på det anpassade attributet att registrera."
    - id: attributeValue
      type: System.String
      description: "Värdet för det anpassade attributet."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar ett namn/värde-par som attributet anpassad (expando) med den angivna kontrollen får ett kontroll-ID, ett attributnamn, attribut-värde och ett booleskt värde som anger om du vill koda attributvärdet."
  remarks: "Metoden RegisterExpandoAttribute registrerar ett namn/värde-par som en anpassad (expando) attribut i den angivna <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> Attributet expando anges dynamiskt från JavaScript för att bevara XHTML kompatibiliteten för den återgivna kontrollen markering. Ange den `encode` parameter till `true` om du behöver att undvika citattecken och omvända snedstreck i expando attributets värde.       Om det gick inte att hitta attributet expando eller gick inte att hitta kontrollen att lägga till attributet expando till skriptet klienten fortfarande orsakat, men kontrollen påverkas inte."
  example:
  - "The following code example demonstrates how to use the RegisterExpandoAttribute method of the <xref:System.Web.UI.ClientScriptManager> class. The client script in the rendered page sets the `title` attribute of a `<span>` element.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/visualbasic/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/csharp/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]"
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: controlId
      type: System.String
      description: "Den <xref href=&quot;System.Web.UI.Control&quot;> </xref> på den sida som innehåller det anpassade attributet."
    - id: attributeName
      type: System.String
      description: "Namnet på det anpassade attributet att registrera."
    - id: attributeValue
      type: System.String
      description: "Värdet för det anpassade attributet."
    - id: encode
      type: System.Boolean
      description: "Ett booleskt värde som anger om du vill koda det anpassade attributet att registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  id: RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en händelse referens för verifiering med ett unikt kontroll-ID som representerar klientkontrollen orsakar händelsen."
  remarks: "Mer information och exempel finns i <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metod.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  example:
  - "The following example shows how to use the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_1_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_1_1.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Ett unikt ID som representerar klientkontrollen orsakar händelsen."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  id: RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en händelse referens för verifiering med <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>."
  remarks: "Mer information och exempel finns i <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metod.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  syntax:
    content: public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "En <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objekt som anger hur klienten JavaScript genereras för att initiera ett återanslående."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  id: RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en händelse referens för verifiering med en unik kontroll-ID och händelse-argument som representerar klientkontrollen orsakar händelsen."
  remarks: ''
  example:
  - "The following code example demonstrates using the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]  \n  \n The following code example demonstrates using the RegisterForEventValidation method to register a callback for validation.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Ett unikt ID som representerar klientkontrollen orsakar händelsen."
    - id: argument
      type: System.String
      description: "Händelseargument skickades till klienten händelsen."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Metoden anropas före den <xref:System.Web.UI.Page.Render*>metoden.</xref:System.Web.UI.Page.Render*>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar ett dolt värde med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt."
  remarks: "Metoden RegisterHiddenField skapar en dold `<input>` element på den renderade HTML-sidan."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and RegisterHiddenField methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/0defa6d5-d8c8-43f1-af03-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/0defa6d5-d8c8-43f1-af03-_1.aspx)]"
  syntax:
    content: public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "Namnet på det dolda fältet att registrera."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "Det första värdet i fältet för att registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hiddenFieldName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar en OnSubmit-instruktion med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, en nyckel och ett skript som literal. Instruktionen körs när den <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> har skickats."
  remarks: "En OnSubmit-instruktion identifieras unikt med dess nyckel och dess typ.. Instruktioner med samma nyckel och typ anses vara dubbletter. Endast en instruktion med ett angivet typ och nyckel kan registreras med sidan. Försök att registrera en instruktion som redan har registrerats kommer inte att skapa en dubblett av instruktionen.       Anropa <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metoden för att avgöra om en OnSubmit-instruktion har redan registrerats med en viss nyckel och typ och undvika att i onödan försöker lägga till skript.</xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>       Den `script` parameter till metoden RegisterOnSubmitStatement kan innehålla flera skriptkommandon så länge de är korrekt avgränsade med semikolon (;).       RegisterOnSubmitStatement lägger till ett skript som körs innan sidan har skickats och ger dig möjlighet att Avbryt överföringen.       Mer information om HTML-formulär och `OnSubmit` attribut, finns det [World Wide Web Consortium (W3C) webbplats](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates the use of the RegisterOnSubmitStatement method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/597b1063-1251-4d00-82f9-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/597b1063-1251-4d00-82f9-_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av OnSubmit-instruktionen för att registrera."
    - id: key
      type: System.String
      description: "Nyckeln för OnSubmit-instruktionen för att registrera."
    - id: script
      type: System.String
      description: "Skriptet literal för OnSubmit-instruktion för att registrera."
  overload: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  id: RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar startskriptet med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, en nyckel och ett skript som literal."
  remarks: "Ett klientskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Endast ett skript med en viss typ och nyckelparet kan registreras med sidan. Försök att registrera ett skript som redan har registrerats, skapar inte en dubblett av skriptet.       Anropa den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metod för att fastställa om ett startskript med ett givet nyckelpar och typ är redan registrerad och undvika att i onödan försöker lägga till skript.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       I den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden, måste du se till att skriptet finns i den `script` parametern kapslas in med ett `<script>` elementblock.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>       Skriptblock som lagts till av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden Kör när sidan har lästs in, men innan sidans <xref:System.Web.UI.Control.OnLoad%2A>händelsen utlöses.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Skriptblock är inte garanterat utdata i den ordning som de har registrerats. Om skriptblock är viktigt, använda en <xref:System.Text.StringBuilder>objekt om du vill samla in skripten i en enskild textsträng och sedan registrera dem i en enskild klient-skriptblocket.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the beginning and closing script tags are included within the `script` parameter. To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/csharp/77e56a73-ddd0-4c6d-99c5-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/visualbasic/77e56a73-ddd0-4c6d-99c5-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av startskriptet att registrera."
    - id: key
      type: System.String
      description: "Nyckeln för att registrera startskriptet."
    - id: script
      type: System.String
      description: "Literalen att registrera startskriptet."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registrerar startskriptet med den <xref href=&quot;System.Web.UI.Page&quot;> </xref> objekt med en typ, en nyckel, ett skript som literal och ett booleskt värde som anger om du vill lägga till skripttaggar."
  remarks: "Ett startskript identifieras unikt med dess nyckel och dess typ.. Skript med samma nyckel och typen anses vara dubbletter. Endast ett skript med en viss typ och nyckelparet kan registreras med sidan. Försök att registrera ett skript som redan har registrerats, skapar inte en dubblett av skriptet.       Anropa den <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metod för att fastställa om ett startskript med ett givet nyckelpar och typ är redan registrerad och undvika att i onödan försöker lägga till skript.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       I den här överlagring för den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden, anger du om skriptet finns i den `script` parametern kapslas in med ett `<script>` elementblock med hjälp av den `addScriptTags` parameter.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Ange `addScriptTags` till `true` anger att skript-taggar läggs automatiskt.       Skriptblock som lagts till av den <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metoden Kör när sidan har lästs in, men innan sidans <xref:System.Web.UI.Control.OnLoad%2A>händelsen utlöses.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Skriptblock är inte garanterat utdata i den ordning som de har registrerats. Om skriptblock är viktigt, använda en <xref:System.Text.StringBuilder>objekt om du vill samla in skripten i en enskild textsträng och sedan registrera dem i en enskild klient-skriptblocket.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Typ av startskriptet att registrera."
    - id: key
      type: System.String
      description: "Nyckeln för att registrera startskriptet."
    - id: script
      type: System.String
      description: "Literalen att registrera startskriptet."
    - id: addScriptTags
      type: System.Boolean
      description: "Ett booleskt värde som anger om du vill lägga till skripttaggar."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  id: ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Verifierar en klienthändelse som har registrerats för händelsen validering med hjälp av den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  syntax:
    content: public void ValidateEvent (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Ett unikt ID som representerar klientkontrollen orsakar händelsen."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  id: ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Verifierar en klienthändelse som har registrerats för händelsen validering med hjälp av den <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metoden.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  remarks: ''
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the ValidateEvent method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_3_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_3_1.aspx)]"
  syntax:
    content: public void ValidateEvent (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Ett unikt ID som representerar klientkontrollen orsakar händelsen."
    - id: argument
      type: System.String
      description: "Händelseargument skickades till klienten händelsen."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uniqueId</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller en tom sträng (&quot;&quot;)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference
  nameWithType: ClientScriptManager.GetCallbackEventReference
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: ClientScriptManager.GetPostBackEventReference
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl
  nameWithType: ClientScriptManager.GetWebResourceUrl
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: ClientScriptManager.IsStartupScriptRegistered
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ClientScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ClientScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ClientScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ClientScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ClientScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation
  nameWithType: ClientScriptManager.RegisterForEventValidation
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ClientScriptManager.RegisterHiddenField
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ClientScriptManager.RegisterStartupScript
- uid: System.Web.UI.ClientScriptManager.ValidateEvent*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent
  nameWithType: ClientScriptManager.ValidateEvent
