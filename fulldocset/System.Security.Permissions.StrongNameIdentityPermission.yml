### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StrongNameIdentityPermission
  id: StrongNameIdentityPermission
  children:
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Permissions.StrongNameIdentityPermission.Copy
  - System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Name
  - System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  - System.Security.Permissions.StrongNameIdentityPermission.ToXml
  - System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Version
  langs:
  - csharp
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission
  fullName: System.Security.Permissions.StrongNameIdentityPermission
  type: Class
  summary: "Definierar behörigheten identitet för starkt krypterat namn. Den här klassen kan inte ärvas."
  remarks: "> [!IMPORTANT]> Från och med den [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], Identitetsbehörigheter används inte.   >> I .NET Framework-versioner 1.0- och 1.1 Identitetsbehörigheter får inte ha en <xref:System.Security.Permissions.PermissionState>behörighet tillståndsvärde.</xref:System.Security.Permissions.PermissionState> Identitetsbehörigheter kan ha någon behörighet tillståndsvärde för i .NET Framework version 2.0 och senare.  Detta innebär att Identitetsbehörigheter i version 2.0 och senare versioner har samma beteende som behörigheter som implementerar det <xref:System.Security.Permissions.IUnrestrictedPermission>gränssnittet.</xref:System.Security.Permissions.IUnrestrictedPermission> Det vill säga lyckas alltid en begäran om en identitet, oavsett identiteten på sammansättningen, om sammansättningen har beviljats fullständigt förtroende.       Använd StrongNameIdentityPermission för att bekräfta att anropa koden är i en viss kod med starkt krypterat namn-sammansättning. Fullständig krav på StrongNameIdentityPermission lyckas bara om alla sammansättningar i stacken har rätt bevis att uppfylla behovet. Länken kräver som använder den <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>attributet lyckas bara om den omedelbara anroparen har rätt bevis.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>       Ett starkt krypterat namn-ID är baserad på en offentlig krypteringsnyckel som kallas ett binärt stort objekt (BLOB) som du kan också kombineras med namnet och versionen på en specifik sammansättning. Nyckeln definierar ett unikt namnområde och ger stark verifiering av att namnet är äkta, eftersom definitionen av namnet måste vara i en sammansättning som är signerat av motsvarande privata nyckel.       Observera att giltigheten för stark namnnyckel inte är beroende på en betrodd relation eller ett certifikat som nödvändigtvis utfärdats för nyckeln.       Krav på behörigheterna som identitet är effektiva i .NET Framework-versioner 1.0- och 1.1 trots att anropa sammansättningen är fullständigt betrodd. Även om den anropande sammansättningen har fullständigt förtroende, misslyckas som är en begäran om en identity-behörighet om sammansättningen inte uppfyller kriterierna som behövs. I .NET Framework version är 2.0 och senare, krav på Identitetsbehörigheter ineffektiv om anropa sammansättningen har fullständigt förtroende. Detta säkerställer konsekvent för alla behörigheter och eliminerar behandling av Identitetsbehörigheter i specialfall.       En fullständig beskrivning av starka krypterade namn, finns det <xref:System.Security.Policy.StrongName>referenssida.</xref:System.Security.Policy.StrongName> Mer information om starka namn finns [Strong-Named sammansättningar](~/add/includes/ajax-current-ext-md.md).       Klassen StrongNameIdentityPermission används för att definiera starkt krypterat namn krav för att komma åt offentliga medlemmar av typen. Den <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>attributet kan användas för att definiera starkt krypterat namn krav på nivån sammansättningen.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> I .NET Framework version 2.0 och senare, du kan också använda den <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>-attribut som anger att alla icke allmän typer i denna sammansättning är synliga för en annan sammansättning.</xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Mer information finns i [Friend sammansättningar](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> klass med det angivna <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Skapar antingen ett fullständigt begränsat (`None`) eller `Unrestricted` behörighet.      > [!NOTE] > I .NET Framework version 1.0 och 1.1, Identitetsbehörigheter får inte ha en <xref:System.Security.Permissions.PermissionState>behörighet tillståndsvärde.</xref:System.Security.Permissions.PermissionState> Identitetsbehörigheter kan ha någon behörighet tillståndsvärde för i .NET Framework version 2.0 och senare.  Detta innebär att Identitetsbehörigheter i version 2.0 och senare versioner har samma beteende som behörigheter som implementerar det <xref:System.Security.Permissions.IUnrestrictedPermission>gränssnittet.</xref:System.Security.Permissions.IUnrestrictedPermission> Det vill säga lyckas alltid en begäran om en identitet, oavsett identiteten på sammansättningen, om sammansättningen har beviljats fullständigt förtroende.       I .NET Framework-versioner 1.0- och 1.1 fungerar krav på behörigheterna som identitet, även när den anropande sammansättningen är fullständigt betrodd. Även om den anropande sammansättningen har fullständigt förtroende, misslyckas som är en begäran om en identity-behörighet om sammansättningen inte uppfyller kriterierna som behövs. I .NET Framework version är 2.0 och senare, krav på Identitetsbehörigheter ineffektiv om anropa sammansättningen har fullständigt förtroende. Detta säkerställer konsekvent för alla behörigheter, eliminera behandling av Identitetsbehörigheter i specialfall.       Använd den här konstruktorn med behörigheten tillstånd värdet <xref:System.Security.Permissions.PermissionState>att skapa en identity-behörighet som matchar inget starkt krypterat namn.</xref:System.Security.Permissions.PermissionState> Om du därefter ställer in den <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>och <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A>Egenskaper för en specifik starkt krypterat namn identitet kan representeras av behörigheten.</xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/visualbasic/ecc5c20f-4468-431e-a2f0-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/cpp/ecc5c20f-4468-431e-a2f0-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/csharp/ecc5c20f-4468-431e-a2f0-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> värden."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> state </code> parametern är inte ett giltigt värde för <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initierar en ny instans av den <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> klassen för den angivna starkt krypterat namn-identitet."
  remarks: "Den `name` och `version` parametrarna kan vara `null` endast när den offentliga nyckeln används för att identifiera sammansättningen. En tom sträng (&quot;&quot;) ska inte användas i stället för `null`. Om `name` är en tom sträng, ett <xref:System.ArgumentException>genereras.</xref:System.ArgumentException>       Mer information om namn och versionsnummer sammansättningar finns [Strong-Named sammansättningar](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/visualbasic/f67888ca-a49f-49ea-a115-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/cpp/f67888ca-a49f-49ea-a115-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/csharp/f67888ca-a49f-49ea-a115-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "Den offentliga nyckeln som definierar namnområdet identitet starkt krypterat namn."
    - id: name
      type: System.String
      description: "Enkelt namn en del av identiteten för starkt krypterat namn. Detta motsvarar namnet på sammansättningen."
    - id: version
      type: System.Version
      description: "Versionsnummer för identiteten."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> name </code> parametern är en tom sträng (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar och returnerar en identisk kopia av den aktuella tillstånd."
  remarks: "En kopia av en behörighet representerar samma åtkomst till resurser som den ursprungliga tillstånd."
  example:
  - "The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/visualbasic/m-system.security.permis_15_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/cpp/m-system.security.permis_15_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/csharp/m-system.security.permis_15_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopia av den aktuella tillstånd."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruerar behörighet med ett angivet tillstånd från en XML-kodning."
  remarks: "Den här metoden används inte av programkod."
  example:
  - "The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/ed9c932c-08d5-452f-8a11-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/ed9c932c-08d5-452f-8a11-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/ed9c932c-08d5-452f-8a11-_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "XML-kodning som ska användas för att återskapa behörigheten."
  overload: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> e </code> parametern är inte ett giltigt behörighetselement.       - eller - <code> e </code> parameterns versionsnumret är inte giltig."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar och returnerar en behörighet som är skärningspunkten för den aktuella angivna behörigheterna och."
  remarks: "Skärningspunkten för två behörigheter är en behörighet som beskriver uppsättningen åtgärder som de båda beskriver gemensamma. Skärningspunkten skickar en begäran som passerar både ursprungliga behörigheter.       Skärningspunkten för två identiska starkt krypterat namn Identitetsbehörigheter är samma behörighet. Skärningspunkten för två olika (inte jokertecken) uttryck är en tom behörighet. Skärningspunkten för ett jokerteckenuttryck och ett matchande starkt krypterat namn är starkt krypterat namn. Skärningspunkten för två jokertecken uttryck som matchar är längre, mer specifikt av två uttryck."
  example:
  - "The following code example shows the results of the use of the Intersect method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/visualbasic/fc41bc4b-3965-4525-8b6a-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/cpp/fc41bc4b-3965-4525-8b6a-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/csharp/fc41bc4b-3965-4525-8b6a-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighet till intersect med aktuella tillstånd. Det måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Security.IPermission
      description: "En ny behörighet som representerar skärningspunkten för den aktuella angivna behörigheterna och, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om skärningspunkten är tom."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Anger om aktuella behörigheten är en delmängd av den angivna behörigheten."
  remarks: "Aktuella behörigheten är en delmängd av den angivna behörigheten om behörigheten aktuella anger en uppsättning åtgärder som finns helt i den angivna behörigheten. Till exempel de andra egenskaperna som är lika, en identitet med den <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>egenskap som innehåller jokerteckenuttryck MyCompany.MyDepartment.* identifieras som en del av en identitet med den <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>egenskapen MyCompany.MyDepartment.MyFile.</xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the results of the use of the IsSubsetOf method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/visualbasic/e4452cd4-0b1f-49b1-baf5-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/cpp/e4452cd4-0b1f-49b1-baf5-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/csharp/e4452cd4-0b1f-49b1-baf5-_1.cs)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Behörigheter som ska testas för delmängd relationen. Den här behörigheten måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den aktuella behörigheten är en delmängd av den angivna behörigheten; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  id: Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hämtar eller anger den enkla del av identiteten för starkt krypterat namn."
  remarks: "Värdet på egenskapen namn kan vara ett exakt namn eller kan ändras av ett jokertecken i den sista positionen; till exempel är både MyCompany.MyDepartment.MyFile och MyCompany.MyDepartment.* giltiga namn. Om du försöker ange namnegenskapen på en tom sträng (&quot;&quot;), en <xref:System.ArgumentException>genereras.</xref:System.ArgumentException>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Enkla namnet på identiteten."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är en tom sträng (&quot;&quot;)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapens värde kan inte hämtas eftersom den innehåller en tvetydig identitet."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  id: PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hämtar eller anger den offentliga nyckel-blob som definierar namnområdet identitet starkt krypterat namn."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "En <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> som innehåller den offentliga nyckeln för identitet, eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om det inte finns någon nyckel."
  overload: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egenskapens värde har angetts <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapens värde kan inte hämtas eftersom den innehåller en tvetydig identitet."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar en XML-kodning av behörighet och det aktuella tillståndet."
  remarks: "Den här metoden används vanligtvis inte av programkod."
  example:
  - "The following code example shows the behavior of the ToXml method.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/m-system.security.permis_20_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/m-system.security.permis_20_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/m-system.security.permis_20_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "En XML-kodning av behörighet, inklusive statusinformation."
  overload: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Skapar en behörighet som är unionen av den aktuella angivna behörigheterna och."
  remarks: "Resultatet av ett anrop till Union är en behörighet som representerar alla åtgärder som representeras av både den aktuella angivna behörigheterna och. Varje begäran som skickas antingen behörighet skickar sina union.       Sammanslagning av en behörighet och `null` behörighet som inte är `null`. Sammanslagning av en behörighet och en delmängd av behörigheten har behörigheten som innehåller den andra. Vilken kombination som helst resulterar i en <xref:System.ArgumentException>undantag som genereras.</xref:System.ArgumentException>"
  example:
  - "The following code example shows the results of the use of the Union method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/visualbasic/3b1a04e0-7bea-4a40-8e18-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/cpp/3b1a04e0-7bea-4a40-8e18-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/csharp/3b1a04e0-7bea-4a40-8e18-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "En behörighet för att kombinera med aktuella tillstånd. Det måste vara av samma typ som den aktuella tillstånd."
    return:
      type: System.Security.IPermission
      description: "En ny behörighet som representerar unionen av den aktuella angivna behörigheterna och."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> target </code> parametern är inte <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> och är inte av samma typ som den aktuella tillstånd.       - eller - två behörigheter är inte lika och en är en delmängd av de andra."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  id: Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hämtar eller anger versionsnumret för identiteten."
  syntax:
    content: public Version Version { get; set; }
    return:
      type: System.Version
      description: "Versionen av identiteten."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Version*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Egenskapens värde kan inte hämtas eftersom den innehåller en tvetydig identitet."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: StrongNameIdentityPermission.Copy
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: StrongNameIdentityPermission.FromXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: StrongNameIdentityPermission.Intersect
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StrongNameIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: StrongNameIdentityPermission.ToXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union
  nameWithType: StrongNameIdentityPermission.Union
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
