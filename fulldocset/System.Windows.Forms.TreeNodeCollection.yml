### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Windows.Forms.TreeNodeCollection.Add(System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNodeCollection.Clear
  - System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Count
  - System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  - System.Windows.Forms.TreeNodeCollection.GetEnumerator
  - System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.IsReadOnly
  - System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Item(System.String)
  - System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
  type: Class
  summary: "Representerar en mängd <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> objekt."
  remarks: "Den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, och <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>metoder kan du lägga till och ta bort enskilda trädnoder från samlingen.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>      > [!NOTE] > Uppräkning samlingen och ta bort noder stöds inte.       Du kan också använda den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder för att lägga till eller ta bort alla trädnoder från samlingen.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>       Klasser kan inte ärva från klassen TreeNodeCollection."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_6_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_6_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_6_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public class TreeNodeCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lägger till en ny trädnod med angivna etikettexten till slutet av den aktuella trädnodmängden."
  remarks: "Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare lagt till använder det <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_56_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_56_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_56_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string text);
    parameters:
    - id: text
      type: System.String
      description: "Etiketten texten som visas i <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode
      description: "En <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som representerar trädnoden som läggs till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  id: Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lägger till en tidigare skapad trädnod till slutet av trädnodmängden."
  remarks: "Den här versionen av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>metoden kan du lägga till tidigare skapade <xref:System.Windows.Forms.TreeNode>objekt till slutet av trädnodmängden.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare lagt till använder det <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > A <xref:System.Windows.Forms.TreeNode>kan tilldelas till endast en <xref:System.Windows.Forms.TreeView>kontroll i taget.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Lägg till trädnoden i en ny trädvykontrollen, måste du ta bort den från andra trädvyn först eller klona den."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_22_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_22_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_22_1.cpp)]"
  syntax:
    content: public virtual int Add (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att lägga till i samlingen."
    return:
      type: System.Int32
      description: "Värdet nollbaserade indexet för den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> lagts till i trädnodmängden."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> node </code> har tilldelats en annan <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en ny trädnod med den angivna nyckeln och text och lägger till den samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som har lagts till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  id: Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och image och lägger till den samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Den `imageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Trädnoden läggs till i slutet av samlingen. Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som har lagts till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och image och lägger till den samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Trädnoden läggs till i slutet av samlingen. Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Den `imageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageKey
      type: System.String
      description: "Bilden som ska visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som har lagts till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  id: Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och bilder och lägger till den samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Trädnoden läggs till i slutet av samlingen. Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Den `imageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Den `selectedImageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.StateImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden."
    - id: selectedImageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden när den är i ett markerade tillstånd."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Trädnoden som lades till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och bilder och lägger till den samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Trädnoden läggs till i slutet av samlingen. Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Den `imageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Den `selectedImageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.StateImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageKey
      type: System.String
      description: "Nyckeln för bilden som ska visas i trädnoden."
    - id: selectedImageKey
      type: System.String
      description: "Nyckeln för bilden som ska visas när noden är i ett markerade tillstånd."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som har lagts till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  id: AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lägger till en matris med tidigare skapade trädnoder i samlingen."
  remarks: "Den <xref:System.Windows.Forms.TreeNode>objekt som ingår i den `nodes` matris läggs till i slutet av samlingen.</xref:System.Windows.Forms.TreeNode>       Du kan använda metoden AddRange att snabbt lägga till en grupp av tidigare skapade <xref:System.Windows.Forms.TreeNode>objekt i samlingen i stället för att lägga till manuellt varje <xref:System.Windows.Forms.TreeNode>till samlingen med den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>metoden.</xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode>       Ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare lagt till använder det <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the AddRange method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/ef635824-b7a0-4e6a-bbd4-_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/ef635824-b7a0-4e6a-bbd4-_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/ef635824-b7a0-4e6a-bbd4-_1.cs)]"
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);
    parameters:
    - id: nodes
      type: System.Windows.Forms.TreeNode[]
      description: "En matris med <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> objekt som representerar noderna i trädet ska läggas till i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nodes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nodes</code>är underordnad en annan <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  id: Clear
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tar bort alla noder från samlingen."
  remarks: "Du kan använda den här metoden för att rensa hela uppsättningen av trädnoder från en trädvy.       Ta bort ett enskilt trädnoden från samlingen med de <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>       Att lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen använder den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the Clear method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/m-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_20_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/m-system.windows.forms.t_20_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  id: Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om den angivna trädnoden är medlem i samlingen."
  remarks: "Den här metoden kan du avgöra om en som <xref:System.Windows.Forms.TreeNode>är medlem i samlingen innan du försöker utföra åtgärder på <xref:System.Windows.Forms.TreeNode>.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode> Du kan använda den här metoden för att bekräfta att en <xref:System.Windows.Forms.TreeNode>har lagts till eller fortfarande är medlem i samlingen.</xref:System.Windows.Forms.TreeNode>       Hur lång tid som den här metoden tar är proportionell mot storleken på samlingen noden så kanske du vill undvika att använda med stora samlingar.       Den här metoden kontrollerar endast referenslikheten. Du kan inte använda den för att avgöra om en motsvarande men en annan nod i samlingen.      > [!NOTE] > En konsekvenserna av referenslikheten krav är att du inte kan anpassa beteendet för den här metoden för härledda <xref:System.Windows.Forms.TreeNode>typer genom att åsidosätta <xref:System.Object.Equals%2A>metoden i <xref:System.Windows.Forms.TreeNode>klassen.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/049b6658-8822-4453-9f89-_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/049b6658-8822-4453-9f89-_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/049b6658-8822-4453-9f89-_1.vb)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att hitta i samlingen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> är medlem i samlingen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om samlingen innehåller en trädnod med den angivna nyckeln."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Viktiga jämförelsen är inte skiftlägeskänsligt. Om den `key` parametern är `null` eller en tom sträng i <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>egenskapen returnerar `false`.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Anger samlingen innehåller en <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> med den angivna nyckeln, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Kopierar hela samlingen till en befintlig matris på en angiven plats i matrisen."
  remarks: ''
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/m-system.windows.forms.t_31_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_31_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/m-system.windows.forms.t_31_1.cpp)]"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "Målmatrisen."
    - id: index
      type: System.Int32
      description: "Indexet i Målmatrisen på vilka lagra börjar."
  overload: System.Windows.Forms.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Count
  id: Count
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar det totala antalet <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> objekt i samlingen."
  remarks: "Egenskapen Count innehåller antalet <xref:System.Windows.Forms.TreeNode>objekt som tilldelats till samlingen.</xref:System.Windows.Forms.TreeNode> Du kan använda värdet för egenskapen antal som de övre gränserna för en loop för att söka igenom en samling.      > [!NOTE] > Eftersom indexvärdet för en samling är ett Nollbaserat index, måste du subtraheras från variabeln slingor. Om du inte omfattas detta, kommer du överskrider de övre gränserna för insamling och Kasta ett <xref:System.IndexOutOfRangeException>undantag.</xref:System.IndexOutOfRangeException>"
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/p-system.windows.forms.t_28_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_28_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/p-system.windows.forms.t_28_1.cpp)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Det totala antalet <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> objekt i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hittar trädnoder med angiven nyckel som du kan också söka underordnade noder."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Viktiga jämförelsen är inte skiftlägeskänsligt. Om den `key` parametern är `null` eller en tom sträng eller så finns det inga matchningar i <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>-egenskap returnerar en tom matris`.` </xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden att söka efter."
    - id: searchAllChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Sök underordnade noder i trädnoder. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode[]
      description: "En matris med <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> objekt vars <xref:System.Windows.Forms.TreeNode.Name*>-egenskap stämmer med den angivna nyckeln.</xref:System.Windows.Forms.TreeNode.Name*>"
  overload: System.Windows.Forms.TreeNodeCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerar en uppräknare som kan användas för att gå igenom trädnodmängden."
  remarks: ''
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/m-system.windows.forms.t_51_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/m-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_51_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En <xref:System.Collections.IEnumerator>som representerar trädnodmängden.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  id: IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerar index för den angivna trädnoden i samlingen."
  remarks: "Hur lång tid som den här metoden tar är proportionell mot storleken på samlingen noden så kanske du vill undvika att använda med stora samlingar.       Den här metoden kontrollerar endast referenslikheten. Du kan inte använda den för att hämta index för en motsvarande men en annan nod i samlingen.      > [!NOTE] > En konsekvenserna av referenslikheten krav är att du inte kan anpassa beteendet för den här metoden för härledda <xref:System.Windows.Forms.TreeNode>typer genom att åsidosätta <xref:System.Object.Equals%2A>metoden i <xref:System.Windows.Forms.TreeNode>klassen.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/cpp/m-system.windows.forms.t_27_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/csharp/m-system.windows.forms.t_27_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_27_1.vb)]"
  syntax:
    content: public int IndexOf (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att hitta i samlingen."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för objektet som hittades i trädnodmängden; Annars, -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  id: IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerar indexet för den första förekomsten av en trädnod med den angivna nyckeln."
  remarks: "Om IndexOfKey anropas efter varandra, returneras sist kontrolleras index för en nyckel matchning först och om det finns ingen matchning, sökningen börjar i början av samlingen.       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Viktiga jämförelsen är inte skiftlägeskänsligt. Om `key` är `null` eller en tom sträng i <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>-egenskap returnerar -1.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual int IndexOfKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden att söka efter."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för den första förekomsten av en trädnod med den angivna nyckeln om hittas. Annars, -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med den angivna texten och infogar med det angivna indexet."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  id: Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Infogar en befintlig trädnoden i trädnodmängden på den angivna platsen."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>över.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       Ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare lagt till använder det <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > A <xref:System.Windows.Forms.TreeNode>kan tilldelas till endast en <xref:System.Windows.Forms.TreeView>kontroll i taget.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Lägg till trädnoden i en ny trädvykontrollen, måste du ta bort den från andra trädvyn först eller klona den."
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the Insert method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/13281f08-0181-4942-9ff8-_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/13281f08-0181-4942-9ff8-_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/13281f08-0181-4942-9ff8-_1.cs)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.TreeNode node);
    parameters:
    - id: index
      type: System.Int32
      description: "Indexerade plats i samlingen för att infoga trädnoden."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att infoga i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> node </code> har tilldelats en annan <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med den angivna texten och nyckeln och infogas i samlingen."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och image och infogas i samlingen med det angivna indexet."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Den `imageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och image och infogas i samlingen med det angivna indexet."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Den `imageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageKey
      type: System.String
      description: "Nyckeln för bilden som ska visas i trädnoden."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och bilder och infogas i samlingen med det angivna indexet."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Den `imageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Den `selectedimageIndex` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.StateImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden."
    - id: selectedImageIndex
      type: System.Int32
      description: "Index för avbildningen som ska visas i trädnoden när den är i ett markerade tillstånd."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Skapar en trädnod med angiven nyckel, text och bilder och infogas i samlingen med det angivna indexet."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` värdet på parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Windows.Forms.TreeView>sorteras igen.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Du kan också lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Den `imageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.ImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Den `selectedimageKey` parametern refererar till en bild i <xref:System.Windows.Forms.TreeView.StateImageList%2A>egenskapen för överordnat <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Plats i samlingen för att infoga noden."
    - id: key
      type: System.String
      description: "Namnet på trädnoden."
    - id: text
      type: System.String
      description: "Texten som visas i trädnoden."
    - id: imageKey
      type: System.String
      description: "Nyckeln för bilden som ska visas i trädnoden."
    - id: selectedImageKey
      type: System.String
      description: "Nyckeln för bilden som ska visas i trädnoden när den är i ett markerade tillstånd."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som infogades i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar ett värde som anger om samlingen är skrivskyddad."
  remarks: ''
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_284_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_284_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_284_1.cs)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om inte mängden är skrivskyddade. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> indexerade på den angivna platsen i samlingen."
  remarks: "Tilldela <xref:System.Windows.Forms.TreeNode>objekt till en viss plats eller hämta dem från den <xref:System.Windows.Forms.TreeNodeCollection>, du kan referera till samlingsobjektet med en specifik indexvärde.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> Indexvärdet för den <xref:System.Windows.Forms.TreeNodeCollection>är ett Nollbaserat index.</xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_118_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/p-system.windows.forms.t_118_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/p-system.windows.forms.t_118_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indexerade platsen för den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> i samlingen."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> indexerade på den angivna platsen i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Den <code> index </code> värde är mindre än 0 eller större än antalet trädnoder i samlingen."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar trädnoden med den angivna nyckeln från samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Viktiga jämförelsen är inte skiftlägeskänsligt. Om den `key` parametern är `null` eller en tom sträng objekt-egenskap returnerar `null`."
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Namnet på den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att hämta från samlingen."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> med den angivna nyckeln."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  id: Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tar bort den angivna trädnoden från trädnodmängden."
  remarks: "När en <xref:System.Windows.Forms.TreeNode>tas bort från trädnodmängden alla efterföljande trädet noder flyttas upp en placering i samlingen.</xref:System.Windows.Forms.TreeNode>       Du kan också ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare har lagts till med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > Uppräkning samlingen och ta bort noder stöds inte.       Att lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen använder den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the Remove method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_35_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/m-system.windows.forms.t_35_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/m-system.windows.forms.t_35_1.cs)]"
  syntax:
    content: public void Remove (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att ta bort."
  overload: System.Windows.Forms.TreeNodeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tar bort en trädnod från trädnodmängden vid ett specificerat index."
  remarks: "När en <xref:System.Windows.Forms.TreeNode>tas bort från trädnodmängden alla efterföljande trädet noder flyttas upp en placering i samlingen.</xref:System.Windows.Forms.TreeNode>       Du kan också ta bort en <xref:System.Windows.Forms.TreeNode>som du tidigare har lagts till med hjälp av den <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>eller <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > Uppräkning samlingen och ta bort noder stöds inte.       Att lägga till nya <xref:System.Windows.Forms.TreeNode>objekt i samlingen använder den <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, eller <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metoder.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the RemoveAt method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_69_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/m-system.windows.forms.t_69_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/m-system.windows.forms.t_69_1.cs)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Index för den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att ta bort."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  id: RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tar bort trädnoden med den angivna nyckeln från samlingen."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Egenskapen motsvarar nyckel för en <xref:System.Windows.Forms.TreeNode>i <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual void RemoveByKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Namnet på trädnoden ska tas bort från samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar ett värde som anger om åtkomst till samlingen synkroniseras (trådsäkra)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar ett objekt som kan användas för att synkronisera åtkomst till samlingen."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Ett objekt som kan användas för att synkronisera åtkomst till den <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lägger till ett objekt i slutet av trädnodmängden."
  remarks: "Om `node` är inte en <xref:System.Windows.Forms.TreeNodeCollection>använder metoden IList.Add strängen som returneras av- <xref:System.Windows.Forms.TreeNode.ToString%2A>metoden i <xref:System.Windows.Forms.TreeNode>klassen.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.ToString%2A> </xref:System.Windows.Forms.TreeNodeCollection>"
  syntax:
    content: int IList.Add (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Objektet som du lägger till i trädnodmängden."
    return:
      type: System.Int32
      description: "Värdet nollbaserade indexet för den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> som har lagts till i trädnodmängden."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>node</code>för tillfället är tilldelad en annan <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref> kontroll."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om den angivna trädnoden är medlem i samlingen."
  remarks: "Om `node` är inte en <xref:System.Windows.Forms.TreeNode>, IList.Contains-metoden returnerar `false`.</xref:System.Windows.Forms.TreeNode> Därför du inte kan lägga till i en sträng för att avgöra om samlingen innehåller en nod som har värdet för strängen som dess <xref:System.Windows.Forms.TreeNode.Text%2A>egenskap.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: bool IList.Contains (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Objekt i samlingen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <code> node </code> är medlem i samlingen, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerar index för den angivna trädnoden i samlingen."
  remarks: "Om `node` är inte en <xref:System.Windows.Forms.TreeNode>, IList.IndexOf-metoden returnerar -1.</xref:System.Windows.Forms.TreeNode> Därför kan du inte kan lägga till i en sträng att söka efter den nod som har värdet för strängen som dess <xref:System.Windows.Forms.TreeNode.Text%2A>egenskap.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: int IList.IndexOf (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att hitta i samlingen."
    return:
      type: System.Int32
      description: "Det nollbaserade indexet för objektet som hittades i trädnodmängden; Annars, -1."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Infogar en befintlig trädnoden i trädnodmängden på den angivna platsen."
  remarks: "Om den <xref:System.Windows.Forms.TreeView.Sorted%2A>egenskapen `true`, `index` parametern ignoreras.</xref:System.Windows.Forms.TreeView.Sorted%2A> Den <xref:System.Windows.Forms.TreeNode>infogas i trädvyn och <xref:System.Web.UI.WebControls.TreeView>sorteras igen.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Insert (int index, object node);
    parameters:
    - id: index
      type: System.Int32
      description: "Indexerade plats i samlingen för att infoga trädnoden."
    - id: node
      type: System.Object
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att infoga i samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>för tillfället är tilldelad en annan <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>.       -or-       <code>node</code> is not a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar ett värde som anger om trädnodmängden har en fast storlek."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar eller anger trädnoden med det angivna indexet i samlingen."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Det nollbaserade indexet som du vill hämta eller ange objektet."
    return:
      type: System.Object
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> med det angivna indexet i den <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är inte en <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tar bort den angivna trädnoden från trädnodmängden."
  remarks: "Du kan inte godkännas i en sträng för att ta bort den nod som har värdet för strängen som dess <xref:System.Windows.Forms.TreeNode.Text%2A>egenskap.</xref:System.Windows.Forms.TreeNode.Text%2A>       När en <xref:System.Windows.Forms.TreeNode>tas bort från trädnodmängden alla efterföljande trädet noder flyttas upp en placering i samlingen.</xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Remove (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Den <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> att ta bort från samlingen."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.TreeNodeCollection.Count
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.TreeNodeCollection.Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Windows.Forms.TreeNodeCollection.AddRange*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: TreeNodeCollection.AddRange
- uid: System.Windows.Forms.TreeNodeCollection.Clear*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Windows.Forms.TreeNodeCollection.Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey
  nameWithType: TreeNodeCollection.ContainsKey
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Windows.Forms.TreeNodeCollection.Count*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find
  nameWithType: TreeNodeCollection.Find
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey
  nameWithType: TreeNodeCollection.IndexOfKey
- uid: System.Windows.Forms.TreeNodeCollection.Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeCollection.Insert
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Windows.Forms.TreeNodeCollection.Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey
  nameWithType: TreeNodeCollection.RemoveByKey
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TreeNodeCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TreeNodeCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove
