### YamlMime:ManagedReference
items:
- uid: System.Web.Management.BufferedWebEventProvider
  id: BufferedWebEventProvider
  children:
  - System.Web.Management.BufferedWebEventProvider.#ctor
  - System.Web.Management.BufferedWebEventProvider.BufferMode
  - System.Web.Management.BufferedWebEventProvider.Flush
  - System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  - System.Web.Management.BufferedWebEventProvider.Shutdown
  - System.Web.Management.BufferedWebEventProvider.UseBuffering
  langs:
  - csharp
  name: BufferedWebEventProvider
  nameWithType: BufferedWebEventProvider
  fullName: System.Web.Management.BufferedWebEventProvider
  type: Class
  summary: "Innehåller grundläggande funktion för att skapa providers för som kräver buffring."
  remarks: "Övervaka ASP.NET-hälsa kan produktions- och personal för att hantera distribuerade webbprogram. Den <xref:System.Web.Management>namnområde innehåller ansvarar för att paketera hälsostatus programdata och vilka provider ansvarar för bearbetning av dessa data hälsohändelse typer.</xref:System.Web.Management> Den innehåller också stödjande typer som hjälp vid hantering av hälsotillstånd händelser.       Om du vill anpassa den hälsa händelsebearbetningen härleds du från BufferedWebEventProvider klassen om du vill skapa en egen anpassad buffrat provider.      > [!NOTE] > I de flesta fall kommer du att kunna använda ASP.NET-hälsoövervakning typer som implementeras och du kommer att styra system för övervakning av hälsotillstånd genom att ange värden i den `healthMonitoring` konfigurationsavsnittet. Du kan också vara härledd från övervakning av hälsotillstånd-typer för att skapa dina egna anpassade händelser och leverantörer. Ett exempel på hur du skapar en anpassad provider, se [så här: Implementera hälsa övervakning anpassade providern exemplet](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to derive from the BufferedWebEventProvider class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._12_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._12_1.vb)]  \n  \n The following configuration file excerpt shows a `healthMonitoring` configuration section that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \n  \n```  \n<healthMonitoring    \n  heartBeatInterval=\"0\" enabled=\"true\">  \n  \n  <bufferModes>  \n    <add name =\"Custom Notification\"  \n      maxBufferSize=\"10\"  \n      maxFlushSize=\"5\"  \n      urgentFlushThreshold=\"10\"  \n      regularFlushInterval=\"Infinite\"  \n      urgentFlushInterval=\"00:00:30\"  \n      maxBufferThreads=\"1\"  \n/>  \n  </bufferModes>  \n  \n  <providers>  \n    <clear/>  \n    <add name=\"SampleBufferedWebEventProvider\"   \n      type=\"SamplesAspNet.SampleBufferedWebEventProvider, bufferedwebeventprovider, Version=1.0.1785.14700, Culture=neutral, PublicKeyToken=d31491bf33b55954, processorArchitecture=MSIL\"   \n      buffer=\"true\"  \n      bufferMode=\"Custom Notification\"  \n/>  \n  </providers>  \n  \n  <profiles>  \n    <add name=\"Custom\"   \n      minInstances=\"1\"   \n      maxLimit=\"Infinite\"   \n      minInterval=\"00:00:00\" />  \n  </profiles>  \n  \n  <rules>  \n    <clear />  \n      <add name=\"Custom Buffered Web Event Provider\"   \n        eventName=\"All Events\"  \n        provider=\"SampleBufferedWebEventProvider\"   \n        profile=\"Custom\" />  \n  </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public abstract class BufferedWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: BufferedWebEventProvider()
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()
  fullName: System.Web.Management.BufferedWebEventProvider.BufferedWebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Management.BufferedWebEventProvider&quot;> </xref> klass."
  remarks: "Den här konstruktorn används internt av ASP.NET-övervakning av hälsotillstånd system. Du använda aldrig den för att skapa en instans av ett <xref:System.Web.Management.TraceWebEventProvider>objekt, men du kan anropa den här konstruktorn när du implementerar din egen providertyp som ärver från den här klassen.</xref:System.Web.Management.TraceWebEventProvider>"
  example:
  - "The following code example shows how to use this constructor in a custom event provider.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#8](~/add/codesnippet/csharp/m-system.web.management._2_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#8](~/add/codesnippet/visualbasic/m-system.web.management._2_1.vb)]"
  syntax:
    content: protected BufferedWebEventProvider ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode
  id: BufferMode
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
  fullName: System.Web.Management.BufferedWebEventProvider.BufferMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hämtar ett värde som anger buffringsläget som används av providern."
  remarks: "Egenskapen BufferMode innehåller värdet som definieras av den `bufferMode` attribut i den `providers` element i den `healthMonitoring` avsnitt.       Följande konfigurationsfil utdrag visar hur namnet på buffringsläget ska vara definierat i på `healthMonitoring` avsnitt.      ```   <bufferModes>     <add name =&quot;Custom Notification&quot; />   </bufferModes>   ```"
  example:
  - "The following code example shows how to use the BufferMode property.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#4](~/add/codesnippet/csharp/p-system.web.management._7_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#4](~/add/codesnippet/visualbasic/p-system.web.management._7_1.vb)]"
  syntax:
    content: public string BufferMode { get; }
    return:
      type: System.String
      description: "Namnet på buffringsläget."
  overload: System.Web.Management.BufferedWebEventProvider.BufferMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: BufferedWebEventProvider.Flush()
  fullName: System.Web.Management.BufferedWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Flyttar händelser från leverantörens bufferten i händelseloggen."
  remarks: "När den här metoden anropas, alla händelser i bufferten omedelbart flyttas från bufferten till loggen, oavsett hur lång tid har förflutit sedan senaste skrivningen eller hur många händelser i bufferten. Tiden för den senaste skrivningen återställs med tiden för borttagning av buffertdatabas åtgärd."
  example:
  - "The following code example shows how to use the Flush method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#9](~/add/codesnippet/csharp/m-system.web.management._6_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#9](~/add/codesnippet/visualbasic/m-system.web.management._6_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: BufferedWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.BufferedWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Anger de ursprungliga värdena för det här objektet."
  remarks: "ASP.NET anropar initieringsmetoden efter att den <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A>konstruktor.</xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> Den här metoden anropas för att initiera den <xref:System.Web.Management.BufferedWebEventProvider>konfigurationsinställningar och namnet som angetts i konfigurationsfilen.</xref:System.Web.Management.BufferedWebEventProvider>"
  example:
  - "The following code example shows how to use the Initialize method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#2](~/add/codesnippet/csharp/71386fb2-b957-416a-92c4-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#2](~/add/codesnippet/visualbasic/71386fb2-b957-416a-92c4-_1.vb)]"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Namnet som används i konfigurationsfilen för att identifiera den här providern."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "En <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> som anger de attribut som tilldelats för den här providern i konfigurationsfilen."
  overload: System.Web.Management.BufferedWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Bearbetar händelsen skickas till leverantören."
  remarks: "Detta är den metod som att ASP.NET hälsoövervakning anrop till startar bearbetning av händelsen. Om buffring är aktiverad kan buffras händelseinformationen; Det är också skickas till den aktuella loggningsmekanism."
  example:
  - "The following code example shows how to implement the ProcessEvent method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#5](~/add/codesnippet/csharp/1be5baee-de85-48e1-93d3-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#5](~/add/codesnippet/visualbasic/1be5baee-de85-48e1-93d3-_1.vb)]"
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "Den <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> objekt-processen."
  overload: System.Web.Management.BufferedWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  id: ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: ProcessEventFlush(WebEventBufferFlushInfo)
  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Bearbetar buffertlagrade händelser."
  remarks: "Metoden ProcessEventFlush bearbetar meddelanden som har buffrats. ASP.NET-hälsoövervakning anropar metoden när lokaliseraren buffertens krävs. Intervall vid vilka lokaliseraren krävs bestäms av parametervärdet för den `bufferMode` attribut i den `providers` element i den `healthMonitoring` konfigurationsavsnittet."
  example:
  - "The following code example shows how to implement the ProcessEventFlush method.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#6](~/add/codesnippet/csharp/91081aab-0c9a-495a-a177-_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#6](~/add/codesnippet/visualbasic/91081aab-0c9a-495a-a177-_1.vb)]"
  syntax:
    content: public abstract void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);
    parameters:
    - id: flushInfo
      type: System.Web.Management.WebEventBufferFlushInfo
      description: "En <xref href=&quot;System.Web.Management.WebEventBufferFlushInfo&quot;> </xref> som innehåller buffrings information."
  overload: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: BufferedWebEventProvider.Shutdown()
  fullName: System.Web.Management.BufferedWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Utför uppgifter associerade med att stänga av providern."
  remarks: "ASP.NET anropar metoden avstängning när avslutar programdomänen som är värd för webbprogrammet. Metoden anropas för att utföra uppgifter som gör att programmet avslutas utan problem, till exempel stänger resurser."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.BufferedWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering
  id: UseBuffering
  parent: System.Web.Management.BufferedWebEventProvider
  langs:
  - csharp
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
  fullName: System.Web.Management.BufferedWebEventProvider.UseBuffering
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Hämtar ett värde som anger om providern är buffrat läge."
  remarks: "Egenskapen UseBuffering innehåller värdet som definieras av den `buffer` attribut i den `providers` element i den `healthMonitoring` avsnitt."
  example:
  - "The following code example shows how to use the UseBuffering property.  \n  \n [!code-cs[System.Web.Management.BufferedWebEventProvider#3](~/add/codesnippet/csharp/p-system.web.management._48_1.cs)]\n [!code-vb[System.Web.Management.BufferedWebEventProvider#3](~/add/codesnippet/visualbasic/p-system.web.management._48_1.vb)]"
  syntax:
    content: public bool UseBuffering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om leverantören är i läget buffrade. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Management.BufferedWebEventProvider.UseBuffering*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.BufferedWebEventProvider.#ctor
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferedWebEventProvider()
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider()
  fullName: System.Web.Management.BufferedWebEventProvider.BufferedWebEventProvider()
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
  fullName: System.Web.Management.BufferedWebEventProvider.BufferMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.BufferedWebEventProvider.Flush
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: BufferedWebEventProvider.Flush()
  fullName: System.Web.Management.BufferedWebEventProvider.Flush()
- uid: System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: BufferedWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.BufferedWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEventFlush(WebEventBufferFlushInfo)
  nameWithType: BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
  fullName: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(WebEventBufferFlushInfo)
- uid: System.Web.Management.WebEventBufferFlushInfo
  parent: System.Web.Management
  isExternal: false
  name: WebEventBufferFlushInfo
  nameWithType: WebEventBufferFlushInfo
  fullName: System.Web.Management.WebEventBufferFlushInfo
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: BufferedWebEventProvider.Shutdown()
  fullName: System.Web.Management.BufferedWebEventProvider.Shutdown()
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
  fullName: System.Web.Management.BufferedWebEventProvider.UseBuffering
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Management.BufferedWebEventProvider.#ctor*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferedWebEventProvider
  nameWithType: BufferedWebEventProvider.BufferedWebEventProvider
- uid: System.Web.Management.BufferedWebEventProvider.BufferMode*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: BufferMode
  nameWithType: BufferedWebEventProvider.BufferMode
- uid: System.Web.Management.BufferedWebEventProvider.Flush*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: BufferedWebEventProvider.Flush
- uid: System.Web.Management.BufferedWebEventProvider.Initialize*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: BufferedWebEventProvider.Initialize
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEvent*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: BufferedWebEventProvider.ProcessEvent
- uid: System.Web.Management.BufferedWebEventProvider.ProcessEventFlush*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: ProcessEventFlush
  nameWithType: BufferedWebEventProvider.ProcessEventFlush
- uid: System.Web.Management.BufferedWebEventProvider.Shutdown*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: BufferedWebEventProvider.Shutdown
- uid: System.Web.Management.BufferedWebEventProvider.UseBuffering*
  parent: System.Web.Management.BufferedWebEventProvider
  isExternal: false
  name: UseBuffering
  nameWithType: BufferedWebEventProvider.UseBuffering
