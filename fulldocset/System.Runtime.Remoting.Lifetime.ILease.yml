### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime.ILease
  id: ILease
  children:
  - System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime
  - System.Runtime.Remoting.Lifetime.ILease.CurrentState
  - System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime
  - System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)
  - System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)
  - System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)
  - System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime
  - System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout
  - System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)
  langs:
  - csharp
  name: ILease
  nameWithType: ILease
  fullName: System.Runtime.Remoting.Lifetime.ILease
  type: Interface
  summary: "Definierar ett livstid lease-objekt som används av fjärrtjänsten för livslängd."
  remarks: "Distribuerad skräp samling kontroller när serverprogram kan tas bort. Traditionellt använder distribuerade skräpinsamling antalet referenser och pinga för kontrollen. Det fungerar bra om det inte finns några klienter per objekt, men fungerar inte bra när det finns tusentals klienter per varje objekt. Tjänsten livstid kan anta funktionen för en traditionell distribuerade skräpinsamlingen och skalar bra när du ökar antalet klienter.       Tjänsten livstid associerar ett lån med varje via fjärranslutning aktiverad objekt. När lånet går ut tas objektet bort. Ett lån kan ange att ett objekt har en oändlig livstid.       Varje <xref:System.AppDomain>innehåller ett lån manager som administrerar lån i domänen.</xref:System.AppDomain> Hanteraren för lånet undersöker regelbundet lån för tid upphör att gälla. Om ett lån har gått ut, kan det antingen vara avbröts genom att ta bort referensen till lånet eller förnyas genom att anropa en eller flera av de lån sponsorer.       Ett lån innehåller egenskaper som anger dess principer och metoder som förnyar lånetid. Lånet visar ILease-gränssnitt.       Ett exempel som visar hur du använder gränssnittet ILease finns [livslängd](http://msdn.microsoft.com/en-us/334a30e5-33cb-4f0f-a38a-ed4abc5560fa)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ILease
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime
  id: CurrentLeaseTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: CurrentLeaseTime
  nameWithType: ILease.CurrentLeaseTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Hämtar tidsperiod som är kvar på lånet."
  syntax:
    content: public TimeSpan CurrentLeaseTime { get; }
    return:
      type: System.TimeSpan
      description: "Hur lång tid som återstår på lånet."
  overload: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentState
  id: CurrentState
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: CurrentState
  nameWithType: ILease.CurrentState
  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Hämtar aktuellt <xref href=&quot;System.Runtime.Remoting.Lifetime.LeaseState&quot;> </xref> av lånet."
  syntax:
    content: public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "Aktuellt <xref href=&quot;System.Runtime.Remoting.Lifetime.LeaseState&quot;> </xref> av lånet."
  overload: System.Runtime.Remoting.Lifetime.ILease.CurrentState*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime
  id: InitialLeaseTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: InitialLeaseTime
  nameWithType: ILease.InitialLeaseTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Hämtar eller anger starttiden för lånet."
  remarks: "Om InitialLeaseTime-egenskapen anges till <xref:System.TimeSpan?displayProperty=fullName>, lånet ska aldrig timeout och objekt som är associerade med den har en oändlig livstid.</xref:System.TimeSpan?displayProperty=fullName>"
  syntax:
    content: public TimeSpan InitialLeaseTime { get; set; }
    return:
      type: System.TimeSpan
      description: "Starttiden för lånet."
  overload: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)
  id: Register(System.Runtime.Remoting.Lifetime.ISponsor)
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: Register(ISponsor)
  nameWithType: ILease.Register(ISponsor)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Registrerar en sponsor för lånet utan förnyas."
  remarks: "Om en sponsor registreras med den aktuella metoden förnyas lånet inte."
  syntax:
    content: public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);
    parameters:
    - id: obj
      type: System.Runtime.Remoting.Lifetime.ISponsor
      description: "Objektet med sponsorn återanrop."
  overload: System.Runtime.Remoting.Lifetime.ILease.Register*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)
  id: Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: Register(ISponsor,TimeSpan)
  nameWithType: ILease.Register(ISponsor,TimeSpan)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Registrerar en sponsor för lånet och förnyas genom den angivna <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  syntax:
    content: public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);
    parameters:
    - id: obj
      type: System.Runtime.Remoting.Lifetime.ISponsor
      description: "Objektet med sponsorn återanrop."
    - id: renewalTime
      type: System.TimeSpan
      description: "Hur lång tid att förnya lånet av."
  overload: System.Runtime.Remoting.Lifetime.ILease.Register*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)
  id: Renew(System.TimeSpan)
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: Renew(TimeSpan)
  nameWithType: ILease.Renew(TimeSpan)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Renew(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Förnyar ett lån för den angivna tiden."
  remarks: "Lånetiden anges till högst den <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>eller den aktuella tiden plus tid för förnyelse.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>"
  syntax:
    content: public TimeSpan Renew (TimeSpan renewalTime);
    parameters:
    - id: renewalTime
      type: System.TimeSpan
      description: "Hur lång tid att förnya lånet av."
    return:
      type: System.TimeSpan
      description: "Nya förfallotiden för lånet."
  overload: System.Runtime.Remoting.Lifetime.ILease.Renew*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime
  id: RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: RenewOnCallTime
  nameWithType: ILease.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Hämtar eller anger hur lång tid som ett anrop till fjärrobjektet förnyar <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*>.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*>"
  remarks: "När du gör ett anrop till ett fjärrobjekt livstid-tjänsten lägger till RenewOnCallTime till den <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>bara om den <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>har fallit under RenewOnCallTime.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> </xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> Därför inte ökar sekventiella anrop av <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>utan gräns.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> I stället omedelbart efter att alla anrop av <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>är garanterad ska RenewOnCallTime- eller längre.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A>"
  syntax:
    content: public TimeSpan RenewOnCallTime { get; set; }
    return:
      type: System.TimeSpan
      description: "Hur lång tid som ett anrop till fjärrobjektet förnyar <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*>.</xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*>"
  overload: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout
  id: SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: SponsorshipTimeout
  nameWithType: ILease.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Hämtar eller anger hur lång tid att vänta på en sponsor att returnera med Förnyelsetiden för lånet."
  remarks: "Om SponsorshipTimeout är <xref:System.TimeSpan?displayProperty=fullName>, och sedan sponsorer inte träder i den här lån.</xref:System.TimeSpan?displayProperty=fullName>       Om en sponsor inte svarar på ett anrop för att förnya ett lån inom tidsgränsen, antas vara döda och tas bort från listan över sponsorer för det aktuella lånet."
  syntax:
    content: public TimeSpan SponsorshipTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Hur lång tid att vänta på en sponsor att returnera med Förnyelsetiden för lånet."
  overload: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)
  id: Unregister(System.Runtime.Remoting.Lifetime.ISponsor)
  parent: System.Runtime.Remoting.Lifetime.ILease
  langs:
  - csharp
  name: Unregister(ISponsor)
  nameWithType: ILease.Unregister(ISponsor)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Unregister(ISponsor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Tar bort en sponsor sponsor-listan."
  syntax:
    content: public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);
    parameters:
    - id: obj
      type: System.Runtime.Remoting.Lifetime.ISponsor
      description: "Lånet sponsor att avregistrera."
  overload: System.Runtime.Remoting.Lifetime.ILease.Unregister*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Omedelbar anropare gör anrop till en referens till gränssnittet och har inte behörighet för infrastruktur."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: CurrentLeaseTime
  nameWithType: ILease.CurrentLeaseTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentState
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: CurrentState
  nameWithType: ILease.CurrentState
  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentState
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
- uid: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: InitialLeaseTime
  nameWithType: ILease.InitialLeaseTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime
- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Register(ISponsor)
  nameWithType: ILease.Register(ISponsor)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor)
- uid: System.Runtime.Remoting.Lifetime.ISponsor
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: ISponsor
  nameWithType: ISponsor
  fullName: System.Runtime.Remoting.Lifetime.ISponsor
- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Register(ISponsor,TimeSpan)
  nameWithType: ILease.Register(ISponsor,TimeSpan)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor,TimeSpan)
- uid: System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Renew(TimeSpan)
  nameWithType: ILease.Renew(TimeSpan)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Renew(TimeSpan)
- uid: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: RenewOnCallTime
  nameWithType: ILease.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: ILease.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout
- uid: System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Unregister(ISponsor)
  nameWithType: ILease.Unregister(ISponsor)
  fullName: System.Runtime.Remoting.Lifetime.ILease.Unregister(ISponsor)
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: CurrentLeaseTime
  nameWithType: ILease.CurrentLeaseTime
- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentState*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: CurrentState
  nameWithType: ILease.CurrentState
- uid: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: InitialLeaseTime
  nameWithType: ILease.InitialLeaseTime
- uid: System.Runtime.Remoting.Lifetime.ILease.Register*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Register
  nameWithType: ILease.Register
- uid: System.Runtime.Remoting.Lifetime.ILease.Renew*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Renew
  nameWithType: ILease.Renew
- uid: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: RenewOnCallTime
  nameWithType: ILease.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: ILease.SponsorshipTimeout
- uid: System.Runtime.Remoting.Lifetime.ILease.Unregister*
  parent: System.Runtime.Remoting.Lifetime.ILease
  isExternal: false
  name: Unregister
  nameWithType: ILease.Unregister
