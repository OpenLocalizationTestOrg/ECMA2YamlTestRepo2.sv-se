### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceSet
  id: ResourceSet
  children:
  - System.Resources.ResourceSet.#ctor
  - System.Resources.ResourceSet.#ctor(System.IO.Stream)
  - System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  - System.Resources.ResourceSet.#ctor(System.String)
  - System.Resources.ResourceSet.Close
  - System.Resources.ResourceSet.Dispose
  - System.Resources.ResourceSet.Dispose(System.Boolean)
  - System.Resources.ResourceSet.GetDefaultReader
  - System.Resources.ResourceSet.GetDefaultWriter
  - System.Resources.ResourceSet.GetEnumerator
  - System.Resources.ResourceSet.GetObject(System.String)
  - System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  - System.Resources.ResourceSet.GetString(System.String)
  - System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  - System.Resources.ResourceSet.Reader
  - System.Resources.ResourceSet.ReadResources
  - System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResourceSet.Table
  langs:
  - csharp
  name: ResourceSet
  nameWithType: ResourceSet
  fullName: System.Resources.ResourceSet
  type: Class
  summary: "Lagrar alla resurser på en viss kultur, ignoreras alla andra kulturer, inklusive eventuella regler som reserv.       **Säkerhetsmeddelande**: anropa metoder i den här klassen med data som inte är betrodd utgör en säkerhetsrisk. Anropa metoder i klassen bara med betrodda data. Mer information finns i [obetrodda Data säkerhetsrisker](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)."
  remarks: "Klassen ResourceSet räknar över en <xref:System.Resources.IResourceReader>inläsning av alla namn och värde, och lagrar dem i <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Resources.IResourceReader> En anpassad <xref:System.Resources.IResourceReader>kan användas.</xref:System.Resources.IResourceReader>       Du kan skapa en instans av ett ResourceSet-objekt som representerar resurserna i en specifik kultur genom att anropa den <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>metoden.</xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>      > [!IMPORTANT] > Den här typen implementerar den <xref:System.IDisposable>gränssnitt.</xref:System.IDisposable> När du är klar med typ, ta bort den direkt eller indirekt. Om du vill ta bort av typen direkt, anropa dess <xref:System.IDisposable.Dispose%2A>metod i en `try` / `catch` block.</xref:System.IDisposable.Dispose%2A> Om du vill ta hand om den indirekt, använda en språk-konstruktion som `using` (i C#) eller `Using` (i Visual Basic). Mer information finns i avsnittet &quot;Med hjälp av ett objekt som implementerar IDisposable&quot; i den <xref:System.IDisposable>gränssnittet avsnittet.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResourceSet : IDisposable, System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor
  id: '#ctor'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Initierar en ny instans av den <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> klass med standardegenskaper."
  syntax:
    content: protected ResourceSet ();
    parameters: []
  overload: System.Resources.ResourceSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Skapar en ny instans av den <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> klassen använder som standard <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> som läser resurser från den angivna dataströmmen."
  syntax:
    content: public ResourceSet (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Den <xref:System.IO.Stream>av resurser som ska läsas.</xref:System.IO.Stream> Dataströmmen ska hänvisa till en befintlig fil med resurser."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> stream </code> kan inte läsas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  id: '#ctor(System.Resources.IResourceReader)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Skapar en ny instans av den <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> klassen med hjälp av den angivna resurs-läsaren."
  remarks: "Du kan använda den här konstruktorn för att stödja anpassade resursen format med hjälp av en som användaren tillhandahållit <xref:System.Resources.IResourceReader>.</xref:System.Resources.IResourceReader>"
  syntax:
    content: public ResourceSet (System.Resources.IResourceReader reader);
    parameters:
    - id: reader
      type: System.Resources.IResourceReader
      description: "Läsaren som ska användas."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Skapar en ny instans av den <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> klassen använder som standard <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> som öppnar och läser resurser från den angivna filen."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_2_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_2_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_2_1.vb)]"
  syntax:
    content: public ResourceSet (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Resursfilen att läsa."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Close
  id: Close
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Stänger och frigör alla resurser som används av det här <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "Alla anrop till metoder på det <xref:System.Resources.ResourceSet>efter ett anrop till den här metoden kan misslyckas.</xref:System.Resources.ResourceSet>       Stäng kan på ett säkert sätt anropas flera gånger.      > [!NOTE] > Den aktuella implementationen av Stäng anrop <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  example:
  - "The following code example uses the Close method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_15_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_15_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_15_1.vb)]"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Resources.ResourceSet.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose
  id: Dispose
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Omhändertar resurser (andra än minne) som används av den aktuella instansen av <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "När <xref:System.Resources.ResourceSet.Dispose%2A>du är klar med hjälp av <xref:System.Resources.ResourceSet>.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> Den <xref:System.Resources.ResourceSet.Dispose%2A>metoden lämnar kvar det <xref:System.Resources.ResourceSet>oanvändbar.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> När du anropar <xref:System.Resources.ResourceSet.Dispose%2A>, måste du släppa alla referenser till den <xref:System.Resources.ResourceSet>så att det minne som den använder kan frigöras genom skräpinsamling.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A>      > [!NOTE] > Den aktuella metoden är implementering av <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName> Den här implementeringen anropar <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Frigör resurser (andra än minne) som är associerade med den aktuella instansen stänger internt hanterade objekt begäran."
  remarks: "Om den `dispose` parametern är `true`, den aktuella metoden Frigör alla resurser som är associerade med den samt med alla associerade objekt. Om `dispose` är `false`, den aktuella metoden frigörs de resurser som tilldelats och ignorerar eventuella objekt som hör till den."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Anger om objekt i den aktuella instansen bör stängas explicit."
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultReader
  id: GetDefaultReader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Returnerar önskade reader resursklassen för denna typ av <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultReader ();
    parameters: []
    return:
      type: System.Type
      description: "Returnerar den <xref:System.Type>för läsaren Föredragen resurs för den här typen av <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultReader*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultWriter
  id: GetDefaultWriter
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Returnerar önskade writer resursklassen för denna typ av <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultWriter ();
    parameters: []
    return:
      type: System.Type
      description: "Returnerar den <xref:System.Type>för önskad Resursskrivaren för den här typen av <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Returnerar en <xref:System.Collections.IDictionaryEnumerator>som kan gå igenom den <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "Uppräknare tillåter endast läsning av data i samlingen. Uppräknare kan inte användas för att ändra den underliggande mängden.       Inledningsvis har uppräknaren placerats före det första elementet i mängden. <xref:System.Collections.IEnumerator.Reset%2A>medför också uppräknaren tillbaka till den här positionen.</xref:System.Collections.IEnumerator.Reset%2A> AT detta position, anropar <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> Därför måste du anropa <xref:System.Collections.IEnumerator.MoveNext%2A>att avancera uppräknaren till det första elementet i mängden innan du läser värdet för <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>returnerar samma objekt förrän antingen <xref:System.Collections.IEnumerator.MoveNext%2A>eller <xref:System.Collections.IEnumerator.Reset%2A>kallas.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Anger <xref:System.Collections.IEnumerator.Current%2A>till nästa element.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Efter slutet av samlingen skickas uppräknaren är placerad efter det sista elementet i mängden och anropar <xref:System.Collections.IEnumerator.MoveNext%2A>returnerar `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Om senast anropet till <xref:System.Collections.IEnumerator.MoveNext%2A>returnerade `false`, anropa <xref:System.Collections.IEnumerator.Current%2A>genererar ett undantag.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Ange <xref:System.Collections.IEnumerator.Current%2A>att det första elementet i mängden igen, kan du anropa <xref:System.Collections.IEnumerator.Reset%2A>följt av <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       En uppräknare är giltig så länge samlingen förblir oförändrad. Om ändringar görs i samlingen, till exempel lägga till, ändra eller ta bort element uppräknaren är blir inaktuella och nästa anropa eller <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>genererar <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Om samlingen har ändrats mellan <xref:System.Collections.IEnumerator.MoveNext%2A>och <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>returnerar elementet som den är inställd på, även om uppräknaren redan är ogiltiga.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Du kan använda den <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName>egenskapen åtkomst till det värde som lagras i det aktuella elementet.</xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName> Använd den <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName>egenskapen åtkomst till nyckeln för det aktuella elementet.</xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName> Använd den <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>egenskapen till värdet för det aktuella elementet.</xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>       Uppräknaren har inte exklusiv åtkomst till samlingen; uppräkning av en samling är därför är inte en trådsäker procedur. Även när en samling har synkroniserats, kan andra trådar fortfarande ändra samlingen, vilket gör att uppräknaren att utlösa ett undantag. För att garantera tråd under uppräkning, kan du låsa samlingen under hela uppräkning eller fånga undantag som uppstår till följd av ändringar som gjorts av andra trådar."
  example:
  - "The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`. Next, the GetEnumerator method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`. The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_5_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_5_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_5_1.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for this <xref href=&quot;System.Resources.ResourceSet&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Resources.ResourceSet.GetEnumerator*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "I resursuppsättningen har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String)
  id: GetObject(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Söker efter en resursobjektet med det angivna namnet."
  remarks: "Namnet på resursobjektet är skiftlägeskänsligt. Använd <xref:System.Resources.ResourceSet.GetObject%2A>.</xref:System.Resources.ResourceSet.GetObject%2A> för en icke skiftlägeskänslig sökning"
  syntax:
    content: public virtual object GetObject (string name);
    parameters:
    - id: name
      type: System.String
      description: "Skiftlägeskänsliga namn av resursen ska söka efter."
    return:
      type: System.Object
      description: "Den begärda resursen."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  id: GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Söker efter en resursobjektet med det angivna namnet på ett sätt som inte är skiftlägeskänsliga om begärt."
  remarks: "Om värdet för den `ignoreCase` parametern är `true`, motsvarar en resurs med namnet &quot;Resurser&quot; resursen med namnet &quot;resurser&quot;. Observera att den här metoden alltid utförs skiftlägeskänsliga strängjämförelser med <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Fördelen är att resultaten av skiftlägeskänsliga strängjämförelser som utförs av den här metoden är samma på alla datorer oavsett kultur. Nackdelen är att resultatet inte är konsekventa med skiftläge reglerna för alla kulturer.       Turkiska alfabetet har till exempel två versioner av tecknet I: en med en punkt och utan en punkt. Turkiska tecknet jag (Unicode 0049) anses versaler version av ett annat tecken ı (Unicode 0131). Tecknet i (Unicode 0069) anses vara en gemen version av ännu en tecken İ (Unicode 0130). Enligt reglerna skiftläge, en icke-skiftlägeskänsliga strängjämförelse tecken i (Unicode 0069) och I (Unicode 0049) ska misslyckas för kulturen &quot;tr-TR&quot; (Turkisk i Turkiet). Med hjälp av den `GetObject` metod med `ignoreCase` inställd på `true`, jämförelsen lyckas."
  syntax:
    content: public virtual object GetObject (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på resursen ska söka efter."
    - id: ignoreCase
      type: System.Boolean
      description: "Anger om skiftläget för det angivna namnet bör ignoreras."
    return:
      type: System.Object
      description: "Den begärda resursen."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String)
  id: GetString(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Söker efter en <xref:System.String>resurs med det angivna namnet.</xref:System.String>"
  syntax:
    content: public virtual string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på resursen ska söka efter."
    return:
      type: System.String
      description: "Värdet för en resurs, om värdet är ett <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Resursen som anges av <code> name </code> är inte en <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  id: GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Söker efter en <xref:System.String>resurs med det angivna namnet på ett icke-skiftlägeskänsliga sätt om begärt.</xref:System.String>"
  remarks: "Om värdet för den `ignoreCase` parametern är `true`, motsvarar en resurs med namnet &quot;Resurser&quot; resursen med namnet &quot;resurser&quot;. Observera att den här metoden alltid utförs skiftlägeskänsliga strängjämförelser med <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Fördelen är att resultaten av skiftlägeskänsliga strängjämförelser som utförs av den här metoden är samma på alla datorer oavsett kultur. Nackdelen är att resultatet inte är konsekventa med skiftläge reglerna för alla kulturer.       Turkiska alfabetet har till exempel två versioner av tecknet I: en med en punkt och utan en punkt. Turkiska tecknet jag (Unicode 0049) anses versaler version av ett annat tecken ı (Unicode 0131). Tecknet i (Unicode 0069) anses vara en gemen version av ännu en tecken İ (Unicode 0130). Enligt reglerna skiftläge, en icke-skiftlägeskänsliga strängjämförelse tecken i (Unicode 0069) och I (Unicode 0049) ska misslyckas för kulturen &quot;tr-TR&quot; (Turkisk i Turkiet). Med hjälp av den `GetString` metod med `ignoreCase` inställd på `true`, jämförelsen lyckas."
  syntax:
    content: public virtual string GetString (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på resursen ska söka efter."
    - id: ignoreCase
      type: System.Boolean
      description: "Anger om gällert skiftläget för det angivna namnet bör ignoreras."
    return:
      type: System.String
      description: "Värdet för en resurs, om värdet är ett <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Resursen som anges av <code> name </code> är inte en <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Objektet har stängts eller tagits bort."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Reader
  id: Reader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Anger den <xref href=&quot;System.Resources.IResourceReader&quot;> </xref> används för att läsa resurser."
  syntax:
    content: protected System.Resources.IResourceReader Reader;
    return:
      type: System.Resources.IResourceReader
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.ReadResources
  id: ReadResources
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Läser alla resurser och lagrar dem i en <xref href=&quot;System.Collections.Hashtable&quot;> </xref> som anges i den <xref href=&quot;System.Resources.ResourceSet.Table&quot;> </xref> egenskapen."
  syntax:
    content: protected virtual void ReadResources ();
    parameters: []
  overload: System.Resources.ResourceSet.ReadResources*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Returnerar ett <xref:System.Collections.IEnumerator>objekt för att undvika ett konkurrenstillstånd med <xref uid=&quot;langword_csharp_Dispose&quot; name=&quot;Dispose&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IEnumerator> Den här medlemmen är inte avsedd att användas direkt från din kod."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "En uppräknare för aktuellt <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> objekt."
  overload: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Table
  id: Table
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Den <xref href=&quot;System.Collections.Hashtable&quot;> </xref> i resurserna som är lagrade."
  syntax:
    content: protected System.Collections.Hashtable Table;
    return:
      type: System.Collections.Hashtable
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResourceSet.#ctor
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
- uid: System.Resources.IResourceReader
  parent: System.Resources
  isExternal: false
  name: IResourceReader
  nameWithType: IResourceReader
  fullName: System.Resources.IResourceReader
- uid: System.Resources.ResourceSet.#ctor(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceSet.Close
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
- uid: System.Resources.ResourceSet.Dispose
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceSet.GetDefaultReader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Resources.ResourceSet.GetDefaultWriter
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
- uid: System.Resources.ResourceSet.GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResourceSet.GetObject(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
- uid: System.Resources.ResourceSet.GetString(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
- uid: System.Resources.ResourceSet.Reader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
- uid: System.Resources.ResourceSet.ReadResources
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResourceSet.Table
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Resources.ResourceSet.#ctor*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet
  nameWithType: ResourceSet.ResourceSet
- uid: System.Resources.ResourceSet.Close*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close
  nameWithType: ResourceSet.Close
- uid: System.Resources.ResourceSet.Dispose*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose
  nameWithType: ResourceSet.Dispose
- uid: System.Resources.ResourceSet.GetDefaultReader*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader
  nameWithType: ResourceSet.GetDefaultReader
- uid: System.Resources.ResourceSet.GetDefaultWriter*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter
  nameWithType: ResourceSet.GetDefaultWriter
- uid: System.Resources.ResourceSet.GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceSet.GetEnumerator
- uid: System.Resources.ResourceSet.GetObject*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject
  nameWithType: ResourceSet.GetObject
- uid: System.Resources.ResourceSet.GetString*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString
  nameWithType: ResourceSet.GetString
- uid: System.Resources.ResourceSet.ReadResources*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources
  nameWithType: ResourceSet.ReadResources
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator
