### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataReader
  id: SqlDataReader
  children:
  - System.Data.SqlClient.SqlDataReader.Close
  - System.Data.SqlClient.SqlDataReader.Connection
  - System.Data.SqlClient.SqlDataReader.Depth
  - System.Data.SqlClient.SqlDataReader.FieldCount
  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetEnumerator
  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSchemaTable
  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.HasRows
  - System.Data.SqlClient.SqlDataReader.IsClosed
  - System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  - System.Data.SqlClient.SqlDataReader.Item(System.String)
  - System.Data.SqlClient.SqlDataReader.NextResult
  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Read
  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.RecordsAffected
  - System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  langs:
  - csharp
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
  type: Class
  summary: "Kan läsa en endast-framåt-dataström med rader från en SQL Server-databas. Den här klassen kan inte ärvas."
  remarks: "Om du vill skapa en SqlDataReader måste du anropa den <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>metod för den <xref:System.Data.SqlClient.SqlCommand>objektet i stället för direkt med en konstruktor.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       Medan SqlDataReader används den associerade <xref:System.Data.SqlClient.SqlConnection>är upptagen betjänar SqlDataReader, och inga andra åtgärder kan utföras på den <xref:System.Data.SqlClient.SqlConnection>andra än stänger det.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection> I så fall förrän den <xref:System.Data.SqlClient.SqlDataReader.Close%2A>SqlDataReader-metoden anropas.</xref:System.Data.SqlClient.SqlDataReader.Close%2A> T.ex, kan inte du hämta utdataparametrar tills när du anropar <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>       Ändringar som gjorts i en resultatuppsättning med en annan process eller tråd när data läses kan vara synliga för användare av den `SqlDataReader`. Dock beteendet exakt timing beroende.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>och <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>endast egenskaper som kan anropas när SqlDataReader har stängts.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> Även om den <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>egenskapen kanske alltid nås medan SqlDataReader finns anropa <xref:System.Data.SqlClient.SqlDataReader.Close%2A>innan det returneras värdet för <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>att garantera en korrekt returvärde.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>       När du använder sekventiell åtkomst (<xref:System.Data.CommandBehavior?displayProperty=fullName>), en <xref:System.InvalidOperationException>aktiveras om SqlDataReader positionen är en avancerad och en annan läsa åtgärden utförs på föregående kolumn.</xref:System.InvalidOperationException> </xref:System.Data.CommandBehavior?displayProperty=fullName>      > [!NOTE] > För optimala prestanda SqlDataReader undviker att skapa onödiga objekt eller göra onödiga kopior av data. Därför flera anrop till metoder som <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>returnera en referens till samma objekt.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> Var försiktig om du ändrar det bakomliggande värdet för objekten som returneras av metoder som <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a SqlDataReader. The example reads through the data, writing it out to the console window. The code then closes the SqlDataReader. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._3_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._3_1.vb)]"
  syntax:
    content: 'public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.ReadAsync
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Close
  id: Close
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Stänger den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> objekt."
  remarks: "Du måste explicit anropa metoden Close när du är klar med den <xref:System.Data.SqlClient.SqlDataReader>att använda den associerade <xref:System.Data.SqlClient.SqlConnection>i något annat syfte.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataReader>       Den `Close` metoden fyller i värden för utdataparametrar returvärden och `RecordsAffected`, ökar den tid det tar för att stänga en `SqlDataReader` som användes för att bearbeta stora eller komplicerade frågan. När returvärden och antalet poster som påverkas av en fråga inte är betydande, den tid det tar för att stänga den `SqlDataReader` kan minskas genom att anropa den <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>metod för den associerade <xref:System.Data.SqlClient.SqlCommand>objektet innan du anropar den `Close` metoden.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.Cancel%2A>      > [!CAUTION] > Anropar inte `Close` eller `Dispose` på en anslutning, en DataReader eller andra hanterat objekt i den `Finalize` -metoden i klassen. Du bör endast släpper ohanterade resurser som din klass äger direkt i en slutföraren. Om klassen inte äger ohanterade resurser innehåller inte en `Finalize` metod i klassdefinition. Mer information finns i [skräpinsamling](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._11_1.vb)]\n [!code-cs[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._11_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som är associerade med den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  syntax:
    content: protected System.Data.SqlClient.SqlConnection Connection { get; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "Den <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> som är associerade med den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Depth
  id: Depth
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar ett värde som anger Nivådjupet för den aktuella raden."
  remarks: "Den yttersta tabellen har ett djup på noll. .NET Framework Data Provider för SQL Server stöder inte kapslade och returnerar alltid noll."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Djupet kapslingsnivåer för den aktuella raden."
  overload: System.Data.SqlClient.SqlDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  id: FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar antalet kolumner i den aktuella raden."
  remarks: "Köra en fråga som till sin natur inte returnerar rader (till exempel en fråga) anger FieldCount till 0. Men. Detta ska inte förväxlas med en fråga som returnerar 0 rader (till exempel väljer \\* från *tabell* där 1 = 2) i vilket fall FieldCount returnerar antalet kolumner i tabellen, samt dolda fält. Använd <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>för att utesluta dolda fält.</xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "När den inte placeras i en giltig postuppsättning 0; Annars antalet kolumner i den aktuella raden. Standardvärdet är -1."
  overload: System.Data.SqlClient.SqlDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Det finns inte någon anslutning till en instans av SQL Server."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett booleskt värde."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett booleskt värde eller ett undantag genereras.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Boolean
      description: "Värdet för kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en byte."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en byte.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Byte
      description: "Värdet för den angivna kolumnen som en byte."
  overload: System.Data.SqlClient.SqlDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Läser in en dataström med byte från den angivna kolumn förskjutningen i en matris som börjar vid den angivna buffertförskjutningen bufferten."
  remarks: "GetBytes returnerar antalet tillgängliga byte i fältet. I de flesta fall är detta den exakta längden för fältet. Dock tal som returneras kan vara mindre än true längden för fältet om `GetBytes` redan har använts för att hämta byte från fältet. Detta kan vara fallet, till exempel om den <xref:System.Data.SqlClient.SqlDataReader>läser en struktur för stora mängder data i en buffert.</xref:System.Data.SqlClient.SqlDataReader> Mer information finns i `SequentialAccess` inställning för <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Om du skickar en buffert som `null`, GetBytes returnerar längden på hela fältet i byte, inte återstående storlek baserat på parametern buffer offset.       Inga konverteringar utförs; data som hämtats måste därför redan vara en byte-matris."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    - id: dataIndex
      type: System.Int64
      description: "Det index i fältet från vilket Läsåtgärden."
    - id: buffer
      type: System.Byte[]
      description: "Den buffert som att läsa dataström med byte."
    - id: bufferIndex
      type: System.Int32
      description: "Indexet i den `buffer` där åtgärden är att starta."
    - id: length
      type: System.Int32
      description: "Den maximala längden ska kopieras till bufferten."
    return:
      type: System.Int64
      description: "Det faktiska antalet lästa byte."
  overload: System.Data.SqlClient.SqlDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett enskilt tecken."
  remarks: "Stöds inte för <xref:System.Data.SqlClient>.</xref:System.Data.SqlClient>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Char
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Läser in en dataström med tecken från den angivna kolumn förskjutningen i bufferten som en matris som börjar vid buffertförskjutningen för angivna."
  remarks: "GetChars returnerar antalet tillgängliga tecken i fältet. Det här är ofta exakt längden för fältet. Dock tal som returneras kan vara mindre än true längden för fältet om `GetChars` har redan använts tecknen ska hämtas från fältet. Detta kan vara fallet, till exempel om den <xref:System.Data.SqlClient.SqlDataReader>läser en struktur för stora mängder data i en buffert.</xref:System.Data.SqlClient.SqlDataReader> Mer information finns i `SequentialAccess` inställning för <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Det faktiska antalet tecken som läsa kan vara mindre än den begärda längden om fältet är slut. Om du skickar en buffert som `null`, GetChars returnerar längden på hela fältet i tecken, inte återstående storlek baserat på parametern buffer offset.       Inga konverteringar utförs; därför. data som hämtats måste redan vara en matris med tecken.      > [!NOTE] > I GetChars metoden returnerar 0 när `dataIndex` är negativt."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    - id: dataIndex
      type: System.Int64
      description: "Det index i fältet från vilket Läsåtgärden."
    - id: buffer
      type: System.Char[]
      description: "Den buffert som att läsa dataström med byte."
    - id: bufferIndex
      type: System.Int32
      description: "Indexet i den `buffer` där åtgärden är att starta."
    - id: length
      type: System.Int32
      description: "Den maximala längden ska kopieras till bufferten."
    return:
      type: System.Int64
      description: "Läs det faktiska antalet tecken."
  overload: System.Data.SqlClient.SqlDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar en sträng som representerar datatypen för den angivna kolumnen."
  remarks: "Returnerar namnet på backend-datatypen.       `numeric`är en synonym i SQL Server för den `decimal` datatyp. `GetDataTypeName`&quot;decimal&quot; för en kolumn som har definierats som decimal eller numeric returnerar."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Nollbaserade ordningstalspositionen för kolumnen för att hitta."
    return:
      type: System.String
      description: "Strängen som motsvarar datatypen för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett <xref:System.DateTime>objekt.</xref:System.DateTime>"
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en <xref:System.DateTime>objektet.</xref:System.DateTime>       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.DateTime
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett <xref:System.DateTimeOffset>objekt.</xref:System.DateTimeOffset>"
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en <xref:System.DateTimeOffset>objektet.</xref:System.DateTimeOffset>       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual DateTimeOffset GetDateTimeOffset (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.DateTimeOffset
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett <xref:System.Decimal>objekt.</xref:System.Decimal>"
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en <xref:System.Decimal>objektet.</xref:System.Decimal>       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Decimal
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett flyttal från dubbel precision."
  remarks: "Inga konverteringar utförs. Data som hämtats måste därför redan vara ett flyttal från dubbel precision.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Double
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerar en <xref:System.Collections.IEnumerator>som går igenom den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "Men du kan använda den här metoden för att hämta en explicit uppräknare, i språk som stöder en `foreach` konstruktion, det är enklare att använda slingor konstruktion direkt för att gå igenom dataraderna i dataläsaren."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar den <xref:System.Type>som datatypen för objektet.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Type
      description: "Den <xref:System.Type>som datatypen för objektet.</xref:System.Type> Om typen inte finns på klienten när det gäller en användardefinierade typen (UDT) returnerades från databasen, **GetFieldType** returnerar null."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override T GetFieldValue<T> (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "Som ska läggas till."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Som ska läggas till."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Som ska läggas till."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett flyttal från enkel precision."
  remarks: "Inga konverteringar utförs. Data som hämtats måste därför redan vara ett flyttal från enkel precision.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Single
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en globalt unik identifierare (GUID)."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara ett GUID.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Guid
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett 16-bitars heltal."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara ett 16-bitars heltal.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Int16
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett 32-bitars heltal."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara ett 32-bitars heltal.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Int32
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett 64-bitars heltal."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en 64-bitars heltal.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Int64
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar namnet på den angivna kolumnen."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.String
      description: "Namnet på den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar kolumnen ordningstal, baserat på namnet på kolumnen."
  remarks: "`GetOrdinal`Utför en skiftlägeskänslig sökning först. Om den inte en andra skiftlägesoberoende sökning inträffar (skiftlägesokänslig jämförelsen görs med hjälp av databassorteringen). Oväntade resultat kan inträffa när jämförelser påverkas av kultur-specifika skiftläge regler. Till exempel i turkiska ger i följande exempel felaktiga resultat eftersom filsystemet i turkiska inte använder språkliga skiftläge regler för bokstaven &quot;i&quot; i &quot;fil&quot;. Metoden genererar ett `IndexOutOfRange` undantag om det gick inte att hitta det nollbaserade kolumnordningstalet.       `GetOrdinal`är kana-bredd skiftlägeskänsligt.       Eftersom ordningstal-baserade sökningar är effektivare än namngivna sökningar, den är ineffektiv att anropa `GetOrdinal` inom en loop. Spara tid genom att anropa `GetOrdinal` en gång och tilldela en heltalsvariabel användas inom loopen resultaten."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-cs[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.sqlclient._27_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._27_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Namnet på kolumnen."
    return:
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
  overload: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Namnet som angetts är inte ett giltigt kolumnnamn."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar en <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> som är en representation av den underliggande typ av provider-specifik fält."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "En <xref:System.Int32>som representerar kolumnordningstalet.</xref:System.Int32>"
    return:
      type: System.Type
      description: "Hämtar en <xref:System.Object>som är en representation av underliggande provider-specifik fälttypen.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar en <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> som är en representation av det underliggande providern specifikt värdet."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "En <xref:System.Int32>som representerar kolumnordningstalet.</xref:System.Int32>"
    return:
      type: System.Object
      description: "En <xref:System.Object>som är en representation av det underliggande providern specifikt värdet.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar en matris med objekt som är en representation av de underliggande providerspecifika värdena."
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "En matris med <xref:System.Object>där du vill kopiera kolumnvärdena.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Matris med objekt som är en representation av de underliggande providerspecifika värdena."
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerar en <xref href=&quot;System.Data.DataTable&quot;> </xref> som beskriver kolumnmetadata för den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "För GetSchemaTable metoden returnerar metadata om varje kolumn i följande ordning: | DataReader kolumnen | Beskrivning |   |-----------------------|-----------------|   | AllowDBNull | Ange om användaren kan ange kolumnen till en null-värde eller om providern inte kan avgöra om användaren kan ange kolumnen till ett null-värde. Annars inte angetts. En kolumn kan innehålla null-värden, även om det inte går att ange ett null-värde. |   | BaseCatalogName | Namnet på katalogen i datakällan som innehåller kolumnen. NULL om grundläggande katalognamnet inte kan fastställas. Standardvärdet för den här kolumnen är ett null-värde. |   | BaseColumnName | Namnet på kolumnen i datalagret. Detta kan vara annorlunda än kolumnnamnet som returneras i kolumnen ColumnName om ett alias användes. Ett null-värde om baskolumn namn inte kan fastställas eller om kolumnen raduppsättningen härledda, men inte är identisk med en kolumn i data lagras. Standardvärdet för den här kolumnen är ett null-värde. |   | BaseSchemaName | Namnet på schemat i datalagret som innehåller kolumnen. Ett null-värde om grundläggande schemanamnet inte kan fastställas. Standardvärdet för den här kolumnen är ett null-värde. |   | BaseServerName | Namnet på instansen av Microsoft SQL Server som används av <xref:System.Data.SqlClient.SqlDataReader>. |   | BaseTableName | Namnet på den tabell eller vy i datakällan som innehåller kolumnen.</xref:System.Data.SqlClient.SqlDataReader> Ett null-värde om inte det går att fastställa namnet på bastabellen. Standardvärdet för den här kolumnen är ett null-värde. |   | ColumnName | Namnet på kolumnen. Det kan inte vara unika. Om detta inte kan fastställas returnerade ett null-värde. Det här namnet visar alltid senaste namnbyte av kolumnen i den aktuella vyn eller kommandot texten. |   | ColumnOrdinal | Det nollbaserade ordningstalet för kolumnen. Den här kolumnen får inte innehålla ett null-värde. |   | ColumnSize | Möjliga högst ett värde i kolumnen. För kolumner som använder en datatyp med fast längd är storleken på datatypen. För `nvarchar(MAX)`, `varchar(MAX)`, och `varbinary(MAX)` kolumner som lagras i en SQL Server-databas, den maximala storleken är 2 GB. Om dessa kolumner lagras och åtkomst till filer, begränsningar den maximala storleken på av filsystemet. Det här värdet ändras när du använder den `Type System Version` nyckelord i anslutningssträngen.  För nya typer av visas de i form av äldre typer. MAX datatyper returnerar den normala 4k för `nvarchar` och 8000 för `varchar`. Mer information finns i Transact-SQL-referens i SQL Server Books Online. |   | DataTypeName | Returnerar en sträng som representerar datatypen för den angivna kolumnen. |   | IsAliased | `true`: Kolumnnamnet är ett alias.<br /><br /> `false`: Kolumnnamnet är inte ett alias. |   | IsAutoIncrement | `true`: Kolumnen tilldelar värden till nya rader i fasta steg.<br /><br /> `false`: Kolumnen tilldelar inte värden till nya rader i fasta steg. Standardvärdet för den här kolumnen är `false`. |   | IsColumnSet | `true`: Kolumnen är en gles kolumn som är medlem i en kolumnuppsättning. |   | IsExpression | `true`: Kolumnen är ett uttryck.<br /><br /> `false`: Kolumnen är inte ett uttryck. |   | IsHidden | `true`: Kolumnen är dold.<br /><br /> `false`: Kolumnen inte är dold. |   | IsIdentity | `true`: Kolumnen är en identitetskolumn.<br /><br /> `false`: Kolumnen är inte en identitetskolumn. |   | IsKey | `true`: Kolumnen är en av en uppsättning kolumner i raduppsättningen, sammanlagt identifiera raden. Uppsättningen kolumner med `IsKey` inställd på `true` måste identifiera en rad i raduppsättningen. Det finns inga krav på att den här uppsättningen av kolumner är ett minimalt antal kolumner. Den här uppsättningen kolumner kan genereras från en primär nyckel för bastabellen, en unik begränsning eller ett unikt index.<br /><br /> `false`: Kolumnen inte krävs för att identifiera raden. |   | IsLong | `true`: Kolumnen innehåller en binär lång objekt (BLOB) som innehåller mycket långa data. Definitionen av mycket långa data är provider-specifik.<br /><br /> `false`: Kolumnen innehåller inte en binär lång objekt (BLOB) som innehåller mycket långa data. |   | IsReadOnly | `true`: Kolumnen kan inte ändras.<br /><br /> `false`: Kolumnen kan ändras. |   | IsRowVersion | `true`: Kolumnen innehåller en beständig rad-ID som inte kan skrivas till och inte har något beskrivande värde utom till identiteten på raden.<br /><br /> `false`: Kolumnen inte innehåller en beständig rad-ID som inte kan skrivas till och inte har något beskrivande värde utom identitet raden. |   | IsUnique | `true`: Kolumnen är av typen `timestamp`.<br /><br /> `false`: Kolumnen är inte av typen `timestamp`. |   | NonVersionedProviderType | Typen för kolumnen oavsett aktuellt `Type System Version` anges i anslutningssträngen. Det returnerade värdet är från uppräkningen <xref:System.Data.SqlDbType>. |   | NumericPrecision | Om `ProviderType` är en numerisk datatyp, detta är den maximala precisionen för kolumnen.</xref:System.Data.SqlDbType> Precisionen är beroende av definition för kolumnen. Om `ProviderType` är inte en numerisk datatyp, detta är 255. |   | NumericScale | Om `ProviderType` är DBTYPE_DECIMAL eller DBTYPE_NUMERIC, antalet siffror till höger om decimaltecknet. I annat fall är 255. |   | ProviderSpecificDataType | Returnerar provider-specifik datatypen i kolumnen baserat på den `Type System Version` nyckelord i anslutningssträngen. |   | Providertyp | Indikator för kolumnens datatyp. Objektet måste vara om datatypen för kolumnen varierar från rad till rad. Den här kolumnen får inte innehålla ett null-värde. |   | UdtAssemblyQualifiedName | Om kolumnen är en användardefinierad typ (UDT), är det kvalificerade namnet på den UDT sammansättningen enligt <xref:System.Type.AssemblyQualifiedName%2A>.</xref:System.Type.AssemblyQualifiedName%2A> Om kolumnen inte är en användardefinierad typ, är null. |   | XmlSchemaCollectionDatabase | Namnet på databasen där schemasamlingen för den här XML-instansen finns, om raden innehåller information om en XML-kolumn. Det här värdet är `null` (`Nothing` i Visual Basic) om samlingen är definierad i den aktuella databasen. Det är också null om det inte finns några schemamängden då den `XmlSchemaCollectionName` och `XmlSchemaCollectionOwningSchema` kolumner också är null. |   | XmlSchemaCollectionName | Namnet på schemasamlingen för den här XML-instansen om raden innehåller information om en XML-kolumn. Det här värdet är `null` (`Nothing` i Visual Basic) om det inte finns någon associerat schema-samling. Om värdet är null, den `XmlSchemaCollectionDatabase` och `XmlSchemaCollectionOwningSchema` kolumner också är null. |   | XmlSchemaCollectionOwningSchema | Ägande relationsschemat där schemasamlingen för den här XML-instansen finns, om raden innehåller information om en XML-kolumn. Det här värdet är `null` (`Nothing` i Visual Basic) om samlingen är definierad i den aktuella databasen. Det är också null om det inte finns några schemamängden då den `XmlSchemaCollectionDatabase` och `XmlSchemaCollectionName` kolumner också är null. |      > [!NOTE] > Att se till att metadatakolumner returneras rätt information, måste du anropa <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>med den `behavior` parametern `KeyInfo`.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Annars kan vissa av kolumnerna i Schematabellen returnera standardvärdet, null eller felaktiga data."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som beskriver kolumnens metadata."
  overload: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> är stängd."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan finnas en binär struktur eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett booleskt värde eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Värdet för kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en byte eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett datum/tid-värde eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats redan måste vara ett decimalt värde eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett flyttal med dubbel precision eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett GUID eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara ett 16-bitars heltal eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara ett 32-bitars heltal eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara en 64-bitars heltal eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats redan måste vara ett decimalt värde eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara en enkel precision flyttal eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  remarks: "Inga konverteringar utförs; Därför data som hämtats måste redan vara en sträng eller ett undantag genereras."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerar värdet i data i den angivna kolumnen som en SQL Server-datatypen."
  remarks: "GetSqlValue returnerar data med hjälp av de ursprungliga SQL Server-typerna. Om du vill hämta data med hjälp av .NET Framework-typer finns <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  syntax:
    content: public virtual object GetSqlValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Object
      description: "Värdet för kolumnen uttryckt som en <xref href=&quot;System.Data.SqlDbType&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Fyller en matris med <xref:System.Object>som innehåller värden för alla kolumner i posten, uttryckt i form av SQL Server-typer.</xref:System.Object>"
  remarks: "Returnerar värdena för alla kolumner i posten i ett enda anrop med SQL-typsystemet i stället för CLR-typsystemet. Längden på den <xref:System.Object>matris behöver inte matcha antalet kolumner i posten.</xref:System.Object> Du kan skicka en <xref:System.Object>matris som innehåller färre än antalet kolumner som ingår i posten.</xref:System.Object> Endast mängden data i <xref:System.Object>matris innehåller kopieras till matrisen från kolumn med ordningstal 0.</xref:System.Object> Du kan också skicka ett <xref:System.Object>matris vars längd är större än antalet kolumner i den resulterande raden.</xref:System.Object> Alla övriga kolumner är orörd."
  syntax:
    content: public virtual int GetSqlValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "En matris med <xref:System.Object>som att kopiera värdena.</xref:System.Object> Kolumnvärdena uttrycks i SQL Server-typer."
    return:
      type: System.Int32
      description: "Ett heltal som anger antalet kolumner som kopieras."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>values</code>är null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en XML-värdet."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en XML-värdet.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "En <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> -värde som innehåller XML-data som lagras i motsvarande fält."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Index som skickades var utanför intervallet 0 till <xref:System.Data.DataTableReader.FieldCount*>- 1</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ett försök gjordes att läsa eller komma åt kolumner i en stängd <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Hämtade data är inte kompatibel med den <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> typen."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar binary, image, varbinary, UDT och variant-datatyper som <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "<xref:System.IO.Stream.ReadTimeout%2A>Standardvärdet är värdet för <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>, men du kan ändra <xref:System.IO.Stream.ReadTimeout%2A>via GetStream.</xref:System.IO.Stream.ReadTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A></xref:System.IO.Stream.ReadTimeout%2A>       Null-värden ska returneras som en tom (noll byte) <xref:System.IO.Stream>.</xref:System.IO.Stream>       <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>höjer en <xref:System.InvalidOperationException>undantag när den används i ett objekt som returneras av GetStream när <xref:System.Data.CommandBehavior>är aktiverat.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>       <xref:System.Data.SqlClient.SqlException>undantag som uppstått från <xref:System.IO.Stream>utlöstes som <xref:System.IO.IOException>undantag, kontrollera det inre undantaget för <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.Stream></xref:System.Data.SqlClient.SqlException>       Följande <xref:System.IO.Stream>medlemmar är inte tillgängliga för objekt som returnerats av GetStream: - BeginWrite - EndWrite - Length - Position - sökning - SetLength - Skriv - WriteByte - WriteTimeout när Anslutningsegenskapen `ContextConnection=true`, GetStream stöder endast synkron datahämtning för både sekventiella (<xref:System.Data.CommandBehavior>) och icke-sekventiella (<xref:System.Data.CommandBehavior>) åtkomst.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior> </xref:System.IO.Stream>       Mer information finns i [stöd för direktuppspelning av SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.Stream GetStream (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.IO.Stream
      description: "Stream-objektet."
  overload: System.Data.SqlClient.SqlDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen släpper eller är stängda under datahämtning av.       Den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> stängs under datahämtning av.       Det finns inga data som är redo att läsas (till exempel först <> </> *> inte kallas eller returnerade false).       Ett försök gjordes att läsa en tidigare Läs kolumn i sekventiella läge.       Det uppstod en asynkron åtgärd pågår. Detta gäller för alla Get* metoder när du kör i sekventiella läge, som de kan anropas vid läsning av en dataström."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Försök att läsa en kolumn som inte finns."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den returnerade typ var inte en av typerna som nedan: - binär - - varbinary - udt"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som en sträng."
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en sträng.       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.String
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar Char, NChar, NText, NVarChar, text, varChar och Variant-datatyper som <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "<xref:System.Data.SqlClient.SqlException>undantag som uppstått från <xref:System.IO.TextReader>utlöstes som <xref:System.IO.IOException>undantag, kontrollera det inre undantaget för <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.TextReader></xref:System.Data.SqlClient.SqlException>       Null-värden ska returneras som en tom (noll byte) <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>höjer en <xref:System.InvalidOperationException>undantag när den används i ett objekt som returneras av GetTextReader när <xref:System.Data.CommandBehavior>är aktiverat.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       När egenskapen connection `ContextConnection=true`, GetTextReader stöder endast synkron datahämtning för både sekventiella (<xref:System.Data.CommandBehavior>) och icke-sekventiella (<xref:System.Data.CommandBehavior>) åtkomst.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior>       Mer information finns i [stöd för direktuppspelning av SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.TextReader GetTextReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Kolumnen som ska hämtas."
    return:
      type: System.IO.TextReader
      description: "Det returnerade objektet."
  overload: System.Data.SqlClient.SqlDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen släpper eller är stängda under datahämtning av.       Den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> stängs under datahämtning av.       Det finns inga data som är redo att läsas (till exempel först <> </> *> inte kallas eller returnerade false).       Ett försök gjordes att läsa en tidigare Läs kolumn i sekventiella läge.       Det uppstod en asynkron åtgärd pågår. Detta gäller för alla Get* metoder när du kör i sekventiella läge, som de kan anropas vid läsning av en dataström."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Försök att läsa en kolumn som inte finns."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den returnerade typ var inte en av typerna som nedan: - char - nchar - text, ntext - nvarchar - - varchar"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen som ett <xref:System.TimeSpan>objekt.</xref:System.TimeSpan>"
  remarks: "Inga konverteringar utförs; data som hämtats måste därför redan vara en <xref:System.TimeSpan>objektet.</xref:System.TimeSpan>       Anropa <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>att söka efter null-värden innan du anropar den här metoden.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.TimeSpan
      description: "Värdet för den angivna kolumnen."
  overload: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den angivna omvandlingen är inte giltig."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen i dess ursprungliga format."
  remarks: "GetValue returnerar data med hjälp av .NET Framework-typer."
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Object
      description: "Den här metoden returnerar <xref href=&quot;System.DBNull&quot;> </xref> för null databaskolumner."
  overload: System.Data.SqlClient.SqlDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Fyller i en matris med objekt med kolumnvärden för den aktuella raden."
  remarks: "Den här metoden är ett effektivt sätt för att hämta alla kolumner i stället för att hämta varje kolumn individuellt för de flesta program.       Du kan skicka en <xref:System.Object>matris som innehåller färre än antalet kolumner i den resulterande raden.</xref:System.Object> Endast mängden data i <xref:System.Object>matris innehåller kopieras till matrisen.</xref:System.Object> Du kan också skicka ett <xref:System.Object>matris vars längd är större än antalet kolumner i den resulterande raden.</xref:System.Object>       Den här metoden returnerar <xref:System.DBNull>för null databaskolumner.</xref:System.DBNull>"
  example:
  - "The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/csharp/m-system.data.sqlclient._28_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/visualbasic/m-system.data.sqlclient._28_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "En matris med <xref:System.Object>där du vill kopiera attributkolumnerna.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Antal instanser av <xref:System.Object>i matrisen.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar data av typen XML som <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Den <xref:System.Xml.XmlReader>objektet som returnerades av GetXmlReader stöder inte asynkrona åtgärder.</xref:System.Xml.XmlReader> Om du behöver asynkrona åtgärder på en <xref:System.Xml.XmlReader>uppsättning XML-kolumnen till en NVARCHAR(MAX) på servern och Använd <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>med <xref:System.Xml.XmlReader.Create%2A>.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> ,</xref:System.Xml.XmlReader>       <xref:System.Data.SqlClient.SqlException>undantag som uppstått från <xref:System.Xml.XmlReader>utlöstes som <xref:System.Xml.XmlException>undantag, kontrollera det inre undantaget för <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Xml.XmlException> </xref:System.Xml.XmlReader></xref:System.Data.SqlClient.SqlException>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>höjer en <xref:System.InvalidOperationException>undantag när den används i ett objekt som returneras av GetXmlReader när <xref:System.Data.CommandBehavior>är aktiverat.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       Mer information finns i [stöd för direktuppspelning av SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Xml.XmlReader GetXmlReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Värdet för den angivna kolumnen."
    return:
      type: System.Xml.XmlReader
      description: "Det returnerade objektet."
  overload: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen släpper eller är stängda under datahämtning av.       Den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> stängs under datahämtning av.       Det finns inga data som är redo att läsas (till exempel först <> </> *> inte kallas eller returnerade false).       Försök att läsa en tidigare skrivskyddad kolumn i sekventiella läge.       Det uppstod en asynkron åtgärd pågår. Detta gäller för alla Get* metoder när du kör i sekventiella läge, som de kan anropas vid läsning av en dataström."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Försök att läsa en kolumn som inte finns."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Den returnerade typ var inte xml."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  id: HasRows
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar ett värde som anger om den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> innehåller en eller flera rader."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> innehåller en eller flera rader, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  id: IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar ett booleskt värde som anger om den angivna <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instans har stängts."
  remarks: "Det går inte att läsa från en <xref:System.Data.SqlClient.SqlDataReader>-instans som är stängd.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> -instansen är stängd, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  id: IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Anger om den angivna <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> matchar den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> ."
  remarks: "Den här medlemmen stöder .NET Framework-infrastrukturen och är inte avsedd att användas direkt från din kod."
  syntax:
    content: protected bool IsCommandBehavior (System.Data.CommandBehavior condition);
    parameters:
    - id: condition
      type: System.Data.CommandBehavior
      description: "En <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> uppräkning."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den angivna <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> är sant, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> annars."
  overload: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar ett värde som anger om kolumnen innehåller värden som inte finns eller saknas."
  remarks: "Anropa den här metoden ska söka efter null kolumnvärdena innan du anropar den angivna hämta metoder (till exempel <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>och så vidare) att undvika att ett fel.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>       [!code-vb[SqlDataReader_IsDbNull&#1;](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)][!code-cs[SqlDataReader_IsDbNull nr&1;  ](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna kolumnvärdet motsvarar <xref href=&quot;System.DBNull&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron version av <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>, som hämtar ett värde som anger om kolumnen innehåller värden som inte finns eller saknas.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>       Annullering-token kan användas för att begära åtgärden överges innan dess kommando-timeout. Undantag rapporteras via returnerade aktivitetsobjektet."
  remarks: "Mer information finns i [stöd för direktuppspelning av SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "Nollbaserade kolumnen som ska hämtas."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Annullering-instruktion som sprider ett meddelande om att åtgärder ska avbrytas. Detta garanterar inte skulle avbrytas. En inställning för <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> gör den här metoden motsvarar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*> Aktiviteten returnerade måste markeras som avbrutits."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det angivna kolumnvärdet motsvarar <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen släpper eller är stängda under datahämtning av.       Den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> stängs under datahämtning av.       Det finns inga data som är redo att läsas (till exempel först <> </> *> inte kallas eller returnerade false).       Försök att läsa en tidigare skrivskyddad kolumn i sekventiella läge.       Det uppstod en asynkron åtgärd pågår. Detta gäller för alla Get* metoder när du kör i sekventiella läge, som de kan anropas vid läsning av en dataström.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>har angetts i anslutningssträngen."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Försök att läsa en kolumn som inte finns."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen i dess ursprungliga format anges kolumnordningstalet."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Det nollbaserade kolumnordningstalet."
    return:
      type: System.Object
      description: "Värdet för den angivna kolumnen i dess ursprungliga format."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Index som skickades var utanför intervallet 0 till <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar värdet för den angivna kolumnen i dess ursprungliga format, beroende på kolumnnamn."
  remarks: "Först utförs en skiftlägeskänslig sökning. Om den inte en andra icke skiftlägeskänslig sökning görs (skiftlägesokänslig jämförelsen görs med hjälp av databassorteringen). Oväntade resultat kan inträffa när jämförelser påverkas av kultur-specifika skiftläge regler. Till exempel i turkiska ger i följande exempel felaktiga resultat eftersom filsystemet i turkiska inte använder språkliga skiftläge regler för bokstaven &quot;i&quot; i &quot;fil&quot;.       Den här metoden är kana-bredd skiftlägeskänsligt."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Kolumnnamnet."
    return:
      type: System.Object
      description: "Värdet för den angivna kolumnen i dess ursprungliga format."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Ingen kolumn med det angivna namnet hittades."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  id: NextResult
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avancerar dataläsaren till nästa resultat vid läsning av resultatet av Transact-SQL-batchinstruktioner."
  remarks: "Används för att bearbeta flera resultat, vilken kan genereras genom att köra Transact-SQL-batchinstruktioner.       Dataläsaren är placerad på det första resultatet som standard."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det finns fler resultatmängder; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron version av <xref:System.Data.SqlClient.SqlDataReader.NextResult*>, som utökar programkontrollfunktionerna dataläsaren till nästa resultat vid läsning av resultatet av batch [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instruktioner.</xref:System.Data.SqlClient.SqlDataReader.NextResult*>       Annullering-token kan användas för att begära åtgärden överges innan dess kommando-timeout.  Undantag rapporteras via returnerade aktivitetsobjektet."
  remarks: "Mer information om asynkron programmering i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataprovider för [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkron programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Annullering-instruktion."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "En aktivitet som representerar den asynkrona åtgärden."
  overload: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anropar NextResultAsync mer än en gång för samma instans innan aktiviteten.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>har angetts i anslutningssträngen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerade ett fel vid körning av Kommandotext.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Read
  id: Read
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Flyttar den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> till nästa post."
  remarks: "Placering av <xref:System.Data.SqlClient.SqlDataReader>är före den första posten.</xref:System.Data.SqlClient.SqlDataReader> Därför måste du anropa Läs om du vill börja få åtkomst till några data.       Endast en `SqlDataReader` per associerade <xref:System.Data.SqlClient.SqlConnection>kan vara öppen åt gången, och alla försök att öppna en annan fungerar inte förrän den första som har stängts.</xref:System.Data.SqlClient.SqlConnection> På liknande sätt, medan den `SqlDataReader` används den associerade `SqlConnection` är upptagen betjänar tills du anropet <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om det finns fler rader; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Read*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerade ett fel vid körning av Kommandotext.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "En asynkron version av <xref:System.Data.SqlClient.SqlDataReader.Read*>, vilka utvecklingen av <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> till nästa post.</xref:System.Data.SqlClient.SqlDataReader.Read*>       Annullering-token kan användas för att begära åtgärden överges innan dess kommando-timeout. Undantag rapporteras via returnerade aktivitetsobjektet."
  remarks: "Om den `behavior` -parametern för <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>har angetts till `Default`, ReadAsync läser hela raden innan det returneras uppgiften.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>       Mer information, inklusive kodexempel om asynkron programmering i den [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dataprovider för [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], se [asynkron programmering](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Annullering-instruktion."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "En aktivitet som representerar den asynkrona åtgärden."
  overload: System.Data.SqlClient.SqlDataReader.ReadAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anropar ReadAsync mer än en gång för samma instans innan aktiviteten.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>har angetts i anslutningssträngen."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]returnerade ett fel vid körning av Kommandotext.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar antalet rader ändras, infogas eller tas bort av körningen av Transact-SQL-instruktionen."
  remarks: "Egenskapen RecordsAffected anges inte förrän alla rader läses och stänger <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader>       Värdet för den här egenskapen är kumulativa. Om exempelvis två poster infogas i batchläge, värdet för `RecordsAffected` är två.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>och RecordsAffected är endast egenskaper som du kan anropa efter den <xref:System.Data.SqlClient.SqlDataReader>är stängd.</xref:System.Data.SqlClient.SqlDataReader></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Antalet rader som ändras, infogas eller tas bort; 0 om inga rader påverkades eller instruktionen misslyckades. och 1 för SELECT-satser."
  overload: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returnerar en <xref href=&quot;System.Data.IDataReader&quot;> </xref> för den angivna kolumnen ordningstal."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.SqlClient.SqlDataReader>instans omvandlas till ett <xref:System.IDataRecord>gränssnitt.</xref:System.IDataRecord> </xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "En kolumn med ordningstal."
    return:
      type: System.Data.IDataReader
      description: "Den <xref href=&quot;System.Data.IDataReader&quot;> </xref> instansen för den angivna kolumnen ordningstal."
  overload: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hämtar antalet fält i den <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> som inte är dolda."
  remarks: "Det här värdet används för att avgöra hur många fält i den <xref:System.Data.SqlClient.SqlDataReader>är synliga.</xref:System.Data.SqlClient.SqlDataReader> Exempelvis returnerar en väljer på en partiell primärnyckel övriga delar av nyckeln som dolda fält. Dolda fält läggs alltid bakom synliga fälten."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "Antalet fält som inte är dolda."
  overload: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDataReader.Close
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
- uid: System.Data.SqlClient.SqlDataReader.Connection
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataReader.Depth
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  nameWithType: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  nameWithType: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.Read
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
- uid: System.Data.SqlClient.SqlDataReader.Close*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close
  nameWithType: SqlDataReader.Close
- uid: System.Data.SqlClient.SqlDataReader.Connection*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlDataReader.Depth*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
- uid: System.Data.SqlClient.SqlDataReader.FieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: SqlDataReader.GetBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte
  nameWithType: SqlDataReader.GetByte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes
  nameWithType: SqlDataReader.GetBytes
- uid: System.Data.SqlClient.SqlDataReader.GetChar*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar
  nameWithType: SqlDataReader.GetChar
- uid: System.Data.SqlClient.SqlDataReader.GetChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars
  nameWithType: SqlDataReader.GetChars
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: SqlDataReader.GetDataTypeName
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: SqlDataReader.GetDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset
  nameWithType: SqlDataReader.GetDateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: SqlDataReader.GetDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble
  nameWithType: SqlDataReader.GetDouble
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: SqlDataReader.GetEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: SqlDataReader.GetFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: SqlDataReader.GetFieldValue<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: SqlDataReader.GetFieldValueAsync<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFloat*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat
  nameWithType: SqlDataReader.GetFloat
- uid: System.Data.SqlClient.SqlDataReader.GetGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid
  nameWithType: SqlDataReader.GetGuid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16
  nameWithType: SqlDataReader.GetInt16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32
  nameWithType: SqlDataReader.GetInt32
- uid: System.Data.SqlClient.SqlDataReader.GetInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64
  nameWithType: SqlDataReader.GetInt64
- uid: System.Data.SqlClient.SqlDataReader.GetName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName
  nameWithType: SqlDataReader.GetName
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: SqlDataReader.GetOrdinal
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: SqlDataReader.GetProviderSpecificFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: SqlDataReader.GetProviderSpecificValue
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: SqlDataReader.GetProviderSpecificValues
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: SqlDataReader.GetSchemaTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary
  nameWithType: SqlDataReader.GetSqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean
  nameWithType: SqlDataReader.GetSqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte
  nameWithType: SqlDataReader.GetSqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes
  nameWithType: SqlDataReader.GetSqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars
  nameWithType: SqlDataReader.GetSqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime
  nameWithType: SqlDataReader.GetSqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal
  nameWithType: SqlDataReader.GetSqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble
  nameWithType: SqlDataReader.GetSqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid
  nameWithType: SqlDataReader.GetSqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16
  nameWithType: SqlDataReader.GetSqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32
  nameWithType: SqlDataReader.GetSqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64
  nameWithType: SqlDataReader.GetSqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney
  nameWithType: SqlDataReader.GetSqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle
  nameWithType: SqlDataReader.GetSqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString
  nameWithType: SqlDataReader.GetSqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue
  nameWithType: SqlDataReader.GetSqlValue
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues
  nameWithType: SqlDataReader.GetSqlValues
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml
  nameWithType: SqlDataReader.GetSqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream
  nameWithType: SqlDataReader.GetStream
- uid: System.Data.SqlClient.SqlDataReader.GetString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString
  nameWithType: SqlDataReader.GetString
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: SqlDataReader.GetTextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: SqlDataReader.GetTimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue
  nameWithType: SqlDataReader.GetValue
- uid: System.Data.SqlClient.SqlDataReader.GetValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues
  nameWithType: SqlDataReader.GetValues
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader
  nameWithType: SqlDataReader.GetXmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior
  nameWithType: SqlDataReader.IsCommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: SqlDataReader.IsDBNull
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: SqlDataReader.IsDBNullAsync
- uid: System.Data.SqlClient.SqlDataReader.Item*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item
  nameWithType: SqlDataReader.Item
- uid: System.Data.SqlClient.SqlDataReader.NextResult*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult
  nameWithType: SqlDataReader.NextResult
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: SqlDataReader.NextResultAsync
- uid: System.Data.SqlClient.SqlDataReader.Read*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read
  nameWithType: SqlDataReader.Read
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: SqlDataReader.ReadAsync
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
