### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "Gör att .NET Framework Data Provider för SQL Server för att säkerställa att en användare har en säkerhetsnivå som är tillräckligt för att få åtkomst till en datakälla."
  remarks: "Den <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>egenskapen företräde framför den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>egenskapen.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Därför, om du ställer in <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>till `false`, måste du också ange <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>till `false` vill hindra en användare från att en anslutning med ett tomt lösenord.</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>      > [!NOTE] > När du använder code access säkerhetsbehörigheter för ADO.NET rätt mönstret är börjar med det mest restriktiva fallet (ingen behörighet alls) och sedan lägga till de specifika behörigheter som krävs för särskild aktivitet som koden måste utföra. Motsatt mönstret börjar med alla behörigheter och neka en viss behörighet är inte säker, eftersom det finns många sätt att uttrycka samma anslutningssträng. Om du börjar med alla behörigheter och försök sedan att neka användning av anslutningssträngen till exempel &quot;server = someserver&quot;, strängen &quot;server=someserver.mycompany.com&quot; skulle fortfarande tillåtas. Genom att starta alltid genom att tilldela inga behörigheter alls, kan du minska risken för att det finns tomrum i behörighetsgruppen."
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klass."
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klass."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> värden."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> klass."
  remarks: "Den <xref:System.Security.Permissions.PermissionState>uppräkningen företräde framför den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>egenskapen.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> Därför, om du ställer in <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>till `false`, måste du också ange <xref:System.Security.Permissions.PermissionState>till `None` vill hindra en användare från att en anslutning med ett tomt lösenord.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Ett exempel som visar hur du använder säkerhet krav finns [Code Access Security och ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "En av de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> värden."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Anger om ett tomt lösenord tillåts."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lägger till en ny anslutningssträng och en uppsättning begränsade nyckelord till den <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> objekt."
  remarks: "Använd den här metoden om du vill konfigurera vilka anslutningssträngar som tillåts i en viss behörighetsobjekt. Använd till exempel följande kodfragment om du vill att endast tillåta en specifik anslutningssträng och ingenting annat: `permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)` följande exempel tillåter anslutningssträngar som använder en databas, men endast på servern minserver, med en kombination av användare och lösenord och som innehåller inga andra nyckelord för anslutningssträngar: `permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)` i följande exempel används på samma sätt som ovan men tillåter redundanspartner som kan användas vid anslutning till servrar som konfigurerats för databasspegling : `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] > När du använder code access säkerhetsbehörigheter för ADO.NET rätt mönstret är börjar med det mest restriktiva fallet (ingen behörighet alls) och sedan lägga till de specifika behörigheter som krävs för särskild aktivitet som koden måste utföra. Motsatt mönstret börjar med alla behörigheter och försök sedan att neka en viss behörighet är inte säker, eftersom det finns många sätt att uttrycka samma anslutningssträng. Om du börjar med alla behörigheter och försök sedan att neka användning av anslutningssträngen till exempel &quot;server = someserver&quot;, strängen &quot;server=someserver.mycompany.com&quot; skulle fortfarande tillåtas. Genom att starta alltid genom att tilldela inga behörigheter alls, kan du minska risken för att det finns tomrum i behörighetsgruppen."
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "Anslutningssträngen."
    - id: restrictions
      type: System.String
      description: "Viktiga begränsningar."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "En av de <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> uppräkningar."
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "En kopia av det aktuella objektet behörighet."
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
