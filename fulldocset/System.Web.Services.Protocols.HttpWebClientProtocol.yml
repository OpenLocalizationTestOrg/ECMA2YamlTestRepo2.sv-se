### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  id: HttpWebClientProtocol
  children:
  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  langs:
  - csharp
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
  type: Class
  summary: "Representerar basklass för alla XML-webbtjänsten service klienten proxyservrar som använder HTTP-transportprotokollet."
  remarks: "Egenskaper för den här klassen används för att styra beteendet för HTTP-request-objektet som används för att överföra XML-webbtjänstens begäran och svar. Egenskaper för kartan för att egenskaperna <xref:System.Net.HttpWebRequest>.</xref:System.Net.HttpWebRequest>       För att kommunicera med en XML-webbtjänst som använder HTTP, måste du skapa en proxyklass som härleds från HttpWebClientProtocol direkt eller indirekt för XML-webbtjänsten. I stället för att skapa proxyklassen manuellt kan använda du verktyget Wsdl.exe för att skapa en proxy för en viss XML-webbtjänsten tjänstens beskrivning.       Eftersom HttpWebClientProtocol är basklass för alla proxyklasser, är dess egenskaper för din proxyklasser. De här egenskaperna är användbara för att styra beteendet för begäran för underliggande transport. Till exempel använda den <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A>egenskapen för att anropa XML-webbtjänster via en brandvägg.</xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> Många av de här egenskaperna används för att initiera den <xref:System.Net.HttpWebRequest>som gör webbegäran.</xref:System.Net.HttpWebRequest>       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, och <xref:System.Web.Services.Protocols.HttpPostClientProtocol>härledd direkt eller indirekt från HttpWebClientProtocol kan ge stöd för SOAP, HTTP GET- och HTTP-POST respektive.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol></xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \n  \n [!code-cs[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_9_1.aspx)]\n [!code-vb[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_9_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref> klass."
  syntax:
    content: protected HttpWebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger om klienten följer automatiskt serveromdirigeringar."
  remarks: "Om en klient skickar autentiseringsinformation, till exempel ett användarnamn och lösenord kan vill du inte aktivera servern för att dirigera, eftersom detta kan påverka säkerheten.       En <xref:System.Net.WebException>genereras om egenskapen AllowAutoRedirect är `false` och webbservern försöker att omdirigera begäran.</xref:System.Net.WebException> Den <xref:System.Net.WebException.Response%2A>egenskapen innehåller ett <xref:System.Net.HttpWebResponse>objekt, där både den <xref:System.Net.HttpWebResponse.StatusCode%2A>och <xref:System.Net.HttpWebResponse.Headers%2A>Egenskaper återspeglar information om försök omdirigeringen.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpWebResponse.StatusCode%2A> </xref:System.Net.HttpWebResponse> </xref:System.Net.WebException.Response%2A> Den <xref:System.Net.HttpWebResponse.StatusCode%2A>-egenskapen innehåller en <xref:System.Net.HttpStatusCode>motsvarar ett av HTTP-omdirigering statuskoder (301, 302 och 307) och `Location` rubriken i den <xref:System.Net.HttpWebResponse.Headers%2A>samling pekar på den URI som försökte begäran omdirigeras till.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpWebResponse.StatusCode%2A>"
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>automatiskt dirigera om klienten om du vill följa serveromdirigeringar; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Egenskapen AllowAutoRedirect <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> och webbservern försöker att omdirigera begäran."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Avbryter ett asynkront anrop till en XML-webbtjänstmetoden, såvida inte anropet har slutförts."
  syntax:
    content: protected void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "Det angivna objektet i den sista parametern till asynkront anrop av den <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> metod."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  id: ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar insamling av klientcertifikat."
  remarks: "Den här egenskapen kan en klient för att skicka en eller flera klientcertifikat, även kallat Authenticode X.509 v.3 certifikat, när du anropar en XML-webbtjänstmetoden. Om XML-webbtjänstmetoden har konfigurerats för att använda klientcertifikat, kan ett klientcertifikat användas som en mekanism för att autentisera en klient. Mer information om hur du konfigurerar klientcertifikat finns i dokumentationen för Internet Information Services (IIS)."
  example:
  - "The following code example demonstrates how to load in a client certificate from a file and then add it to the ClientCertificates property for calling an XML Web service method that uses client certificates for authentication.  \n  \n [!code-cs[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/csharp/p-system.web.services.pr_6_1.aspx)]\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_6_1.aspx)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "En <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> som representerar klientcertifikat."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  id: CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger samlingen av cookies."
  remarks: "Om en XML-webbtjänstmetoden använder sessionstillstånd, sedan skickas en cookie tillbaka svarshuvuden till XML-webbtjänstklienten som unikt identifierar sessionen för XML-webbtjänsten service klienten. För en XML-webbtjänsten ska använda sessionsläge för en klient måste klienten lagra cookien. Klienter tar emot HTTP-cookien genom att skapa en ny instans av <xref:System.Net.CookieContainer>och tilldela att CookieContainer-egenskapen i proxyklassen innan du anropar XML-webbtjänsten tjänsten metoden.</xref:System.Net.CookieContainer> Om du behöver underhålla sessionstillstånd utanför om klassinstansen proxy går utanför lagrar klienten http-cookien mellan anrop till XML-webbtjänsten. Till exempel en Web Forms-klient kan lagra http-cookien genom att spara den <xref:System.Net.CookieContainer>i sin egen sessionstillstånd.</xref:System.Net.CookieContainer> Eftersom inte alla XML-webbtjänster använder sessionstillstånd och därmed klienter alltid behöver inte använda egenskapen CookieContainer för en proxy för klienten tillstånd i dokumentationen för XML-webbtjänsten om sessionstillstånd används."
  example:
  - "The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \n  \n [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_14_1.aspx)]\n [!code-cs[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/csharp/p-system.web.services.pr_14_1.aspx)]"
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "En <xref:System.Net.CookieContainer>som representerar cookies för Web Services-klienten.</xref:System.Net.CookieContainer>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  id: EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger ett värde som anger om expanderingen har aktiverats för den här <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>."
  syntax:
    content: public bool EnableDecompression { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om dekomprimering är aktiverad för den här <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> varje XML-webbtjänsten service i metoden som exponeras av den angivna typen och lagrar mappningarna i den angivna <xref href=&quot;System.Collections.ArrayList&quot;> </xref>."
  syntax:
    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mappings);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>som visar XML-Webbtjänstmetoder.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som används för att lagra mappningarna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>type</code> can be assigned to a <xref href=&quot;System.Web.Services.Protocols.SoapHttpClientProtocol&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> varje XML-webbtjänsten service i metoden som exponeras av de angivna typerna och lagrar mappningarna i den angivna <xref href=&quot;System.Collections.ArrayList&quot;> </xref>, såväl som i en <xref href=&quot;System.Collections.Hashtable&quot;> </xref> som den här metoden returnerar."
  syntax:
    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mappings);
    parameters:
    - id: types
      type: System.Type[]
      description: "En matris av typen <xref:System.Type>som innehåller de typer som visar XML-Webbtjänstmetoder.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "En <xref href=&quot;System.Collections.ArrayList&quot;> </xref> som används för att lagra mappningarna."
    return:
      type: System.Collections.Hashtable
      description: "En <xref href=&quot;System.Collections.Hashtable&quot;> </xref> som innehåller den <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> för varje XML-Webbtjänstmetoden som exponeras av de angivna typerna. Typer som finns i <code> types </code> används som nycklar."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Skapar en <xref:System.Net.WebRequest>för angiven URI.</xref:System.Net.WebRequest>"
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri>För att skapa <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "Skapade <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerar ett svar från en synkron begäran till en XML-webbtjänstmetoden."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>som du vill hämta svaret.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Ett svar från en synkron begäran till en XML-webbtjänstmetoden."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Returnerar ett svar från en asynkron begäran till en XML-webbtjänstmetoden."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Den <xref:System.Net.WebRequest>som du vill hämta svaret.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "Den <xref:System.IAsyncResult>ska skickas till <xref:System.Net.HttpWebRequest.EndGetResponse*>när svaret har slutförts.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Ett svar från en asynkron begäran till en XML-webbtjänstmetoden."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  id: Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger proxyinformation för att göra en XML-webbtjänstens begäran via en brandvägg."
  remarks: "Använd egenskapen Proxy om en klient behöver använda olika proxyinställningar än i systeminställningarna. Använd <xref:System.Net.WebProxy>klassen för att ange proxyinställningarna, eftersom den implementerar <xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy> </xref:System.Net.WebProxy>       Standard-proxyinställningar kan anges i en konfigurationsfil. Mer information finns i [konfigurera Internetprogram](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \n  \n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_56_1.cpp)]\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_56_1.vb)]\n [!code-cs[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_56_1.cs)]"
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "En <xref:System.Net.IWebProxy>som innehåller proxyinformation om för att göra förfrågningar via en brandvägg.</xref:System.Net.IWebProxy> Standardvärdet är proxyinställningarna för operativsystemet."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger ett värde som anger om Internetanslutningsdelning är aktiverat när klienten använder NTLM-autentisering för att ansluta till webbservern som är värd för XML-webbtjänsten."
  remarks: "Den här egenskapen anger värdet för den <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>egenskapen för den <xref:System.Net.HttpWebRequest>används för att kommunicera med webbservern.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>"
  syntax:
    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om anslutningsdelning är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  id: UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Hämtar eller anger värdet för användaren agent-huvudet som skickas med varje begäran."
  remarks: "Användaragentsträngen kan en webbserver att identifiera klienten."
  example:
  - >-
    [!code-cs[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/csharp/p-system.web.services.pr_74_1.cs)]
     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_74_1.vb)]
     [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/cpp/p-system.web.services.pr_74_1.cpp)]
  syntax:
    content: public string UserAgent { get; set; }
    return:
      type: System.String
      description: "Värdet för HTTP-protokollet användaren agent-huvudet. Standardvärdet är &quot;MS-Client webbtjänstprotokoll <code> number </code> &quot;, där <code> number </code> är version av CLR (till exempel 1.0.3705.0)."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.WebClientProtocol
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync
  nameWithType: HttpWebClientProtocol.CancelAsync
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpWebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: HttpWebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
