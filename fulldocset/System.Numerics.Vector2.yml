### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector2
  id: Vector2
  children:
  - System.Numerics.Vector2.#ctor(System.Single)
  - System.Numerics.Vector2.#ctor(System.Single,System.Single)
  - System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  - System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.CopyTo(System.Single[])
  - System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  - System.Numerics.Vector2.Equals(System.Object)
  - System.Numerics.Vector2.GetHashCode
  - System.Numerics.Vector2.Length
  - System.Numerics.Vector2.LengthSquared
  - System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  - System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  - System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  - System.Numerics.Vector2.One
  - System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  - System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  - System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  - System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Vector2.ToString
  - System.Numerics.Vector2.ToString(System.String)
  - System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  - System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  - System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector2.UnitX
  - System.Numerics.Vector2.UnitY
  - System.Numerics.Vector2.X
  - System.Numerics.Vector2.Y
  - System.Numerics.Vector2.Zero
  langs:
  - csharp
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
  type: Struct
  summary: "Representerar en vector med två enkel precision flyttalsvärden."
  remarks: "Vector2-strukturen har stöd för maskinvaruacceleration."
  syntax:
    content: 'public struct Vector2 : IEquatable<System.Numerics.Vector2>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector2>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector2.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Vector2(Single)
  nameWithType: Vector2.Vector2(Single)
  fullName: System.Numerics.Vector2.Vector2(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Skapar en ny <xref href=&quot;System.Numerics.Vector2&quot;> </xref> objekt vars två element ha samma värde."
  syntax:
    content: public Vector2 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Värdet som tilldelas båda elementen."
  overload: System.Numerics.Vector2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Vector2(Single,Single)
  nameWithType: Vector2.Vector2(Single,Single)
  fullName: System.Numerics.Vector2.Vector2(Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Skapar en vector vars element har angivna värden."
  syntax:
    content: public Vector2 (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "Värdet för att tilldela den <xref href=&quot;System.Numerics.Vector2.X&quot;> </xref> fältet."
    - id: y
      type: System.Single
      description: "Värdet för att tilldela den <xref href=&quot;System.Numerics.Vector2.Y&quot;> </xref> fältet."
  overload: System.Numerics.Vector2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  id: Abs(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Abs(Vector2)
  nameWithType: Vector2.Abs(Vector2)
  fullName: System.Numerics.Vector2.Abs(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector vars element är de absoluta värdena för var och en av de angivna vector-element."
  syntax:
    content: public static System.Numerics.Vector2 Abs (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "En vector."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn absolut värde."
  overload: System.Numerics.Vector2.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Add(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Add(Vector2,Vector2)
  nameWithType: Vector2.Add(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Add(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adderar två angreppsmetoderna."
  syntax:
    content: public static System.Numerics.Vector2 Add (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn att lägga till."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden att lägga till."
    return:
      type: System.Numerics.Vector2
      description: "Samlade vektorn."
  overload: System.Numerics.Vector2.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Clamp(Vector2,Vector2,Vector2)
  nameWithType: Vector2.Clamp(Vector2,Vector2,Vector2)
  fullName: System.Numerics.Vector2.Clamp(Vector2,Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Begränsar en vector mellan en lägsta och högsta värde."
  syntax:
    content: public static System.Numerics.Vector2 Clamp (System.Numerics.Vector2 value1, System.Numerics.Vector2 min, System.Numerics.Vector2 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Vektorn att begränsa."
    - id: min
      type: System.Numerics.Vector2
      description: "Det minsta värdet."
    - id: max
      type: System.Numerics.Vector2
      description: "Det maximala värdet."
    return:
      type: System.Numerics.Vector2
      description: "Begränsad vektorn."
  overload: System.Numerics.Vector2.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector2.CopyTo(Single[])
  fullName: System.Numerics.Vector2.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopierar elementen i vektorn till den angivna matrisen."
  remarks: '`array` must have at least two elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "Målmatrisen."
  overload: System.Numerics.Vector2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antalet element i den aktuella instansen är större än i matrisen."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>är multidimensionell."
  platform:
  - net462
- uid: System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector2.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector2.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Kopior position för elementen i vektorn till en angiven matris som börjar vid ett specificerat index."
  remarks: '`array`måste ha tillräckligt många element för två vector-element. Med andra ord element `index` och `index` + 1 måste redan finnas i `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "Målmatrisen."
    - id: index
      type: System.Int32
      description: "Index som du vill kopiera det första elementet i vektorn."
  overload: System.Numerics.Vector2.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Antalet element i den aktuella instansen är större än i matrisen."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>är mindre än noll.       - eller - <code>index</code> är större än eller lika med matrislängd."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code>är multidimensionell."
  platform:
  - net462
- uid: System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Distance(Vector2,Vector2)
  nameWithType: Vector2.Distance(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Distance(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Beräknar Euclidean avståndet mellan de två angivna punkterna."
  syntax:
    content: public static float Distance (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första punkten."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra punkten."
    return:
      type: System.Single
      description: "Avståndet mellan."
  overload: System.Numerics.Vector2.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  id: DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: DistanceSquared(Vector2,Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2,Vector2)
  fullName: System.Numerics.Vector2.DistanceSquared(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar Euclidean avståndet kvadrat mellan två angivna punkterna."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första punkten."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra punkten."
    return:
      type: System.Single
      description: "Avståndet kvadrat."
  overload: System.Numerics.Vector2.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Divide(Vector2,Vector2)
  nameWithType: Vector2.Divide(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Divide(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerar den första vektorn med andra."
  syntax:
    content: public static System.Numerics.Vector2 Divide (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn som uppstår till följd av delningen."
  overload: System.Numerics.Vector2.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  id: Divide(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Divide(Vector2,Single)
  nameWithType: Vector2.Divide(Vector2,Single)
  fullName: System.Numerics.Vector2.Divide(Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerar angivna vektorn med ett angivet skalärt värde."
  syntax:
    content: public static System.Numerics.Vector2 Divide (System.Numerics.Vector2 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Vektorn."
    - id: divisor
      type: System.Single
      description: "Skalärt värde."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn som resulterar från uppdelningen."
  overload: System.Numerics.Vector2.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Dot(Vector2,Vector2)
  nameWithType: Vector2.Dot(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Dot(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar produkten av två angreppsmetoderna punkt."
  syntax:
    content: public static float Dot (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Single
      description: "Punkt-produkten."
  overload: System.Numerics.Vector2.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  id: Equals(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: System.Numerics.Vector2.Equals(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar ett värde som anger om den här instansen och en annan vector är lika."
  remarks: "Två angreppsmetoderna är lika om deras <xref:System.Numerics.Vector2>och <xref:System.Numerics.Vector2>element är lika.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2>"
  syntax:
    content: public bool Equals (System.Numerics.Vector2 other);
    parameters:
    - id: other
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om t.ex är lika; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Vector2.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector2.Equals(Object)
  fullName: System.Numerics.Vector2.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar ett värde som anger om den här instansen och ett angivet-objekt är lika."
  remarks: "Den aktuella instansen och `obj` är lika om `obj` är en <xref:System.Numerics.Vector2>objekt och deras <xref:System.Numerics.Vector2.X>och <xref:System.Numerics.Vector2.Y>element är lika.</xref:System.Numerics.Vector2.Y> </xref:System.Numerics.Vector2.X> </xref:System.Numerics.Vector2>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska jämföras med den aktuella instansen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om den aktuella instansen och <code> obj </code> är lika, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: System.Numerics.Vector2.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar hash-koden för den här instansen."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Hash-koden."
  overload: System.Numerics.Vector2.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Length
  id: Length
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Length()
  nameWithType: Vector2.Length()
  fullName: System.Numerics.Vector2.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar längden på vektorn."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "Den vector längd."
  overload: System.Numerics.Vector2.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: System.Numerics.Vector2.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar längden på vektorn kvadrat."
  remarks: "Den här åtgärden ger bättre prestanda än ett anrop till den <xref:System.Numerics.Vector2.Length%2A>metoden.</xref:System.Numerics.Vector2.Length%2A>"
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "Längden för den vector kvadrat."
  overload: System.Numerics.Vector2.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  id: Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Lerp(Vector2,Vector2,Single)
  nameWithType: Vector2.Lerp(Vector2,Vector2,Single)
  fullName: System.Numerics.Vector2.Lerp(Vector2,Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Utför en linjär interpolerade mellan två angreppsmetoderna baserat på den angivna vikt."
  syntax:
    content: public static System.Numerics.Vector2 Lerp (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    - id: amount
      type: System.Single
      description: "Ett värde mellan 0 och 1 som anger vikt `value2`."
    return:
      type: System.Numerics.Vector2
      description: "Interpolerade vektorn."
  overload: System.Numerics.Vector2.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Max(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Max(Vector2,Vector2)
  nameWithType: Vector2.Max(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Max(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector vars element är maximalt antalet varje par av element i två angivna angreppsmetoderna."
  syntax:
    content: public static System.Numerics.Vector2 Max (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Maximerat vektorn."
  overload: System.Numerics.Vector2.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Min(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Min(Vector2,Vector2)
  nameWithType: Vector2.Min(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Min(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector vars element är minimum för varje par av element i två angivna angreppsmetoderna."
  syntax:
    content: public static System.Numerics.Vector2 Min (System.Numerics.Vector2 value1, System.Numerics.Vector2 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: value2
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Minimerat vektorn."
  overload: System.Numerics.Vector2.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Vector2,Vector2)
  nameWithType: Vector2.Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplicerar två angreppsmetoderna tillsammans."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Produkt-vektor."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  id: Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Vector2,Single)
  nameWithType: Vector2.Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplicerar en vector med en angiven skalär."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (System.Numerics.Vector2 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Vektorn att multiplicera."
    - id: right
      type: System.Single
      description: "Skalärt värde."
    return:
      type: System.Numerics.Vector2
      description: "Skalade vektorn."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  id: Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Multiply(Single,Vector2)
  nameWithType: Vector2.Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Single,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplicerar ett skalärt värde med en angiven vector."
  syntax:
    content: public static System.Numerics.Vector2 Multiply (float left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Single
      description: "Det beräknade värdet."
    - id: right
      type: System.Numerics.Vector2
      description: "Vektorn."
    return:
      type: System.Numerics.Vector2
      description: "Skalade vektorn."
  overload: System.Numerics.Vector2.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  id: Negate(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: System.Numerics.Vector2.Negate(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negeras angivna vector."
  syntax:
    content: public static System.Numerics.Vector2 Negate (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vektorn negera."
    return:
      type: System.Numerics.Vector2
      description: "Negerade vektorn."
  overload: System.Numerics.Vector2.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  id: Normalize(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: System.Numerics.Vector2.Normalize(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector med samma riktning som den angivna metoden, men med en längd på en."
  syntax:
    content: public static System.Numerics.Vector2 Normalize (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vektorn normalisera."
    return:
      type: System.Numerics.Vector2
      description: "Normaliserade vektorn."
  overload: System.Numerics.Vector2.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.One
  id: One
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: One
  nameWithType: Vector2.One
  fullName: System.Numerics.Vector2.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hämtar en vector vars 2 element är lika med ett."
  syntax:
    content: public static System.Numerics.Vector2 One { get; }
    return:
      type: System.Numerics.Vector2
      description: "En vector vars två element är lika med ett (det vill säga den returnerar vektor `(1,1)`."
  overload: System.Numerics.Vector2.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Addition(Vector2,Vector2)
  nameWithType: Vector2.op_Addition(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Addition(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adderar två angreppsmetoderna."
  remarks: "Metoden tillägg definierar additionen för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Addition (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn att lägga till."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden att lägga till."
    return:
      type: System.Numerics.Vector2
      description: "Samlade vektorn."
  overload: System.Numerics.Vector2.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Division(Vector2,Vector2)
  nameWithType: Vector2.op_Division(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerar den första vektorn med andra."
  remarks: "Metoden Division definierar division åtgärden för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Division (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn som resultat av att dividera <code> left </code> av <code> right </code>."
  overload: System.Numerics.Vector2.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  id: op_Division(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Division(Vector2,Single)
  nameWithType: Vector2.op_Division(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Dividerar angivna vektorn med ett angivet skalärt värde."
  remarks: "Metoden Division definierar division åtgärden för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Division (System.Numerics.Vector2 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector2
      description: "Vektorn."
    - id: value2
      type: System.Single
      description: "Skalärt värde."
    return:
      type: System.Numerics.Vector2
      description: "Resultatet av delningen."
  overload: System.Numerics.Vector2.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Equality(Vector2,Vector2)
  nameWithType: Vector2.op_Equality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Equality(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar ett värde som anger om varje par av element i två angivna angreppsmetoderna är lika."
  remarks: "Två <xref:System.Numerics.Vector2>objekt är lika om varje värde i `left` är lika med det motsvarande värdet i `right`.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn ska jämföras."
    - id: right
      type: System.Numerics.Vector2
      description: "Andra vektorn som ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Inequality(Vector2,Vector2)
  nameWithType: Vector2.op_Inequality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Inequality(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar ett värde som anger om två angivna angreppsmetoderna inte är lika."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn ska jämföras."
    - id: right
      type: System.Numerics.Vector2
      description: "Andra vektorn som ska jämföras."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector2.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Vector2,Vector2)
  nameWithType: Vector2.op_Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplicerar två angreppsmetoderna tillsammans."
  remarks: "Den multipel metoden definierar multiplikationen för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Produkt-vektor."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  id: op_Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Vector2,Single)
  nameWithType: Vector2.op_Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplar angivna vektorn med angivet skalärt värde."
  remarks: "Den <xref:System.Numerics.Vector2.op_Multiply%2A>metoden definierar multiplikationen för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2.op_Multiply%2A>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (System.Numerics.Vector2 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Vektorn."
    - id: right
      type: System.Single
      description: "Skalärt värde."
    return:
      type: System.Numerics.Vector2
      description: "Skalade vektorn."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  id: op_Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Multiply(Single,Vector2)
  nameWithType: Vector2.op_Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Single,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplar av skalära värdet av den angivna metoden."
  remarks: "Den <xref:System.Numerics.Vector2.op_Multiply%2A>metoden definierar multiplikationen för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2> </xref:System.Numerics.Vector2.op_Multiply%2A>"
  syntax:
    content: public static System.Numerics.Vector2 op_Multiply (float left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Single
      description: "Vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Skalärt värde."
    return:
      type: System.Numerics.Vector2
      description: "Skalade vektorn."
  overload: System.Numerics.Vector2.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  id: op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_Subtraction(Vector2,Vector2)
  nameWithType: Vector2.op_Subtraction(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Subtraction(Vector2,Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtraheras från först andra vektorn."
  remarks: "Metoden subtraktion definierar subtraktion åtgärden för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_Subtraction (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn som fås att subtrahera <code> right </code> från <code> left </code>."
  overload: System.Numerics.Vector2.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  id: op_UnaryNegation(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: op_UnaryNegation(Vector2)
  nameWithType: Vector2.op_UnaryNegation(Vector2)
  fullName: System.Numerics.Vector2.op_UnaryNegation(Vector2)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negeras angivna vektorn."
  remarks: "Metoden UnaryNegation definierar unära negation åtgärden för <xref:System.Numerics.Vector2>objekt.</xref:System.Numerics.Vector2>"
  syntax:
    content: public static System.Numerics.Vector2 op_UnaryNegation (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vektorn negera."
    return:
      type: System.Numerics.Vector2
      description: "Negerade vektorn."
  overload: System.Numerics.Vector2.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Reflect(Vector2,Vector2)
  nameWithType: Vector2.Reflect(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Reflect(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar då en vector av en yta som har det angivna normalt."
  syntax:
    content: public static System.Numerics.Vector2 Reflect (System.Numerics.Vector2 vector, System.Numerics.Vector2 normal);
    parameters:
    - id: vector
      type: System.Numerics.Vector2
      description: "Källvektorn."
    - id: normal
      type: System.Numerics.Vector2
      description: "Normal yta avspeglas ut."
    return:
      type: System.Numerics.Vector2
      description: "Reflekterade vektorn."
  overload: System.Numerics.Vector2.Reflect*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  id: SquareRoot(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: SquareRoot(Vector2)
  nameWithType: Vector2.SquareRoot(Vector2)
  fullName: System.Numerics.Vector2.SquareRoot(Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector vars element är kvadratroten av en angiven vector-element."
  syntax:
    content: public static System.Numerics.Vector2 SquareRoot (System.Numerics.Vector2 value);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "En vector."
    return:
      type: System.Numerics.Vector2
      description: "Vektorn kvadratroten ur."
  overload: System.Numerics.Vector2.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  id: Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Subtract(Vector2,Vector2)
  nameWithType: Vector2.Subtract(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Subtract(Vector2,Vector2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtraheras från först andra vektorn."
  syntax:
    content: public static System.Numerics.Vector2 Subtract (System.Numerics.Vector2 left, System.Numerics.Vector2 right);
    parameters:
    - id: left
      type: System.Numerics.Vector2
      description: "Den första vektorn."
    - id: right
      type: System.Numerics.Vector2
      description: "Den andra metoden."
    return:
      type: System.Numerics.Vector2
      description: "Skillnaden-vektor."
  overload: System.Numerics.Vector2.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString
  id: ToString
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: System.Numerics.Vector2.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en strängrepresentation av den aktuella instansen med standardformatering som."
  remarks: "Den här metoden returnerar en sträng där varje element i vektorn är formaterad med Formatsträngen &quot;G&quot; (Allmänt) och formatering konventioner för den aktuella trådkulturen. Den &quot;\\<&quot; och &quot;>&quot; tecken som används för att börja och sluta strängen och den aktuella kulturen <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>egenskapen följt av ett blanksteg används för att avgränsa varje element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Strängrepresentation för den aktuella instansen."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector2.ToString(String)
  fullName: System.Numerics.Vector2.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en strängrepresentation av den aktuella instansen med hjälp av den angivna Formatsträngen för att formatera enskilda element."
  remarks: "Den här metoden returnerar en sträng där varje element i vektorn är formaterad med `format` och den aktuella kulturen formatering konventioner. Den &quot;\\<&quot; och &quot;>&quot; tecken som används för att börja och sluta strängen och den aktuella kulturen <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>egenskapen följt av ett blanksteg används för att avgränsa varje element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "En [standard](~/add/includes/ajax-current-ext-md.md) eller [anpassad formatsträng för numeriska](~/add/includes/ajax-current-ext-md.md) som definierar formatet för enskilda element."
    return:
      type: System.String
      description: "Strängrepresentation för den aktuella instansen."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector2.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector2.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en strängrepresentation av den aktuella instansen med hjälp av den angivna Formatsträngen för att formatera enskilda element och den angivna format providern definiera kultur-formatering."
  remarks: "Den här metoden returnerar en sträng där varje element i vektorn är formaterad med `format` och `formatProvider`. Den &quot;\\<&quot; och &quot;>&quot; tecken som används för att börja och sluta strängen och format-providern <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>egenskapen följt av ett blanksteg används för att avgränsa varje element.</xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "En [standard](~/add/includes/ajax-current-ext-md.md) eller [anpassad formatsträng för numeriska](~/add/includes/ajax-current-ext-md.md) som definierar formatet för enskilda element."
    - id: formatProvider
      type: System.IFormatProvider
      description: "En format-provider som tillhandahåller kultur-specifik formatering information."
    return:
      type: System.String
      description: "Strängrepresentation för den aktuella instansen."
  overload: System.Numerics.Vector2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Matrix3x2)
  nameWithType: Vector2.Transform(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix3x2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Omvandlar en vector enligt ett angivet 3 x 2."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix3x2 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "Vektorn omvandla."
    - id: matrix
      type: System.Numerics.Matrix3x2
      description: "Omvandling av matrisen."
    return:
      type: System.Numerics.Vector2
      description: "Den omvandlade Vectorn."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector2.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Omvandlar en vector med en angiven 4 x 4-matris."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "Vektorn omvandla."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Omvandling av matrisen."
    return:
      type: System.Numerics.Vector2
      description: "Den omvandlade Vectorn."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector2.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector2.Transform(Vector2,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Omvandlar en vector med angivet Quaternion rotationsvärde."
  syntax:
    content: public static System.Numerics.Vector2 Transform (System.Numerics.Vector2 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "Vektorn rotera."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "Rotation ska gälla."
    return:
      type: System.Numerics.Vector2
      description: "Den omvandlade Vectorn."
  overload: System.Numerics.Vector2.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  id: TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: TransformNormal(Vector2,Matrix3x2)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix3x2)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Omvandlar en normal vector genom den angivna 3 x 2-matrisen."
  syntax:
    content: public static System.Numerics.Vector2 TransformNormal (System.Numerics.Vector2 normal, System.Numerics.Matrix3x2 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector2
      description: "Källvektorn."
    - id: matrix
      type: System.Numerics.Matrix3x2
      description: "Matrisen."
    return:
      type: System.Numerics.Vector2
      description: "Den omvandlade Vectorn."
  overload: System.Numerics.Vector2.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: TransformNormal(Vector2,Matrix4x4)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Omvandlar en normal vector genom den angivna 4 x 4-matrisen."
  syntax:
    content: public static System.Numerics.Vector2 TransformNormal (System.Numerics.Vector2 normal, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: normal
      type: System.Numerics.Vector2
      description: "Källvektorn."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "Matrisen."
    return:
      type: System.Numerics.Vector2
      description: "Den omvandlade Vectorn."
  overload: System.Numerics.Vector2.TransformNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.UnitX
  id: UnitX
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: System.Numerics.Vector2.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hämtar vector (1,0)."
  syntax:
    content: public static System.Numerics.Vector2 UnitX { get; }
    return:
      type: System.Numerics.Vector2
      description: "Vektorn `(1,0)`."
  overload: System.Numerics.Vector2.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.UnitY
  id: UnitY
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: System.Numerics.Vector2.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Hämtar vector (0,1)."
  syntax:
    content: public static System.Numerics.Vector2 UnitY { get; }
    return:
      type: System.Numerics.Vector2
      description: "Vektorn `(0,1)`."
  overload: System.Numerics.Vector2.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.X
  id: X
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: X
  nameWithType: Vector2.X
  fullName: System.Numerics.Vector2.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "X-komponent i vektorn."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Y
  id: Y
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Y
  nameWithType: Vector2.Y
  fullName: System.Numerics.Vector2.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Y-komponenten för vektorn."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector2.Zero
  id: Zero
  parent: System.Numerics.Vector2
  langs:
  - csharp
  name: Zero
  nameWithType: Vector2.Zero
  fullName: System.Numerics.Vector2.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returnerar en vector vars 2 element är lika med noll."
  syntax:
    content: public static System.Numerics.Vector2 Zero { get; }
    return:
      type: System.Numerics.Vector2
      description: "En vector vars två element är lika med noll (det vill säga den returnerar vektor `(0,0)`."
  overload: System.Numerics.Vector2.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector2.#ctor(System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2(Single)
  nameWithType: Vector2.Vector2(Single)
  fullName: System.Numerics.Vector2.Vector2(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector2.#ctor(System.Single,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2(Single,Single)
  nameWithType: Vector2.Vector2(Single,Single)
  fullName: System.Numerics.Vector2.Vector2(Single,Single)
- uid: System.Numerics.Vector2.Abs(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Abs(Vector2)
  nameWithType: Vector2.Abs(Vector2)
  fullName: System.Numerics.Vector2.Abs(Vector2)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Add(Vector2,Vector2)
  nameWithType: Vector2.Add(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Add(Vector2,Vector2)
- uid: System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Clamp(Vector2,Vector2,Vector2)
  nameWithType: Vector2.Clamp(Vector2,Vector2,Vector2)
  fullName: System.Numerics.Vector2.Clamp(Vector2,Vector2,Vector2)
- uid: System.Numerics.Vector2.CopyTo(System.Single[])
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector2.CopyTo(Single[])
  fullName: System.Numerics.Vector2.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector2.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector2.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Distance(Vector2,Vector2)
  nameWithType: Vector2.Distance(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Distance(Vector2,Vector2)
- uid: System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: DistanceSquared(Vector2,Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2,Vector2)
  fullName: System.Numerics.Vector2.DistanceSquared(Vector2,Vector2)
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide(Vector2,Vector2)
  nameWithType: Vector2.Divide(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Divide(Vector2,Vector2)
- uid: System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide(Vector2,Single)
  nameWithType: Vector2.Divide(Vector2,Single)
  fullName: System.Numerics.Vector2.Divide(Vector2,Single)
- uid: System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Dot(Vector2,Vector2)
  nameWithType: Vector2.Dot(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Dot(Vector2,Vector2)
- uid: System.Numerics.Vector2.Equals(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: System.Numerics.Vector2.Equals(Vector2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector2.Equals(System.Object)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector2.Equals(Object)
  fullName: System.Numerics.Vector2.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector2.GetHashCode
  parent: System.Numerics.Vector2
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: System.Numerics.Vector2.GetHashCode()
- uid: System.Numerics.Vector2.Length
  parent: System.Numerics.Vector2
  isExternal: false
  name: Length()
  nameWithType: Vector2.Length()
  fullName: System.Numerics.Vector2.Length()
- uid: System.Numerics.Vector2.LengthSquared
  parent: System.Numerics.Vector2
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: System.Numerics.Vector2.LengthSquared()
- uid: System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Lerp(Vector2,Vector2,Single)
  nameWithType: Vector2.Lerp(Vector2,Vector2,Single)
  fullName: System.Numerics.Vector2.Lerp(Vector2,Vector2,Single)
- uid: System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Max(Vector2,Vector2)
  nameWithType: Vector2.Max(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Max(Vector2,Vector2)
- uid: System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Min(Vector2,Vector2)
  nameWithType: Vector2.Min(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Min(Vector2,Vector2)
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Vector2,Vector2)
  nameWithType: Vector2.Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Vector2)
- uid: System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Vector2,Single)
  nameWithType: Vector2.Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.Multiply(Vector2,Single)
- uid: System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply(Single,Vector2)
  nameWithType: Vector2.Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.Multiply(Single,Vector2)
- uid: System.Numerics.Vector2.Negate(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: System.Numerics.Vector2.Negate(Vector2)
- uid: System.Numerics.Vector2.Normalize(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: System.Numerics.Vector2.Normalize(Vector2)
- uid: System.Numerics.Vector2.One
  parent: System.Numerics.Vector2
  isExternal: false
  name: One
  nameWithType: Vector2.One
  fullName: System.Numerics.Vector2.One
- uid: System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Addition(Vector2,Vector2)
  nameWithType: Vector2.op_Addition(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Addition(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division(Vector2,Vector2)
  nameWithType: Vector2.op_Division(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division(Vector2,Single)
  nameWithType: Vector2.op_Division(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Division(Vector2,Single)
- uid: System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Equality(Vector2,Vector2)
  nameWithType: Vector2.op_Equality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Equality(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Inequality(Vector2,Vector2)
  nameWithType: Vector2.op_Inequality(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Inequality(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Vector2,Vector2)
  nameWithType: Vector2.op_Multiply(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Vector2,Single)
  nameWithType: Vector2.op_Multiply(Vector2,Single)
  fullName: System.Numerics.Vector2.op_Multiply(Vector2,Single)
- uid: System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply(Single,Vector2)
  nameWithType: Vector2.op_Multiply(Single,Vector2)
  fullName: System.Numerics.Vector2.op_Multiply(Single,Vector2)
- uid: System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Subtraction(Vector2,Vector2)
  nameWithType: Vector2.op_Subtraction(Vector2,Vector2)
  fullName: System.Numerics.Vector2.op_Subtraction(Vector2,Vector2)
- uid: System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_UnaryNegation(Vector2)
  nameWithType: Vector2.op_UnaryNegation(Vector2)
  fullName: System.Numerics.Vector2.op_UnaryNegation(Vector2)
- uid: System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Reflect(Vector2,Vector2)
  nameWithType: Vector2.Reflect(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Reflect(Vector2,Vector2)
- uid: System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: SquareRoot(Vector2)
  nameWithType: Vector2.SquareRoot(Vector2)
  fullName: System.Numerics.Vector2.SquareRoot(Vector2)
- uid: System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Subtract(Vector2,Vector2)
  nameWithType: Vector2.Subtract(Vector2,Vector2)
  fullName: System.Numerics.Vector2.Subtract(Vector2,Vector2)
- uid: System.Numerics.Vector2.ToString
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: System.Numerics.Vector2.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector2.ToString(System.String)
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString(String)
  nameWithType: Vector2.ToString(String)
  fullName: System.Numerics.Vector2.ToString(String)
- uid: System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector2.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector2.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Matrix3x2)
  nameWithType: Vector2.Transform(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix3x2)
- uid: System.Numerics.Matrix3x2
  parent: System.Numerics
  isExternal: false
  name: Matrix3x2
  nameWithType: Matrix3x2
  fullName: System.Numerics.Matrix3x2
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector2.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.Transform(Vector2,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector2.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector2.Transform(Vector2,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal(Vector2,Matrix3x2)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix3x2)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix3x2)
- uid: System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal(Vector2,Matrix4x4)
  nameWithType: Vector2.TransformNormal(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector2.TransformNormal(Vector2,Matrix4x4)
- uid: System.Numerics.Vector2.UnitX
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: System.Numerics.Vector2.UnitX
- uid: System.Numerics.Vector2.UnitY
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: System.Numerics.Vector2.UnitY
- uid: System.Numerics.Vector2.X
  parent: System.Numerics.Vector2
  isExternal: false
  name: X
  nameWithType: Vector2.X
  fullName: System.Numerics.Vector2.X
- uid: System.Numerics.Vector2.Y
  parent: System.Numerics.Vector2
  isExternal: false
  name: Y
  nameWithType: Vector2.Y
  fullName: System.Numerics.Vector2.Y
- uid: System.Numerics.Vector2.Zero
  parent: System.Numerics.Vector2
  isExternal: false
  name: Zero
  nameWithType: Vector2.Zero
  fullName: System.Numerics.Vector2.Zero
- uid: System.Numerics.Vector2.#ctor*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Vector2
  nameWithType: Vector2.Vector2
- uid: System.Numerics.Vector2.Abs*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Abs
  nameWithType: Vector2.Abs
- uid: System.Numerics.Vector2.Add*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Add
  nameWithType: Vector2.Add
- uid: System.Numerics.Vector2.Clamp*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Clamp
  nameWithType: Vector2.Clamp
- uid: System.Numerics.Vector2.CopyTo*
  parent: System.Numerics.Vector2
  isExternal: false
  name: CopyTo
  nameWithType: Vector2.CopyTo
- uid: System.Numerics.Vector2.Distance*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Distance
  nameWithType: Vector2.Distance
- uid: System.Numerics.Vector2.DistanceSquared*
  parent: System.Numerics.Vector2
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector2.DistanceSquared
- uid: System.Numerics.Vector2.Divide*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Divide
  nameWithType: Vector2.Divide
- uid: System.Numerics.Vector2.Dot*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Dot
  nameWithType: Vector2.Dot
- uid: System.Numerics.Vector2.Equals*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Equals
  nameWithType: Vector2.Equals
- uid: System.Numerics.Vector2.GetHashCode*
  parent: System.Numerics.Vector2
  isExternal: false
  name: GetHashCode
  nameWithType: Vector2.GetHashCode
- uid: System.Numerics.Vector2.Length*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Length
  nameWithType: Vector2.Length
- uid: System.Numerics.Vector2.LengthSquared*
  parent: System.Numerics.Vector2
  isExternal: false
  name: LengthSquared
  nameWithType: Vector2.LengthSquared
- uid: System.Numerics.Vector2.Lerp*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Lerp
  nameWithType: Vector2.Lerp
- uid: System.Numerics.Vector2.Max*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Max
  nameWithType: Vector2.Max
- uid: System.Numerics.Vector2.Min*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Min
  nameWithType: Vector2.Min
- uid: System.Numerics.Vector2.Multiply*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Multiply
  nameWithType: Vector2.Multiply
- uid: System.Numerics.Vector2.Negate*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Negate
  nameWithType: Vector2.Negate
- uid: System.Numerics.Vector2.Normalize*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Normalize
  nameWithType: Vector2.Normalize
- uid: System.Numerics.Vector2.One*
  parent: System.Numerics.Vector2
  isExternal: false
  name: One
  nameWithType: Vector2.One
- uid: System.Numerics.Vector2.op_Addition*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Addition
  nameWithType: Vector2.op_Addition
- uid: System.Numerics.Vector2.op_Division*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Division
  nameWithType: Vector2.op_Division
- uid: System.Numerics.Vector2.op_Equality*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Equality
  nameWithType: Vector2.op_Equality
- uid: System.Numerics.Vector2.op_Inequality*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Inequality
  nameWithType: Vector2.op_Inequality
- uid: System.Numerics.Vector2.op_Multiply*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Multiply
  nameWithType: Vector2.op_Multiply
- uid: System.Numerics.Vector2.op_Subtraction*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector2.op_Subtraction
- uid: System.Numerics.Vector2.op_UnaryNegation*
  parent: System.Numerics.Vector2
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector2.op_UnaryNegation
- uid: System.Numerics.Vector2.Reflect*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Reflect
  nameWithType: Vector2.Reflect
- uid: System.Numerics.Vector2.SquareRoot*
  parent: System.Numerics.Vector2
  isExternal: false
  name: SquareRoot
  nameWithType: Vector2.SquareRoot
- uid: System.Numerics.Vector2.Subtract*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Subtract
  nameWithType: Vector2.Subtract
- uid: System.Numerics.Vector2.ToString*
  parent: System.Numerics.Vector2
  isExternal: false
  name: ToString
  nameWithType: Vector2.ToString
- uid: System.Numerics.Vector2.Transform*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Transform
  nameWithType: Vector2.Transform
- uid: System.Numerics.Vector2.TransformNormal*
  parent: System.Numerics.Vector2
  isExternal: false
  name: TransformNormal
  nameWithType: Vector2.TransformNormal
- uid: System.Numerics.Vector2.UnitX*
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitX
  nameWithType: Vector2.UnitX
- uid: System.Numerics.Vector2.UnitY*
  parent: System.Numerics.Vector2
  isExternal: false
  name: UnitY
  nameWithType: Vector2.UnitY
- uid: System.Numerics.Vector2.Zero*
  parent: System.Numerics.Vector2
  isExternal: false
  name: Zero
  nameWithType: Vector2.Zero
