### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  id: JavaScriptSerializer
  children:
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  - System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  - System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  - System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  - System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  - System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  - System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  langs:
  - csharp
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
  type: Class
  summary: '[Json.NET](http://www.newtonsoft.com/json) ska använda serialisering och deserialisering. Innehåller funktioner för serialisering och deserialisering för AJAX-aktiverade program.'
  remarks: "The JavaScriptSerializer class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server. You cannot access that instance of the serializer. However, this class exposes a public API. Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.  \n  \n To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method. To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods. To serialize and deserialize types that are not natively supported by JavaScriptSerializer, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class. Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.  \n  \n## Mapping Between Managed Types and JSON  \n The following table shows the mapping between managed types and JSON for the serialization process. These managed types are natively supported by JavaScriptSerializer. When you are deserializing from a JSON string to a managed type, the same mapping applies. However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.  \n  \n> [!NOTE]\n>  A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.  \n  \n|Managed type|JSON equivalent|  \n|------------------|---------------------|  \n|<xref:System.String> (UTF-8 encoding only).|String|  \n|<xref:System.Char>|String|  \n|Single null char (such as, \\0 )|Null|  \n|<xref:System.Boolean>|Boolean. Represented in JSON as `true` or `false`|  \n|`null` (`null` object references and <xref:System.Nullable> value types).|A string value of null|  \n|<xref:System.DBNull>|A string value of null|  \n|Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>. The culture-invariant string representation is used.|Number|  \n|<xref:System.DateTime>|Date object, represented in JSON as \"\\\\/Date(number of ticks)\\\\/\". The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.<br /><br /> The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  \n|Enumerations of integer type|Integer equivalent of the enumeration value|  \n|Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=fullName> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.|Array that uses JSON array syntax|  \n|Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=fullName>. This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.|JavaScript object that uses JSON dictionary syntax|  \n|Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.<br /><br /> Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.|JavaScript object that uses JSON dictionary syntax. A special metadata property named \"__type\" is included to ensure correct deserialization. Make sure that public instance properties have get and set accessors to ensure correct deserialization.|  \n|<xref:System.Guid>|String representation of a GUID|  \n|<xref:System.Uri>|String representation of the return value of <xref:System.Uri.GetComponents%2A>|"
  example:
  - "The first example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/csharp/t-system.web.script.seri_1_1.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_1.vb)]  \n  \n [!code-cs[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/csharp/t-system.web.script.seri_1_2.cs)]\n [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_2.vb)]  \n  \n The next example shows a more complicated and complete project that uses the JavaScriptSerializer class to save and restore the state of an object by using JSON serialization. This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-vb[System.Web.Script.Serialization#4](~/add/codesnippet/visualbasic/t-system.web.script.seri_1_3.aspx)]\n [!code-cs[System.Web.Script.Serialization#4](~/add/codesnippet/csharp/t-system.web.script.seri_1_3.aspx)]"
  syntax:
    content: public class JavaScriptSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klass som inte har ingen lösare för typen."
  remarks: "En instans av den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klass utan en typ-matchare inte innehåller metadata Typegenskaper (med namnet &quot;__type&quot;) i den serialiserade strängen JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer> En egenskap för metadata som används av den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>och <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>metoder för att fastställa en lämplig hanterad typ till som JSON-strängen ska konverteras.</xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Information om typen matchare finns <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>klass.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver>"
  syntax:
    content: public JavaScriptSerializer ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  id: '#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)'
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klass som har en anpassad typ-matchare."
  remarks: "När den Serialiserar ett objekt i <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen använder den `resolver` parametern för att fastställa lämpligt värde ska ingå i den serialiserade JSON-strängen för metadata typegenskapen (&quot;__type&quot;).</xref:System.Web.Script.Serialization.JavaScriptSerializer> På liknande sätt, när den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klass avserialisering av en JSON-sträng, det löser egenskapsvärdet typen metadata till lämplig hanterad typ med hjälp av DNS-matchare-instans.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Du kan ange den `resolver` parameter till `null`, vilket motsvarar anropar den <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>konstruktor.</xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>       Instansen av <xref:System.Web.Script.Serialization.JavaScriptSerializer>som används av lagret asynkron kommunikation för anropa webbtjänster från klientskript använder en speciell typ-matchare.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Den här typen matcharen begränsar de typer som kan avserialiseras till dem som anges i Metodsignaturen för den webbtjänst eller de som har den <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>tillämpas.</xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Du kan inte ändra den här typen av inbyggda matcharen programmässigt.      > [!IMPORTANT] > Med en instans av det här objektet initieras med en anpassad typ-matchare kan utgöra en säkerhetsrisk. Använd det här objektet endast betrodda. Mer information finns i [obetrodda Data säkerhetsrisker](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);
    parameters:
    - id: resolver
      type: System.Web.Script.Serialization.JavaScriptTypeResolver
      description: "Anpassad typ-matcharen-objekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  id: ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterar det angivna objektet till den angivna typen."
  remarks: "När den <xref:System.Web.Script.Serialization.JavaScriptSerializer>instans serialisering av en typ som en anpassad konverterare är registrerad, serialiserare-anrop i <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metod för att hämta ordlistan av namn/värde-par som kommer att konverteras till en JSON-formaterad sträng.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metoden kan också utlösa undantag om objektdiagrammet är för komplex eller om registrerade instanser av <xref:System.Web.Script.Serialization.JavaScriptConverter>ha orsakat konverteraren rekursion.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public object ConvertToType (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "Objektet som ska konverteras."
    - id: targetType
      type: System.Type
      description: "Att konvertera objektet till typ."
    return:
      type: System.Object
      description: "Den serialiserade JSON-strängen."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den resulterande strängen JSON-formaterad överskrider värdet för <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> innehåller en cirkelreferens. En cirkelreferens inträffar när ett underordnat objekt har en referens till ett överordnat objekt och det överordnade objektet har en referens till det underordnade objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Gränsen för rekursion som definieras av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>har överskridits.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  id: ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T ConvertToType<T> (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterar en JSON-formaterad sträng till ett objekt av den angivna typen."
  remarks: "Den här metoden för deserialisering inte försöker konvertera roten av objektdiagram till en viss typ, hur som den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>webbmetoden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object Deserialize (string input, Type targetType);
    parameters:
    - id: input
      type: System.String
      description: "JSON-strängen skulle deserialiseras."
    - id: targetType
      type: System.Type
      description: "Typ av resulterande objektet."
    return:
      type: System.Object
      description: "Avserialiserat objekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Längden på <code> input </code> överskrider värdet för <> </> *>.       - eller - gränsen för rekursion som definieras av <> </> *> har överskridits.       - eller - <code> input </code> innehåller en oväntad teckensekvensen.       - eller - <code> input </code> är en ordlistetyp och värdet för en icke-sträng påträffades.       - eller - <code> input </code> innehåller definitioner av medlem som inte är tillgängliga på måltypen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>innehåller en &quot;__type&quot;-egenskap som anger en anpassad typ, men typen matcharen som associeras med serialiseraren inte kan hitta en hanterad typ som motsvarande.       - eller - <code>input</code> innehåller en &quot;__type&quot;-egenskap som anger en anpassad typ, men resultatet av avserialisering av motsvarande JSON-strängen inte kan tilldelas måltypen förväntade.       - eller - <code>input</code> innehåller en &quot;__type&quot;-egenskap som anger antingen <xref:System.Object> eller en icke-instantiable typ (till exempel en abstrakt typ eller ett gränssnitt).       - eller - ett försök gjordes att konvertera en JSON-matris till ett matrisliknande hanterad typ som inte stöds för användning som ett mål för JSON-deserialisering.       - eller - det går inte att konvertera <code>input</code> till måltypen."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  syntax:
    content: public T Deserialize<T> (string input);
    parameters:
    - id: input
      type: System.String
      description: "Som ska läggas till."
    return:
      type: T
      description: "Som ska läggas till."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  id: DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterar den angivna JSON-strängen till ett objektdiagram."
  remarks: "Den här metoden för deserialisering inte försöker konvertera roten av objektdiagram till en viss typ med den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>metoden.</xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>"
  syntax:
    content: public object DeserializeObject (string input);
    parameters:
    - id: input
      type: System.String
      description: "JSON-strängen som avserialiseras."
    return:
      type: System.Object
      description: "Avserialiserat objekt."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den <code> input </code> längd överskrider värdet för <> </> *>.       - eller - gränsen för rekursion som definieras av <> </> *> har överskridits.       - eller - <code> input </code> innehåller en oväntad teckensekvensen.       - eller - <code> input </code> är en ordlistetyp och värdet för en icke-sträng påträffades.       - eller - <code> input </code> innehåller definitioner av medlem som inte är tillgängliga på måltypen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>input</code>innehåller en &quot;__type&quot;-egenskap som anger en anpassad typ, men typen matcharen som associeras med serialiseraren inte kan hitta en hanterad typ som motsvarande.       - eller - <code>input</code> innehåller en &quot;__type&quot;-egenskap som anger en anpassad typ, men resultatet av avserialisering av motsvarande JSON-strängen inte kan tilldelas måltypen förväntade.       - eller - <code>input</code> innehåller en &quot;__type&quot;-egenskap som anger antingen <xref:System.Object> eller en icke-instantiable typ (till exempel en abstrakt typ eller ett gränssnitt).       - eller - ett försök gjordes att konvertera en JSON-matris till ett matrisliknande hanterad typ som inte stöds för användning som ett mål för JSON-deserialisering.       - eller - det går inte att konvertera <code>input</code> till måltypen."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  id: MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Hämtar eller anger den maximala längden på JSON-strängar som accepteras av den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> klass."
  remarks: 'Värdet för egenskapen MaxJsonLength gäller bara när du uttryckligen skapa en instans av <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Använd den `jsonSerialization` element i konfigurationsfilen för att ange den maximala längden för den interna serialiserare-instans som används av lagret asynkron kommunikation. Läs mer om konfigurationselement för serialisering [hur man: Konfigurera ASP.NET-tjänster i Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public int MaxJsonLength { get; set; }
    return:
      type: System.Int32
      description: "Maximal längd på JSON-strängar. Standardvärdet är 2097152 tecken, vilket motsvarar Unicode-strängdata 4 MB."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen anges till ett värde som är mindre än ett."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  id: RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Hämtar eller anger gränsen för att begränsa antalet nivåer som objektet ska bearbeta."
  remarks: "Egenskapen RecursionLimit avser antalet nivåer i objekthierarkin som <xref:System.Web.Script.Serialization.JavaScriptSerializer>bearbetas i följande fall: – när den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klass avserialisering av en JSON-sträng.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Web.Script.Serialization.JavaScriptSerializer>      – När den <xref:System.Web.Script.Serialization.JavaScriptSerializer>klass går ett objektdiagram under serialiseringen.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Värdet för RecursionLimit gäller bara när du uttryckligen skapa en instans av <xref:System.Web.Script.Serialization.JavaScriptSerializer>klassen.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Använd den `jsonSerialization` element i konfigurationsfilen för att ange hur många nivåer som objektet ska bearbeta för den interna serialiserare-instans som används av lagret asynkron kommunikation. Läs mer om konfigurationselement för serialisering [hur man: Konfigurera ASP.NET-tjänster i Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int RecursionLimit { get; set; }
    return:
      type: System.Int32
      description: "Antal nivåer för objektet. Standardvärdet är 100."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egenskapen anges till ett värde som är mindre än ett."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  id: RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Registrerar en anpassad konverterare med den <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> instans."
  remarks: "Du kan registrera en eller flera anpassade konverterare med en <xref:System.Web.Script.Serialization.JavaScriptSerializer>instans med hjälp av metoden RegisterConverters.</xref:System.Web.Script.Serialization.JavaScriptSerializer> När anpassade konverterare registreras <xref:System.Web.Script.Serialization.JavaScriptSerializer>använder konverterarna både för att serialisera hanterade typer och för att deserialisera JSON-strängar till hanterade typer.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Flera konverterare kan registreras med samma <xref:System.Web.Script.Serialization.JavaScriptSerializer>-instans och dessa konverterare kan ange stöd för samma typ.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Därför senaste konverteraren som har registrerats för en viss typ är den som ska användas av <xref:System.Web.Script.Serialization.JavaScriptSerializer>att serialisera typen.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       Mer information om anpassade konverterare finns <xref:System.Web.Script.Serialization.JavaScriptConverter>klass.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer>class.  \n  \n [!code-vb[System.Web.Script.Serialization#1](~/add/codesnippet/visualbasic/0b038c1f-1fc5-4957-9daf-_1.aspx)]\n [!code-cs[System.Web.Script.Serialization#1](~/add/codesnippet/csharp/0b038c1f-1fc5-4957-9daf-_1.aspx)]"
  syntax:
    content: public void RegisterConverters (System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter> converters);
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
      description: "En matris som innehåller de anpassa konverterarna som ska registreras."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>converters</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Konverterar ett objekt till en JSON-sträng."
  remarks: "När den <xref:System.Web.Script.Serialization.JavaScriptSerializer>instans serialisering av en typ som en anpassad konverterare är registrerad, serialiserare-anrop i <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metod för att hämta ordlistan av namn/värde-par som kommer att konverteras till en JSON-sträng.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Metoden serialisera kan också utlösa undantag om objektdiagrammet är för komplex eller om registrerade instanser av <xref:System.Web.Script.Serialization.JavaScriptConverter>ha orsakat konverteraren rekursion.</xref:System.Web.Script.Serialization.JavaScriptConverter>"
  example:
  - "The following example provides a simple illustration of how to serialize and deserialize data objects. It requires a class names Person which is shown below.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Serialize (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Att serialisera objektet."
    return:
      type: System.String
      description: "Den serialiserade JSON-strängen."
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den resulterande strängen JSON överskrider värdet för <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> innehåller en cirkelreferens. En cirkelreferens inträffar när ett underordnat objekt har en referens till ett överordnat objekt och det överordnade objektet har en referens till det underordnade objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Gränsen för rekursion som definieras av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>har överskridits.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  id: Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  langs:
  - csharp
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Serialiserar ett objekt och skriver den resulterande JSON-strängen till den angivna <xref:System.Text.StringBuilder>objektet.</xref:System.Text.StringBuilder>"
  remarks: "När den <xref:System.Web.Script.Serialization.JavaScriptSerializer>instans serialisering av en typ som en anpassad konverterare är registrerad, serialiserare-anrop i <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metod för att hämta ordlistan av namn/värde-par som kommer att konverteras till en JSON-sträng.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Den <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>metoden kan också utlösa undantag om objektdiagrammet är för komplex eller om registrerade instanser av <xref:System.Web.Script.Serialization.JavaScriptConverter>ha orsakat konverteraren rekursion.</xref:System.Web.Script.Serialization.JavaScriptConverter> </xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>"
  syntax:
    content: public void Serialize (object obj, System.Text.StringBuilder output);
    parameters:
    - id: obj
      type: System.Object
      description: "Att serialisera objektet."
    - id: output
      type: System.Text.StringBuilder
      description: "Den <xref:System.Text.StringBuilder>objekt som används för att skriva JSON-strängen.</xref:System.Text.StringBuilder>"
  overload: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den resulterande strängen JSON överskrider värdet för <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>.</xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*>       - eller - <code> obj </code> innehåller en cirkelreferens. En cirkelreferens inträffar när ett underordnat objekt har en referens till ett överordnat objekt och det överordnade objektet har en referens till det underordnade objektet."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Gränsen för rekursion som definieras av <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>har överskridits.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer()
  nameWithType: JavaScriptSerializer.JavaScriptSerializer()
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer()
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer(JavaScriptTypeResolver)
  nameWithType: JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.JavaScriptSerializer(JavaScriptTypeResolver)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object,Type)
  nameWithType: JavaScriptSerializer.ConvertToType(Object,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType(Object)
  nameWithType: JavaScriptSerializer.ConvertToType(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(Object)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String,Type)
  nameWithType: JavaScriptSerializer.Deserialize(String,Type)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize(String)
  nameWithType: JavaScriptSerializer.Deserialize(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject(String)
  nameWithType: JavaScriptSerializer.DeserializeObject(String)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(String)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters(IEnumerable<JavaScriptConverter>)
  nameWithType: JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(IEnumerable<JavaScriptConverter>)
- uid: System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JavaScriptConverter>
  nameWithType: IEnumerable<JavaScriptConverter>
  fullName: System.Collections.Generic.IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.Script.Serialization.JavaScriptConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Script.Serialization.JavaScriptConverter
    name: JavaScriptConverter
    nameWithType: JavaScriptConverter
    fullName: JavaScriptConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object)
  nameWithType: JavaScriptSerializer.Serialize(Object)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object)
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize(Object,StringBuilder)
  nameWithType: JavaScriptSerializer.Serialize(Object,StringBuilder)
  fullName: System.Web.Script.Serialization.JavaScriptSerializer.Serialize(Object,StringBuilder)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Web.Script.Serialization.JavaScriptSerializer.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType
  nameWithType: JavaScriptSerializer.ConvertToType
- uid: System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: ConvertToType<T>
  nameWithType: JavaScriptSerializer.ConvertToType<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptSerializer.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Deserialize<T>*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Deserialize<T>
  nameWithType: JavaScriptSerializer.Deserialize<T>
- uid: System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: DeserializeObject
  nameWithType: JavaScriptSerializer.DeserializeObject
- uid: System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: MaxJsonLength
  nameWithType: JavaScriptSerializer.MaxJsonLength
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RecursionLimit
  nameWithType: JavaScriptSerializer.RecursionLimit
- uid: System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: RegisterConverters
  nameWithType: JavaScriptSerializer.RegisterConverters
- uid: System.Web.Script.Serialization.JavaScriptSerializer.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptSerializer
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptSerializer.Serialize
