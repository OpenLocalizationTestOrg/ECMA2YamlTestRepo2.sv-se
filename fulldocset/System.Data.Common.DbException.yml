### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbException
  id: DbException
  children:
  - System.Data.Common.DbException.#ctor
  - System.Data.Common.DbException.#ctor(System.String)
  - System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.Common.DbException.#ctor(System.String,System.Exception)
  - System.Data.Common.DbException.#ctor(System.String,System.Int32)
  langs:
  - csharp
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
  type: Class
  summary: "Basklass för alla undantag för datakällan."
  remarks: "Klassen DbException är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.       Allmän information om hur du hanterar undantag för en .NET Framework-dataprovidern finns <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException>"
  syntax:
    content: 'public abstract class DbException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Data.Common.DbException.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbException
  langs:
  - csharp
  name: DbException()
  nameWithType: DbException.DbException()
  fullName: System.Data.Common.DbException.DbException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Common.DbException&quot;> </xref> klass."
  remarks: "Den <xref:System.Data.Common.DbException>klassen är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.</xref:System.Data.Common.DbException>"
  syntax:
    content: protected DbException ();
    parameters: []
  overload: System.Data.Common.DbException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Common.DbException
  langs:
  - csharp
  name: DbException(String)
  nameWithType: DbException.DbException(String)
  fullName: System.Data.Common.DbException.DbException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Common.DbException&quot;> </xref> klass med angivna felmeddelandet."
  remarks: "Den <xref:System.Data.Common.DbException>klassen är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.</xref:System.Data.Common.DbException>"
  syntax:
    content: protected DbException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Meddelandet som ska visas för det här undantaget."
  overload: System.Data.Common.DbException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.Common.DbException
  langs:
  - csharp
  name: DbException(SerializationInfo,StreamingContext)
  nameWithType: DbException.DbException(SerializationInfo,StreamingContext)
  fullName: System.Data.Common.DbException.DbException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Common.DbException&quot;> </xref> klass med angivna serialiseringsinformation och kontext."
  remarks: "Den <xref:System.Data.Common.DbException>klassen är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.</xref:System.Data.Common.DbException>"
  syntax:
    content: protected DbException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Den <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> som innehåller det serialiserade objektdata om undantag som genereras."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Den <xref:System.Runtime.Serialization.StreamingContext>som innehåller detaljerad information om käll- och målservrar.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.Common.DbException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.Common.DbException
  langs:
  - csharp
  name: DbException(String,Exception)
  nameWithType: DbException.DbException(String,Exception)
  fullName: System.Data.Common.DbException.DbException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Common.DbException&quot;> </xref> klass med angivna felmeddelandet och en referens till det interna undantaget som är orsaken till det här undantaget."
  remarks: "Den <xref:System.Data.Common.DbException>klassen är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.</xref:System.Data.Common.DbException>"
  syntax:
    content: protected DbException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Meddelandet felsträng."
    - id: innerException
      type: System.Exception
      description: "Referensen i det interna undantaget."
  overload: System.Data.Common.DbException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Data.Common.DbException
  langs:
  - csharp
  name: DbException(String,Int32)
  nameWithType: DbException.DbException(String,Int32)
  fullName: System.Data.Common.DbException.DbException(String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.Common.DbException&quot;> </xref> klass med angivna felmeddelande och felkoden."
  remarks: "Den <xref:System.Data.Common.DbException>klassen är en abstrakt klass som används som basklass för provider-specifik undantag klassen implementeringar.</xref:System.Data.Common.DbException>"
  syntax:
    content: protected DbException (string message, int errorCode);
    parameters:
    - id: message
      type: System.String
      description: "Felmeddelandet som förklarar orsaken till undantaget."
    - id: errorCode
      type: System.Int32
      description: "Felkod för undantaget."
  overload: System.Data.Common.DbException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.Data.Common.DbException.#ctor
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException()
  nameWithType: DbException.DbException()
  fullName: System.Data.Common.DbException.DbException()
- uid: System.Data.Common.DbException.#ctor(System.String)
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException(String)
  nameWithType: DbException.DbException(String)
  fullName: System.Data.Common.DbException.DbException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException(SerializationInfo,StreamingContext)
  nameWithType: DbException.DbException(SerializationInfo,StreamingContext)
  fullName: System.Data.Common.DbException.DbException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Common.DbException.#ctor(System.String,System.Exception)
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException(String,Exception)
  nameWithType: DbException.DbException(String,Exception)
  fullName: System.Data.Common.DbException.DbException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Common.DbException.#ctor(System.String,System.Int32)
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException(String,Int32)
  nameWithType: DbException.DbException(String,Int32)
  fullName: System.Data.Common.DbException.DbException(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbException.#ctor*
  parent: System.Data.Common.DbException
  isExternal: false
  name: DbException
  nameWithType: DbException.DbException
