### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnection
  id: OleDbConnection
  children:
  - System.Data.OleDb.OleDbConnection.#ctor
  - System.Data.OleDb.OleDbConnection.#ctor(System.String)
  - System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.BeginTransaction
  - System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  - System.Data.OleDb.OleDbConnection.Close
  - System.Data.OleDb.OleDbConnection.ConnectionString
  - System.Data.OleDb.OleDbConnection.ConnectionTimeout
  - System.Data.OleDb.OleDbConnection.CreateCommand
  - System.Data.OleDb.OleDbConnection.CreateDbCommand
  - System.Data.OleDb.OleDbConnection.Database
  - System.Data.OleDb.OleDbConnection.DataSource
  - System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  - System.Data.OleDb.OleDbConnection.GetSchema
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  - System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  - System.Data.OleDb.OleDbConnection.InfoMessage
  - System.Data.OleDb.OleDbConnection.Open
  - System.Data.OleDb.OleDbConnection.Provider
  - System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  - System.Data.OleDb.OleDbConnection.ResetState
  - System.Data.OleDb.OleDbConnection.ServerVersion
  - System.Data.OleDb.OleDbConnection.State
  - System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
  type: Class
  summary: "Representerar en öppen anslutning till en datakälla."
  remarks: "En OleDbConnection-objektet representerar en unik anslutning till en datakälla. Med en klient/server-databas motsvarar den en nätverksanslutning till servern. Beroende på de funktioner som stöds av den inbyggda OLE DB-providern, kanske vissa metoder eller egenskaper för ett objekt i OleDbConnection inte tillgänglig.       När du skapar en instans av OleDbConnection ställs alla egenskaper till sina ursprungliga värden. En lista över dessa värden finns i konstruktorn OleDbConnection.       Du kan öppna flera DataReader på en enda OleDbConnection. Om du använder OLE DB-providern inte stöder fler än en DataReader på en enda anslutning, öppnas providern implicit ytterligare en anslutning för varje.       Om OleDbConnection går utanför omfånget kan stängd den inte. Därför måste du uttryckligen stänga anslutningen genom att anropa <xref:System.Data.OleDb.OleDbConnection.Close%2A>eller **ta bort**, eller genom att använda OleDbConnection-objekt i en `Using` instruktionen.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > För att distribuera program med höga prestanda, måste du använda anslutningspooler. Du behöver inte aktivera anslutningspoolen eftersom providern hanterar detta automatiskt när du använder .NET Framework Data Provider för OLE DB. Mer information om hur du använder anslutning pool med .NET Framework Data Provider för OLE DB, se [OLE DB, ODBC- och Oracle-anslutningspooler](~/add/includes/ajax-current-ext-md.md).       Om ett allvarligt <xref:System.Data.OleDb.OleDbException>(till exempel en SQL Server allvarlighetsgrad för 20 eller högre) har genererats av metoden Kör en <xref:System.Data.OleDb.OleDbCommand>, OleDbConnection kanske är stängt.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbException> Dock kan användaren öppna anslutningen och fortsätta.       Ett program som skapar en instans av objektet OleDbConnection kan kräva direkta och indirekta anropare att ha behörighet att koden genom att inställningen deklarativ eller tvingande säkerhet krav. OleDbConnection gör krav för säkerhet med hjälp av den <xref:System.Data.OleDb.OleDbPermission>objekt.</xref:System.Data.OleDb.OleDbPermission> Användarna kan kontrollera att koden har behörighet genom att använda den <xref:System.Data.OleDb.OleDbPermissionAttribute>objekt.</xref:System.Data.OleDb.OleDbPermissionAttribute> Användare och administratörer kan också använda den [Caspol.exe (Code Access princip säkerhetsverktyget)](~/add/includes/ajax-current-ext-md.md) att ändra säkerhetsprinciper på datorn, användare och enterprise. Mer information finns i [Code Access Security och ADO.NET](~/add/includes/ajax-current-ext-md.md).       Mer information om hur du hanterar varnings- och informativa meddelanden från Dataservern finns [Anslutningshändelser](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > I OleDbConnection objektet stöder inte ange eller hämta dynamiska egenskaper som är specifika för en OLE DB-providern. Egenskaper som kan anges i anslutningssträngen för OLE DB-providern stöds."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an OleDbConnection. The OleDbConnection is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>. The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection. To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-cs[Classic WebData OleDbConnection Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_3_1.cs)]\n [!code-vb[Classic WebData OleDbConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_3_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> klass."
  remarks: "När en ny instans av <xref:System.Data.OleDb.OleDbConnection>skapas, läsning och skrivning egenskaper anges till följande ursprungliga värden om de har angetts med hjälp av deras associerade nyckelord i den <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>egenskapen.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| tom sträng (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| tom sträng (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| tom sträng (&quot;&quot;) |       Du kan ändra värdet för dessa egenskaper genom att använda den <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>egenskapen.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_7_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_7_1.vb)]"
  syntax:
    content: public OleDbConnection ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initierar en ny instans av den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> klass med den angivna anslutningssträngen."
  remarks: "När en ny instans av <xref:System.Data.OleDb.OleDbConnection>skapas, läsning och skrivning egenskaper anges till följande ursprungliga värden om de har angetts med hjälp av deras associerade nyckelord i den <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>egenskapen.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection>      | Egenskaper | Ursprungligt värde |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.OleDb.OleDbConnection.Database%2A>| tom sträng (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbConnection.DataSource%2A>| tom sträng (&quot;&quot;) |       Du kan ändra värdet för dessa egenskaper genom att använda den <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>egenskapen.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection.DataSource%2A> </xref:System.Data.OleDb.OleDbConnection.Database%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public OleDbConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Anslutningen används för att öppna databasen."
  overload: System.Data.OleDb.OleDbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Som ska läggas till."
    return:
      type: System.Data.Common.DbTransaction
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Startar en transaktion med aktuellt <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> värde."
  remarks: "Du måste uttryckligen allokera eller återställa en transaktion med hjälp av den <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>eller <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>metod.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Kontrollera att .NET Framework Data Provider för OLE DB-transaktion Hanteringsmodellen utförs korrekt, Undvik att använda andra modeller för transaktion, till exempel de som tillhandahålls av datakällan."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_23_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Ett objekt som representerar den nya transaktionen."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallella transaktioner stöds inte."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Startar en transaktion med den angivna Isoleringsnivån."
  remarks: "Du måste uttryckligen allokera eller återställa en transaktion med hjälp av den <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>eller <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>metod.</xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> </xref:System.Data.OleDb.OleDbTransaction.Commit%2A> Kontrollera att .NET Framework Data Provider för OLE DB-transaktion Hanteringsmodellen utförs korrekt, Undvik att använda andra modeller för transaktion, till exempel de som tillhandahålls av datakällan.      > [!NOTE] > Om du inte anger en isoleringsnivå standardisoleringsnivån för den underliggande providern används. Om du vill ange en isoleringsnivå med metoden BeginTransaction använda överlagring som tar den `isolationLevel` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_25_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_25_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Isoleringsnivån som transaktionen ska köras under."
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "Ett objekt som representerar den nya transaktionen."
  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Parallella transaktioner stöds inte."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Ändrar den aktuella databasen för en öppen <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  remarks: "Värdet som angetts i den `database` parametern måste vara ett giltigt databasnamn. Den `database` parametern får inte innehålla ett null-värde, en tom sträng eller en sträng med endast blanksteg."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/csharp/m-system.data.oledb.oled_20_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_20_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Databasnamnet."
  overload: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Databasnamnet är inte giltigt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är inte öppen."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Det går inte att ändra databasen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Close
  id: Close
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Stänger anslutningen till datakällan."
  remarks: "Close-metoden återställer alla väntande transaktioner. Den sedan släpper anslutningen till anslutningspoolen eller stänger anslutningen om anslutningspooler är inaktiverad. Om Stäng anropas vid hantering av en <xref:System.Data.Common.DbConnection.StateChange>händelse, ingen ytterligare <xref:System.Data.Common.DbConnection.StateChange>händelser skickas.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Ett program kan anropa Close mer än en gång. Inget undantag genereras.      > [!CAUTION] > Inte anropar Close eller **ta bort** på en <xref:System.Data.OleDb.OleDbConnection>, en <xref:System.Data.OleDb.OleDbDataReader>, eller andra hanterat objekt i den `Finalize` -metoden i sammanfattningen</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> Du bör endast släpper ohanterade resurser som din klass äger direkt i en slutföraren. Om klassen inte äger ohanterade resurser innehåller inte en `Finalize` metod i klassdefinition. Mer information finns i [skräpinsamling](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar eller anger den sträng som används för att öppna en databas."
  remarks: "The ConnectionString is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \n  \n-   The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \n  \n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set ConnectionString, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \n  \n```  \n\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\"  \n  \n\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb\"  \n  \n\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\"  \n```  \n  \n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \n  \n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \n  \n The ConnectionString property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the ConnectionString.  \n  \n Resetting the ConnectionString on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \n  \n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \n  \n> [!CAUTION]\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \n  \n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \n  \n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.  \n  \n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \n  \n```  \n\"key==word=value\"  \n```  \n  \n the keyword is \"key=word\" and the value is \"value\".  \n  \n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \n  \n Keywords are not case sensitive.  \n  \n> [!CAUTION]\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_4_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_4_1.vb)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "OLE DB-providern anslutningssträngen som innehåller namnet på datakällan och andra parametrar som behövs för att skapa den första anslutningen. Standardvärdet är en tom sträng."
  overload: System.Data.OleDb.OleDbConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "En ogiltig anslutning strängargument har angetts eller ett strängargument behövs inte har angetts."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar väntetiden vid försök att upprätta en anslutning upprättas innan försöket avbryts och ett fel genereras."
  remarks: "Värdet 0 anger att ingen gräns och bör inte användas i en <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>eftersom ett försök att ansluta väntar utan tidsbegränsning.</xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Tid i sekunder för en anslutning för att öppna. Standardvärdet är 15 sekunder."
  overload: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Värdet är mindre än 0."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Skapar och returnerar ett <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> som är associerat med den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OleDb.OleDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "En <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> objekt."
  overload: System.Data.OleDb.OleDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Database
  id: Database
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar namnet på den aktuella databasen eller databas som ska användas när en anslutning har öppnats."
  remarks: "Egenskapen databasen uppdateras dynamiskt. Om du ändrar den aktuella databasen använder en SQL-instruktion eller <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>-metoden skickas ett meddelande med information och egenskapen uppdateras automatiskt.</xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_14_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_14_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Namnet på den aktuella databasen eller namnet på databasen som ska användas när en anslutning har öppnats. Standardvärdet är en tom sträng."
  overload: System.Data.OleDb.OleDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar namnet på servern och namnet på datakällan."
  remarks: "Om anslutningen till databasen är stängd visas den `DataSource` -egenskap returnerar oavsett finns i `ConnectionString` för datakällan nyckelord. Om anslutningen är öppen och `ConnectionString` datakälla nyckelordet värdet börjar med &quot;| datadirectory |&quot;, returnerar egenskapen oavsett finns i `ConnectionString` för datakällan nyckelordet endast. Om anslutningen till databasen är öppen, returnerar egenskapen ursprunglig provider returnerar för den `DBPROP_INIT_DATASOURCE,` och om det är tomt, den inbyggda providern `DBPROP_DATASOURCENAME` returneras."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_26_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_26_1.vb)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Servernamn eller namnet på datakällan. Standardvärdet är en tom sträng."
  overload: System.Data.OleDb.OleDbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Som ska läggas till."
  overload: System.Data.OleDb.OleDbConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Att registrera sig i den angivna transaktionen som en distribuerad transaktion."
  remarks: "Ny i ADO.NET 2.0 finns stöd för att använda den <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metod för att medverka i en distribuerad transaktion.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Eftersom den anger en anslutning i en <xref:System.Transactions.Transaction>instansen **EnlistTransaction** drar nytta av funktionerna i den <xref:System.Transactions>namnområde för hantering av distribuerade transaktioner, vilket gör det bättre att **EnlistDistributedTransaction** för detta ändamål.</xref:System.Transactions> </xref:System.Transactions.Transaction> Mer information finns i [distribuerade transaktioner](~/add/includes/ajax-current-ext-md.md).       Du kan fortsätta att medverka i en befintlig distribuerad transaktion med metoden EnlistDistributedTransaction om automatisk registrering är inaktiverad. Ta med i en befintlig distribuerad transaktion ser till att, om transaktionen bekräftats eller återställts, ändringar har gjorts av koden på datakällan är också bekräftats eller återställts. Mer information om distribuerade transaktioner finns [distribuerade transaktioner](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction returnerar ett undantag om den <xref:System.Data.OleDb.OleDbConnection>redan har påbörjat en transaktion med <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> </xref:System.Data.OleDb.OleDbConnection> Men om det är en lokal transaktion som startades vid datakällan transaktionen (exempelvis genom att uttryckligen köra instruktionen BEGIN TRANSACTION med ett <xref:System.Data.OleDbClient.OleDbCommand>objekt), EnlistDistributedTransaction återställer lokala transaktionen och registrera sig i den befintliga distribuerade transaktionen som begärs.</xref:System.Data.OleDbClient.OleDbCommand> Observera att den lokala transaktionen återställdes och ansvarar för att hantera alla lokala transaktioner inte startas med hjälp av<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> visas inte"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "En referens till en befintlig <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> där du vill registrera."
  overload: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Att registrera sig i den angivna transaktionen som en distribuerad transaktion."
  remarks: 'Ny i ADO.NET 2.0 finns stöd för att använda den <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metod för att medverka i en distribuerad transaktion.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Eftersom den anger en anslutning i en <xref:System.Transactions.Transaction>instansen **EnlistTransaction** drar nytta av funktionerna i den <xref:System.Transactions>namnområde för hantering av distribuerade transaktioner, vilket gör det bättre att **EnlistDistributedTransaction**, som använder en <xref:System.EnterpriseServices.ITransaction>objektet.</xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions> </xref:System.Transactions.Transaction> Har något annorlunda semantik: när en anslutning är uttryckligen registrerad på en transaktion, inte unenlisted eller utför en annan transaktion tills den första transaktionen har slutförts. Mer information om distribuerade transaktioner finns [distribuerade transaktioner](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "En referens till en befintlig <xref href=&quot;System.Transactions.Transaction&quot;> </xref> där du vill registrera."
  overload: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  id: GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returnerar schemainformation från en datakälla som anges med ett GUID och när det gäller de angivna begränsningarna."
  remarks: "Schematabellen returneras som en <xref:System.Data.DataTable>som har samma format som OLE DB-schemaraduppsättningen som anges av den `schema` parameter.</xref:System.Data.DataTable> Använd den `restrictions` parametern för att filtrera rader som returneras i den <xref:System.Data.DataTable>(till exempel genom att ange begränsningar för tabellens namn, typ, ägare eller schemat).</xref:System.Data.DataTable> När du skickar värdena i matrisen måste innehålla tomma strängar eller null-värden för matriselement som inte innehåller värden. Om du skickar en tom matris till `restrictions`, alla rader (en för varje tabell) returneras i ordning. Värdena i matrisen motsvara ordningsföljden kolumnerna i källtabellen och <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Varje element i matrisen begränsningar jämförs med innehållet i motsvarande kolumn i schemaraduppsättningen. Det första elementet i matrisen begränsningar är jämfört med att första kolumnen i raduppsättningen. Om ett element i begränsningen inte är null läggs endast rader från schemaraduppsättningen som exakt matchar värdet för begränsningen till i resulterande <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Den <xref:System.Data.OleDb.OleDbConnection>metodanrop underliggande OLE DB **IDBSchemaRowset::GetRowset** metod med common language runtime konvertering standardregler.</xref:System.Data.OleDb.OleDbConnection> Mer information finns i [COM-datatyper](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).       Du kan hämta information om litteraler med hjälp av <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals> Detta ger information som motsvarar anropar OLE DB **IDBInfo::GetLiteralInfo** gränssnittet eller ADO **Connection.OpenSchema** metod med den `adSchemaDBInfoLiterals` konstant."
  example:
  - "The following sample returns a list of tables in a database.  \n  \n [!code-cs[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/csharp/da103458-7630-4900-9261-_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/add/codesnippet/visualbasic/da103458-7630-4900-9261-_1.vb)]"
  syntax:
    content: public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);
    parameters:
    - id: schema
      type: System.Guid
      description: "En av de <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid&quot;> </xref> värden som anger Schematabellen för att returnera."
    - id: restrictions
      type: System.Object[]
      description: "En <xref:System.Object>matris med-begränsningsvärden.</xref:System.Object> Dessa används i den ordning som kolumnerna begränsning. Det vill säga första begränsningsvärdet gäller för den första kolumnen begränsning, andra begränsningsvärdet gäller för andra begränsning kolumnen och så vidare."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller den begärda schemainformationen."
  overload: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  exceptions:
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Den angivna uppsättningen begränsningar är ogiltigt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> är stängd."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Den angivna schemaraduppsättningen stöds inte av OLE DB-providern.       - eller - <code> schema </code> parametern innehåller ett värde av <xref href=&quot;System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&quot;> </xref> och <code> restrictions </code> parametern innehåller en eller flera begränsningar."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  id: GetSchema
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> med den angivna strängen för schemanamnet."
  remarks: "När `collectionName` anges som null, den <xref:System.Data.DataTable>innehåller information om de metadata som är tillgänglig och dess begränsningar.</xref:System.Data.DataTable>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Anger namnet på scheman som ska returneras."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returnerar schemainformation för datakällan för detta <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> med den angivna strängen för schemanamnet och angivna Strängmatrisen för värdena som begränsning."
  remarks: "När `collectionName` anges som null, den <xref:System.Data.DataTable>innehåller information om de metadata som är tillgänglig och dess begränsningar.</xref:System.Data.DataTable>       Den `restrictionValues` kan ange parametern *n* djup med värden som anges av begränsningssamlingen för en specifik samling. Du måste ange de här begränsningarna till null och publicera sedan lämpligt värde i för begränsningen som du vill ange ett värde för för att ange värden för en viss begränsning, och inte ange värden för andra begränsningar.       Ett exempel på detta är &quot;Tabeller&quot;-samling. Om du vill få tillbaka endast tabeller som är kopplade till ägaren &quot;Carl&quot; &quot;Tabeller&quot; samlingen innehåller tre begränsningar (databas, ägare och namn), måste du skicka in följande värden (minst): null &quot;Carl&quot;. Om en begränsningsvärdet inte skickas, som standardvärden används för denna begränsning. Detta är samma mappning som passerar null, vilket skiljer sig från passerar i en tom sträng för parametervärdet. I så fall, en tom sträng (&quot;&quot;) betraktas som värdet för den angivna parametern."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Anger namnet på scheman som ska returneras."
    - id: restrictionValues
      type: System.String[]
      description: "Anger en begränsningsvärden för det begärda schemat."
    return:
      type: System.Data.DataTable
      description: "En <xref href=&quot;System.Data.DataTable&quot;> </xref> som innehåller schemainformation."
  overload: System.Data.OleDb.OleDbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Inträffar när providern skickar en varning eller ett informationsmeddelande."
  remarks: "Klienter som vill bearbeta varningar och informationsmeddelanden som skickats av servern ska skapa en <xref:System.Data.OleDb.OleDbInfoMessageEventHandler>ombud för att lyssna på den här händelsen.</xref:System.Data.OleDb.OleDbInfoMessageEventHandler>       InfoMessage-händelsen inträffar när ett meddelande med låg angelägenhetsgrad returneras från datakällan. Låg angelägenhetsgrad meddelanden är de som inte orsakar ett undantag. För Microsoft SQL Server, det innehåller felmeddelanden som har en allvarlighetsgrad som är 10 eller mindre för mer information och exempel finns [Anslutningshändelser](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OleDb.OleDbInfoMessageEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Open
  id: Open
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Öppnar en databasanslutning med egenskapsinställningar som anges av <xref:System.Data.OleDb.OleDbConnection.ConnectionString*>.</xref:System.Data.OleDb.OleDbConnection.ConnectionString*>"
  remarks: "Den <xref:System.Data.OleDb.OleDbConnection>ritar en öppen anslutning från anslutningspoolen om det inte finns.</xref:System.Data.OleDb.OleDbConnection> I annat fall upprättar den en ny anslutning till datakällan. Du kan öppna flera DataReader på en enda <xref:System.Data.OleDb.OleDbConnection>.</xref:System.Data.OleDb.OleDbConnection> Om OLEDB-providern som du använder inte stöder fler än en aktiv DataReader på en enda anslutning, öppnas implicit ytterligare en anslutning för varje OLEDB-providern.      > [!NOTE] > Om den <xref:System.Data.OleDb.OleDbConnection>går ut av omfång, inte är stängd.</xref:System.Data.OleDb.OleDbConnection> Därför måste du uttryckligen stänga anslutningen genom att anropa <xref:System.Data.OleDb.OleDbConnection.Close%2A>eller **ta bort**, eller att använda anslutning i en `Using` instruktionen.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är redan öppen."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Ett anslutningsnivån fel inträffade när du öppnar anslutningen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar namnet på OLE DB-providern som angivits i den &quot;Provider =&quot;-satsen i anslutningssträngen."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_1_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_1_1.vb)]"
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "Namnet på providern som anges i den &quot;Provider =&quot;-satsen i anslutningssträngen. Standardvärdet är en tom sträng."
  overload: System.Data.OleDb.OleDbConnection.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Anger att den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> objekt pool kan frigöras när den sista underliggande anslutningen släpps."
  remarks: "`ReleaseObjectPool`kan anropas för att frigöra de resurser som annars skulle reserveras för pooler <xref:System.Data.OleDb.OleDbConnection>objekt.</xref:System.Data.OleDb.OleDbConnection> Du kanske vill anropa den här metoden om anslutningsobjektet inte ska exempelvis användas igen för den tid som OLE DB services normalt håller poolade anslutningar aktiva. Observera att anropa metoden enbart faktiskt inte frigör de aktiva anslutningarna som finns i poolen.       Följande måste inträffa innan poolen slutligt: 1.  Anropa <xref:System.Data.OleDb.OleDbConnection.Close%2A>att returnera connection-objektet till poolen.</xref:System.Data.OleDb.OleDbConnection.Close%2A>      2.  Tillåt varje anslutningsobjekt timeout för poolen.      3.  Anropa ReleaseObjectPool.      4.  Anropa skräpinsamling.       Å andra sidan om du anropar <xref:System.Data.OleDb.OleDbConnection.Close%2A>på alla aktiva anslutningar och anropa skräpinsamling, men inte anropa ReleaseObjectPool, de resurser som reserverats för grupperade objekt förblir tillgängliga.</xref:System.Data.OleDb.OleDbConnection.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  \n  \n [!code-cs[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_15_1.cs)]\n [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_15_1.vb)]"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ResetState
  id: ResetState
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Uppdateringar av <xref:System.Data.OleDb.OleDbConnection.State*>-egenskapen för den <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> objekt.</xref:System.Data.OleDb.OleDbConnection.State*>"
  remarks: "Vissa OLE DB-providrar kan kontrollera det aktuella tillståndet för anslutningen. Till exempel om databasservern har återvunnits eftersom du har öppnat ditt <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A>egenskapen fortsätter att returnera `Open`.</xref:System.Data.OleDb.OleDbConnection.State%2A> </xref:System.Data.OleDb.OleDbConnection> Om du arbetar med en OLE DB-Provider som stöder avsökning för den här informationen på en live-anslutning att anropa metoden ResetState och sedan kontrollera den <xref:System.Data.OleDb.OleDbConnection.State%2A>egenskapen om anslutningen är inte längre öppna.</xref:System.Data.OleDb.OleDbConnection.State%2A> Metoden ResetState är beroende av funktionerna i OLE DB-providern för att kontrollera tillståndet för aktuella anslutningen. Kontrollera leverantörens dokumentation för information om DBPROP_CONNECTIONSTATUS för att fastställa om din OLE DB-Provider stöder den här funktionen."
  syntax:
    content: public void ResetState ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnection.ResetState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar en sträng som innehåller versionen av den server som klienten är ansluten."
  remarks: "Egenskapen ServerVersion mappar till OLE DB DBPROP_DBMSVER-egenskap. Om ServerVersion inte stöds av den underliggande OLE DB-providern, returneras en tom sträng.       Versionen som är i formatet *##. ##. ###*, där de två första siffrorna är den högre versionen, följande två siffror är den lägre versionen och de sista fyra siffrorna är den utgivna versionen. Providern måste återge produktversionen i det här formuläret men kan även lägga till produktspecifika version, till exempel &quot;04.01.0000 Rdb 4.1&quot;. Strängen har formatet *major.minor.build*, där högre och lägre är exakt två siffror och bygga är exakt fyra siffror."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_6_1.vb)]\n [!code-cs[Classic WebData OleDbConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_6_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Versionen av den anslutna servern."
  overload: System.Data.OleDb.OleDbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningen är stängd."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.State
  id: State
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Hämtar aktuell status för anslutningen."
  remarks: "Följande tillåts tillståndsändringar: – från `Closed` till `Open`med hjälp av den <xref:System.Data.OleDb.OleDbConnection.Open%2A>metod för den <xref:System.Data.OleDb.OleDbConnection>objekt.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Open%2A>      -Från `Open` till `Closed`, antingen med hjälp av <xref:System.Data.OleDb.OleDbConnection.Close%2A>metoden eller **ta bort** metod för den <xref:System.Data.OleDb.OleDbConnection>objekt.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.Close%2A>      > [!NOTE] > I tidigare version av .NET Framework anropar egenskapen State ökade kostnader för programmet eftersom varje anrop orsakade ett anrop till OLE DB DBPROP_CONNECTIONSTATUS-egenskapen för en öppen anslutning. Med versionen av .NET Framework 2.0 är det inte längre ett problem."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "En binär kombination av den <xref href=&quot;System.Data.ConnectionState&quot;> </xref> värden. Standardvärdet är stängd."
  overload: System.Data.OleDb.OleDbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "En beskrivning av den här medlemmen finns &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Den här medlemmen är en implementering för medlem av explicit gränssnitt. Det kan användas endast när den <xref:System.Data.OleDb.OleDbConnection>instans omvandlas till ett <xref:System.ICloneable>gränssnitt.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "En ny <xref:System.Object>som är en kopia av den här instansen.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbConnection.#ctor
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection()
  nameWithType: OleDbConnection.OleDbConnection()
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection()
- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection(String)
  nameWithType: OleDbConnection.OleDbConnection(String)
  fullName: System.Data.OleDb.OleDbConnection.OleDbConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OleDbConnection.BeginTransaction()
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction()
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OleDb.OleDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OleDbConnection.ChangeDatabase(String)
  fullName: System.Data.OleDb.OleDbConnection.ChangeDatabase(String)
- uid: System.Data.OleDb.OleDbConnection.Close
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close()
  nameWithType: OleDbConnection.Close()
  fullName: System.Data.OleDb.OleDbConnection.Close()
- uid: System.Data.OleDb.OleDbConnection.ConnectionString
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
  fullName: System.Data.OleDb.OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
  fullName: System.Data.OleDb.OleDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnection.CreateCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OleDbConnection.CreateCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateCommand()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OleDbConnection.CreateDbCommand()
  fullName: System.Data.OleDb.OleDbConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OleDb.OleDbConnection.Database
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
  fullName: System.Data.OleDb.OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
  fullName: System.Data.OleDb.OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbConnection.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OleDbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OleDb.OleDbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable(Guid,Object[])
  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
  fullName: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(Guid,Object[])
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.GetSchema
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OleDbConnection.GetSchema()
  fullName: System.Data.OleDb.OleDbConnection.GetSchema()
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OleDbConnection.GetSchema(String)
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String)
- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OleDbConnection.GetSchema(String,String[])
  fullName: System.Data.OleDb.OleDbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbConnection.InfoMessage
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OleDbConnection.InfoMessage
  fullName: System.Data.OleDb.OleDbConnection.InfoMessage
- uid: System.Data.OleDb.OleDbInfoMessageEventHandler
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbInfoMessageEventHandler
  nameWithType: OleDbInfoMessageEventHandler
  fullName: System.Data.OleDb.OleDbInfoMessageEventHandler
- uid: System.Data.OleDb.OleDbConnection.Open
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open()
  nameWithType: OleDbConnection.Open()
  fullName: System.Data.OleDb.OleDbConnection.Open()
- uid: System.Data.OleDb.OleDbConnection.Provider
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
  fullName: System.Data.OleDb.OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OleDbConnection.ReleaseObjectPool()
  fullName: System.Data.OleDb.OleDbConnection.ReleaseObjectPool()
- uid: System.Data.OleDb.OleDbConnection.ResetState
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState()
  nameWithType: OleDbConnection.ResetState()
  fullName: System.Data.OleDb.OleDbConnection.ResetState()
- uid: System.Data.OleDb.OleDbConnection.ServerVersion
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
  fullName: System.Data.OleDb.OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
  fullName: System.Data.OleDb.OleDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbConnection.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnection.#ctor*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection.OleDbConnection
- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OleDbConnection.BeginDbTransaction
- uid: System.Data.OleDb.OleDbConnection.BeginTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OleDbConnection.BeginTransaction
- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OleDbConnection.ChangeDatabase
- uid: System.Data.OleDb.OleDbConnection.Close*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Close
  nameWithType: OleDbConnection.Close
- uid: System.Data.OleDb.OleDbConnection.ConnectionString*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OleDbConnection.ConnectionString
- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OleDbConnection.ConnectionTimeout
- uid: System.Data.OleDb.OleDbConnection.CreateCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OleDbConnection.CreateCommand
- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OleDbConnection.CreateDbCommand
- uid: System.Data.OleDb.OleDbConnection.Database*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Database
  nameWithType: OleDbConnection.Database
- uid: System.Data.OleDb.OleDbConnection.DataSource*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnection.DataSource
- uid: System.Data.OleDb.OleDbConnection.Dispose*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Dispose
  nameWithType: OleDbConnection.Dispose
- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OleDbConnection.EnlistDistributedTransaction
- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OleDbConnection.EnlistTransaction
- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetOleDbSchemaTable
  nameWithType: OleDbConnection.GetOleDbSchemaTable
- uid: System.Data.OleDb.OleDbConnection.GetSchema*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: GetSchema
  nameWithType: OleDbConnection.GetSchema
- uid: System.Data.OleDb.OleDbConnection.Open*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Open
  nameWithType: OleDbConnection.Open
- uid: System.Data.OleDb.OleDbConnection.Provider*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: Provider
  nameWithType: OleDbConnection.Provider
- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OleDbConnection.ReleaseObjectPool
- uid: System.Data.OleDb.OleDbConnection.ResetState*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ResetState
  nameWithType: OleDbConnection.ResetState
- uid: System.Data.OleDb.OleDbConnection.ServerVersion*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OleDbConnection.ServerVersion
- uid: System.Data.OleDb.OleDbConnection.State*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: State
  nameWithType: OleDbConnection.State
- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbConnection.System.ICloneable.Clone
