### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider
  id: IInstanceContextProvider
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  langs:
  - csharp
  name: IInstanceContextProvider
  nameWithType: IInstanceContextProvider
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider
  type: Interface
  summary: "Implementera att delta i att skapa eller välja i en &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; objekt, särskilt för att aktivera delade sessioner."
  remarks: "Implementera gränssnittet IInstanceContextProvider för att tillhandahålla rätt <xref:System.ServiceModel.InstanceContext?displayProperty=fullName>objekt i systemet.</xref:System.ServiceModel.InstanceContext?displayProperty=fullName> Det här gränssnittet implementeras normalt för att stödja delade sessioner, aktivera tjänsten instans poolning, styra livslängd instanser av tjänsten eller grupp kontexter mellan klienter.       Infoga exempelvis en anpassad IInstanceContextProvider för att avgöra vilka session eller ett anrop från en klient är associerad med. Om du vill implementera delning <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext> Ett exempel som visar delning av Instanskontexterna finns [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).      > [!NOTE] > När en IInstanceContextProvider infogas i [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], normal egenskapen som styr skapandet av <xref:System.ServiceModel.InstanceContext>objekt (den <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName>egenskapen) inte längre är ikryssad och har ingen effekt.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>       En mer allmän funktion som du kan initiera <xref:System.ServiceModel.InstanceContext>objekt när de skapas (till exempel för att koppla anpassade tillägg till varje <xref:System.ServiceModel.InstanceContext>) är i <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public interface IInstanceContextProvider
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Anropas när ett nytt meddelande tas emot."
  remarks: "GetExistingInstanceContext-metoden anropas när ett meddelande tas emot. Returnera den <xref:System.ServiceModel.InstanceContext>objekt som du vill bearbeta meddelandet, eller `null`.</xref:System.ServiceModel.InstanceContext> I fall av `null`, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] skapar en ny <xref:System.ServiceModel.InstanceContext>objekt för meddelandet och sedan anropar den <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A>metoden.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> </xref:System.ServiceModel.InstanceContext>       Om du återgår `null`, nya <xref:System.ServiceModel.InstanceContext>objekt som passerar bandbreddsbegränsning systemet och ökar antalet <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Det inkommande meddelandet."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "Den kanal som du fick meddelandet."
    return:
      type: System.ServiceModel.InstanceContext
      description: "Den &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; objekt som används för att bearbeta meddelandet, returnera <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> instruera [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] att skapa en ny <xref:System.ServiceModel.InstanceContext>objektet.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Anropas när <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> returneras från den <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*>metoden.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*>"
  remarks: "InitializeInstanceContext anropas när <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A>returnerar `null` och en ny <xref:System.ServiceModel.InstanceContext>objektet har skapats.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> Den här metoden anropas för att meddela dig som en ny <xref:System.ServiceModel.InstanceContext>har skapats.</xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Den nya &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; objekt."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Det inkommande meddelandet."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "Den kanal som du fick meddelandet."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  id: IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Anropas när alla <xref:System.ServiceModel.InstanceContext>aktiviteter har slutförts för att aktivera implementerare att förhindra att den <xref:System.ServiceModel.InstanceContext>från återvinns.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>"
  remarks: "IsIdle anropas när [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] håller på att stänga och Återanvänd en inaktiv <xref:System.ServiceModel.InstanceContext>objekt så att du kan informera körningsmiljön om du vill fortsätta tiden.</xref:System.ServiceModel.InstanceContext>       Ett exempel som visar delning av Instanskontexterna finns [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)."
  syntax:
    content: public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Den <xref:System.ServiceModel.InstanceContext>objekt som anses vara inaktiv.</xref:System.ServiceModel.InstanceContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] är att stänga och återvinna det <xref:System.ServiceModel.InstanceContext>objektet och ändra värdet på &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName&gt;, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  id: NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Anropas när den <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*>metoden returnerar <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att aktivera implementerare att tillhandahålla ett återanrop för att meddela [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] när den <xref:System.ServiceModel.InstanceContext>objektet har slutförts.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*>"
  remarks: "NotifyIdle-metoden anropas när den <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>metoden returnerar `false` så att du kan ange [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] med en <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName>objekt att du använder för att informera körningsmiljön som den <xref:System.ServiceModel.InstanceContext>har slutfört arbetet.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> När den <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName>objektet meddelar körningsmiljön som den <xref:System.ServiceModel.InstanceContext>har slutfört arbetet, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] anrop <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>igen.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> </xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> Den här cykeln fortsätter tills <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>returnerar `true` och kontexten är stängd och återanvänds.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>"
  syntax:
    content: public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: callback
      type: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
      description: "Den <xref href=&quot;System.ServiceModel.Dispatcher.InstanceContextIdleCallback&quot;> </xref> objekt som meddelar [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] när den <xref:System.ServiceModel.InstanceContext>objektet är stängt och återanvänds.</xref:System.ServiceModel.InstanceContext>"
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Aktuellt <xref:System.ServiceModel.InstanceContext>.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: true
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
- uid: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: InstanceContextIdleCallback
  nameWithType: InstanceContextIdleCallback
  fullName: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext
  nameWithType: IInstanceContextProvider.InitializeInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle
  nameWithType: IInstanceContextProvider.IsIdle
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle
  nameWithType: IInstanceContextProvider.NotifyIdle
