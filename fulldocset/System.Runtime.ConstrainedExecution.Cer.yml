### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.Cer
  id: Cer
  children:
  - System.Runtime.ConstrainedExecution.Cer.MayFail
  - System.Runtime.ConstrainedExecution.Cer.None
  - System.Runtime.ConstrainedExecution.Cer.Success
  langs:
  - csharp
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
  type: Enum
  summary: "Anger en metod beteende när den anropas inom ett begränsat körningsområde."
  remarks: "Uppräkningen Cer anger beteendet för en metod, typ eller sammansättning inom ett begränsat körningsområde (CER). Använd en av tre tillgängliga värden för att ange att entiteten kommer att lyckas känner inte till en CER eller kanske (deterministiskt) kan rapportera har lyckats eller misslyckats.       En CER ger garanterar att regionen i koden körs utan avbrott även om ett asynkront undantag, till exempel ett undantag avbrutna minnet är slut eller stackspill aktiveras."
  example:
  - "The following code example demonstrates the use of the Cer enumeration when specifying a constrained execution region for a method. This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.  \n  \n [!code-vb[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/visualbasic/t-system.runtime.constra_2_1.vb)]\n [!code-cs[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/csharp/t-system.runtime.constra_2_1.cs)]"
  syntax:
    content: public enum Cer
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  id: MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "I händelse av särskilda villkor misslyckas metoden. I det här fallet rapporterar metoden tillbaka till anropande metoden om den har lyckats eller misslyckats. Metoden måste ha en CER runt Metodtexten så att den kan rapportera det returnera värdet."
  syntax:
    content: MayFail
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.None
  id: None
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: 'Har ingen möjlighet till en CER-metoden, typ eller sammansättning. Det tar inte nytta av CER garantier. Detta innebär följande:'
  remarks: "-I händelse av särskilda villkor misslyckas metoden.      -Metoden kanske eller kanske inte rapport som misslyckades (det är icke-deterministiska).      -Metoden har inte skrivits med CERs i åtanke (vilket är det mest sannolika scenariot).       Om en metod, typen eller sammansättningen inte uttryckligen har markerats för att lyckas, den implicit har markerats som `Cer.None`."
  syntax:
    content: None
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  id: Success
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Metoden är säkert att lyckas i händelse av särskilda villkor. Du bör alltid skapa en CER runt den metod som anropas, även när den anropas från inom en icke-CER-region. En metod har lyckats om den uppnår vad är avsedd. Markera till exempel <xref:System.Collections.ArrayList.Count*>med `ReliabilityContractAttribute(Cer.Success)` innebär att när det körs under en CER alltid returnera en uppräkning av antalet element i den <xref href=&quot;System.Collections.ArrayList&quot;> </xref> och den kan inte lämna fältet internt i tillståndet obestämd.</xref:System.Collections.ArrayList.Count*>"
  syntax:
    content: Success
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
- uid: System.Runtime.ConstrainedExecution.Cer
  parent: System.Runtime.ConstrainedExecution
  isExternal: false
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
- uid: System.Runtime.ConstrainedExecution.Cer.None
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
