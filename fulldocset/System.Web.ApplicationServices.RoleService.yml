### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "Aktiverar åtkomst till ASP.NET-rollprovider som en WCF-webbtjänst."
  remarks: "Objektet RoleService kan du läsa användarroller genom en Windows Communication Foundation (WCF). Om du vill använda rolltjänsten måste du aktivera rolltjänsten på en webbserver och ansluta ett klientprogram i WCF-kompatibel till webbtjänsten. Information om hur du konfigurerar rolltjänsten finns [så här: aktivera rolltjänsten WCF](~/add/includes/ajax-current-ext-md.md).       Användaren måste autentiseras för att läsa den användarroller. Rolltjänsten fungerar med alla typer av ASP.NET-autentisering. Information om hur du loggar användarna i via en WCF-tjänst finns [Windows Communication Foundation autentisering översikt över Service](~/add/includes/ajax-current-ext-md.md).       Klassen RoleService innehåller två metoder som ska användas endast via en WCF-tjänst: den <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>metoden och <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metod.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Den <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>metoden returnerar alla roller för den inloggade användaren.</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Den <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metoden avgör om användaren är i en angiven roll.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Objektet RoleService genererar den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>händelse.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> Du skapar en händelsehanterare för den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>händelse att välja vilken rollprovider som ska användas vid körning.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       Ett exempel på hur du använder WCF-rolltjänsten från ett konsolprogram finns [genomgång: med ASP.NET-programtjänster](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> klass."
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Returnerar alla roller för den inloggade användaren."
  remarks: "Metoden GetRolesForCurrentUser returnerar alla roller för användaren. Du kan använda metoden GetRolesForCurrentUser när du måste kontrollera eller behålla alla användares roller för att avgöra vilka resurser som är tillgängliga för användaren. Du kan använda den här metoden för att undvika flera anrop till den <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metoden.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       Att anropa metoden GetRolesForCurrentUser genererar den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>händelse.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Inte anropa metoden GetRolesForCurrentUser från kod som körs på webbservern. Du anropa metoden GetRolesForCurrentUser endast som en del av en WCF-tjänst. Mer information om hur du läser användarroller i kod som körs på webbservern finns den <xref:System.Web.Security.Roles.GetRolesForUser%2A>metoden.</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "En matris med namnen på de roller som användaren tillhör."
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollhantering har inte aktiverats."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Anger om den inloggade användaren tillhör den angivna rollen."
  remarks: "Metoden IsCurrentUserInRole kontrollerar om den inloggade användaren tillhör den angivna rollen. Metoden IsCurrentUserInRole genererar den <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>händelse.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Inte anropa metoden IsCurrentUserInRole från kod som körs på webbservern. Du anropa metoden IsCurrentUserInRole endast som en del av en WCF-tjänst. Mer information om hur du kontrollerar om en användare tillhör den angivna gruppen från kod som körs på webbservern finns den <xref:System.Web.Security.Roles.IsUserInRole%2A>metoden.</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Namnet på rollen för att kontrollera."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om användaren är i den angivna rollen; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> eller användaren inte är inloggad."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Rollhantering har inte aktiverats."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inträffar när en <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> instans avgör vilken rollprovider som ska användas för att kontrollera användarens roller."
  remarks: "Den <xref:System.Web.ApplicationServices.RoleService>klassen genererar SelectingProvider händelsen när den avgör vilka rollprovider som ska användas för att hämta användarens roller.</xref:System.Web.ApplicationServices.RoleService> Du kan skapa en händelsehanterare för händelsen SelectingProvider att välja vilken rollprovider som ska användas vid körning."
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
