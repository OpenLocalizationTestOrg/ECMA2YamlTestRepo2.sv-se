### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.FocusManager
  id: FocusManager
  children:
  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.FocusedElementProperty
  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GotFocusEvent
  - System.Windows.Input.FocusManager.IsFocusScopeProperty
  - System.Windows.Input.FocusManager.LostFocusEvent
  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  langs:
  - csharp
  name: FocusManager
  nameWithType: FocusManager
  fullName: System.Windows.Input.FocusManager
  type: Class
  summary: "Innehåller en uppsättning statiska metoder, kopplade egenskaper och händelser för att fastställa och ange fokus scope och för att ange elementet fokuserad inom omfånget."
  remarks: "I [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] det finns två begrepp om fokus: tangentbord fokus och logiska fokus.       Tangentbordsfokus gäller för det element som för närvarande tangentbordsinmatning.  Det kan finnas endast ett element med tangentbordsfokus.  Det här elementet med tangentbordsfokus har <xref:System.Windows.IInputElement.IsKeyboardFocused%2A>inställd på `true`.</xref:System.Windows.IInputElement.IsKeyboardFocused%2A>  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>returnerar elementet med tangentbordsfokus.</xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>       Logiska fokus gäller den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom en viss omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Fokus scope är en behållare element som övervakas av den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom sitt omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Som standard den <xref:System.Windows.Window>klass är ett fokus omfång som den <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, och <xref:System.Windows.Controls.ToolBar>klasser.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Ett element som är ett fokus scope har <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>inställd på `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Det kan finnas flera element med logiska fokus, men det kan bara finnas ett element med logiska fokus i ett enda fokus omfång.  Ett element med logiska fokus nödvändigtvis har inte fokus, men ett element med tangentbordsfokus har logiska fokus.  Det är möjligt att definiera fokus i ett omfång i fokus.  I det här fallet kan både fokus-scope överordnade och underordnade fokus scope ha en <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Följande scenario visar hur tangentbordsfokus och logiska fokus ändras i en [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] program som har en <xref:System.Windows.Window>med en <xref:System.Windows.Controls.TextBox>och en <xref:System.Windows.Controls.Menu>som har en <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window>  När fokus ändras från den <xref:System.Windows.Controls.TextBox>till den <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TextBox>förluster tangentbordsfokus men behåller logiska fokus för den <xref:System.Windows.Window>fokusera omfång.</xref:System.Windows.Window> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.TextBox>  Den <xref:System.Windows.Controls.MenuItem>hämtar tangentbordsfokus och hämtar logiska fokus för den <xref:System.Windows.Controls.Menu>fokusera omfång.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>  När fokus återgår till rot <xref:System.Windows.Window>elementet i <xref:System.Windows.Window>fokus omfång med logiska fokus ska få tangentbordsfokus, som i det här fallet är <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Window>  Den <xref:System.Windows.Controls.TextBox>har nu tangentbordsfokus och logiska fokus.</xref:System.Windows.Controls.TextBox>  Den <xref:System.Windows.Controls.MenuItem>förlorar fokus, men behåller logiska fokus för den <xref:System.Windows.Controls.Menu>fokusera omfång.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>       Standardvärdet för <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>på en <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, och <xref:System.Windows.Controls.ContextMenu>är `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Mer information om fokus finns i [indata översikt](~/add/includes/ajax-current-ext-md.md) och [fokus översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static class FocusManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lägger till en hanterare för den <xref:System.Windows.Input.FocusManager.GotFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Den <xref href=&quot;System.Windows.UIElement&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement&quot;> </xref> som lyssnar på den här händelsen."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Händelsehanterare som ska läggas till."
  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lägger till en hanterare för den <xref:System.Windows.Input.FocusManager.LostFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Den <xref href=&quot;System.Windows.UIElement&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement&quot;> </xref> som lyssnar på den här händelsen."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Händelsehanterare som ska läggas till."
  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  id: FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.FocusManager.FocusedElement*>anslutna egenskapen.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  id: GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar element med logiska fokus inom omfånget för angivna fokus."
  remarks: "Den <xref:System.Windows.Input.FocusManager.FocusedElement%2A>är det element som är logiska fokus för ett visst fokus omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Det här objektet kan eller har inte fokus.  Tangentbordsfokus refererar till elementet som tar emot tangentbordsinmatning.  Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md).       Om `element` inte är ett fokus scope den här metoden returnerar `null`.       Använd <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, för att ange elementet med logiska fokus inom en angiven fokus omfång.</xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>"
  example:
  - "The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Element med logiska fokus i angivna fokus omfattningen."
    return:
      type: System.Windows.IInputElement
      description: "Element i angivna fokus omfånget med logiska fokus."
  overload: System.Windows.Input.FocusManager.GetFocusedElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  id: GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Anger den närmast överordnat angivet element som har <xref:System.Windows.Input.FocusManager.IsFocusScope*>inställd på <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Standardvärdet för <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>på en <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>är `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Fokus scope är en behållare element som övervakas av den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom sitt omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Som standard den <xref:System.Windows.Window>klass är ett fokus omfång som den <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, och <xref:System.Windows.Controls.ToolBar>klasser.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Ett element som är ett fokus scope har <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>inställd på `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Att hämta den närmaste fokus omfattningen för elementet."
    return:
      type: System.Windows.DependencyObject
      description: "Fokus omfattningen för det angivna elementet."
  overload: System.Windows.Input.FocusManager.GetFocusScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  id: GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Anger om den angivna <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> är en fokus omfattning."
  remarks: "Fokus scope är en behållare element som övervakas av den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom sitt omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Som standard den <xref:System.Windows.Window>klass är ett fokus omfång som den <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, och <xref:System.Windows.Controls.ToolBar>klasser.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Ett element som är ett fokus scope har <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>inställd på `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Det element som du vill läsa den bifogade egenskapen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om <xref:System.Windows.Input.FocusManager.IsFocusScope*>är inställd på <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> för det angivna elementet; annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  overload: System.Windows.Input.FocusManager.GetIsFocusScope*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.FocusManager.GotFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  id: IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.FocusManager.IsFocusScope*>anslutna egenskapen.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Standardvärdet för <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>på en <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>är `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Fokus scope är en behållare element som övervakas av den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom sitt omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Som standard den <xref:System.Windows.Window>klass är ett fokus omfång som den <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, och <xref:System.Windows.Controls.ToolBar>klasser.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Ett element som är ett fokus scope har <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>inställd på `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifierar den <xref:System.Windows.Input.FocusManager.LostFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort en hanterare för den <xref:System.Windows.Input.FocusManager.GotFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Den <xref href=&quot;System.Windows.UIElement&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement&quot;> </xref> som lyssnar på den här händelsen."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Händelsehanterare som ska tas bort."
  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Tar bort en hanterare för den <xref:System.Windows.Input.FocusManager.LostFocus>kopplade händelse.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Den <xref href=&quot;System.Windows.UIElement&quot;> </xref> eller <xref href=&quot;System.Windows.ContentElement&quot;> </xref> som lyssnar på den här händelsen."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Händelsehanterare som ska tas bort."
  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Anger logisk fokusera på det angivna elementet."
  remarks: "Den <xref:System.Windows.Input.FocusManager.FocusedElement%2A>är det element som är logiska fokus för specifika fokus scope.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Det här objektet kan eller har inte fokus.  Tangentbordsfokus refererar till elementet som tar emot tangentbordsinmatning.  Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md).       Det är möjligt att ange en fokus omfattning som överordnat element är i fokus omfånget.  Till exempel om en <xref:System.Windows.Controls.StackPanel>är ett fokus scope och dess överordnade <xref:System.Windows.Window>är en fokus omfattning en <xref:System.Windows.Controls.TextBox>underordnad den <xref:System.Windows.Controls.StackPanel>kan ange den <xref:System.Windows.Window>som fokus scope när du anropar SetFocusedElement.</xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel>  Den <xref:System.Windows.Controls.TextBox>sedan <xref:System.Windows.Input.FocusManager.FocusedElement%2A>för både den <xref:System.Windows.Window>fokusera scope och <xref:System.Windows.Controls.StackPanel>fokusera omfång.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.FocusedElement%2A> </xref:System.Windows.Controls.TextBox>       SetFocusedElement ger det angivna elementet logiska fokus i angivna fokus omfattningen och försöker att ge tangentbordsfokus element."
  example:
  - "The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Området fokus att göra det angivna elementet i <xref:System.Windows.Input.FocusManager.FocusedElement*>.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
    - id: value
      type: System.Windows.IInputElement
      description: "Elementet får logiska fokus till."
  overload: System.Windows.Input.FocusManager.SetFocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Anger det angivna <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> som fokus omfattning."
  remarks: "Fokus scope är en behållare element som övervakas av den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>inom sitt omfång.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Som standard den <xref:System.Windows.Window>klass är ett fokus omfång som den <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, och <xref:System.Windows.Controls.ToolBar>klasser.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Ett element som är ett fokus scope har <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>inställd på `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Läs mer på fokus och tangentbordsfokus logiska fokus på [indata översikt](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The follow example makes an element a focus scope by using SetIsFocusScope.  \n  \n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]"
  syntax:
    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Elementet så att ett omfång i fokus."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om `element` är en fokus omfattning, annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.FocusManager.SetIsFocusScope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler
  nameWithType: FocusManager.AddGotFocusHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler
  nameWithType: FocusManager.AddLostFocusHandler
- uid: System.Windows.Input.FocusManager.GetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement
  nameWithType: FocusManager.GetFocusedElement
- uid: System.Windows.Input.FocusManager.GetFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope
  nameWithType: FocusManager.GetFocusScope
- uid: System.Windows.Input.FocusManager.GetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope
  nameWithType: FocusManager.GetIsFocusScope
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler
  nameWithType: FocusManager.RemoveGotFocusHandler
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler
  nameWithType: FocusManager.RemoveLostFocusHandler
- uid: System.Windows.Input.FocusManager.SetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement
  nameWithType: FocusManager.SetFocusedElement
- uid: System.Windows.Input.FocusManager.SetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope
  nameWithType: FocusManager.SetIsFocusScope
