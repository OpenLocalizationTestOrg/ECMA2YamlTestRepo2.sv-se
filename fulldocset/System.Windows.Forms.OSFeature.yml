### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "Innehåller frågor om specifika funktioner i operativsystemet."
  remarks: "Använd den `static` instans av den här klassen i den <xref:System.Windows.Forms.OSFeature.Feature%2A>egenskapen för att ställa frågor om funktioner i operativsystemet.</xref:System.Windows.Forms.OSFeature.Feature%2A> Du kan inte skapa en instans av den här klassen.       Om du vill kontrollera vilken version av en funktion, anropa den <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metoden.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Ta reda på om en funktion eller en viss version är tillgänglig genom att anropa den <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>metod och ange funktionen du vill leta efter med ID: n för funktionen som anges i den här klassen.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initierar en ny instans av den <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klass."
  remarks: "Den här klassen kan inte initieras. Om du vill fråga efter funktioner i operativsystemet, använda den `static` instans av <xref:System.Windows.Forms.OSFeature>finns i den här klassen.</xref:System.Windows.Forms.OSFeature>"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar en <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> instans av den <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klass som ska användas för funktionen frågor. Den här egenskapen är skrivskyddad."
  remarks: "Använd den här `static` egenskapen kan ställa frågor om funktioner i operativsystemet. Du kan inte skapa en instans av den här klassen.       Om du vill kontrollera vilken version av en funktion, anropa den <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metoden.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Ta reda på om en funktion eller en viss version är tillgänglig genom att anropa den <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>metod och ange funktionen du vill leta efter med ID: n för funktionen som anges i den här klassen.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "En instans av den <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> klass."
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar versionen för den angivna funktionen som är tillgängliga i systemet."
  remarks: "Använd den <xref:System.Windows.Forms.OSFeature.Feature%2A>egenskapen den `static` instans av <xref:System.Windows.Forms.OSFeature>i den här klassen kan ställa frågor om versionsnumret för en funktion.</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "Funktionen vars version krävs antingen <xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;> </xref> eller <xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>."
    return:
      type: System.Version
      description: "En <xref:System.Version>som representerar versionen av funktionen angivna operativsystemet för närvarande finns på datorn; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om funktionen inte kan hittas.</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar ett värde som anger om operativsystemet har stöd för den angivna funktionen eller mått."
  remarks: "Normalt använder du metoden IsPresent för att avgöra om operativsystemet stöder specifik funktion eller mått som identifieras av `enumValue`. Baserat på det värde som returneras från IsPresent utför villkorlig åtgärder i koden: Om exempelvis anropar den här metoden med parametervärdet <xref:System.Windows.Forms.SystemParameter>returnerar `true`, kan du skapa ägare ritas menyer i ditt program i en FlatStyle.</xref:System.Windows.Forms.SystemParameter>       Åtkomst till vissa funktioner i system eller mått kan öka undantag om de inte är tillgängliga på en specifik operativsystemsversion. I det här fallet först använda motsvarande <xref:System.Windows.Forms.SystemParameter>uppräkningsvärdet tillsammans med IsPresent att avgöra om måttet stöds.</xref:System.Windows.Forms.SystemParameter> Till exempel anropa IsPresent med <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>innan du hämtar den <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>egenskapsvärde.</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "En <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref> som representerar funktionen om du vill söka efter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om funktionen är tillgänglig på datorn. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Representerar lager, översta windows-funktionen. Det här fältet är skrivskyddat."
  remarks: "Ett överlappande fönster kan göras transparenta eller genomskinliga av operativsystemet. Stöd för överlappande windows introducerades i Windows 2000. Mer information finns i &quot;Lager Windows: A nya sätt att använda någon och genomskinlighet effekter i Windows program&quot; i Platform SDK-dokumentationen på http://msdn.microsoft.com.       Använd för att fastställa om överlappande windows-funktionen är installerad på <xref:System.Windows.Forms.OSFeature.Feature%2A>egenskapen att anropa metoden basklass <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>med LayeredWindows som funktionen om du vill söka efter.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       Du kan också kontrollera om funktionen är installerat genom att anropa den <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metod med LayeredWindows som funktionen för att hitta.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Representerar funktionen operativsystemet teman. Det här fältet är skrivskyddat."
  remarks: "Ett tema är en samling gränssnittsinställningar för visuella som innehåller skrivbordsunderlägg, markörer, teckensnitt, ljud och ikoner som introducerades i Microsoft Plus! för Windows 95. .NET Framework stöder inte direkt manipulera teman, även om den har omfattande stöd för visuella format i den <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>namnområde.</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> Mer information om Windows teman finns i avsnitt teman och visuella stilar och visuella stilar referens i Win32-SDK.       Anropa metoden basklass för att avgöra om funktionen teman installeras <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>med teman som funktionen om du vill söka efter.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       Du kan också kontrollera om funktionen är installerat genom att anropa den <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metod med teman som funktionen för att hitta.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
