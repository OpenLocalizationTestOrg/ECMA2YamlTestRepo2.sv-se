### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeCatchClause
  id: CodeCatchClause
  children:
  - System.CodeDom.CodeCatchClause.#ctor
  - System.CodeDom.CodeCatchClause.#ctor(System.String)
  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)
  - System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])
  - System.CodeDom.CodeCatchClause.CatchExceptionType
  - System.CodeDom.CodeCatchClause.LocalName
  - System.CodeDom.CodeCatchClause.Statements
  langs:
  - csharp
  name: CodeCatchClause
  nameWithType: CodeCatchClause
  fullName: System.CodeDom.CodeCatchClause
  type: Class
  summary: "Representerar en <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> undantagsblock för en <xref uid=&quot;langword_csharp_try/catch&quot; name=&quot;try/catch&quot; href=&quot;&quot;> </xref> instruktionen."
  remarks: "CodeCatchClause kan användas för att representera en `catch` undantagsblock för en `try/catch` instruktion.       Den <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A>egenskapen anger vilken typ av undantag du vill hämta.</xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> Den <xref:System.CodeDom.CodeCatchClause.LocalName%2A>egenskapen anger ett namn för variabeln som representerar det undantag som har upptäckts.</xref:System.CodeDom.CodeCatchClause.LocalName%2A> Den <xref:System.CodeDom.CodeCatchClause.Statements%2A>samlingsegenskap innehåller instruktioner för den `catch` block.</xref:System.CodeDom.CodeCatchClause.Statements%2A>"
  example:
  - "The following example code demonstrates using CodeCatchClause objects to define exception handling clauses of a try...catch block.  \n  \n [!code-cs[CodeTryCatchFinallyExample#2](~/add/codesnippet/csharp/t-system.codedom.codecat_1_1.cs)]\n [!code-cpp[CodeTryCatchFinallyExample#2](~/add/codesnippet/cpp/t-system.codedom.codecat_1_1.cpp)]\n [!code-vb[CodeTryCatchFinallyExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecat_1_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeCatchClause
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: CodeCatchClause()
  nameWithType: CodeCatchClause.CodeCatchClause()
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initierar en ny instans av den <xref href=&quot;System.CodeDom.CodeCatchClause&quot;> </xref> klass."
  syntax:
    content: public CodeCatchClause ();
    parameters: []
  overload: System.CodeDom.CodeCatchClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: CodeCatchClause(String)
  nameWithType: CodeCatchClause.CodeCatchClause(String)
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initierar en ny instans av den <xref href=&quot;System.CodeDom.CodeCatchClause&quot;> </xref> klassen med det angivna lokala variabelnamnet för undantaget."
  syntax:
    content: public CodeCatchClause (string localName);
    parameters:
    - id: localName
      type: System.String
      description: "Namnet på den lokala variabeln som deklarerats i catch-instruktion för undantaget. Det här är valfritt."
  overload: System.CodeDom.CodeCatchClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)
  id: '#ctor(System.String,System.CodeDom.CodeTypeReference)'
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: CodeCatchClause(String,CodeTypeReference)
  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference)
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initierar en ny instans av den <xref href=&quot;System.CodeDom.CodeCatchClause&quot;> </xref> klassen med det angivna lokala variabelnamnet för undantag och undantagstyp."
  syntax:
    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);
    parameters:
    - id: localName
      type: System.String
      description: "Namnet på den lokala variabeln som deklarerats i catch-instruktion för undantaget. Det här är valfritt."
    - id: catchExceptionType
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som anger vilken typ av undantag du vill hämta."
  overload: System.CodeDom.CodeCatchClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])
  id: '#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])'
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: CodeCatchClause(String,CodeTypeReference,CodeStatement[])
  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initierar en ny instans av den <xref href=&quot;System.CodeDom.CodeCatchClause&quot;> </xref> klassen med det angivna lokala variabelnamnet för undantaget, typ och instruktionen insamling av undantag."
  syntax:
    content: public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, System.CodeDom.CodeStatement[] statements);
    parameters:
    - id: localName
      type: System.String
      description: "Namnet på den lokala variabeln som deklarerats i catch-instruktion för undantaget. Det här är valfritt."
    - id: catchExceptionType
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som anger vilken typ av undantag du vill hämta."
    - id: statements
      type: System.CodeDom.CodeStatement[]
      description: "En matris med <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> objekt som representerar innehållet i catch-blocket."
  overload: System.CodeDom.CodeCatchClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.CatchExceptionType
  id: CatchExceptionType
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: CatchExceptionType
  nameWithType: CodeCatchClause.CatchExceptionType
  fullName: System.CodeDom.CodeCatchClause.CatchExceptionType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Hämtar eller anger typ av undantag ska hanteras med catch-blocket."
  remarks: "Om ett värde för den här egenskapen inte anges standardvärdet för den här egenskapen <xref:System.Exception>.</xref:System.Exception>"
  syntax:
    content: public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "En <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> som anger vilken typ av undantag ska hanteras."
  overload: System.CodeDom.CodeCatchClause.CatchExceptionType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.LocalName
  id: LocalName
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: LocalName
  nameWithType: CodeCatchClause.LocalName
  fullName: System.CodeDom.CodeCatchClause.LocalName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Hämtar eller anger variabelnamn för undantaget som den <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> satsen referenser."
  remarks: "Den här egenskapen anger namnet på den lokala variabeln för undantaget. Den här lokala variabeln är valfritt. Instruktionen har inte den här variabeln som standard."
  syntax:
    content: public string LocalName { get; set; }
    return:
      type: System.String
      description: "Namnet på undantagsvariabeln som den <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> satsen referenser."
  overload: System.CodeDom.CodeCatchClause.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCatchClause.Statements
  id: Statements
  parent: System.CodeDom.CodeCatchClause
  langs:
  - csharp
  name: Statements
  nameWithType: CodeCatchClause.Statements
  fullName: System.CodeDom.CodeCatchClause.Statements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Hämtar instruktioner inom catch-blocket."
  syntax:
    content: public System.CodeDom.CodeStatementCollection Statements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "En <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> som innehåller instruktioner inom catch-blocket."
  overload: System.CodeDom.CodeCatchClause.Statements*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.CodeCatchClause.#ctor
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CodeCatchClause()
  nameWithType: CodeCatchClause.CodeCatchClause()
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause()
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String)
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CodeCatchClause(String)
  nameWithType: CodeCatchClause.CodeCatchClause(String)
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CodeCatchClause(String,CodeTypeReference)
  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference)
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CodeCatchClause(String,CodeTypeReference,CodeStatement[])
  nameWithType: CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])
  fullName: System.CodeDom.CodeCatchClause.CodeCatchClause(String,CodeTypeReference,CodeStatement[])
- uid: System.CodeDom.CodeStatement[]
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement[]
  spec.csharp:
  - uid: System.CodeDom.CodeStatement
    name: CodeStatement
    nameWithType: CodeStatement
    fullName: CodeStatement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeCatchClause.CatchExceptionType
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CatchExceptionType
  nameWithType: CodeCatchClause.CatchExceptionType
  fullName: System.CodeDom.CodeCatchClause.CatchExceptionType
- uid: System.CodeDom.CodeCatchClause.LocalName
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: LocalName
  nameWithType: CodeCatchClause.LocalName
  fullName: System.CodeDom.CodeCatchClause.LocalName
- uid: System.CodeDom.CodeCatchClause.Statements
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: Statements
  nameWithType: CodeCatchClause.Statements
  fullName: System.CodeDom.CodeCatchClause.Statements
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.CodeCatchClause.#ctor*
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CodeCatchClause
  nameWithType: CodeCatchClause.CodeCatchClause
- uid: System.CodeDom.CodeCatchClause.CatchExceptionType*
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: CatchExceptionType
  nameWithType: CodeCatchClause.CatchExceptionType
- uid: System.CodeDom.CodeCatchClause.LocalName*
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: LocalName
  nameWithType: CodeCatchClause.LocalName
- uid: System.CodeDom.CodeCatchClause.Statements*
  parent: System.CodeDom.CodeCatchClause
  isExternal: false
  name: Statements
  nameWithType: CodeCatchClause.Statements
