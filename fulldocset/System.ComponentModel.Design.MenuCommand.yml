### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.MenuCommand
  id: MenuCommand
  children:
  - System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.MenuCommand.Checked
  - System.ComponentModel.Design.MenuCommand.CommandChanged
  - System.ComponentModel.Design.MenuCommand.CommandID
  - System.ComponentModel.Design.MenuCommand.Enabled
  - System.ComponentModel.Design.MenuCommand.Invoke
  - System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  - System.ComponentModel.Design.MenuCommand.OleStatus
  - System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  - System.ComponentModel.Design.MenuCommand.Properties
  - System.ComponentModel.Design.MenuCommand.Supported
  - System.ComponentModel.Design.MenuCommand.ToString
  - System.ComponentModel.Design.MenuCommand.Visible
  langs:
  - csharp
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
  type: Class
  summary: "Representerar ett Windows-menyn eller verktygsfältet kommandot objekt."
  remarks: "Klassen MenuCommand representerar information om en Windows-menyn eller verktygsfältet kommandot. Den <xref:System.ComponentModel.Design.IMenuCommandService>gränssnittet kan du lägga till MenuCommand objekt i Visual Studio-menyn.</xref:System.ComponentModel.Design.IMenuCommandService>       Den här klassen innehåller följande medlemmar:-en händelsehanterare egenskap som du kan koppla en händelsehanterare för kommandot.      -A <xref:System.ComponentModel.Design.CommandID>egenskap som unikt identifierar kommandot.</xref:System.ComponentModel.Design.CommandID>      -En <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>metod som kör kommandot.</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      -En <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>metod som kan åsidosättas för att hantera den händelse som inträffar när ett nytt kommando väljs.</xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>      -Tillstånd för boolesk flagga som anger om kommandot är <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, eller <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</xref:System.ComponentModel.Design.MenuCommand.Visible%2A> </xref:System.ComponentModel.Design.MenuCommand.Supported%2A> </xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Checked%2A>      -En <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>egenskap som anger OLE kommandot statuskod för kommandot.</xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>      -En åsidosättning för den <xref:System.ComponentModel.Design.MenuCommand.ToString%2A>metoden.</xref:System.ComponentModel.Design.MenuCommand.ToString%2A>"
  example:
  - "The following code example creates a MenuCommand object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio. Press the F1 key to invoke the MenuCommand.  \n  \n [!code-cpp[MenuCommand Example#10](~/add/codesnippet/cpp/t-system.componentmodel._8_1.cpp)]\n [!code-cs[MenuCommand Example#10](~/add/codesnippet/csharp/t-system.componentmodel._8_1.cs)]\n [!code-vb[MenuCommand Example#10](~/add/codesnippet/visualbasic/t-system.componentmodel._8_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MenuCommand
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  id: '#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)'
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Initierar en ny instans av den <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> klass."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/0d01c3a9-eede-4f5b-b9c2-_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/0d01c3a9-eede-4f5b-b9c2-_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/0d01c3a9-eede-4f5b-b9c2-_1.vb)]"
  syntax:
    content: public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);
    parameters:
    - id: handler
      type: System.EventHandler
      description: "Händelse som ska aktiveras när användaren väljer menyn objektet eller knappen."
    - id: command
      type: System.ComponentModel.Design.CommandID
      description: "Unik kommando-ID som länkar det här menykommandot till menyn i miljön."
  overload: System.ComponentModel.Design.MenuCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Checked
  id: Checked
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar eller anger ett värde som anger om det här menyalternativet är markerat."
  syntax:
    content: public virtual bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om objektet är markerat. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  id: CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inträffar när kommandot ändras."
  remarks: "Ett kommando kan ändras om den blir markerad eller inaktiveras."
  syntax:
    content: public event EventHandler CommandChanged;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  id: CommandID
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar den <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> som är associerade med det här menykommandot."
  syntax:
    content: public virtual System.ComponentModel.Design.CommandID CommandID { get; }
    return:
      type: System.ComponentModel.Design.CommandID
      description: "Den <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> som är kopplade till kommandot."
  overload: System.ComponentModel.Design.MenuCommand.CommandID*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar ett värde som anger om det här menyalternativet är tillgänglig."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._15_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._15_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._15_1.vb)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om elementet är aktiverat; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Anropar kommandot."
  syntax:
    content: public virtual void Invoke ();
    parameters: []
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  id: Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Anropar kommandot med en given parameter."
  syntax:
    content: public virtual void Invoke (object arg);
    parameters:
    - id: arg
      type: System.Object
      description: "Ett valfritt argument för kommandot."
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  id: OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar statuskoden OLE-kommandot för det här menyalternativet."
  syntax:
    content: public virtual int OleStatus { get; }
    return:
      type: System.Int32
      description: "Ett heltal som innehåller en blandning av statusflaggor som visar tillståndet för det här menyalternativet."
  overload: System.ComponentModel.Design.MenuCommand.OleStatus*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  id: OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Genererar den <xref href=&quot;System.ComponentModel.Design.MenuCommand.CommandChanged&quot;> </xref> händelse."
  remarks: "Att en händelse utlöstes anropar händelsehanteraren via ett ombud. Mer information finns i [NIB: att en händelse utlöstes](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoden OnCommandChanged kan också härledda klasser att hantera händelsen utan att koppla en delegat. Det här är den prioriterade metoden för hantering av händelsen i en härledd klass."
  syntax:
    content: protected virtual void OnCommandChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Properties
  id: Properties
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar de gemensamma egenskaperna som är associerade med den <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>."
  remarks: "Alla menykommandon lagra sina offentliga egenskaper i egenskapssamlingen. Nyckeln i ordlistan egenskaper är egenskapens namn. Detta gör det möjligt för allmän uppräkning av egenskaper och ger en konsekvent underlag som nya egenskaper kan läggas till utan att ändra klassdefinitionen."
  syntax:
    content: public virtual System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "En <xref:System.Collections.IDictionary>som innehåller de gemensamma egenskaperna i den <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.Design.MenuCommand.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Supported
  id: Supported
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar eller anger ett värde som anger om det här menyalternativet stöds."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._20_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._20_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._20_1.vb)]"
  syntax:
    content: public virtual bool Supported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om objektet stöds, vilket är standard. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Supported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.ToString
  id: ToString
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Returnerar en strängrepresentation av det här menykommandot."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som innehåller värdet för den <> </> *> egenskapen läggas till med namnen på alla flaggor som anges, avgränsade med pipe staplar (|). Egenskaperna flaggan innehåller <> </> *>, <> </> *>, <> </> *>, och <xref:System.ComponentModel.Design.MenuCommand.Visible*>.</xref:System.ComponentModel.Design.MenuCommand.Visible*>"
  overload: System.ComponentModel.Design.MenuCommand.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Visible
  id: Visible
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Hämtar eller anger ett värde som anger om det här menyalternativet är synlig."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._26_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._26_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._26_1.vb)]"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om objektet är synligt; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Checked
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.MenuCommand.Properties
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.MenuCommand.Supported
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.MenuCommand.Visible
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
- uid: System.ComponentModel.Design.MenuCommand.#ctor*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand.MenuCommand
- uid: System.ComponentModel.Design.MenuCommand.Checked*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
- uid: System.ComponentModel.Design.MenuCommand.CommandID*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke
  nameWithType: MenuCommand.Invoke
- uid: System.ComponentModel.Design.MenuCommand.OleStatus*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged
  nameWithType: MenuCommand.OnCommandChanged
- uid: System.ComponentModel.Design.MenuCommand.Properties*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
- uid: System.ComponentModel.Design.MenuCommand.Supported*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString
  nameWithType: MenuCommand.ToString
- uid: System.ComponentModel.Design.MenuCommand.Visible*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
