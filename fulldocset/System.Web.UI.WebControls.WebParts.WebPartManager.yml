### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Fungerar som central klassen för uppsättningen webbdelar kontrollen hantera alla webbdelar kontroller, funktioner och händelser som inträffar på en webbsida."
  remarks: "WebPartManager-kontrollen fungerar som nav eller kontrollen mitten av ett program med webbdelar. Det måste finnas en-- och endast en--WebPartManager kontrollen instans på varje sida som använder webbdelar kontroller. Precis som med de flesta aspekter av webbdelar program fungerar WebPartManager kontrollen bara med autentiserade användare. Dessutom fungerar dess funktioner nästan helt med kontroller som finns på webbdelar zoner som ärver från <xref:System.Web.UI.WebControls.WebParts.WebZone>klass.</xref:System.Web.UI.WebControls.WebParts.WebZone> Server-kontroller som finns på en sida utanför dessa zoner kan ha mycket lite webbdelar funktioner eller interaktion med WebPartManager-kontrollen.       WebPartManager-kontrollen utförs typerna av uppgifter som beskrivs i följande tabell som nav för webbdelar funktioner på en sida.      | Aktivitetskategori | Vad kontrollen gör |   |-------------------|---------------------------|   | Spåra webbdelar kontroller | Håller reda på många olika typer av kontroller på en sida som innehåller webbdelar funktioner, inklusive <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, anslutningar, zoner och andra. |   | Lägga till och ta bort webbdelar kontroller | Tillhandahåller metoder för att lägga till, ta bort och stänga <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller på en sida. |   | Administrera anslutningar | Skapar anslutningar mellan kontroller och övervakar anslutningar samt processer för att lägga till och ta bort dem. |   | Anpassa kontroller och sidor | Gör det möjligt för användare att flytta kontroller till olika platser på en sida och startar de vyer som användare kan redigera utseende, egenskaper och beteendet för kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Underhåller användarspecifika anpassningsinställningar på varje sida. |   | Växla mellan olika visningslägen | Växlar en sida bland annat specialanpassade vyer över sidan så att användarna kan utföra vissa uppgifter, till exempel ändra sidlayout eller redigera kontroller. |   | Webbdelar livscykel händelser aktiveras | Definierar, aktiverar och aktiverar utvecklare att hantera livscykeln händelser av webbdelar kontroller, till exempel när kontroller som lagts till, har flyttats, anslutna eller borttagna. |   | Aktivera import och export av kontroller | Exporterar XML-dataströmmar som innehåller tillståndet för egenskaperna för <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller så att användare kan importera filerna i Anpassa komplexa kontroller i andra sidor eller platser i informationssyfte. |       WebPartManager-klassen har en stor uppsättning egenskaper.</xref:System.Web.UI.WebControls.WebParts.WebPart> Konsekvent med rollen WebPartManager för att spåra andra kontroller, den har ett antal egenskaper som refererar till samlingar av webbdelar kontroller eller andra särskilda webbdelar-objekt. Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>Egenskaper är alla samlingar som används av WebPartManager-kontroll för dess spårning och andra hanteringsåtgärder.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       En annan grupp egenskaper innehåller anpassningsbara varningar som gäller i vissa scenarier som uppstår i ett program med webbdelar. Dessa inkluderar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>Egenskaper.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       WebPartManager åsidosätter några av dess grundläggande ärvda egenskaper som används av många webbserverkontroller. Dessa inkluderar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>Egenskaper.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Det finns slutligen en grupp egenskaper som är användbara för att komma åt det aktuella tillståndet för programmet. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>Egenskapen anger aktuellt visningsläge som har en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>Egenskapen anger om en kontroll tillåts att återge klientskript, som är relevanta i situationer där användare kan ha webbläsare med olika funktioner eller skript vara avstängda.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>egenskapen är användbar för att referera till en verktyget-klass som innehåller anrop till ett antal viktiga webbdelar metoder som används för utökningsbarhet fall.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Genom att dölja anrop till dessa metoder i en separat klass (den <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klassen), klassen WebPartManager äger API är förenklad.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>egenskapen ger åtkomst till anpassning objekt som lagrar användarnas anpassningsinställningar och spara data i permanent lagringsutrymme.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>egenskapen anger vilken <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll på en sida är markerad av användaren eller programmet.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>egenskapen anger om anpassade anpassningsdata på en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       WebPartManager-kontrollen innehåller fem inbyggda visningslägen eller vyer för en webbsida. Utvecklare kan använda den här funktionen till att skapa anpassade visningslägen genom att utöka typer som <xref:System.Web.UI.WebControls.WebParts.WebZone>klass eller <xref:System.Web.UI.WebControls.WebParts.ToolZone>klass.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Användare kan växla en sida i olika visningslägen, förutsatt att rätt typ av kontroller som motsvarar ett visst visningsläge finns på en sida.      > [!NOTE] > Är det möjligt att utöka den här funktionen så att användarna kan växla till en anpassad visningsläget utan en motsvarande zon på sidan. Standardinställningen är dock att visningslägen motsvarar zoner.       Standard visningslägen representeras av offentliga fält i klassen WebPartManager. I följande tabell sammanfattas fält och visningslägen som de refererar till. Aktuellt visningsläge för en sida som beskrivs ovan, alltid refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>egenskap och den uppsättning visningslägen som möjligt av en viss sida, beroende på vilken typ av zoner som finns på sidan finns i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Fältet | Visa information om läge |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| Vyn normal användare på en webbsida. standard och de vanligaste visningsläge. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| Visa användare kan ändra eller ta bort kontroller om du vill ändra sidlayout. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| Visa som ett redigera användargränssnitt (UI) blir synliga. användare kan redigera utseende, egenskaper och beteendet för de kontroller som är synliga i det normala bläddringsläget. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| Vyn som en katalog UI blir synliga. användare kan lägga till kontroller en sida från kataloger med tillgängliga kontroller. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| Vyn som en anslutning UI blir synliga. användare kan ansluta, hantera eller koppla från anslutningar mellan kontroller. |       WebPartManager-kontrollen innehåller också ett antal händelser som är viktiga i livscykeln för webbdelar sidor och kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Dessa händelser ger exakt styra beteendet för webbdelar kontroller. De flesta metoder hör direkt till <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller (eller andra kontroller för servern eller användare som är placerade i <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>så att de kan fungera som <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Dock gäller några händelser i tillståndet för den sida eller anslutningar på sidan. I följande tabell visas de tillgängliga händelserna och sammanfattar sina ändamål.      > [!NOTE] > I samtliga fall i följande tabell ordet &quot;kontroll&quot; refererar till en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen eller en server som finns i en zon och kapslas in med ett <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objekt vid körning.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Händelsen | Beskrivning |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Inträffar precis innan en kontroll läggs till en sida för att kontrollera att den är auktoriserad. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Inträffar när alla anslutningar på en sida har aktiverats. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Inträffar innan aktiveringsprocessen för alla anslutningar på en sida. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Inträffar när en sida aktuellt visningsläge har ändrats. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Inträffar innan processen att ändra en sida visningsläget. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Inträffar när markeringen för en kontroll har avbrutits. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Inträffar innan processen med att annullera valet av en kontroll. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Inträffar när en kontroll har lagts till i en zon. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Inträffar innan processen att lägga till en kontroll i en zon. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Inträffar när en kontroll har stängts (tas bort från en sida). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Inträffar innan processen med att stänga en kontroll. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Inträffar när en instans av en dynamisk åtkomstkontroll (en som har skapats via programmering eller lagts till från en katalog) har tagits bort permanent. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Inträffar innan raderingen av en dynamisk åtkomstkontroll. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Inträffar när en kontroll har flyttas inom zonen eller till en annan zon. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Inträffar innan processen att flytta en kontroll. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Inträffar när två kontroller som valts för deltagande i en anslutning har upprättats anslutningen. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Inträffar innan processen med att ansluta två kontroller. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Inträffar när två anslutna kontroller har varit frånkopplad. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Inträffar innan processen att koppla från två kontroller. |       WebPartManager-kontrollen har olika metoder för att hantera webbdelar sidor.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ett stort utbud av metoder, anges inte här, finns vars namn utformas på olika sätt*EventName*. Dessa metoder vanligtvis öka deras associerade händelsen och ger en hanterare av typen <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> händelsen De flesta av dessa metoder kan åsidosättas av utvecklare som ärver från klassen WebPartManager. Sidan utvecklare kan också tillhandahålla anpassade hanterare för de händelser som är associerade med dessa metoder. Till exempel för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>händelse en sida-utvecklare kan lägga till en `OnWebPartAdded` attribut till den `<asp:webpartmanager>` element i koden för en webbsida och sedan tilldela en anpassad metod namn till attributet att tillhandahålla anpassad hantering för händelsen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Attributet som motsvarar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>metoden och den här grundläggande mönster för händelsehantering fungerar för de flesta webbdelar händelser och deras associerade metoder.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       WebPartManager-kontrollen har dessutom metoder synnerhet hanteringen av <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller (och server eller användarroll kontroller som <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       En annan uppsättning metoder är specialanpassat för anslutningar. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Slutligen fokuserar vissa WebPartManager metoder på funktioner för anpassning. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Mer information om andra WebPartManager-metoder som kan nås via <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>egenskapen finns i dokumentationen för <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klass.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Initierar en ny instans av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klass."
  remarks: "WebPartManager Standardkonstruktören flera viktiga variabler som används av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> En tilldelning som direkt påverkar alla webbdelar sidor är det faktum att sidan standardvisningsläge anges till bläddringsläge (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Aktiverar alla anslutningar på en webbsida som inaktiv."
  remarks: "ActivateConnections-metoden anropas för varje förfrågan till en sida för att aktivera befintliga anslutningar mellan <xref:System.Web.UI.WebControls.WebParts.WebPart>och andra kontroller som finns i <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zoner.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> I vissa fall för instans om det finns en konflikt i anslutningar som aktiveras den här metoden i sin tur anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metod för att avsluta problematisk anslutning.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Under frånkopplingsprocessen den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelsen utlöses.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normalt utvecklare kan avbryta den här händelsen, men i fall där det finns en konflikt mellan anslutningar inte kan annulleras eftersom den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen behöver att lösa konflikten för att slutföra aktiveringsprocessen för anslutningar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Mer information finns i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ger programmatisk standardmetoden för att lägga till <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller till en webbsida."
  remarks: "Metoden AddWebPart används för både att lägga till nya dynamiska <xref:System.Web.UI.WebControls.WebParts.WebPart>styr till en sida och öppna statisk eller dynamisk kontroller som tidigare har stängts på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> När metoden anropas för att lägga till en ny kontroll, faktiskt skapas en kopia av den kontroll som refereras till i den `webPart` parameter. Ett nytt ID genereras för kopiering av kontrollen, så att utvecklare ska referera den <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll som returneras från metoden för att hämta det nya ID-värdet.</xref:System.Web.UI.WebControls.WebParts.WebPart> När metoden anropas för att öppna en tidigare stängda kontroll, returneras en direkt referens till kontrollen som refererar till den `webPart` parameter.      > [!IMPORTANT] > Bör du alltid använda metoden AddWebPart snarare än den <xref:System.Web.UI.ControlCollection.Add%2A>metod i mängden med kontroller som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>egenskap i <xref:System.Web.UI.WebControls.WebParts.WebPart>styr programmässigt till sidan, eftersom använder den <xref:System.Web.UI.ControlCollection.Add%2A>metoden genererar ett undantag.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Lägga till en kontroll som inte är en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen (med andra ord en Serverkontrollen som kommer att omslutas med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroll vid körning), bör du först anropa den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>metoden för att skapa kontrollen och sedan anropa metoden AddWebPart för att lägga till kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> En demonstration av den här metoden finns i avsnittet exempel."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (eller server eller en användare) lägga till en webbsida eller öppnas på en sida."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> som `webPart` läggs till."
    - id: zoneIndex
      type: System.Int32
      description: "Ett heltal som representerar nummer position som `webPart` upptar i `zone`, i förhållande till andra kontroller i `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll som har lagts till på sidan."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Värdet för <code> zoneIndex </code> är mindre än noll."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>metoden anropas för att avgöra om en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll kan läggas till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "AuthorizeWebPart händelsen inträffar när en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll läggs till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> Det finns ett antal vanliga scenarier där en kontroll kan läggas till en sida. En fullständig beskrivning av dessa finns i avsnittet Anmärkningar för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> När en kontroll läggs den markerade för att se om dess <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>egenskapen har angetts, och i så fall, om kontrollen har behörighet att lägga till sidan.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Utvecklare kan skapa händelsehanterare för händelsen AuthorizeWebPart att tillhandahålla filtrering för kontroller. Om en kontroll <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>egenskapsvärdet inte uppfyller villkoret i hanterare händelsekod kontrollen har inte lagts till på sidan.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en samling <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objekt som kan användas när webbdelar anslutningar mellan server-kontroller."
  remarks: "Den här egenskapen används den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>metoden för att skapa samlingen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Som standard läser den tillgängliga transformerare från programmets konfigurationsfil."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> som innehåller en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objekt."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Startar processen med att ansluta två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Metoden BeginWebPartConnecting finns så att processen för att skapa anslutningar mellan kontroller kan göras i olika faser, vilket ger utvecklare mer kontroll över anslutningen. Metoden utför en uppsättning inledande kontroller för att säkerställa att `webPart` är i ett tillstånd där en anslutning legitimt kan skapas. Om `webPart` skickar alla kontroller anges sedan som den markerade kontrollen (se den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>egenskapen), och hur du ansluter kan fortsätta.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som anslutningen bildas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det aktuella visningsläget på sidan är inte <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Startar processen för att redigera en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  remarks: "Metoden BeginWebPartEditing finns så att processen för redigeringskontroller kan göras i olika faser, vilket ger utvecklare mer kontroll över processen. Metoden utför en uppsättning inledande kontroller för att säkerställa att `webPart` är i ett tillstånd där den kan redigeras. Om `webPart` skickar alla kontroller anges sedan som den markerade kontrollen (se den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>egenskapen), och redigering kan fortsätta.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som ska redigeras."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det aktuella visningsläget på sidan är inte <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerar standardvisningsläge för sidor som innehåller webbdelar kontroller. Det här fältet är skrivskyddat."
  remarks: "Fältet BrowseDisplayMode refererar till en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt som har skapats och som innehåller den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Eftersom detta är ett statiskt objekt du kan referera till den direkt till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass utan att behöva en instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       När en sida som innehåller webbdelar styr första belastning, är det i BrowseDisplayMode (bläddringsläge) som standard. När användare söker bara som en normal webbsida, sidan finns kvar i bläddringsläge. Om användarna vill anpassa en sida layout, kontroller, utseende och beteende, måste de växla sidan till en särskild visningslägen som är tillgängliga via den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kontrollerar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller som ska delta i en anslutning till att avgöra om de kan vara ansluten när konsumenten och providern kontroller har kompatibla gränssnitt och en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objekt behövs inte."
  remarks: "Den här metoden används för att ansluta `provider` och `consumer` när båda kontrollerna har kompatibla kopplingspunkten typer, så att en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objekt behövs inte.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Du kanske vill använda den här metoden för att verifiera att två kontroller kan vara ansluten innan du anropar <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>att skapa en anslutning som programmässiga.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Den här överlagring använder samma implementering som den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>metodöverlagringen med det enda undantaget är att denna överlagring inte kräver en transformator.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som tillhandahåller data för `consumer` när kontrollerna som är anslutna."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> som gör att `provider` att delta i en anslutning."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som tar emot data från `provider` när kontrollerna som är anslutna."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> som agerar som en Återanropsmetoden så som `consumer` kan delta i en anslutning."
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om <code> provider </code> och <code> consumer </code> kan anslutas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kontrollerar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller som ska delta i en anslutning till att avgöra om de kan vara ansluten och använder en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objekt för att skapa anslutningen mellan en inkompatibel konsumenten och providern."
  remarks: "Den här metoden används för att ansluta `provider` och `consumer` när båda kontrollerna har inkompatibla kopplingspunkten typer, så att en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objekt krävs.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Du kanske vill använda den här metoden för att verifiera att två kontroller kan vara ansluten innan du anropar <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>att skapa en anslutning som programmässiga.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Den här överlagring använder samma implementering som den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>metodöverlagringen med det enda undantaget är att denna överlagring kräver en transformator.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som tillhandahåller data för `consumer` när kontrollerna som är anslutna."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> som agerar som en Återanropsmetoden så som `provider` kan delta i en anslutning."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som tar emot data från `provider` när kontrollerna som är anslutna."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> som agerar som en Återanropsmetoden så som `consumer` kan delta i en anslutning."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> som gör att en inkompatibel `provider` och `consumer` att ansluta."
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om <code> provider </code> och <code> consumer </code> kan bilda en anslutning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerar det visningsläget som används för att lägga till kontroller från en katalog med kontroller till en webbsida. Det här fältet är skrivskyddat."
  remarks: "Fältet CatalogDisplayMode refererar till en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt som har skapats och som innehåller den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Eftersom detta är ett statiskt objekt du kan referera till den direkt till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass utan att behöva en instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       När du vill lägga till kontroller i en sida om en katalog med serverkontroller är tillgänglig, kan de växla sidan till CatalogDisplayMode (läge) och katalog användargränssnittet (UI) visas. Gränssnittet för en katalog med webbdelar som tillhandahålls av en <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>zonen kontroll.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Utvecklare lägga till den här zonen på sidan vid designtillfället och Lägg sedan till kontroller i zonen, så att användarna ska kunna lägga till dessa kontroller i sina sidor vid körning. När utvecklaren har lagts till de här kontrollerna blir läge ett visningsläge som stöds på sidan eftersom de nödvändiga kontrollerna finns det för att aktivera läget för katalogen.       När en användare växlar en sida om du vill katalogisera läge, zonen och alla serverkontroller som har lagts till det blir synliga och användaren kan välja kontroller från katalogen som ska läggas till på sidan eller ta bort kontroller på sidan. Efter att kontroller har lagts till på sidan, visas de i normal bläddringsläge och sidan uppdateras."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kontrollerar funktionerna i webbläsaren som skickar begäran och värdet för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>egenskapen för att avgöra om att återge klienten skriptet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om att återge klientskript."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger en varning som visas när en användare stänger en kontroll som fungerar som en provider för andra kontroller i en anslutning."
  remarks: "När en användare stänger en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra, normalt visas inget meddelande.</xref:System.Web.UI.WebControls.WebParts.WebPart> Läs mer om vad det innebär att stänga en kontroll av <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       Dock visas ett varningsmeddelande visas när en användare försöker stänga kontrollen när en kontroll är ansluten till en annan kontroll och fungerar som en leverantör av data till den andra kontrollen. Meddelandet anger att en provider-kontroll håller på att stängas, vilket innebär att styr kopplat till den här providern som användare inte längre har några data att använda. Egenskapen CloseProviderWarning ger utvecklare möjlighet att anpassa varningsmeddelandet som visas för användaren.       Om en sida-utvecklare tilldelar en tom eller null strängvärde till den här egenskapen är ingen varning meddelanderuta ska visas när en användare stänger en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll som är en provider.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "En sträng som innehåller varningen. Standardvärdet är en kultur-specifika meddelandet som tillhandahålls av .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Stänger en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll på ett sätt som inte kan återges på en webbsida, men kan öppnas igen."
  remarks: "Metoden CloseWebPart tar bort en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller annan server kontroll så att den inte återges på webbsidan som innehöll ursprungligen den.</xref:System.Web.UI.WebControls.WebParts.WebPart> Stängd kontrollen har lagts till i en <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-objekt som innehåller en referens till den stängda kontrollen och gör det möjligt för kontrollen som ska återställas till sidan.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> En stängd <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen visas fortfarande i samlingen som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Stänga en kontroll skiljer sig från att ta bort den. Stängd kontroller är fortfarande tillgängliga ska återställas till en sida, men en instans av borttagna kontrollen tas bort permanent och kan inte återställas. Oavsett om en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller Serverkontrollen är statiska (deklareras i koden för en sida) eller dynamisk (lagts till på sidan programmässigt eller av en användare från en katalog med webbdelar), kan stängas och öppnas igen på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Normalt användare kan stänga en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll genom att klicka på dess verbmenyn Stäng verbet.</xref:System.Web.UI.WebControls.WebParts.WebPart> En kontroll kan också vara stängd genom att anropa metoden CloseWebPart och skicka den till en referens till direkt `webPart`.       På en sida där <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller har avslutats, om en utvecklare deklarerar en `<asp:catalogzone>` element, och lägger till i den en `<asp:pagecatalogpart>` elementet innehåller ett enkelt användargränssnitt (UI) för användare att återställa stängd kontroller på sidan vid körning.</xref:System.Web.UI.WebControls.WebParts.WebPart> Användare kan växla sidan i katalogen visningsläge och stängd kontroller visas sidan Catalog. Användare kan välja stängd kontroller och lägga till dem tillbaka till sidan på plats som de önskar och sedan de markerade kontrollerna återställas till sidan och återges som vanligt.       När metoden CloseWebPart anropas den genererar flera händelser: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(om det finns flera kontroller), och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(om det är anslutet kontroll).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Normalt utvecklare kan avbryta dessa händelser, men i vissa fall är inte möjligt att upphöra. Mer information finns i dokumentationen för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelser.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller Serverkontrollen som stängs i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerar det visningsläget som används för att visa en särskild användargränssnittet (UI) för användare att hantera anslutningar mellan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller. Det här fältet är skrivskyddat."
  remarks: "Fältet ConnectDisplayMode refererar till en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt som har skapats och som innehåller den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Eftersom detta är ett statiskt objekt du kan referera till den direkt till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass utan att behöva en instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       När du vill hantera anslutningar mellan <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller på en webbsida, om en <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>zonen har deklarerats på sidan kan de växla sidan i ConnectDisplayMode-läge.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Anslut läget visar ett särskilt gränssnitt för att hantera anslutningar, vilket ger möjlighet att ansluta eller koppla kontroller och redigera information om befintliga anslutningar.       Om du vill ge användare möjlighet att hantera anslutningar med användargränssnitt som tillhandahålls av uppsättningen webbdelar kontroll, måste du deklarera ett `<asp:connectionszone>` element i koden för en sida. Till skillnad från element för andra typer av <xref:System.Web.UI.WebControls.WebParts.WebZone>zoner, du behöver inte lägga till andra taggar inom elementet; deklarerar du helt enkelt elementet ensamt.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till samlingen av alla aktuella anslutningar på en webbsida."
  remarks: "Egenskapen anslutningar är ett sätt att få åtkomst till den aktuella mängden anslutningar på en sida. Själva samlingen är skrivskyddad och utvecklare som vill hantera en viss anslutning från en samling som ska använda <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metoderna, till exempel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> som innehåller en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objekt."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när alla aktuella webbdelar anslutningar på en sida inte är endast anslutna, men också börjat aktivt dela data mellan reglagen konsumenten och providern ingår i varje anslutning."
  remarks: "Den här händelsen inträffar när en sida är klar dess inläsningen i livscykeln för anslutningar. Det uppstår också när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>händelsen, som indikerar det bara att den <xref:System.Web.UI.WebControls.WebParts.WebPart>eller serverkontroller som ingår i en viss anslutning har anslutit.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> I fall där det finns flera anslutningar på en sida, metoden ConnectionsActivated anger att alla giltiga webbdelar anslutningar på en sida är aktiv och kan dela data. Om du vet att alla anslutningar är aktiva, utföra utvecklare valfritt antal aktiviteter, inklusive meddela användaren om status för alla anslutningar, meddela consumer-kontroller för att bearbeta och visa data från sina leverantörer och så vidare.       Den här händelsen är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>metoden som aktiverar händelsen och utvecklare kan skapa egna hanterare för händelsen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Sidan utvecklare kan skapa en anpassad hanterare för händelsen genom att lägga till den `OnConnectionsActivated` attribut till den `<asp:webpartmanager>` element på sidan och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under aktiveringsprocessen för alla etablerade webbdelar anslutningar på en webbsida."
  remarks: "I livscykeln för anslutningar den här händelsen inträffar när en sida slutförs dess inläsningen precis före den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metoden anropas.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Den skiljer sig från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>händelsen, som omfattar en viss anslutning mellan <xref:System.Web.UI.WebControls.WebParts.WebPart>eller andra kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> ConnectionsActivating-händelsen inträffar när alla möjliga anslutningar på en sida har anslutits och håller på att aktiveras.       Händelsen ConnectionsActivating är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>metod som genererar händelsen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Control-utvecklare som vill utöka typ av anslutningar som kan läggas till en sida kan åsidosätta den skyddade <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>metod och aktivera ytterligare typer av anslutningar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Sidan utvecklare kan skapa en anpassad hanterare för händelsen genom att lägga till den `OnConnectionsActivating` attribut till den `<asp:webpartmanager>` element på sidan och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar en anslutning mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> styr med endast referenser till kontroller och deras angivna <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objekt."
  remarks: "Denna överlagring som används för att ansluta kontroller när kopplingspunkterna är tillräckligt kompatibla att de kan ansluta utan att använda en <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektet.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> När den här överlagringen för metoden anropas den bara skickar anropet till den andra överbelastad versionen av metoden och skickar `null` för parametern kräver ett <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objekt.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       När du försöker ansluta två kontroller programmässigt, kan du använda den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>metod i en villkorlig kontroll för att avgöra om kontrollerna som kan anslutas direkt.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll som har utfärdats data till en annan roll anslutna kontroll."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "En metod som fungerar som en Återanropsmetoden för anslutningen. Som det implementerats i kontrollen mängden webbdelar detta är en offentlig metod i `provider` som har markerats med en <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> metadataattribut."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll som har rollen som tar emot data från `provider`, och bearbetning eller visa den."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "En metod som ansluter med `providerConnectionPoint` tar emot data för anslutningen. Som det implementerats i kontrollen mängden webbdelar detta är en offentlig metod i `consumer` som har markerats med en <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> metadataattribut."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> -värde som innehåller informationen om providern och konsumenter som behövs för en anslutning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrollsamling av dynamiska samlingar är skrivskyddad."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar en anslutning mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> styr med referenser till kontroller, de angivna <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objekt, och en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objekt."
  remarks: "Denna överlagring används för att ansluta kontroller när kopplingspunkterna är inkompatibla. Inkompatibilitet inträffar när `consumer` implementerar ett annat gränssnitt än `provider` som dess anslutningspunkt. Transformatorn konverterar data till en typ som kan tolkas av `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> som har utfärdats data till en annan anslutna kontroll-roll."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "En offentlig metod i `provider` som har markerats med en <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> metadataattribut, och fungerar som en Återanropsmetoden för anslutningen."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> som har rollen som tar emot data från `provider` eller `transformer`, och bearbetning eller visa den."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "En offentlig metod i `consumer` som har markerats med en <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> metadataattribut, och ansluter med `providerConnectionPoint` tar emot data för anslutningen."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> som gör att en anslutning mellan två kontroller genom att konvertera data från `provider` till ett format som `consumer` kan bearbeta."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> som innehåller information om providern, konsumenten och transformatorn som behövs för en anslutning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Anslutningar har aktiverats i <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar insamling av alla <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, server eller användarkontroller som finns i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zoner på en webbsida och hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "Egenskapen Controls refererar inte till andra kontroller som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra, t.ex. olika zonen kontroller, <xref:System.Web.UI.WebControls.WebParts.EditorPart>eller <xref:System.Web.UI.WebControls.WebParts.CatalogPart>kontroller och andra.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Den här egenskapen används av uppsättningen webbdelar kontroll och utveckling oftast inte ska anropas från din kod. Därför även om egenskapen är offentlig, är det dolt från IntelliSense. Utvecklare som vill ha åtkomst till samlingen av <xref:System.Web.UI.WebControls.WebParts.WebPart>eller andra serverkontroller som hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen ska använda dess <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>egenskap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "En <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> som innehåller alla kontroller som hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Används av kontrollen webbdelar som vill skapa en kopia av en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll för att lägga till kontrollen till en webbsida."
  remarks: "Det går inte att anropa metoden CopyWebPart direkt från din kod. Den här metoden anropas internt av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll som en del av processen för att lägga till en ny dynamisk <xref:System.Web.UI.WebControls.WebParts.WebPart>eller server-kontroll till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> En dynamisk kontrollen har lagts till en sida programmässigt eller via webbdelar användargränssnittet (UI), till exempel av en användare lägger till en kontroll från en katalog med kontroller, till skillnad från en statisk kontroll som har deklarerats direkt i koden för en sida.      > [!NOTE] > Metoden kan åsidosättas i en härledd klass om utvecklare som vill aktivera metoden för att hantera ytterligare kontroll kopiera scenarier. Mer information finns i kommentarer till arvtagare avsnitt.       När en ny dynamisk kontroll har lagts till, om det är en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra CopyWebPart-metoden returnerar en ny instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPart> Om den kontroll som läggs till någon annan typ av server-kontroll (t.ex en användarkontroll, en anpassad kontroll eller en ASP.NET-kontroll), kontrollen kommer redan har varit omslutna med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objekt för kontroll-uppsättningen webbdelar.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> När metoden CopyWebPart påträffar en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroll, returneras en ny instans av <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontrollen med en ny instans av den underordnade kontrollen omslutna inom den.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       När metoden CopyWebPart skapar en ny kopia av en kontroll för att returnera, återställs även värdena för alla egenskaper till sina standardvärden. Observera att, om du vill bevara värdena för egenskaperna anpassningsbar och ha dem kopieras till den nya kontroll instansen, du bör kontakta den <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>metoden samt.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> Det sista steget som utförs av CopyWebPart metoden är att anropa den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>metod för att hämta ett nytt ID för kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > Eftersom metoden hämtar ett nytt ID för en kopierade kontroll kan inte lita på refererar till en dynamisk kontroll som läggs till en sida med dess ursprungliga-ID. Du bör i stället referera till den nya instansen av den kontroll som returneras av-metoden."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll som ska kopieras."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> som ska läggas till en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar en uppsättning transformatorer som angetts i konfigurationsfilen för en webbplats och lägger till dem i samlingen för transformatorer som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Insamling av transformatorer som angetts i konfigurationsfilen för en webbplats."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar mängden med alla kontroller som hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> på en webbsida. Den här klassen kan inte ärvas."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "En <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> som består av alla olika webbdelar kontroller hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar uppsättningen av alla möjliga visningslägen för ett program med webbdelar."
  remarks: "Den här metoden skapar lista med alla möjliga visningsläge, inte bara visningslägen som stöds på en viss sida. Mer information om visningslägen som stöds finns i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>egenskap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Som standard visas webbdelar kontrollen set skapar följande lägen som ska användas på webbdelar sidor:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>utvecklare kan skapa anpassade visningsläge, med eller utan tillhörande anpassade zoner som härleds från den <xref:System.Web.UI.WebControls.WebParts.WebZone>eller <xref:System.Web.UI.WebControls.WebParts.ToolZone>klasser.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Om du vill skapa en anpassad visningsläget måste ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klass, och om du vill lägga till din visningsläge som ett läge som stöds på en sida måste ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen och åsidosätta metoden CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       När du lägger till visningslägen med hjälp av den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>metoden du bör lägga till dem i den ordning som du vill att de ska visas i alla användarkontroller för användargränssnittet (UI) (t.ex en <xref:System.Web.UI.WebControls.ListBox>kontroll) som ger användare möjliga visningslägen på en sida.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> som innehåller alla visningslägen som stöds."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett unikt värde som fungerar som ett ID för en dynamisk koppling."
  remarks: "Metoden CreateDynamicConnectionID genererar ett GUID-värde och konverterar den till en sträng som unikt ID för en anslutning. Metoden anropas när en dynamisk anslutning skapas."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "En sträng som innehåller ett unikt ID för en anslutning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar ett unikt ID för en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  remarks: "När <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller har lagts till på en webbsida, de kan vara statisk (vilket innebär att kontrollen har deklarerats i sidkoden) eller dynamisk (vilket innebär att de har lagts till via programmering).</xref:System.Web.UI.WebControls.WebParts.WebPart> I vissa situationer där <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen skapar nya dynamiska kontroller för att lägga till sidan anropar den här metoden för att generera ett unikt ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Metoden är virtuell så att utvecklare kan åsidosätta den om de vill ge en anpassad implementering för att generera ID."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "Den <xref:System.Type>för kontrollen som ett ID genereras.</xref:System.Type>"
    return:
      type: System.String
      description: "En sträng som innehåller det unika ID för en kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar en särskild kontroll som ansluts till en sida och visas för slutanvändaren när ett försök att läsa in eller skapa en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen misslyckas av någon anledning."
  remarks: "CreateErrorWebPart-metoden anropas när webbdelarna styr set försöker läsa in eller skapa en instans av en dynamisk <xref:System.Web.UI.WebControls.WebParts.WebPart>eller server-kontroll och det misslyckas av någon anledning.</xref:System.Web.UI.WebControls.WebParts.WebPart> Metoden skapar ett <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>objekt, tilldelar ett felmeddelande, och returnerar det.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Den <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>kontrollen infogas i stället för den kontroll som misslyckades och dess felmeddelande visas på sidan.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       Det går inte att anropa metoden CreateErrorWebPart direkt från din kod. Du kan dock ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen och utöka metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Mer information finns i anteckningar för arvtagare avsnitt.       Användare kan arbeta med en <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>kontroll i en sida mycket som de skulle en normal <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Om du vill ta bort ett felmeddelande, kan de stänga kontrollen genom att klicka på Stäng verbet, då kontrollen kommer att läggas till en <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>objekt, t.ex. en stängd kontroll.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Om en användare tar bort en <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>tas också bort kontrollen server som inte gick att läsa in sidan.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "En sträng som är ID för kontrollen misslyckas. Om en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> är inblandad i felet ID är ID för dess underordnade server-kontroll."
    - id: originalTypeName
      type: System.String
      description: "En sträng som är namnet på den <xref:System.Type>i kontrollen misslyckades.</xref:System.Type> Om en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> är inblandad i felet typnamnet är vilken typ av dess underordnade server-kontroll."
    - id: originalPath
      type: System.String
      description: "En sträng som innehåller sökvägen till en användarkontroll om en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> -värde som innehåller en underordnad användarkontroll ingår i felet."
    - id: genericWebPartID
      type: System.String
      description: "En sträng som returnerar ID för en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, om den typ av kontroll som är involverad i det inte gick att läsa in eller skapa en kontroll."
    - id: errorMessage
      type: System.String
      description: "En sträng som innehåller felmeddelandet som ska visas på sidan."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> som infogas i en sida i stället för en kontroll som inte kunde läsas in eller skapas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar en anpassning objekt så att den innehåller en användares anpassningsdata för den aktuella webbsidan."
  remarks: "CreatePersonalization-metoden returnerar ett objekt för att innehålla och hantera användarens anpassningsinställningar för den aktuella sidan. Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll hanterar det här objektet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> ska innehålla en användares anpassningsdata."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Packar ett server-kontroll som inte är en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Kontrollera med en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> objekt så att kontrollen har funktioner för webbdelar."
  remarks: "Metoden CreateWebPart är den huvudsakliga mekanismen för att aktivera serverkontroller som inte är <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller på samma funktioner som ska bli en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll, och därmed ett fullständigt deltagande i webbdelar program.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Utöka antalet kontroller som de kan använda i ett program med webbdelar med hjälp av den här metoden kan utvecklare frågeprestanda avsevärt, eftersom praktiskt taget någon typ av server-kontroll--standard ASP.NET-kontroller, användarkontroller och anpassade kontroller--kan användas.       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen använder också den här metoden i två scenarier du omsluter serverkontroller med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektet.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> När användarna lägger till serverkontroller på en sida med hjälp av den <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>styra om importerade kontrollen inte är en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra CreateWebPart-metoden anropas.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Dessutom när serverkontroller deklareras i beständiga format i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon på en webbsida, CreateWebPart metoden anropas för alla kontroller som inte är <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       När du lägger till en serverkontroll i en zon programmässigt, en vanlig metod är att använda metoden CreateWebPart du omsluter kontrollen med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektet och sedan anropa den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>metod för att lägga till kontrollen i samlingen för alla <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller på sidan, som refereras till av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "En serverkontroll som inte är en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> som omsluter <code> control </code> och gör det möjligt att fungera som en verklig <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger en anpassad varningsmeddelande som visas för användarna när de tar bort en kontroll."
  remarks: "När en användare tar bort en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra visas normalt ett varningsmeddelande visas.</xref:System.Web.UI.WebControls.WebParts.WebPart> Den uppmanas användaren att borttagningen är permanent när den här instansen av en kontroll tas bort. Sidan utvecklaren kan ge användarna ett sätt att lägga till en ny instans av kontrollen på sidan (t.ex igenom en katalog med <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, eller på vissa programmässiga sätt), men den aktuella instansen för en kontroll tas bort permanent bort.</xref:System.Web.UI.WebControls.WebParts.WebPart> I dialogrutan som visas varningen finns en knapp för att avbryta borttagningen, om så önskas.       Egenskapen DeleteWarning kan utvecklare ställa in varningen som visas för användaren.       Om en sida-utvecklare tilldelar en tom sträng (&quot;&quot;) värdet till den här egenskapen dialogrutan ingen varningsmeddelandet visas när användaren tar bort en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > I DeleteWarning egenskapen visas inte om static <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller och webbserverkontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> Statisk kontrollerna är servern som deklareras i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonen i koden för en webbsida.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Eftersom dessa kontroller är statisk, de kan inte tas bort, så ta bort varningsmeddelandet visas aldrig i så fall. Statiska kontroller kan stängas av en användare, men en stängd kontrollen har lagts till katalogen sida som det kan läggas till sidan av en användare medan en borttagen kontroll inte kan återställas."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "En sträng som innehåller texten i varningsmeddelandet. Standardvärdet är en lokaliserad varning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tar permanent bort en dynamisk instans av en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll från en webbsida."
  remarks: "Metoden DeleteWebPart tar permanent bort den kontroll som representeras av den `webPart` parameter från en sida. Till skillnad från en stängd kontroll som läggs till i <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>styra och kan läggas till tillbaka till sidan förekomsten borttagna kontrollen kan aldrig läggas tillbaka till sidan.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > Som implementeras av kontrollen webbdelar har angetts möjligheten för användare att ta bort en dynamisk <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll som beror på användaren och anpassningsläge som kontrollen har lagts till på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> Om kontrollen har lagts till när sidan är i delade scope (av en användare som har behörighet), sedan kontrollen kan inte tas bort av enskilda användare när sidan finns i användarens scope.       Endast dynamiska kontroller kan tas bort. Dynamiska kontroller har lagts till en sida programmässigt eller av användare att lägga till kontroller från en katalog. Statiska kontroller har lagts till en sida deklarativt i formatet markup eller beständighet. Eftersom de deklarativa taggarna är permanent finns i markeringen, statiska kontroller kan inte tas bort, men de kan stängas och öppnas igen."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Server-kontroll som ska tas bort."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerar det visningsläget som används för att ändra layouten för webbsidor som innehåller webbdelar kontroller. Det här fältet är skrivskyddat."
  remarks: "Fältet DesignDisplayMode refererar till en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt som har skapats och som innehåller den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Eftersom detta är ett statiskt objekt du kan referera till den direkt till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass utan att behöva en instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       När en sida som innehåller webbdelar styr första belastning, är det i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(bläddringsläge) som standard.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> När du vill ändra layouten till sidan genom att flytta kontroller till olika zoner eller inom de aktuella zonerna, måste de först växla sidan till DesignDisplayMode (designläge). Användargränssnittet (UI) för de olika zonerna visas i designläge och användare kan dra kontrollerna för att ändra layouten."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tar bort en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server som styr vara stängd eller tas bort från alla anslutningar som den ingår i."
  remarks: "DisconnectWebPart-metoden anropas internt av webbdelar kontrollen när en kontroll stängs på en sida eller tas bort från en sida. I ett sådant scenario anropas metoden för att ta bort kontrollen från alla anslutningar där den ingår som en konsument eller provider. Om kontrollen tas bort från en anslutning kan den här metoden också anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metod för att avsluta alla anslutningar som `webPart` var inblandad.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       När metoden DisconnectWebPart anropas den genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normalt den här händelsen kan avbrytas men i båda fallen kan inte avbrytas. Ett fall inträffar under begäranden till sidan när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metoden anropas.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Om det finns en konflikt mellan befintliga anslutningar, DisconnectWebPart-metoden anropas för att stänga en av anslutningarna som står i konflikt och i den här instansen av <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelse kan inte annulleras eftersom konflikten måste lösas.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       Det andra fallet inträffar när en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller Serverkontrollen som är ansluten stängs eller tagits bort.</xref:System.Web.UI.WebControls.WebParts.WebPart> I det här fallet på grund av kontrollen tas bort från sidan sin anslutning måste avslutas, därför avsiktligt det inte går att avbryta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelsen för att avbryta avslutar en anslutning.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Mer information finns i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll som kommer att avslutas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Utför processen att koppla från server-kontroller som är anslutna på en webbsida."
  remarks: "Metoden DisconnectWebParts utför fullständig processen för att avsluta en anslutning mellan <xref:System.Web.UI.WebControls.WebParts.WebPart>eller serverkontroller när du skickar den `connection` parameter.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Den här metoden används för att koppla från kontroller när du placerar en `<asp:connectionszone>` element i en webbsida, ett användargränssnitt (UI) för att hantera anslutningar. När en sida i anslutningsläge visa (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), och det finns en aktuell anslutning, användarna kan klicka på en knapp som anropar metoden DisconnectWebParts för att avsluta anslutningen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       Du kan också anropa metoden DisconnectWebParts direkt från din kod om du vill koppla från kontroller och programmässigt utan att behöva lägga till en `<asp:connectionszone>` element på en sida."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> som representerar anslutningen mellan kontroller."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>ingår inte i antingen <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> eller <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger active visningsläge för en webbsida som innehåller webbdelar kontroller."
  remarks: "En sida som innehåller webbdelar kontroller är alltid i ett av flera möjliga visningslägen. Mer information om lägen finns [webbdelar sidan visa lägen](~/add/includes/ajax-current-ext-md.md).       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen skapar visningslägen för en webbsida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Med hjälp av grundläggande <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klassen, de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen skapar flera standard läge objekt som kan användas på sidor som innehåller webbdelar kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Dessa standard visningslägen som beskrivs i den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Översikt över klassen.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll hanterar också visningslägen för sidor med webbdelar kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Med hjälp av egenskapen DisplayMode den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>behåller kontrollen en referens till det aktuella visningsläget på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Du kan också använda egenskapen DisplayMode för att växla en sida till olika visningslägen. Ett exempel på hur visningslägen på en sida som använder webbdelar kontroller finns [genomgång: ändra visa lägen på en webbsida delar](~/add/includes/ajax-current-ext-md.md).       Som en del av hantering av visningsläge, den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen ger också händelser och händelsehanterare för visningslägen, till exempel den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>metoden och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dessa metoder tillhandahåller en mekanism för att anpassa en sida beteende och även för att lägga till en anpassad visningsläget."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> som avgör visningsläge för en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt som tilldelats egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar efter att aktuellt visningsläge på en webbdelar som sidan har ändrats."
  remarks: "Visningslägen är en integrerad del av webbdelar program. När användarna växlar till en annan visningsläget på en webbsida, tar sidan ofta på ett mycket olika utseende, beroende på syftet med det nya visningsläget. När ett visningsläge har ändrats kanske du vill göra vissa ändringar i användargränssnittet (UI), till exempel dölja eller visa vissa kontroller utseendet på valda UI-element, och så vidare.      > [!NOTE] > Mer information om lägen finns [webbdelar sidan visa lägen](~/add/includes/ajax-current-ext-md.md). Mer information om förbrukar händelser finns [så här: använda händelser i ett formulär webbprogram](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när användaren klickar på en webbsida som börjar ändra till ett annat visningsläge verb."
  remarks: "Visningslägen är en integrerad del av webbdelar program. När användarna växlar till en annan visningsläget på en webbsida, tar sidan ofta på ett mycket olika utseende, beroende på syftet med det nya visningsläget. När en användare initierar processen att ändra till ett nytt visningsläge genom att klicka på ett verb kan du behöva göra vissa ändringar i användargränssnittet (UI) med hjälp av den <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>egenskapen att fastställa det nya visningsläget vara och ändra olika delar av Användargränssnittet.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Ett bra sätt att göra detta är att åsidosätta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>metod för att anpassa Användargränssnittet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > Mer information om lägen finns [webbdelar sidan visa lägen](~/add/includes/ajax-current-ext-md.md). Mer information om förbrukar händelser finns [så här: använda händelser i ett formulär webbprogram](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en skrivskyddad samling alla visningslägen som är associerade med en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "DisplayModes egenskapsreferenser alla associerade visningslägen, jämfört med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-egenskap som refererar till de visningslägen som är tillgängliga (stöds) på den aktuella sidan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Två av de angivna visningslägen, bläddra och design, stöds alltid på en sida. Den andra tre visningslägen, redigera, katalogen och anslutningar, stöds endast när en sida har motsvarande typ av zon som krävs för ett visst visningsläge ska fungera. Om du sidan innehåller till exempel en <xref:System.Web.UI.WebControls.WebParts.EditorZone>zonen, visa redigeringsläget visas i samlingen som refereras av egenskapen DisplayModes, men visas inte i samlingen som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> som innehåller en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt som är associerade med den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar insamling av alla dynamic-anslutningar som för närvarande finns på en webbsida."
  remarks: "Dynamic-anslutningar finns anslutningar som skapats programmässigt i motsats till statiskt. Statiska anslutningarna skapas genom att deklarera dem i markeringen på sidan Web Forms. Dynamic-anslutningar bildas programmässigt, eller av en användare skapar en anslutning med hjälp av användargränssnittet (UI) för anslutningen.       Mängden DynamicConnections, även om det är skrivskyddat och du kan inte ändra dess innehåll ger programmatisk åtkomst till varje dynamisk connection-objektet.      > [!NOTE] > Att utföra vanliga åtgärder som till exempel ansluta eller koppla från <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, utvecklare ska använda de offentliga metoderna på den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>class, till exempel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, i stället för försök att direkt ändra anslutningsobjekt i mängden DynamicConnections.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> som innehåller referenser till alla dynamic-anslutningar på en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representerar visningsläget slutanvändare kan redigera och ändra server-kontroller. Det här fältet är skrivskyddat."
  remarks: "Fältet EditDisplayMode refererar till en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objekt som har skapats och som innehåller den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Eftersom detta är ett statiskt objekt du kan referera till den direkt till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass utan att behöva en instans av kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       När en sida som innehåller webbdelar styr första belastning, är det i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(bläddringsläge) som standard.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> När du vill redigera eller ändra ett server-kontroll, måste de först växla sidan till EditDisplayMode (redigeringsläge). Andra, måste de välja en specifik server-kontroll för att redigera genom att klicka på Redigera verbet på verbmenyn i som kontrollens sidhuvud. När kontrollen är i redigeringsläge, visas Redigera användargränssnittet (UI) för att redigera den markerade kontrollen.       Om du vill aktivera redigeringsläget på en sida på sidan måste innehålla minst en <xref:System.Web.UI.WebControls.WebParts.EditorZone>som styr zon som innehåller ett eller flera av de angivna redigering av <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>kontroll eller redigera anpassade kontroller.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger ett värde som anger om klientskript är aktiverat på den webbsida som innehåller en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "Egenskapen EnableClientScript ger ett sätt för utvecklare att inaktivera klientskript. Du kanske vill inaktivera skriptstöd av säkerhetsskäl eller se till att alla användare på en sida har en liknande användarupplevelse, även om de använder olika webbläsare.       Du kan inaktivera skriptstöd genom att lägga till en `EnableClientScript` attributet den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>element på en webbsida, som i följande kodraderna deklarativ: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` också utvecklare kan ta bort den här egenskapen genom arv från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass och ange standard värde till `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Uppsättningen webbdelar kontrollen använder klienten skript för att tillhandahålla vissa klientens användargränssnitt (UI) och funktionerna. Om du inaktiverar klienten skript, webbdelar kontroller fungerar fortfarande, men vissa funktioner inaktiveras. Möjligheten att drar kontroller till olika zoner är inaktiverad, tillsammans med möjligheten att återge verb i en meny nedrullningsbara verb i namnlisten i en kontroll (verb i stället visas som länkar i kontrollens namnlist)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om klientskript kan köras på sidan. Standardvärdet är <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett värde som anger att användningen av teman är aktiverad på en webbsida."
  remarks: "Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll åsidosätter basen <xref:System.Web.UI.Control.EnableTheming%2A>egenskapen så att den alltid returnerar ett värde för `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Detta görs eftersom webbdelarna kontrollen set kräver användning av teman att återge webbdelarna kontroller som är underordnade kontroller av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll och som utgör användargränssnittet (UI) för en webbsida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Till exempel teman används för att återge olika zoner och de kontroller som finns i zoner, inklusive de olika typerna av del kontroller (kontroller som ärver från den <xref:System.Web.UI.WebControls.WebParts.Part>klassen), användarkontroller serverkontroller och anpassade kontroller.</xref:System.Web.UI.WebControls.WebParts.Part>       Även om egenskapen EnableTheming åsidosatt implementeras som en egenskap för läsning och skrivning i enlighet med dess grundläggande egenskap, du kan inte ange egenskapen, eftersom avsiktligt den måste alltid returnera värdet `true`. Om du försöker ange egenskapen, en <xref:System.NotSupportedException>undantag.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om teman är aktiverade. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett försök gjordes att ange egenskapsvärdet."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Slutför processen med att ansluta en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll till en annan kontroll."
  remarks: "Metoden EndWebPartConnecting är klar anslutningsprocessen en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll till en annan kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> Det är motsvarigheten till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       Metoden EndWebPartConnecting garanterar att anpassning-objekt refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>egenskapen kan ändras, vilket är nödvändigt eftersom som utgör en anslutning är också en typ av anpassning.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Metoden sedan ser till att den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>objektet är inte `null`, och slutligen anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kontrollen som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Slutför processen för att redigera en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  remarks: "Metoden EndWebPartEditing är klar för redigering av en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> Det är motsvarigheten till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       Metoden EndWebPartEditing garanterar att anpassning-objekt refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>egenskapen kan ändras, vilket är nödvändigt eftersom en kontrollen är en process som kräver anpassningsändringar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Metoden sedan ser till att den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>objektet är inte `null`, så att den markerade <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen kan ändra, och slutligen den anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kontrollen som refererar till den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>egenskapen är <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger texten för ett varningsmeddelande som visas när en användare försöker exportera känsliga tillståndsdata från en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  remarks: "När en användare försöker exportera känsliga tillståndsdata från en <xref:System.Web.UI.WebControls.WebParts.WebPart>Kontrollera, om någon av de data som exporteras kommer från en medlem som har markerats som känsliga i källkoden, ett varningsmeddelande visas för användare i en meddelanderuta uppmanar dem att känsliga data ska exporteras och ger möjlighet att avbryta exporten.</xref:System.Web.UI.WebControls.WebParts.WebPart> Utvecklare kan markera en medlem som känslig informationen genom att ange den `isSensitive` parameter för den `[Personalizable]` attributet `true` på medlemmen. Mer information om det här attributet och parametern finns <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>klass.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > När du använder exportfunktionen av webbdelar kunde potentiellt känsliga data exporteras till obehöriga användare. Mer information om hur du skyddar mot det här hotet finns [skydda delar webbsidor](~/add/includes/ajax-current-ext-md.md).       Standardmeddelandet visas när användarna försöker exportera. Genom att tilldela ett värde för egenskapen ExportSensitiveDataWarning, kan du ange en anpassad varning visas."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "En sträng som innehåller varningen. Standardmeddelandet är en kultur-specifikt värde som tillhandahålls av .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Skapar beskrivning av XML-filen som innehåller tillstånd och egenskapen data för en serverkontroll."
  remarks: "Metoden ExportWebPart monterar olika tillstånd och egenskapen data från `webPart` till en XML-fil. Data innehåller information om själva kontrollen, inklusive dess sammansättning, systemtillstånd och egenskapsdata. Den användare som initierar export kan spara XML-filen till disk på den lokala datorn eller nätverket. Andra användare kan sedan importera beskrivningsfilen till en annan sida eller en webbplats och tillämpa tillstånd och egenskapen data till en annan instans av `webPart`. Detta är ett snabbt och enkelt sätt för användare att dela och återanvända sina inställningar på server-kontroller och det ger också utvecklare möjlighet att styra utseendet och beteendet för exporterade och importerade kontroller.       Egenskaper för `webPart` exporteras inte som standard. Om du vill aktivera export av en egenskap, måste du markera den med den `[Personalizable]` attribut i källkoden. Du kan också markera en exporterbar egenskap innehåller känsliga data genom att ange den `isSensitive` parameter för den `[Personalizable]` attributet `true`. Som standard `isSensitive` är `false`. Utvecklare kan ange parametern och `true` att indikera att data som är känsliga.       Så här aktiverar du `webPart` om du vill för att exportera en utvecklare anger dess <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>egenskapsvärde antingen <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(som omfattar alla anpassningsbara och känsliga egenskaper), eller <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, som exporterar allt utom känsliga egenskaper.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > Att tillåta användare att exportera data från kontroller och för att importera data till andra kontroller, innebär att vissa säkerhetsrisker. Utvecklare bör använda den metod som beskrivs ovan för att skydda känsliga data och om de vill undvika risken att exponera data helt bör de inte aktivera export på `webPart` alls. Mer information om webbdelar säkerhetsproblem finns [skydda delar webbsidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som data ska exporteras."
    - id: writer
      type: System.Xml.XmlWriter
      description: "En <xref:System.Xml.XmlWriter>som skriver exporterade data från `webPart` till en XML-beskrivningsfil.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Åsidosatt för att förhindra att fokus anges på den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> styra, eftersom den har inget användargränssnitt (UI)."
  remarks: "Metoden fokus åsidosätter basen <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>-metoden och genererar ett undantag om en anropare anropar metoden.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Eftersom den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen inte har något användargränssnitt och aldrig är synliga för användare, den kan aldrig fokus på sig själv.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "En anropare försöker anropa metoden fokus, vilket inte stöds i en kontroll som inte har något användargränssnitt."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar mängden <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> objekt som kan fungera som kopplingspunkter från en server som styr fungerar som en konsument inom en webbdelar-anslutning."
  remarks: "En anslutning av webbdelar alltid omfattar exakt två kontroller, en som fungerar som leverantören av data, andra fungerar som konsumenter av data. Varje kontrollen måste ha en eller flera metoder som har definierats som anslutningspunkter. När det gäller en Konsumentkontroll, dess kopplingspunkterna är <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objekt.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Hämtar kopplingspunkter konsumenten är ett nödvändigt steg i som utgör en webbdelar-anslutning.       Konsumenter måste alltid ha minst en anslutningspunkt för att kunna upprätta en anslutning. Metoden GetConsumerConnectionPoints kontrollerar en Konsumentkontroll och hämtar en samling av dess kopplingspunkter. Om en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen har inga anslutningspunkter, metoden returnerar en tom samling.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En serverkontroll som fungerar som en konsument i en anslutning."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> -värde som innehåller alla anslutningspunkter i konsumenten."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till den aktuella instansen av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll på en sida."
  remarks: "Metoden GetCurrentWebPartManager är användbart i sammanhang där du vill hämta en referens till aktuellt <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ett vanligt scenario där det skulle inträffa är om du skapar en anpassad kontroll som inte under utvecklingen vet vilken ID för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen på en sida ska vara.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > I GetCurrentWebPartManager metoden är statisk, så du kan anropa direkt utan att behöva en instans av en <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Vissa kontroller i webbdelarna styra mängd som <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, har en <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>egenskap som kan hämta en referens till aktuellt <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> När du arbetar med dessa kontroller, bör du därför använda den här egenskapen för att hämta en referens.       Om du kodning i ett sammanhang där du känner till ID: T för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll, till exempel skriva kod infogad i en webbsida är det enklaste och mest effektiva du refererar direkt till <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen genom att använda ett ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Den webbsida som innehåller en instans av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> som refererar till den aktuella instansen av kontrollen på en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en sträng som innehåller värdet för den <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>egenskapen för en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Hämtar det beräknade värdet för den <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>egenskapen för `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> När utvecklare inte tilldelas ett värde i <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>-egenskapen för en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra den här metoden ger värdet som ska visas som rubrik.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> Det beräknade värdet för Namnlös kontroller består av ett nummer till en sträng med nummer som indikerar en kontroll sekvens inom den aktuella zonen."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrollen som returnerar värdet för <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*> -metoden"
    return:
      type: System.String
      description: "En sträng som innehåller det beräknade värdet av <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>för <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>är inte i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> samling."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar den relativa virtuella sökvägen och frågesträngen som ingår i begäran när en användare försöker exportera ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll."
  remarks: "Värdet som returneras av metoden GetExportUrl är en relativ virtuell sökväg till serverplatsen för den sida som innehåller kontrollen plus tillagda frågesträngsvärdet som utgör export-begäran som skickades till servern. Metoden GetExportUrl kodar strängen innan begäran skickas till att skydda mot skadliga skript attacker.      > [!NOTE] > Mer information om hur du skyddar webbdelar program finns [skydda delar webbsidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> som ska exporteras."
    return:
      type: System.String
      description: "En sträng som innehåller den relativa virtuella sökvägen och frågan sträng som tillsammans bildar en begäran om att exportera en kontroll."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till instansen av den <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> kontroll som innehåller ett server-kontroll."
  remarks: "I allmänhet finns två typer av kontroller som utvecklare placera i <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zoner att delta i webbdelar program: <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller som ärver från den <xref:System.Web.UI.WebControls.WebParts.WebPart>basklass, och andra serverkontroller, som kan vara standard ASP.NET-kontroller, anpassade kontroller eller användarkontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> När någon av dessa kontroller placeras i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon, det tar på funktionerna i en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> En <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen funktionen natur, men inte andra typer av kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> Aktivera serverkontroller ska fungera som <xref:System.Web.UI.WebControls.WebParts.WebPart>styr när de är placerade i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonen ASP.NET radbryts dem med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Eftersom den <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>överförs direkt från den <xref:System.Web.UI.WebControls.WebParts.WebPart>klass, den får dess underordnade kontroller true webbdelar funktioner.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Ofta vid körning, sidan utvecklare kanske vill hämta en referens till den <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontrollen som innehåller någon av server-kontroller i en zon.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Metoden GetGenericWebPart gör det möjligt för dem att hämta en referens till den <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "En serverkontroll som finns i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> och kapslas in som en underordnad kontroll för en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> vid körning."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> som omsluter <code> control </code> som en underordnad kontroll. Metoden returnerar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om <code> control </code> ingår inte i en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar mängden <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> objekt som kan fungera som kopplingspunkter från en server som styr fungerar som en provider i en webbdelar-anslutning."
  remarks: "En anslutning av webbdelar alltid omfattar exakt två kontroller, en som fungerar som leverantören av data, andra fungerar som konsumenter av data. Varje kontrollen måste ha en eller flera metoder som har definierats som anslutningspunkter. När det gäller en provider-kontroll, dess kopplingspunkterna är <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>objekt.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       En provider måste alltid ha minst en anslutningspunkt för att kunna upprätta en anslutning. Metoden GetProviderConnectionPoints kontrollerar en provider-kontroll och hämtar en samling av dess kopplingspunkter. Hämtar kopplingspunkter providern är ett nödvändigt steg i som utgör en webbdelar-anslutning."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En serverkontroll som fungerar som en leverantör i en anslutning."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> som innehåller alla anslutningspunkter i providern."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Importerar en beskrivning av XML-fil som innehåller tillstånd och egenskapen data för en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> styra och data för kontrollen."
  remarks: "Metoden ImportWebPart importerar en beskrivning av XML-fil som skapades av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>metod för en serverkontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Det är inte den faktiska Serverkontrollen som importeras, men endast beskrivning filen som innehåller tillstånd och egenskapen data om kontrollen. Kontroll- och sammansättning som refereras i beskrivningsfilen måste redan finnas på den server där en användare försöker importera beskrivningsfilen.       Om du vill aktivera importerar en kontroll måste en utvecklare att lägga till en <xref:System.Web.UI.WebControls.WebParts.CatalogZone>kontroll på sidan där du vill importera ska aktiveras.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> Inom zonen, en <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>kontroll måste läggas till.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Den här kontrollen innehåller en dialogruta där användaren kan bläddra och leta upp beskrivningsfilen som ska importeras.       När en användare söker efter en beskrivningsfil och börjar importen kan läsa beskrivningsfilen av metoden ImportWebPart. Om det inte finns några fel och om sammansättning och kontroll påträffas, Serverkontrollen har lagts till katalogen i den <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>kontrollen och de olika egenskap och tillstånd för data som anges i beskrivningsfilen tillämpas på kontrollen.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Användaren kan markera kontroll och lägga till den på sidan.      > [!IMPORTANT] > Som den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>metoden ImportWebPart-metoden har vissa risken för säkerhetsrisker.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Eftersom den omfattar att importera data till en webbplats, kan en obehörig användare försök att infoga felaktiga data eller även skriptkod i filen beskrivning som har importerats. Felaktiga data kan visas på en sida eller i en databas eller infogade skript kan köras. En översikt över potentiella risker med att importera beskrivningsfiler och sätt att undvika dessa risker finns [skydda delar webbsidor](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "En <xref:System.Xml.XmlReader>som läser tillstånd och egenskapen data från XML-beskrivningsfil som importeras.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "En <xref:System.String>som visas för användaren om ett fel påträffades under importen.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (eller en server som är omslutna med en <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> och därmed behandlas som en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) som refereras till i XML-filen för importerade beskrivning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> -klassen, som används för att kombinera och avgränsa en uppsättning metoder som faktiskt har implementerats i den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klass, men är främst användbart för utvecklare för kontrollen."
  remarks: "Egenskapen Internals visar API: er att anropa en uppsättning <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metoder som används mest i utökningsbarhet fall.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Utformad sätt att använda metoderna interna är att komma åt dem via egenskapen Internals. Eftersom egenskapen är skyddad, kan du endast komma åt den och anropa metoder i en instans av den <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klass med arv från <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      > [!NOTE] > Den här egenskapen är dold från IntelliSense i [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. Men i en härledd <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass, du kan fortfarande komma åt egenskapen och dess olika medlemmar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, som en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kan referera till de olika metoder som har separerats i den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Utför de första stegen för att fastställa om en kontroll har behörighet att lägga till en sida."
  remarks: "Den IsAuthorized är den första metoden anropas av webbdelar kontrollen ange att kontrollera tillståndet för en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> Den godkänner `webPart` som en parameter och börjar en process som slutligen bestämmer om kontrollen ska läggas till en sida. Anropa den här metoden från din kod direkt när du behöver avgöra om en viss kontroll är auktoriserad.       Den här metoden utför de inledande uppgifterna för att avgöra om kontrollen ärver från den <xref:System.Web.UI.WebControls.WebParts.WebPart>klassen eller är en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>styr och i så fall, vilken typ av underordnad kontroll över den innehåller.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Om du vill slutföra uppgiften att auktorisering, anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>överlagra metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller andra Serverkontrollen kontrolleras för auktorisering."
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om <code> webPart </code> kan läggas till en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Utför de sista stegen för att fastställa om en kontroll har behörighet att lägga till en sida."
  remarks: "Metoden IsAuthorized överlagring utför de sista stegen för att fastställa om en kontroll har behörighet att lägga till en sida. Metoden garanterar att `type` är en giltig typ och som `path` har ett värde om kontrollen som kontrolleras är en användarkontroll. Sedan anropar den kritiska <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>metod som genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "Den <xref:System.Type>i kontrollen kontrolleras för auktorisering.</xref:System.Type>"
    - id: path
      type: System.String
      description: "Den relativa programmet sökvägen till källfilen för kontrollen som auktoriserad, om kontrollen är en användarkontroll."
    - id: authorizationFilter
      type: System.String
      description: "En godtycklig sträng-värde som tilldelas den <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>egenskapen för en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll som används för att auktorisera om en kontroll kan läggas till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Anger om kontrollen kontrolleras för auktorisering är en delad kontroll, vilket innebär att den är synlig för många eller alla användare av programmet, och dess <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>egenskapen har värdet <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om en kontroll har behörighet att lägga till en sida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett värde som anger om Anpassningsändringar har gjorts som påverkar sidnivå anpassning information styrs av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen används egenskapen IsCustomPersonalizationStateDirty internt för att spåra om någon sidnivå anpassningen data som den hanterar har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Anpassningsdata ändras när användare utför olika åtgärder för anpassning på enskilda sidor, till exempel att lägga till eller ta bort <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, ansluta eller koppla från kontroller, ändra sidans layout genom att flytta kontroller och andra åtgärder.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Användare kan också utföra anpassningar på nivån kontroll, vilket innebär att de göra anpassningsändringar i en viss kontroll, och ändringarna påverkar endast kontrollen. Ett exempel skulle redigera kontrollen och ändra rubriktexten eller dess bakgrundsfärg. Control-nivån anpassning påverkar inte sidnivå anpassningsdata spåras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll, och så IsCustomPersonalizationStateDirty egenskapsvärde inte ändras till `true` när kontrollen nivå anpassning inträffar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Även om metoden är skyddad och kan inte användas direkt av en anropare den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>egenskapen kan användas direkt av anropare och returnerar värdet för den här egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om anpassningar har ändrats. Standardvärdet är <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Belastningar styra tillståndsdata som har sparats i en tidigare begäran och behöver återställas på en efterföljande begäran."
  remarks: "LoadControlState metoden är användbar för att återställa egenskapsdata som ska vara beständig mellan återanslåenden sidan, även om den <xref:System.Web.UI.Control.EnableViewState%2A>egenskap är inställd på `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Innehåller beständiga data som ska hämtas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>är inte ett giltigt <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lagrar det anpassade anpassningsdata som har skickats till den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll av anpassning objekt som ska användas senare under initieringsprocessen."
  remarks: "Metoden LoadCustomPersonalizationState tillhandahåller tillståndsfil data i form av en <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>objektet.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Dessa data används så småningom att läsa in anpassningsdata i webbdelar kontroller och utföra andra uppgifter för initiering.      > [!NOTE] > Den här metoden anropas av en sekvens av metoder som börjar när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>metoden först begär den associerade <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>objekt för att ange anpassningsdata på den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       Du kan inte anropa den här metoden direkt från din kod. Kan dock direkt anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>metod som i sin tur anropar metoden LoadCustomPersonalizationState och returnerar anpassningsdata.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som innehåller tillståndsdata som ska läsas in."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objekt som endast tillåter <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> behörighet och <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> behörighet."
  remarks: "Den <xref:System.Security.PermissionSet>objektet som returneras av den här egenskapen används under importen för typen deserialisering.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "En <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objekt som endast tillåter <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> behörighet och <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> behörighet."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objekt som endast tillåter <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> behörighet och <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> behörighet."
  remarks: "Den <xref:System.Security.PermissionSet>objektet som returneras av den här egenskapen används under import för allt utom skriver deserialisering.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Hämtar en <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objekt som endast tillåter <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> behörighet och <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> behörighet."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Flyttar ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll från en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon till en annan eller till en ny plats i samma zon."
  remarks: "Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen använder MoveWebPart-metoden för att flytta `webPart` till en ny plats i samma zon eller i en annan zon.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Du kan anropa metoden direkt från koden och anropas också när en användare flyttar en kontroll till en ny plats med hjälp av olika alternativ i användargränssnittet (UI) för webbdelar.       Flera villkor måste uppfyllas innan `webPart` kan flyttas och de flesta av dessa anges med objekt som visas i avsnittet undantag i det här avsnittet. Om `webPart` fanns inte i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon börja med att de kan inte flyttas till en zon.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       När villkoren är uppfyllda, den inträffar följande åtgärder om du vill flytta `webPart`: 1.  Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>metoden aktiverar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`tas bort från den aktuella zonen (om det behövs) och lägga till den nya zonen eller ny plats i den aktuella zonen.      3.  Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>metoden aktiverar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  Den `zoneIndex` av varje <xref:System.Web.UI.WebControls.WebParts.WebPart>återställs kontroll i ursprung- och mål för att återspegla flyttade kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll flyttas."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Målet <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> som `webPart` flyttas."
    - id: zoneIndex
      type: System.Int32
      description: "Ett heltal som anger index för `webPart` i förhållande till andra kontroller inom `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>är mindre än noll."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> händelsen och anropar en hanterare för händelsen, om sådan finns."
  remarks: "OnAuthorizeWebPart-metoden anropas av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metod när en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll kontrolleras om tillstånd som ska läggas till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> När metoden OnAuthorizeWebPart anropas den genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>händelse, och om det finns en metod för hanteraren för händelsen, startar hanteraren.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       För att auktorisera <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller är en viktig funktion i webbdelar.</xref:System.Web.UI.WebControls.WebParts.WebPart> Varje <xref:System.Web.UI.WebControls.WebParts.WebPart>eller Serverkontrollen som har lagts till i en zon med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen går igenom ett auktoriseringen för att avgöra om kontrollen kan läggas till.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> Uppsättningen webbdelar kontrollen ger inte några filtreringskriterier för att förhindra att kontroller som läggs till i en zon som standard. Men kontrolluppsättningen ger metoder som utvecklare behöver för att skapa egna filtervillkor. Du kan skapa egna filtrering scenarier med hjälp av dessa metoder. Du kan till exempel skapa ett filter så att om en användare i en administratörsroll vissa kontroller skulle läggas till i en zon när sidan renderas och om användaren är i en användarroll, de kontrollerna skulle inte att lägga till.       Mekanismer för att filtrera kontroller under auktoriseringsprocessen är den <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>egenskapen <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>och OnAuthorizeWebPart metoder och <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>händelsen på den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Om du vill skapa ett scenario med filtrering finns i stort sett två aktiviteter. Först måste du tilldela strängar som den <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>egenskapen för varje <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll som du vill filtrera.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Dessa strängvärden kan vara valfri, men de bör innehålla de kriterier som du vill filtrera på. Till exempel om du vill använda en viss kontroll som ska läggas till en zon bara om en administratör användaren visar sidan och du kan tilldela ett strängvärde för `admin` till egenskap. Du kan sedan använda funktionen för ASP.NET-roller och Lägg till alla användare av webbplatsen i olika roller som administratör, manager och användaren. Vid inläsning av en sida filtrering koden skulle Kontrollera vilken roll en användare finns i, jämför den med auktorisering filtervärdet på en kontroll som kontrolleras, och om det finns en administratörsroll användaren (till exempel) och du har angett kontrollens <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>värde till `admin`, kontrollen kunde läggas till.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Det andra steget i att skapa ett filtrering scenario är att skriva kod för att kontrollera den <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>egenskapen värden på <xref:System.Web.UI.WebControls.WebParts.WebPart>styr och avgöra om varje kontroll är auktoriserad innan den har lagts till dess zonnamn.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Det finns två alternativ för var du ska placera filtrering koden. Det första alternativet är önskade alternativ för sidan utvecklare. Du kan skapa en metod för att hantera den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>händelse direkt i skriptkod för webbsidan server eller i en uppdelning kodfilen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Associera din metod med händelsen genom att lägga till den `OnAuthorizeWebPart` attribut i taggen för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll på sidan som visas i följande exempelkod markup.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```Alla dina anpassade metoden har att göra är att kontrollera varje <xref:System.Web.UI.WebControls.WebParts.WebPart>styr för filtreringskriterier och tilldela sedan baserat på resultatet ett booleskt värde för den <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>egenskapen för den <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>objekt att visa om de <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen kan läggas till.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Koden i avsnittet exempel visar hur du gör detta.       Andra alternativ för var du ska placera filtrering koden är att ärva från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klassen och åsidosätta en metod för att kontrollera filtervillkoren.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> De två metoder som du kan åsidosätta för att göra detta är den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>eller OnAuthorizeWebPart-metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Även om båda metoderna skulle fungera i de flesta fall är det bättre att åsidosätta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metoden, eftersom det ger dig större programmässiga kontroll över hela auktoriseringen medan metoden OnAuthorizeWebPart tillåter bara en viss uppgift, vilket är att generera en händelse och kontrollera om en hanterare.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Ett exempel på en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klass som åsidosätter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-metoden finns i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>överlagringen för metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> som innehåller händelsedata."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> händelsen för att indikera att en sida och dess kontroller har lästs in och anslutningar på sidan har aktiverats för att dela data."
  remarks: "Metoden OnConnectionsActivated genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>händelse när en sida har slutfört inläsningen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Metoden ger ett sätt att lägga till en hanterare för händelsen.       Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till en `OnConnectionsActivated` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> händelsen för att indikera att en sida och dess kontroller har lästs in och hur du aktiverar anslutningar kan börja."
  remarks: "Metoden OnConnectionsActivating genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>händelsen, som ger utvecklare en mekanism för att anpassa programmässigt att aktivera anslutningar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till en `OnConnectionsActivating` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> händelsen som indikerar att den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll har slutfört processen med att växla mellan en visningsläget på en webbsida."
  remarks: "OnDisplayModeChanged-metod i basen formuläret bara aktiverar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> som innehåller händelsedata som är associerad med ett ändrade visningsläge."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> händelsen som indikerar att den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrollen håller växla mellan en visningsläget på en webbsida."
  remarks: "OnDisplayModeChanging-metod i basen formuläret bara aktiverar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "En <xref:System.EventArgs>som innehåller händelsedata som är associerad med ett ändra visningsläge.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> händelsen, som är den första händelsen i den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> livscykel för kontrollen."
  remarks: "Metoden OnInit anropar metoden grundläggande som genererar den <xref:System.Web.UI.Control.Init>händelse för kontroll och utför flera förberedande steg, till exempel säkerställer att endast en instans av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll på en sida och läsa in anpassningsdata.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Det finns en annan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll på sidan"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> som inträffar precis före en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrollen återges på en webbsida."
  remarks: "Metoden OnPreRender anropar metoden grundläggande som genererar den <xref:System.Web.UI.Control.PreRender>händelse för kontroll och registrerar flera klientskript som behövs på sidor som innehåller webbdelar styr.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "En <xref:System.EventArgs>som innehåller informationen om händelsen.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> som inträffar efter ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll har antingen valts nyligen eller har raderat dess val."
  remarks: "Metoden OnSelectedWebPartChanged genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>händelsen, som normalt är en punkt i tiden då en utvecklare kan vilja ändra utseendet på användargränssnittet (UI).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Till exempel när en ny <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll markerats, webbdelar kontrollen anger ändringar återgivningen av den valda kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPart> När en kontroll markeringen är tom är renderingen återigen normal.       När en användare väljer ett visst <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll för att redigera OnSelectedWebPartChanged-metoden anropas.</xref:System.Web.UI.WebControls.WebParts.WebPart> När användaren är klar i kontrollen och stänger den, vilket innebär att kontrollens markeringen är avmarkerad, anropas OnSelectedWebPartChanged-metoden igen."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> som inträffar under processen med att ändra vilken <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll är markerad."
  remarks: "Metoden OnSelectedWebPartChanging genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>som inträffar under processen med att ändra vilken <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll är markerad.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen använder den här metoden och den associerade händelsen för att tillhandahålla en möjlighet att avbryta en process som den markerade kontrollen ändras.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Till exempel metoden anropas i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>metod, och även i den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>metod för att ge ett sätt att avbryta processen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Om en användare klickar på Avbryt verb i en kontroll som redigeras, kontrollen inte längre är markerad och alla typer av ändringar sparas inte eftersom metoden OnSelectedWebPartChanging gör det möjligt att avbryta redigeringen.      > [!NOTE] > Metoden anropas på samma sätt under de metoder som börjar och slutar anslutningsprocessen en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll till en annan kontroll att avbryta den här processen.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>händelsen genom att lägga till den `OnSelectedWebPartChanging` attribut till den `<asp:webpartmanager>` elementet i deklarativ sidkoden och tilldelar attributet namnet på en anpassad metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Aktiverar basen <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> händelsen och tar bort den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> instans från en webbsida."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Händelsedata som är associerade med borttagning av kontrollen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> som inträffar efter ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen har lagts till en sida."
  remarks: "OnWebPartAdded-metoden anropas under processen med att lägga till en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll (eller andra Serverkontrollen som har lagts till i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon) till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>händelsen genom att lägga till den `OnWebPartAdded` attribut till den `asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> som inträffar under processen med att lägga till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen (eller en server eller användare) till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "Metoden OnWebPartAdding genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>händelsen som indikerar att en kontroll håller på att läggs.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Metoden ger också möjlighet att avbryta att lägga till processen. Om kontrollen har lagts till genom den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartAdding` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> händelse att signalera att en kontroll har tagits bort från en sida."
  remarks: "Metoden OnWebPartClosed genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>händelsen som indikerar att en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen (eller andra server eller användare) har stängts på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Att stänga en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll innebär att ta bort den från en sida så att den inte återges och placera den i ett särskilt hålla objektet kallas även en sida-katalog.</xref:System.Web.UI.WebControls.WebParts.WebPart> En sida-katalog som motsvarar den <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>styra, upprätthåller referenser till stängd <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller för varje sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Om en <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>kontroll har deklarerats för en sida i en <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zonen användare kan växla sidan till katalogen visningsläge och Lägg till tillbaka till sidan kontroller som tidigare har stängts.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Metoden OnWebPartClosed ger en möjlighet för utvecklare att skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till en `OnWebPartClosed` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar sedan ett namn på anpassade metoden attributet. En användbar uppgift som utvecklare kan utföra i den här metoden är att visa platshållare i stället för stängd kontrollen, slutföra med en knappbeskrivning som skulle informera användarna om hur du lägger till kontrollen på sidan."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> som inträffar under processen med en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll tas bort från en sida."
  remarks: "Metoden OnWebPartClosing genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>händelsen som indikerar att en kontroll håller på att stängts eller tagits bort från en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Metoden ger också möjlighet att avbryta stängningsprocessen. Om kontrollen har tagits bort från sidan den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartClosinging` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> som inträffar efter ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll togs bort permanent från en sida."
  remarks: "OnWebPartDeleted-metoden anropas under processen med att ta bort en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll (eller andra Serverkontrollen som har lagts till i en <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zon) från en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>händelsen genom att lägga till den `OnWebPartDeleted` attribut till den `asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> händelsen, som indikerar att en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen (eller server eller användare som ingår i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon) håller på att tas bort."
  remarks: "Endast dynamiska <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller kan tas bort och när en kontroll tas bort kontroll instansen bort permanent från en sida och kan inte återställas.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dynamiska <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller är de som har lagts till via programmering eller från en webbdelar katalog i stället för statiska kontroller som är deklarerad i koden för en webbsida.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Metoden OnWebPartDeleting genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>händelsen för att indikera att en kontroll tas bort permanent från dess zonnamn.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Metoden ger också möjlighet att avbryta borttagningen. Om kontrollen har tagits bort från sidan den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartDeleting` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> som inträffar efter ett <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll har flyttats till en annan plats på en sida."
  remarks: "Metoden OnWebPartMoved genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelse mycket slutet av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>metoden, vilket garanterar att processen att flytta en kontroll har slutförts innan någon kod i hanterare körs.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelsen utlöses när en kontroll flyttas inom den aktuella zonen eller till en annan zon, och det spelar ingen roll om förflyttning sker via programmering eller av en användare dra kontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelsen genom att lägga till den `OnWebPartMoved` attribut till den `asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> händelsen, som indikerar att en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server eller användarroll kontroll i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon håller på att flyttas."
  remarks: "Metoden OnWebPartMoving genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>som inträffar när en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller annan serverkontroll flyttas inom zonen eller till en annan zon.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Metoden ger också möjlighet att avbryta glidande processen. Om flytten har slutförts på <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartMoving` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> som inträffar när en anslutning har upprättats mellan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  remarks: "Metoden OnWebPartsConnected aktiverar dess motsvarande händelse mycket slutet av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>metoden, vilket garanterar att steg som krävs för att ansluta två kontroller är slutförda innan någon kod i händelsehanteraren körs.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Metoden ger programmässig kontroll över processen för att skapa anslutningar och den associerade händelsen är en lämplig plats som du vill uppdatera användargränssnittet (UI) eller meddela användare att en anslutning har upprättats.       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>händelsen genom att lägga till den `OnWebPartsConnected` attribut till den `asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> som inträffar under processen med att upprätta en anslutning mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server eller användarroll kontroller som finns på en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "Metoden OnWebPartsConnecting genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>som inträffar när två kontroller försöker upprätta en anslutning.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Metoden ger möjlighet att avbryta anslutningen. Om anslutningen lyckas den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartsConnecting` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> som inträffar när en anslutning mellan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller har avslutats."
  remarks: "Metoden OnWebPartsDisconnected aktiverar dess motsvarande händelse mycket slutet av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metod som utförs av avslutar en anslutning mellan två kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Metoden ger programmässig kontroll över hur du avslutar en anslutning, så att utvecklare kan informera användaren, göra ändringar i användargränssnittet (UI) eller göra andra ändringar i programmet.       Sidan utvecklare kan skapa en anpassad hanterare för den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>händelsen genom att lägga till den `OnWebPartsDisconnected` attribut till den `asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genererar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> händelse som anger att två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server eller användarroll kontroller i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon håller avslutar en anslutning."
  remarks: "Metoden OnWebPartsDisconnecting genererar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>som inträffar när två kontroller avslutar en anslutning.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Metoden ger möjlighet att avbryta frånkopplingsprocessen. Om anslutningen har tagits bort, den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>händelse visas nedan.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för den associerade händelsen genom att lägga till den `OnWebPartsDisconnecting` attribut till den `<asp:webpartmanager>` element på en webbsida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> som innehåller informationen om händelsen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till ett objekt som innehåller informationen för en webbsida."
  remarks: "Egenskapen anpassning ger ett sätt att komma åt den <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>objekt som är associerad med en sida via den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Med den här egenskapen kan du komma åt de olika medlemmarna i objektet anpassning. Du kan till exempel använda den <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>metod för att växla sidans anpassningsläge från delad till användarens scope och vice versa.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Du kan också ta reda aktuella anpassningsläge för sidan, om anpassningar även är aktiverade på sidan vilken provider som används för anpassningsdata och mycket mer.       Observera att data som refereras av egenskapen anpassning är endast sidnivå anpassningsdata som övervakas av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Kontroll-specifika anpassningsdata, till exempel värdena för anpassningsbara egenskaper på <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, ingår inte i egenskapen anpassning.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Mer information om anpassningar av webbdelar finns [översikt över webbserver delar anpassning](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> -värde som innehåller informationen."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Aktiverar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrollen att generera klientsidans skript som används för olika anpassning funktioner, till exempel dra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller på en webbsida."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Åsidosatt för att förhindra att den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll från återge allt innehåll."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "En <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> som tar emot innehållet i kontrollen att skriva till sidan."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sparar tillstånd data för den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> Kontrollera så att data kan återställas på framtida begäran till på webbsidan som innehåller kontrollen."
  remarks: "SaveControlState metoden sparar systemtillstånd för egenskaper som ska sparas på sidan återanslag, även om den <xref:System.Web.UI.Control.EnableViewState%2A>egenskap är inställd på `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "En <xref:System.Object>som innehåller kontrollen sparade systemtillstånd.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sparar anpassade tillstånd anpassningsdata underhålls av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll, så att dessa data kan läsas in när sidan läses."
  remarks: "Metoden SaveCustomPersonalizationState är kritiska håller på att anpassningen, eftersom den gör det möjligt för anpassade användarinställningar ska sparas för framtida sessioner och besök på en sida. Metoden sparar anpassade tillstånd anpassningsdata, som innehåller objekt, till exempel följande: dynamiska <xref:System.Web.UI.WebControls.WebParts.WebPart>eller serverkontroller som har lagts till på en sida eller tas bort från en sida; kontroller som har flyttats på en sida; och dynamic-anslutningar som skapas eller tas bort.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Du kan inte anropa den här metoden direkt från din kod. Du kan dock anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>metod som i sin tur anropar den här metoden om du vill spara anpassningsdata.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som innehåller tillståndsdata som ska läsas in."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll som är markerad för redigering eller för att skapa en anslutning till en annan kontroll."
  remarks: "Egenskapen SelectedWebPart returnerar en referens till en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller annan serverkontroll som är markerad för redigering eller för att skapa en anslutning till en annan kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen innehåller flera användbara metoder och händelser för hantering för att välja en kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>händelse inträffar bara när en kontroll markerats, men innan några ändringar görs.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Om du vill utföra vissa åtgärder på kontrollen när den är markerad måste åsidosätta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Du kanske vill ändra utseendet för en kontroll som har valts men inte har ändrats ännu, att betona visuellt som styr är markerad.       Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>händelse inträffar bara när den markerade kontrollen har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Om du vill utföra vissa åtgärder på kontrollen när den har ändrats, att åsidosätta den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen som är markerad för redigering eller som en anslutning."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när markeringen en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroll har ändrats och flyttas till en annan kontroll på en webbsida."
  remarks: "Den här händelsen kan användas tillsammans med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metod för att ändra användargränssnittet (UI) på en markerad kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Till exempel om användaren byter sidan till designläget (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), och väljer sedan en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll med avsikt att dra den till en ny plats, är det vanligt att ändra återgivningen av den markerade kontrollen, till exempel genom att ändra färgen på kantlinjen eller bakgrund när den har valts.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > Mer information om förbrukar händelser finns [så här: använda händelser i ett formulär webbprogram](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under processen att ändra som <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Serverkontrollen är markerat på en webbsida."
  remarks: "Den här händelsen kan användas tillsammans med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Sidan utvecklare kan skapa en händelsehanterare i koden genom att lägga till den `OnSelectedWebPartChanging` attribut till den `<asp:webpartmanager>` element i en sida och ange värdet för attributet till namnet på en anpassad metod som hanterar händelsen.       Den här händelsen utlöses när du börjar eller slutar en anslutning mellan kontroller och när inledande och avslutande redigerar för en kontroll. Mer information finns i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       Normalt när händelsen SelectedWebPartChanging utlöses en direkt följd av en åtgärd som ändrar den markerade kontrollen kan händelsen avbrytas. Det finns emellertid ett scenario där händelsen inte kan avbrytas. Om en <xref:System.Web.UI.WebControls.WebParts.WebPartZone>kontroll tas bort i <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller som den innehåller alla stängas, annars de skulle överbliven.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> I det här fallet den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra stängs den <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, inte användaren och it måste avgöra vilken kontroll är markerad och när du ska ändra valet av utan någon risken för avbrott, så att den kan slutföra processen att rensa alla kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Därför kan metoden inte avbrytas i det här scenariot avsiktligt SelectedWebPartChanging. En relaterad händelse som kan avbrytas, finns det <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Anger en flagga som anger den anpassade anpassningsdata för den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll har ändrats."
  remarks: "Metoden SetPersonalizationDirty anger en flagga som slutligen leder anpassning komponenter i kontrollen webbdelar som anger att spara den uppdaterade informationen. Mer information om de scenarier som kan göra ändringar i anpassningsdata spåras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra, finns det <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>egenskap.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Metoden SetPersonalizationDirty kan inte anropas direkt från din kod och kan inte åsidosättas eftersom det används internt av kontrollen webbdelar som angetts som en del av funktionen webbdelar anpassning."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Anger den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>egenskapsvärde som är lika med den markerade <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller Serverkontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "SetSelectedWebPart-metoden anropas under de processer som börja eller sluta redigera kontrollens anges av den `webPart` parametern och de som börja eller sluta en anslutning som innehåller `webPart`.       I början av redigera och anslutningen processer, `webPart` är den kontroll som har valts som ska redigeras eller ange en anslutning.       I slutet av redigera och anslutningen processer, `null` har överförts till metoden SetSelectedWebPart, vilket resulterar i den markerade kontrollen längre väljs."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller Serverkontrollen som har valts."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar eller anger en tom sträng (&quot;&quot;) så att inga skal kan tillämpas på den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "SkinID egenskapen åsidosätter den ärvda <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>egenskapen för att förhindra den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen som är en osynlig kontroll från med hjälp av skal.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> Implementeringen av egenskapen förhindrar att ett skal som tilldelats av returnerar alltid en tom sträng från den `get` accessor och alltid att undantagsfel utlöses om det finns ett försök att ange ett värde den `set` accessor."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "En tom sträng som förhindrar den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll från att ha ett skal som är kopplade till den."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett försök gjordes att ange egenskapsvärdet."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till samlingen av alla <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objekt på en webbsida som har definierats som statiska anslutningarna."
  remarks: "Egenskapen StaticConnections används av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen att spåra och hantera alla statiska anslutningar på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> En statisk anslutning, till skillnad från en dynamisk anslutning behöver inte att lägga till en sida varje gång sidan renderas.       Den samling som refererar till den här egenskapen innehåller de statiska anslutningarna som finns på sidan, om de skapas via programmering eller anges med ett `<asp:webpartconnection>` element i i sidkoden."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> som innehåller de statiska anslutningarna på sidan."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en skrivskyddad samling alla visningslägen som finns på en viss webbsida."
  remarks: "Egenskapen SupportedDisplayModes innehåller endast visningslägen som faktiskt finns på en sida, givet typerna av zonen kontrollerna som finns på sidan.      > [!NOTE] > Visningslägen kan inaktiveras och när ett visningsläge inaktiveras inte läggs till samlingen SupportedDisplayModes även om motsvarande typ av zon som har stöd för att visa läget finns på sidan.       Bläddringsläge och designläge stöds alltid. Visningslägen som kan variera är redigera, katalogen och ansluta lägen. Var och en av dessa visningslägen är associerad med en viss typ av <xref:System.Web.UI.WebControls.WebParts.ToolZone>kontroll.</xref:System.Web.UI.WebControls.WebParts.ToolZone> Det finns en särskilt skrivna zonen på en webbsida som orsakar en viss visningsläget ska läggas till i samlingen som refereras av egenskapen SupportedDisplayModes. Om en webbsida innehåller till exempel en <xref:System.Web.UI.WebControls.WebParts.EditorZone>zonen men inte en <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zonen, och sedan visa redigeringsläget är en av de stödda lägena på sidan, men katalogen läget stöds inte.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > I SupportedDisplayModes egenskapen skiljer sig från den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-egenskap som refererar till en samling som innehåller alla visningslägen som är tillgängliga för aktuellt <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll över, även de som inte stöds på en viss sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> som innehåller en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objekt som är tillgängliga på en specifik webbsida."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett värde som anger om anpassade tillstånd anpassningsdata hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll har ändrats på en webbsida."
  remarks: "Egenskapen IPersonalizable.IsDirty är ett sätt för anropare att avgöra om anpassning av användartillståndsdata som hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> När användarna anpassa sidnivå information, till exempel genom att ändra sidlayout, skapa eller ta bort anslutningar och lägga till eller ta bort kontroller kan anpassningsdata hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra ändringar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Detta är en direkt metod som returnerar värdet för den skyddade till anropare <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>-egenskap som inte kan användas direkt av anropare.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > I IPersonalizable.IsDirty egenskapen anger inte om anpassningsbar egenskapsvärden eller enskilda egenskaper som påverkar utseendet på individuella <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPart> Control-nivån anpassning spåras individuellt för varje kontroll. Egenskapen IPersonalizable.IsDirty anger endast om anpassningsdata som är på sidnivå och hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll har ändrats.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       I följande lista beskrivs några vanliga instanser av anpassning som innebär att egenskapen IPersonalizable.IsDirty för att returnera ett värde av `true`, vilket visar som den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen har vissa ändrade anpassningsdata:-stänger en statisk <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen (eller server eller en användare) på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Återställer en stängd statisk <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll från en sida-katalog till en sida.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Flyttar alla kontroller inom zonen eller till en annan zon.      -Lägger till en kontroll från en katalog med <xref:System.Web.UI.WebControls.WebParts.WebPart>eller serverkontroller eller lägger till en kontroll genom programmering.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Skapa en anslutning mellan två <xref:System.Web.UI.WebControls.WebParts.WebPart>styr programmässigt eller med hjälp av användargränssnittet (UI) för anslutningen.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Ta bort en anslutning mellan två <xref:System.Web.UI.WebControls.WebParts.WebPart>styr programmässigt eller med hjälp av anslutning UI.</xref:System.Web.UI.WebControls.WebParts.WebPart>       För att komma åt den här egenskapens värde måste du skicka den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll instans till den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>gränssnittet; du kan sedan läsa den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>egenskapsvärde.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om tillstånd anpassningsdata har ändrats."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Returnerar tidigare sparade anpassade tillstånd anpassningsdata som måste kunna läsas in i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "Den här metoden är en implementering av den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>metoden som gör det möjligt för webbdelar kontrollen värdet direkt tillgång till den skyddade <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> När den här metoden anropas lagras egna personliga data som hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll och som sparats tidigare i det permanenta dataarkivet för användning senare i initieringsprocessen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > I de flesta fall koden för sidan och kontroll utvecklare behöver inte anropa den här metoden eftersom det används främst av kontrollen webbdelar som mekanismen för att hämta informationen."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som innehåller tillståndsdata som ska läsas in."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sparar anpassade tillstånd anpassningsdata som hanteras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll."
  remarks: "Metoden IPersonalizable.Save är en implementering av den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>metoden som gör det möjligt för webbdelar kontrollen värdet direkt tillgång till den skyddade <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>metod.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> När den här metoden anropas, sparas alla anpassade data som hanteras av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen till permanent datalagret som konfigurerats för ett program med webbdelar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > I de flesta fall koden för sidan och kontroll utvecklare behöver inte anropa den här metoden eftersom det används främst av kontrollen webbdelar som mekanismen för att spara anpassningsdata."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> som innehåller tillståndsdata som ska sparas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gäller tillstånd anpassningsdata på den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroll och anrop grundläggande metoden för att aktivera spårning av ändringar av visa status för kontrollen."
  remarks: "Ändringar av visningsstatus data lagras i en <xref:System.Web.UI.StateBag>objekt och kan nås via kontrollens <xref:System.Web.UI.Control.ViewState%2A>egenskap.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar ett värde som gör att underordnade kontroller som ska visas."
  remarks: "Den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll åsidosätter basen <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>returnerar alltid ett värde för egenskapen `true` för egenskapen Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Även om den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>själva kontrollen är inte synligt, egenskapen Visible måste anges till `true` så att alla dess underordnade kontroller visas som standard.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Om du försöker ange värdet på egenskapen Visible alltid genereras ett fel eftersom det <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll har åsidosatt beteendet grundläggande egenskapen och förhindrar att tilldela ett värde för egenskapen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Den här egenskapen är inte kan bindas till i visuell designer, men är kan bindas till vid körning. Mer information finns i <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Ett booleskt värde som anger om en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrollen och dess underordnade kontroller visas. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>i samtliga fall."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ett försök gjordes att tilldela ett värde för egenskapen."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll har lagts till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon för att indikera att kontrollen har lagts till."
  remarks: "Händelsen WebPartAdded är användbart för som anger att en dynamisk kontrollen (en kontroll lagts till via programmering, i stället för som deklarerats i sidkoden) har lagts till i en zon. Tillsammans med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>metoden händelsen ger utvecklare med ett sätt att uppdatera användargränssnittet (UI) eller på annat sätt meddela användare att en kontroll har lagts.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under processen med att lägga till en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll till en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "WebPartAdding-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>metoden när processen för att lägga till en kontroll i en zon har startat.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Den här händelsen ger möjlighet att avbryta processen innan den är klar. Om det lyckas processen att lägga till den här händelsen följs av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Sidan utvecklare kan tillhandahålla anpassade hanterare för händelsen genom att lägga till den `OnWebPartAdding` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen (eller server eller användare) tas bort från en sida."
  remarks: "WebPartClosed händelsen indikerar att en kontroll har stängts, antingen av en användare eller programmässigt. Att stänga en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll innebär att ta bort den från en sida så att den inte återges och placera den i ett särskilt hålla objektet kallas även en sida-katalog.</xref:System.Web.UI.WebControls.WebParts.WebPart> En sida-katalog som motsvarar den <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>styra, upprätthåller referenser till stängd <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller för varje sida.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Om en <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>kontroll har deklarerats för en sida i en <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zonen användare kan växla en sida i katalogen visningsläge och lägger till en sida kontroller som tidigare har stängts.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Händelsen WebPartClosed är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>metod som både aktiverar händelsen och ger en hanterare för det.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till en `OnWebPartClosed` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar sedan ett namn på anpassade metoden attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när du tar bort en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrollen (eller server eller användare) från en sida."
  remarks: "WebPartClosing-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>metoden när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen håller stänger en kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Om borttagning av kontrollen lyckas den här händelsen följs av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Sidan utvecklare kan tillhandahålla en anpassad hanterare för händelsen genom att lägga till den `OnWebPartClosed` attribut till den `asp:webpartmanager>` element i en sida och tilldelar en anpassad metodnamnet attributet.       Normalt när händelsen WebPartClosing visas som ett direkt resultat av en användare att stänga en <xref:System.Web.UI.WebControls.WebParts.WebPart>styra händelsen kan avbrytas.</xref:System.Web.UI.WebControls.WebParts.WebPart> Det finns emellertid ett scenario där händelsen inte kan avbrytas. Om en <xref:System.Web.UI.WebControls.WebParts.WebPartZone>kontroll tas bort i <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller som den innehåller alla stängas, annars de skulle överbliven.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> I det här fallet den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra stängs den <xref:System.Web.UI.WebControls.WebParts.WebPart>styr inte användaren.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Och när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen håller på att anropa den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metod för att stänga varje kontroll över, och händelsen WebPartClosing visas, händelsen kan inte annulleras (avsiktligt) eftersom den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>behöver slutföra uppgiften att rensa alla zoner kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller andra Serverkontrollen har tagits bort från en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "Händelsen WebPartDeleted är användbart för som anger att en dynamisk åtkomstkontroll (en kontroll lagts till via programmering, till skillnad från som deklarerats i sidkoden) har tagits bort från en zon. Tillsammans med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>metoden händelsen ger utvecklare med ett sätt att uppdatera användargränssnittet (UI) eller på annat sätt meddela användare att en kontroll har tagits bort.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under processen med att permanent ta bort en instans av en dynamisk <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll från en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "WebPartDeleting-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>metoden under processen med att ta bort en dynamisk åtkomstkontroll (en som har lagts till via programmering eller av en användare via användargränssnittet webbdelar).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Händelsen ger möjlighet att avbryta processen innan den är klar. Om slutförts borttagningsprocessen kommer den här händelsen är följt av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Sidan utvecklare kan tillhandahålla anpassade hanterare för händelsen genom att lägga till den `OnWebPartDeleting` attribut till den `<asp:webpartmanager>` element i en sida och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroll har flyttats till en annan plats på en webbsida."
  remarks: "Den här händelsen gäller både statiska (deklareras i koden för en webbsida) och dynamiska kontroller. Den är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Eftersom händelsen utlöses när en flyttningen är klar kan utvecklare omfattar en händelsehanterare för att tillhandahålla vissa meddelande till användare, vissa verifiering eller några andra åtgärder. Om du vill lägga till en händelsehanterare, kan du lägga till en `OnWebPartMoved` attribut till den `<asp:webpartmanager>` element i en sida och ange namnet på en anpassad metod för att attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under processen att flytta en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller annan serverkontroll som finns i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon."
  remarks: "WebPartMoving-händelsen inträffar när en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller annan serverkontroll flyttas inom en egen zon eller till en annan zon.</xref:System.Web.UI.WebControls.WebParts.WebPart> Detta kan inträffa när en användare drar en kontroll, såväl när det finns en programmässiga flytt.       WebPartMoving-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>metod och ger en möjlighet att avbryta glidande processen innan den är klar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Om flyttningen är klar och kontrollen placeras i en ny plats, den här händelsen följs av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Sidan utvecklare kan skapa en anpassad hanterare för händelsen genom att lägga till den `OnWebPartMoving` attribut till den `<asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till alla <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller spåras av den <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> på en webbsida."
  remarks: "Egenskapen webbdelar används av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen att spåra alla <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller som ingår i <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zoner på sidan.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Även om samlingen är skrivskyddad, du kan komma åt enskilda <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollerar genom insamling och gör ändringar till dem via programmering.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Är det möjligt att ha en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen placeras på en sida utanför en <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zon, vilket resulterar i kontrollen inte spåras med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra eller refereras till i samlingen dess webbdelar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Det finns dock lite anledning till att använda en <xref:System.Web.UI.WebControls.WebParts.WebPart>styr en zon, eftersom den sedan dess webbdelar-funktion och fungerar som en normal Serverkontrollen.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Alla typer av kontroller som kan placeras i en zon, om en anpassad <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll, en standard ASP.NET-kontroll, en användarkontroll eller en anpassad server-kontroll kan behandlas som en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll vid körning.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> När en kontroll som inte är en <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrollen placeras i en <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zon vid körning ASP.NET radbryts kontrollen med en <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektet, så att kontrollen kan fungera som en verklig <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroll.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Därför med hjälp av egenskapen webbdelar <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen kan spåra någon typ av server-kontroll, oavsett om den härleds från <xref:System.Web.UI.WebControls.WebParts.WebPart>klassen.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> som innehåller referenser till en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar efter att en viss anslutning har upprättats mellan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller (eller server eller användarroll kontroller)."
  remarks: "Händelsen WebPartsConnected är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Händelsen är användbart eftersom när du vet att en anslutning har slutförts kan du kanske vill meddela användaren om att faktumet eller även ändra användargränssnittet (UI) på sidan. Exempelvis kanske du vill visa en bild som tyder på en anslutning mellan två kontroller eller ett kort meddelande och ändrar sedan visningsläge för sidan igen för att bläddra bland läge.       Sidan utvecklare kan associera en händelsehanterare med den här händelsen genom att lägga till den `OnWebPartsConnected` attribut till den `<asp:webpartmanager>` element på sidan och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar under processen med att skapa en anslutning mellan <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroller (eller server eller användarroll kontroller placeras i en <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zon)."
  remarks: "WebPartsConnecting-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>metod, och signalerar att anslutningen har börjat (till exempel en användare har valt en kontroll och klickar på Anslut verb) men ännu inte har slutförts.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> Händelsen ger en möjlighet att avbryta en anslutning innan den är klar. Om anslutningen är slutfört den här händelsen är följt av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till den `OnWebPartsConnecting` attribut till den `<asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när en anslutning mellan två <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller serverkontroller har avslutats."
  remarks: "Händelsen WebPartsDisconnected är associerad med den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>metoden.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Händelsen är användbart när du vet att anslutningen avbryts, kanske vill du informera användaren, utföra vissa åtgärder för rensning i koden eller göra andra ändringar i användargränssnittet (UI).       Sidan utvecklare kan associera en händelsehanterare med den här händelsen genom att lägga till den `OnWebPartsDisConnected` attribut till den `<asp:webpartmanager>` element på sidan och tilldelar en anpassad metodnamnet attributet."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inträffar när du avslutar anslutningen mellan tidigare ansluten <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> eller server-kontroller."
  remarks: "WebPartsDisconnecting-händelse utlöses av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>metod och signalerar till faktumet att användaren har klickat på ett disconnect-verb eller <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>annars metoden har anropats.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> Händelsen ger en möjlighet att avbryta processen för att avsluta en anslutning innan den är klar. Om anslutningen är har uppnått den här händelsen är följt av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Sidan utvecklare kan lägga till en anpassad hanterare för händelsen genom att lägga till den `OnWebPartsDisconnecting` attribut till den `<asp:webpartmanager>` element, och tilldelar en anpassad metodnamnet attributet.       Normalt när händelsen WebPartsDisconnecting utlöses en direkt följd av en åtgärd som en anslutning kan händelsen avbrytas. Det finns flera scenarier där händelsen inte kan avbrytas. Det första scenariot är om en <xref:System.Web.UI.WebControls.WebParts.WebPartZone>kontroll tas bort i <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller som den innehåller alla stängas, annars de skulle överbliven.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> I det här fallet den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>styra stängs den <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroller, inte användaren och det måste också kunna avsluta anslutningar av anslutna kontroller utan någon risken för avbrott, så att den kan slutföra processen att rensa och stänger alla kontroller.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Därför kan metoden inte avbrytas i det här scenariot avsiktligt WebPartsDisconnecting. En relaterad händelse som kan avbrytas, finns det <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>händelse.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       Det andra scenariot händelsen WebPartsDisconnecting inte kan avbrytas är när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metoden anropas (Detta kallas under varje begäran till en sida, till exempel) och det finns någon typ av konflikt i de befintliga anslutningarna på en sida.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Till exempel kanske en användare ansluter kontrollen x till kontrollen y, men en delad användare ansluter kontrollen x för att styra z och ännu kontrollen x är inte tillåtet att skapa flera anslutningar. I det här fallet den enskilda användaren för anslutningen företräde, och <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen löser konflikten genom att anropa den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metoden och avslutar anslutningen mellan x och z för den aktuella användaren.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Eftersom den här frånkoppling är mycket viktigt att lösa konflikten avsiktligt WebPartsDisconnecting händelse kan inte annulleras i det här scenariot.       Ett tredje scenario WebPartsDisconnecting-metoden inte kan avbrytas är när en <xref:System.Web.UI.WebControls.WebParts.WebPart>eller Serverkontrollen som är ansluten bort eller stängts.</xref:System.Web.UI.WebControls.WebParts.WebPart> Eftersom kontrollen definitivt kommer att tas bort från sidan, är det logiska nödvändigt att ta bort anslutningen. Därför när den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroll anropar den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metoden, vilket i sin tur aktiverar WebPartsDisconnecting-händelse, avsiktligt finns det ingen möjlighet att avbryta händelsen.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Som ska läggas till."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Hämtar en referens till en samling med alla de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zoner på en webbsida."
  remarks: "Egenskapen zoner används av den <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrollen att spåra den <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zoner på en webbsida.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Observera att egenskapen inte refererar till alla typer av zoner; den refererar till zoner som härleds från den <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>class, inklusive <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zoner.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Även om den samling som refereras av egenskapen är skrivskyddad, kan du använda den att komma åt enskilda objekt i samlingen och arbeta med dem via programmering."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "En <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> som refererar till en uppsättning <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zoner."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
