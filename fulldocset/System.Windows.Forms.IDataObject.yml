### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Tillhandahåller en mekanism oberoende av format för överföring av data."
  remarks: "Den `IDataObject` gränssnitt som används av den <xref:System.Windows.Forms.Clipboard>klass och dra och släpp-åtgärder.</xref:System.Windows.Forms.Clipboard>       Implementeras i en klass används IDataObject-metoder att lagra data i flera olika format i en instans av klassen. Lagra data i mer än ett format ökar chansen att ett målprogram, vars formatkraven inte kanske du vet, kan hämta lagrade data. För att lagra data i en instans av IDataObject anropa den <xref:System.Windows.Forms.IDataObject.SetData%2A>metod och ange dataformatet i den `format` parameter.</xref:System.Windows.Forms.IDataObject.SetData%2A> Ange den `autoConvert` parameter till `false` om du inte vill lagrade data som ska konverteras till ett annat format när de hämtas. Anropa <xref:System.Windows.Forms.IDataObject.SetData%2A>flera gånger på en instans av IDataObject för att lagra data i mer än ett format.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Du hämtar lagrade data från en IDataObject genom att anropa den <xref:System.Windows.Forms.IDataObject.GetData%2A>metod och ange data-formatet i den `format` parameter.</xref:System.Windows.Forms.IDataObject.GetData%2A> Ange den `autoConvert` parameter till `false` att hämta data som lagrats i det angivna formatet. Om du vill konvertera lagrade data till det angivna formatet, ange `autoConvert` till `true`, eller Använd inte `autoConvert`.       Använd följande IDataObject metoder för att avgöra vilka data som lagras i en IDataObject-format.      -Anropa den <xref:System.Windows.Forms.IDataObject.GetFormats%2A>metod för att hämta en matris av alla format där data är tillgängliga.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Ange den `autoConvert` parameter till `false` att hämta de format som där data lagras. För att få alla format där data är tillgängliga, ange `autoConvert` till `true`, eller Använd inte den här parametern.      -Anropa den <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>metod för att ta reda på om det finns lagrade data i ett visst format.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Om du inte vill att lagrade data som ska konverteras till formatet på angivna den `autoConvert` parameter till `false`.       Finns det <xref:System.Windows.Forms.DataObject>klass för en implementering av det här gränssnittet.</xref:System.Windows.Forms.DataObject> Finns det <xref:System.Windows.Forms.DataFormats>klass för den fördefinierade <xref:System.Windows.Forms.Clipboard>dataformat.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar data som är associerade med det angivna dataformatet."
  remarks: "Om den här metoden inte kan hitta data i det angivna formatet, försöker konvertera data till formatet. Om data inte kan konverteras till det angivna formatet, den här metoden returnerar `null`.       Att avgöra om data är associerad med eller kan konverteras till formatet anropet <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>innan du anropar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för en lista över giltiga format för data som lagras i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "Formatet på data som ska hämtas. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    return:
      type: System.Object
      description: "Data som är associerade med det angivna formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar data som är associerade med den angivna klassen typens format."
  remarks: "Om den här metoden inte kan hitta data i det angivna formatet, försöker konvertera data till formatet. Om data inte kan konverteras till det angivna formatet, den här metoden returnerar `null`.       Att avgöra om data är associerad med eller kan konverteras till formatet anropet <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>innan du anropar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för en lista över giltiga format för data som lagras i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerar formatet för data som ska hämtas.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    return:
      type: System.Object
      description: "Data som är associerade med det angivna formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar data som är associerade med formatet angivna data med ett booleskt värde för att avgöra om du vill konvertera data till formatet."
  remarks: "Om den `autoConvert` parametern är `true` och den här metoden kan inte hitta data i det angivna formatet, görs ett försök att konvertera data till formatet. Om data inte kan konverteras till formatet på angivna, eller om data lagrades med den `autoConvert` parametern `false`, den här metoden returnerar `null`.       Om den `autoConvert` parametern är `false`, den här metoden returnerar data i det angivna formatet eller `null` om inga data i det här formatet kan hittas.       Om du vill avgöra om data är associerad med eller kan konverteras till ett format, anropa <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>innan anropar GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för en lista över giltiga format för data som lagras i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Formatet på data som ska hämtas. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Konvertera data till det angivna formatet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Data som är associerade med det angivna formatet eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om data som lagras i den här instansen är associerad med eller kan konverteras till det angivna formatet."
  remarks: "Anropa den här metoden för att avgöra om det finns ett format i den här <xref:System.Windows.Forms.DataObject>innan du anropar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för de format som är tillgängliga i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "Format som du vill kontrollera. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om data som lagras i den här instansen är associerad med eller kan konverteras till det angivna formatet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om data som lagras i den här instansen är associerad med eller kan konverteras till det angivna formatet."
  remarks: "Anropa den här metoden för att avgöra om det finns ett format i den här <xref:System.Windows.Forms.DataObject>innan du anropar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för de format som är tillgängliga i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerar det format som du vill kontrollera.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om data som lagras i den här instansen är associerad med eller kan konverteras till det angivna formatet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Anger om data som lagras i den här instansen är associerat med det angivna formatet med ett booleskt värde för att avgöra om du vill konvertera data till formatet."
  remarks: "Anropa den här metoden för att avgöra om det finns ett format i den här <xref:System.Windows.Forms.DataObject>innan du anropar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Anropa <xref:System.Windows.Forms.IDataObject.GetFormats%2A>för de format som är tillgängliga i den här instansen.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Den här metoden returnerar `true` när: – `autoConvert` parametern är `true` och data är i ett format som kan konverteras till rätt format.      - `autoConvert` Parametern är `false` och data är i rätt format.       Den här metoden returnerar `false` när: – `autoConvert` parametern är `true` den här metoden kan inte hitta data i det angivna formatet och det går inte att konvertera data till det angivna formatet och data lagrades med `autoConvert` inställd på `false`.      - `autoConvert` Parametern är `false`, och data finns inte i den här instansen i angivet format.      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Format som du vill kontrollera. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>för att avgöra om data lagras i den här instansen kan konverteras till det angivna formatet; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att kontrollera huruvida data är det angivna formatet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Om data är i, eller kan konverteras till det angivna formatet; Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returnerar en lista över alla format som är associerad med data som lagras i den här instansen eller som kan konverteras till."
  remarks: "Anropa den här metoden för att få data som stöds format innan du anropar den <xref:System.Windows.Forms.IDataObject.GetData%2A>metoden.</xref:System.Windows.Forms.IDataObject.GetData%2A> Finns det <xref:System.Windows.Forms.DataFormats>klass för de fördefinierade format.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "En matris med namn som representerar en lista över alla format som stöds av data som lagras i det här objektet."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hämtar en lista över alla format som data som lagras i den här instansen är associerad med eller kan konverteras till, med ett booleskt värde för att avgöra om att hämta alla format som data kan konverteras till eller endast inbyggda-format."
  remarks: "Anropa den här metoden för att få data som stöds format innan du anropar den <xref:System.Windows.Forms.IDataObject.GetData%2A>metoden.</xref:System.Windows.Forms.IDataObject.GetData%2A> Finns det <xref:System.Windows.Forms.DataFormats>klass för de fördefinierade format.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Data kan konverteras till ett annat format om den lagrades att konverteringen är tillåtet att ange och det begärda formatet är kompatibelt med lagrade formatet. Till exempel data som lagras som Unicode kan konverteras till text.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>för att hämta alla format som data som lagras i den här instansen är associerad med eller kan konverteras till; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> att hämta endast interna dataformat."
    return:
      type: System.String[]
      description: "En matris med namn som representerar en lista över alla format som stöds av data som lagras i det här objektet."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrar angivna data i den här instansen, med hjälp av klassen data format."
  remarks: "Formatet som härleds från dataklassen.       Data som lagras med den här metoden kan konverteras till ett kompatibelt format när de hämtas.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Data som lagras."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrar angivna data och dess associerade format i den här instansen."
  remarks: "Om du inte vet formatet målprogrammet kan du lagra data i flera format med hjälp av den här metoden.       Data som lagras med den här metoden kan konverteras till ett kompatibelt format när de hämtas.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "Det format som är associerade med data. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    - id: data
      type: System.Object
      description: "Data som lagras."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrar angivna data och dess associerade klasstyp i den här instansen."
  remarks: "Om du inte vet formatet målprogrammet kan du lagra data i flera format med hjälp av den här metoden.       Data som lagras med den här metoden kan konverteras till ett kompatibelt format när de hämtas.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "En <xref:System.Type>som representerar det format som är associerade med data.</xref:System.Type> Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    - id: data
      type: System.Object
      description: "Data som lagras."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lagrar angivna data och dess associerade format i den här instansen med ett booleskt värde för att ange om data kan konverteras till ett annat format."
  remarks: "Om du inte vet formatet målprogrammet kan du lagra data i flera format med hjälp av den här metoden.       En implementering av den här metoden finns i <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "Det format som är associerade med data. Se <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> för fördefinierade format."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>så att data som ska konverteras till ett annat format. Annars <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Data som lagras."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
