### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TouchFrameEventArgs
  id: TouchFrameEventArgs
  children:
  - System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  - System.Windows.Input.TouchFrameEventArgs.Timestamp
  langs:
  - csharp
  name: TouchFrameEventArgs
  nameWithType: TouchFrameEventArgs
  fullName: System.Windows.Input.TouchFrameEventArgs
  type: Class
  summary: "Tillhandahåller data för den <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> händelse."
  remarks: "Den <xref:System.Windows.Input.Touch.FrameReported>händelse ingår i [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] som stöd för kompatibilitet med Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Om du inte behöver säkerställa kompatibilitet med Silverlight använda touch-händelser som <xref:System.Windows.UIElement.TouchDown>och <xref:System.Windows.UIElement.TouchMove>på <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, eller <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       Använd TouchFrameEventArgs för att få den <xref:System.Windows.Input.TouchPoint>värden som är relevanta för händelsen touch.</xref:System.Windows.Input.TouchPoint> Från den <xref:System.Windows.Input.TouchPoint>, du kan hämta den <xref:System.Windows.Input.TouchPoint.Position%2A>för att trycka och ta reda på om den <xref:System.Windows.Input.TouchAction>har en <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, eller <xref:System.Windows.Input.TouchAction>åtgärd.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> Du kan också använda för <xref:System.Windows.Input.TouchPoint>att hämta <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Från den <xref:System.Windows.Input.TouchDevice>, du kan fastställa enheten <xref:System.Windows.Input.TouchDevice.Id%2A>och få information om de element som har använts.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event and accesses the touch data in the TouchFrameEventArgs. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: 'public sealed class TouchFrameEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  id: GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Returnerar den aktuella touch på den primära touch-enheten i förhållande till det angivna elementet."
  remarks: "Touch-enheter, första enheten måste vara i en aktiv <xref:System.Windows.Input.TouchDevice.Activated>är den primära touch-enheten.</xref:System.Windows.Input.TouchDevice.Activated> Om två fingrar vidrör skärmen, till exempel representeras första fingeravtrycksläsare som är nere av primära touch-enheten. Om första fingeravtrycksläsare återupptas medan andra fingeravtrycksläsare är fortfarande ned, blir den primära touch enheten `null`."
  example:
  - "The following code processes the touch points that are retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Det element som definierar koordinatsystem. Om du vill använda WPF absoluta koordinater ange `relativeTo` som <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Input.TouchPoint
      description: "Den aktuella positionen för primärt <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> i förhållande till det angivna elementet; eller <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> om primärt <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> är inte aktiv."
  overload: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  id: GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Returnerar en samling som innehåller den aktuella touch-punkten för varje active touch-enhet i förhållande till det angivna elementet."
  remarks: ''
  example:
  - "The following code processes the touch points retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the canvas, the <xref:System.Windows.Input.TouchDevice> is captured to the canvas. When the touch is raised, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the canvas, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Det element som definierar koordinatsystem. Om du vill använda WPF absoluta koordinater ange `relativeTo` som <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Input.TouchPointCollection
      description: "En samling som innehåller aktuellt <xref href=&quot;System.Windows.Input.TouchPoint&quot;> </xref> för varje aktiv <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref>."
  overload: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  id: SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Den här medlemmen har inte implementerats."
  remarks: "Den här metoden ger kompatibilitet med Silverlight. På grund av enheten implementering skillnader, är det inte implementerats i WPF."
  syntax:
    content: public void SuspendMousePromotionUntilTouchUp ();
    parameters: []
  overload: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  id: Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Hämtar tidsstämpeln för den här händelsen."
  syntax:
    content: public int Timestamp { get; }
    return:
      type: System.Int32
      description: "Tidsstämpel för den här händelsen."
  overload: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
- uid: System.Windows.Input.TouchPoint
  parent: System.Windows.Input
  isExternal: false
  name: TouchPoint
  nameWithType: TouchPoint
  fullName: System.Windows.Input.TouchPoint
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
- uid: System.Windows.Input.TouchPointCollection
  parent: System.Windows.Input
  isExternal: false
  name: TouchPointCollection
  nameWithType: TouchPointCollection
  fullName: System.Windows.Input.TouchPointCollection
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints
  nameWithType: TouchFrameEventArgs.GetTouchPoints
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
